{"title": "How to know/set the frequency at which the images are taken (grabbed)?", "time": "2016-07-21 03:48:12Z", "post_content": ["I already posted this question on ros forum, but I would like to post it here again in order to cover a larger audience.", "The issue is that I find that the frequency, I compute from the time between two successive callbacks and that from using rostopic hz, is totally different...", "With ", " I get:", "However, from this very short code, that computes the frequency at which the callback of the same topic is called,", "I get this inconsistent result", "Why this difference of values? ", "Also, if I run this same code, but only adding ", ", from another host machine,  I get even a quite different value. To be more clear, assume that am using ", " machine, whereas my ros node is implemented and compiled on ", " machine. Am doing this from ", ":", "Perhaps that ", " is consuming a lot of the bandwidth.... yet the code should be running on ", " machine not on ", " machine, thus the computational time should have been the same.", "For info, am using a Point Grey camera, Chameleon 3. As for the driver, am using ROS flea3 node, from  Kumar robotics driver ", ". Am running this on ubuntu 16, 4.6.4-040604-lowlatency kernel."], "answer": ["Well, I think that your estimation of the callback calls time is not exactly what ", " is doing. In order to have a closer one, try just computing the delay between callback calls without any further processing. This will avoid the extra calculation time. ", "Also, set the callback queue size for a higher value, thus avoiding  dropping images due to the little queue size.", "Also, I think it would be helpful if you mention the camera type and driver that you are using under ROS.", "Hope that helps !"], "question_code": ["rostopic hz /pg_15508342/image_raw", "average rate: 99.681\n    min: 0.003s max: 0.017s std dev: 0.00093s window: 797\naverage rate: 99.683\n    min: 0.003s max: 0.017s std dev: 0.00098s window: 896\naverage rate: 99.682\n    min: 0.003s max: 0.017s std dev: 0.00100s window: 997\naverage rate: 99.682\n    min: 0.003s max: 0.017s std dev: 0.00098s window: 1097\naverage rate: 99.684\n    min: 0.002s max: 0.018s std dev: 0.00102s window: 1196\naverage rate: 99.681\n    min: 0.002s max: 0.018s std dev: 0.00106s window: 1296\naverage rate: 99.676\n", "#include <ros/ros.h>\n#include <image_transport/image_transport.h>\n#include <cv_bridge/cv_bridge.h>\n#include <sensor_msgs/image_encodings.h>\n#include <opencv2/imgproc/imgproc.hpp>\n#include <opencv2/highgui/highgui.hpp>\n\n#include <time.h>\n#include <boost/timer.hpp>\n#include <boost/thread.hpp>\n#include <boost/thread/thread.hpp>\n#include <boost/version.hpp>\n#include  \"boost/bind.hpp\"\n#include  \"boost/bind.hpp\"\n#include <iostream>\n\nusing namespace std;\n\nboost::posix_time::ptime time1; \nboost::posix_time::time_duration timeloop;\ndouble timeloop_sc;\n\nint image_itr(0);\n\nvoid imageCallback(const sensor_msgs::ImageConstPtr& msg)\n{\n     //---\n      if(image_itr == 0)\n        time1 = boost::posix_time::microsec_clock::local_time();\n\n      timeloop =  boost::posix_time::microsec_clock::local_time() - time1;\n  time1 = boost::posix_time::microsec_clock::local_time();\n  timeloop_sc = 1e-3* (double)timeloop.total_milliseconds();\n  cout << \"itr \" << image_itr++ << \"   fps: \" << 1.0/timeloop_sc << endl;\n\n}\n\nint main(int argc, char **argv)\n{\n  ros::init(argc, argv, \"image_listener\");\n  ros::NodeHandle nh;\n\n  cv::namedWindow(\"view\");\n  cv::startWindowThread();\n  image_transport::ImageTransport it(nh);\n  image_transport::Subscriber sub = it.subscribe(\"/pg_15508342/image_raw\", 1, imageCallback);\n  ros::spin();\n  cv::destroyWindow(\"view\");\n}\n", "itr 2198   fps: 100\nitr 2199   fps: 111.111\nitr 2200   fps: 90.9091\nitr 2201   fps: 111.111\nitr 2202   fps: 111.111\nitr 2203   fps: 111.111\nitr 2204   fps: 100\nitr 2205   fps: 111.111\nitr 2206   fps: 100\nitr 2207   fps: 100\nitr 2208   fps: 90.9091\nitr 2209   fps: 125\nitr 2210   fps: 100.\n", "cv::imshowfrom", "local", "onboard", "local", "ssh onboard@ip\nrosrun package node\n", "cv::imshowfrom", "onboard", "local"], "answer_code": ["rostopic hz", "void imageCallback(const sensor_msgs::ImageConstPtr& msg)\n{\n if(image_itr == 0)\n        time1 = boost::posix_time::microsec_clock::local_time();\n\n  timeloop =  boost::posix_time::microsec_clock::local_time() - time1;\n  time1 = boost::posix_time::microsec_clock::local_time();\n  timeloop_sc = 1e-3* (double)timeloop.total_milliseconds();\n  cout << \"itr \" << image_itr++ << \"   fps: \" << 1.0/timeloop_sc << endl;\n}\n", "image_transport::Subscriber sub = it.subscribe(\"/pg_15508342/image_raw\", 1000, imageCallback);\n", "waitKey(30)"], "url": "https://stackoverflow.com/questions/38474873/how-to-know-set-the-frequency-at-which-the-images-are-taken-grabbed"},
{"title": "Using roscpp in existing app on Android/iOS", "time": "2019-11-21 18:39:11Z", "post_content": ["I have an existing app, or rather a shared library, that I compile for mobile platforms (currently Android, but iOS will come very soon too). It is a C++ library that have heavy dependencies (\u201cheavy\u201d in terms of cross-compiling and amount of code).\nNow, I need to publish (and consume) some ROS topics. I was looking at ", " and it seems to me that I should use roscpp for my project.\nHowever, after following through all the ", " I\u2019m still confused on how I would incorporate roscpp into my existing code.\nI would expect to have a set of .so or .a libraries compiled for the target platform (btw, I use arm64 while docker container compiles for arm7) and a headers folder to include in my source code.\nMy question is \u2013 how can I use roscpp in my existing C++ android library? I am not using Android studio, I use ndk-build directly.\nI noticed there\u2019re Application.mk and Android.mk files in \u201croscpp_android_ndk\u201d folder, is that shall be used ultimately?"], "answer": [], "url": "https://stackoverflow.com/questions/58981665/using-roscpp-in-existing-app-on-android-ios"},
{"title": "How to make jpeg encoding uses libjpeg-turbo or libjpeg-turbo8 library? Ubuntu", "time": "2019-11-26 16:24:48Z", "post_content": ["I am working on ROS.", "Some time ago, I remember /compressedimage topic was consuming 700KB/s bandwidth for 640*480 image @ 30 fps at 80% quality.", "After that, I think I started learning gstreamer and I re-install libjpeg-dev or libjpeg-turbo8 or something I did.", "Now when I resume working on /compressedimage topic, I am realizing that it is consuming 1.2MB/s bandwidth for same 640*480 @ 30fps at 80% quality.", "I am wishing to have lowest bandwidth possible for 80% jpeg quality.", "Thank you"], "answer": [], "url": "https://stackoverflow.com/questions/59055317/how-to-make-jpeg-encoding-uses-libjpeg-turbo-or-libjpeg-turbo8-library-ubuntu"},
{"title": "Converting Protobuf to ROS messages with similar functionality", "time": "2017-11-01 16:09:19Z", "post_content": ["I recently inherited a large codebase at work utilizing MOOS & Protobuf messages.", "At the request of my project lead, I am porting it to use exclusively ROS where ROS messages are used instead of protobuf. The code base heavily relies on utilizing protobuf functionality such as enumerator min / max, extracting a string from the variable field, ->has_variable() function, ->isValid(), etc.", "So far I have only been able to find very basic ROS message functionality from the wiki.", "Example: Protbufs support enumerators, but ROS messages don't, so I have:", "My ", " is my 'enumerator' but I don't have a min or max unless I hardcode one, and I can't extract ", " as a string.  I've been slowly finding workarounds for this by using ", "But I'm having to modify many different areas that use it as a string, not integer."], "answer": ["Yes there is a hack. But you need to input a some work into it. \nFor using the publisher/subscriber methods in ROS you need to define messages for all topics in ", " files. ", "From this file then a C++ class is automatically generated. But you don't want to touch that autogenerated file! What you could do instead is define your class and associate it with the autogenerated class. ", "Look ", " for an example how to do it. You could then expand your custom class with desired methods like ", ". ", "Another (perhaps simpler) way would be to declare a helper class that would do the desired work for each type in messages.", "Or you could simply continue to use protobuf. It is also used at least in Gazebo if not also in ROS. ", "Sometime ago I wrote some auto generation scripts that consume Protobufs and produce ROS headers (", " the msg files) to transmit Protobuf blobs over ROS comms. This would satisfy your need without having to duplicate a Protobuf definition with a supporting ROS msg definition. ", "."], "question_code": ["  uint8 TYPE_FAILED        = 0\n  uint8 TYPE_OPERATIONAL   = 1\n  uint8 TYPE_INITIALIZING  = 2\n\n  uint8 health_state_type\n", "health_state_type", "TYPE_FAILED", "my_message::custom_msg health;\nhealth.health_state_type = health.TYPE_FAILED\n"], "url": "https://stackoverflow.com/questions/47059079/converting-protobuf-to-ros-messages-with-similar-functionality"},
{"title": "Right way to use CUDA based functions in a ROS context", "time": "2018-05-02 11:04:11Z", "post_content": ["I am working on a ROS-based pipeline whose main function is to subscribe to image topics and execute functions such as feature detection, matching etc continuously. To make this pipeline faster, I am trying to use CUDA based detection and matching modules as part of my package. In the context of this question, I am assuming a simple pipeline where I subscribe to an image topic, and in the subscriber callback which is called every time an image is available, two member functions of different classes are called: one for detection, another to match, each containing its own CUDA kernel. Somewhat similar to executing those two functions in a loop.", "The first function takes the image data and computes feature keypoints and descriptors, returning them to the host. I then copy these descriptors back into the GPU memory and I need to match them with another set of descriptors which belong to a reference image. ", "For example, this is how the standalone matching function looks like:", "In this context, I have a few questions, as it is my first foray into GPU-based development. "], "answer": ["Should I free the device memory pointers for these after performing matching every time and reallocate (cudaMalloc()) in the next callback? ", "Probably not.  This would appear to be unnecessary and time-consuming.", "Or is there a more efficient way to allocate memory only once and reuse it?", "Probably.  For example, you could determine the maximum size possibly needed, allocate for that, then pass a pointer to it into your event processing loop, and reuse the allocation.", "The detection and matching functions also make use of objects such as cudaResourceDesc and cudaTextureDesc, which will go out of scope at the end of every execution and thus should be destroyed. Should I handle them in any other specific way?", "Similarly, you could create them at a higher scope, and pass references to them into your event processing system.  However, I think that the main time consumers here will be the data copy to populate the texture, and the binding of the texture.  These would have to be repeated anyway (presumably).  But if you have an underlying allocation for the backing store for the texture object, then you probably would not need to reallocate for that, see previous comments.", "I assume I need cudaDeviceSynchronize() after executing each of these two functions. Am I correct?", "It's not obvious to me that it is needed.  You haven't shown a complete example, but if, at the end of your functions, there is a copy of data from device to host, that will probably suffice. ", " is a blocking function.  If you are operating in a physically/logically unified memory situation such as TX1/TX2, then yes, you may need a sync point to ensure that data is valid before you consume it in host code.", "Can I safely leave the \"reference\" descriptors in GPU memory and only update them when I need to?", "I don't know why not.  An allocation created by ", " does not \"go out of scope\" until either application termination, or explicitly free'd with ", ".  If you copy data to such an allocation, it should remain there, unchanged, for the duration of your application, unless you overwrite it somehow (or free the underlying allocation)."], "quote": ["Should I free the device memory pointers for these after performing matching every time and reallocate (cudaMalloc()) in the next callback? ", "Or is there a more efficient way to allocate memory only once and reuse it?", "The detection and matching functions also make use of objects such as cudaResourceDesc and cudaTextureDesc, which will go out of scope at the end of every execution and thus should be destroyed. Should I handle them in any other specific way?", "I assume I need cudaDeviceSynchronize() after executing each of these two functions. Am I correct?", "Can I safely leave the \"reference\" descriptors in GPU memory and only update them when I need to?"], "question_code": ["// Detection module returns a struct featureData, containing keypoints and descriptors \n// in featureData.kps and featureData.desc\n\nuint64_t* d_desc;\ncudaMalloc(&d_desc, 64 * featureData.kps.size());\ncudaMemcpy(d_desc, &featureData., 64 * (featureData.kps.size()), cudaMemcpyHostToDevice);\n\ncudaDeviceSetCacheConfig(cudaFuncCachePreferL1);\ncudaDeviceSetSharedMemConfig(cudaSharedMemBankSizeEightByte);\n\n// Create texture object for descriptors\n\nstruct cudaResourceDesc resDesc;\nmemset(&resDesc, 0, sizeof(resDesc));\nresDesc.resType = cudaResourceTypeLinear;\nresDesc.res.linear.devPtr = d_desc;\nresDesc.res.linear.desc.f = cudaChannelFormatKindUnsigned;\nresDesc.res.linear.desc.x = 32;\nresDesc.res.linear.desc.y = 32;\nresDesc.res.linear.sizeInBytes = 64 * featureData.kps.size();\n\nstruct cudaTextureDesc texDesc;\nmemset(&texDesc, 0, sizeof(texDesc));\ntexDesc.addressMode[0] = cudaAddressModeBorder;\ntexDesc.addressMode[1] = cudaAddressModeBorder;\ntexDesc.filterMode = cudaFilterModePoint;\ntexDesc.readMode = cudaReadModeElementType;\ntexDesc.normalizedCoords = 0;\ncudaTextureObject_t tex_q = 0;\ncudaCreateTextureObject(&tex_q, &resDesc, &texDesc, nullptr);\n\n// Allocate space for match results\nint* d_matches;\ncudaMalloc(&d_matches, 4 * featureData.kps.size());\n\n// Launch the matching kernel\nCUDAmatch(d_descRef, static_cast<int>(refData.kps.size()), tex_q, static_cast<int>(featureData.kps.size()), d_matches, threshold);\n\n// d_descRef is memory pointed to by a uint64_t* for the reference descriptors.\n", "cudaMalloc()", "cudaResourceDesc", "cudaTextureDesc", "cudaDeviceSynchronize()"], "answer_code": ["cudaMemcpy", "cudaMalloc", "cudaFree"], "url": "https://stackoverflow.com/questions/50127017/right-way-to-use-cuda-based-functions-in-a-ros-context"},
{"title": "How to solve: QPixmap: It is not safe to use pixmaps outside the GUI thread", "time": "2018-05-09 21:29:24Z", "post_content": ["I'm trying to display a sequence of images coming at 30 image per second in ", " but I'm getting that error of GUI thread. I did little bit research and I read that it is recommended using ", " instead but I'm not sure how to do it in my case.\nHere's a shot of my classes and the method I'm using to get the frames:", "Do you have any idea how to solve this?"], "answer": ["The callback is invoked from an arbitrary thread. Thus the other method calls must be made thread-safe. A simple way to do it is to emit a signal with the image. See ", " for other approaches.", "But you're also copying the image data unnecessarily. The callback has full control over image lifetime - the ", " is a shared pointer, after all. Thus - pass the ", " all the way to the target thread, then the ", " becomes a thin wrapper over the ", " class, and doesn't copy its data unless a BGR-TO-RGB format conversion is necessary.", "There's no need for ", " at all -- you're not using OpenCV, after all.", "Let's start with a minimal reimplementation of ROS that will allow us to try things out on a desktop platform without installing ROS :)", "The callbacks are invoked from a worker thread, as would happen in ROS.", "For demonstration purposes, we can make the main window a ", ". We need to pass the ", " to the main thread, where it will be wrapped in a ", " and set on the label. The signal itself can be the callback. Thus:", "First, we need a way to wrap the ", " in a ", ". The ", " does not copy the data from the ", " unless a format conversion is necessary. The image must be consumed while the ", " is kept alive. The ", " is an idiom for modifying the image in-place. Modern Qt supports this optimization.", "The implementation of the ", " and the rest of the demo harness is then quite straightforward:", "This concludes the example."], "question_code": ["qt label", "QImage", "class MainWindow : public QMainWindow {\nQ_OBJECT\n\npublic:\n    MainWindow(int argc, char** argv, QWidget *parent = 0);\n    ~MainWindow();\n\npublic Q_SLOTS:\n    void callBackColor(const sensor_msgs::ImageConstPtr& msg);\n\nprivate:\n    Ui::MainWindowDesign ui;\n    ros::Subscriber sub;\n};\n", "MainWindow::MainWindow(int argc, char** argv, QWidget *parent)\n    : QMainWindow(parent)\n{\n    ui.setupUi(this);\n\n    ros::init(argc,argv,\"MainWindow\");\n    ros::NodeHandle n;\n    sub = n.subscribe(\"/usb_cam/image_raw\", 1, &MainWindow::callBackColor, this);\n}\n\nvoid MainWindow::callBackColor(const sensor_msgs::ImageConstPtr& msg)\n{\n\n  cv_bridge::CvImagePtr cv_ptr;\n\n  try\n  {\n    cv_ptr = cv_bridge::toCvCopy(msg, sensor_msgs::image_encodings::BGR8);\n  }\n\n  catch (cv_bridge::Exception& e)\n  {\n    ROS_ERROR(\"cv_bridge exception: %s\", e.what());\n    return;\n  }\n  //Here I got the image and I want to display it in a label\n  QImage temp(&(msg->data[0]), msg->width, msg->height, \n  QImage::Format_RGB888);\n  static QLabel *imageLabel = new QLabel;\n  QPixmap pix = QPixmap::fromImage(temp);\n  ui.imageLabel->setPixmap(pix);\n}\n", "cv_bridge", "msg", "QImage", "opencv"], "answer_code": ["sensor_msgs::ImageConstPtr", "ImageConstPtr", "QImage", "Image", "cvBridge", "// https://github.com/KubaO/stackoverflown/tree/master/questions/qimage-ros-50262348\n#include <QtWidgets>\n#include <memory>\n#include <string>\n#include <vector>\n\n// Minimal reimplementation of ROS\n\n#define ROS_ERROR qFatal\nnamespace sensor_msgs {\nnamespace image_encodings {\nconst std::string MONO8{\"mono8\"}, BGR8{\"bgr8\"}, BGRA8{\"bgra8\"}, RGB8{\"rgb8\"}, RGBA8{\"rgba8\"};\n} // image_encodings\nstruct Image {\n   std::vector<quint8> data;\n   std::string encoding;\n   uint32_t height;\n   uint32_t width;\n};\nusing ImagePtr = std::shared_ptr<Image>;\nusing ImageConstPtr = std::shared_ptr<const Image>;\n} // sensor_msgs\n\nnamespace ros {\nstruct Subscriber {};\nstruct NodeHandle {\n   template<class M, class T>\n   Subscriber subscribe(const std::string &, uint32_t, void(T::*fun)(M), T *obj) {\n      struct Thread : QThread {\n         Thread(QObject*p):QThread(p){} ~Thread() override { quit(); wait(); } };\n      static QPointer<Thread> thread = new Thread(qApp);\n      thread->start(); // no-op if already started\n      auto *timer = new QTimer;\n      timer->start(1000/60);\n      timer->moveToThread(thread);\n      QObject::connect(timer, &QTimer::timeout, [obj, fun]{\n         auto const msec = QTime::currentTime().msecsSinceStartOfDay();\n         QImage img{256, 256, QImage::Format_ARGB32_Premultiplied};\n         img.fill(Qt::white);\n         QPainter p{&img};\n         constexpr int period = 3000;\n         p.scale(img.width()/2.0, img.height()/2.0);\n         p.translate(1.0, 1.0);\n         p.rotate((msec % period) * 360.0/period);\n         p.setPen({Qt::darkBlue, 0.1});\n         p.drawLine(QLineF{{-1., 0.}, {1., 0.}});\n         p.end();\n         img = std::move(img).convertToFormat(QImage::Format_RGB888).rgbSwapped();\n         sensor_msgs::ImageConstPtr ptr{new sensor_msgs::Image{\n               {img.constBits(), img.constBits() + img.sizeInBytes()},\n               sensor_msgs::image_encodings::BGR8,\n                     (uint32_t)img.height(), (uint32_t)img.width()}};\n         (*obj.*fun)(ptr);\n      });\n      return {};\n   }\n};\nvoid init(int &, char **, const std::string &) {}\n} // ros\n", "QLabel", "ImageConstPtr", "QImage", "// Interface\n\nclass MainWindow : public QLabel {\n   Q_OBJECT\npublic:\n   MainWindow(int argc, char** argv, QWidget *parent = {});\nprotected:\n   Q_SLOT void setImageMsg(const sensor_msgs::ImageConstPtr&);\n   Q_SIGNAL void newImageMsg(const sensor_msgs::ImageConstPtr&);\nprivate:\n   ros::Subscriber sub;\n};\n\nQ_DECLARE_METATYPE(sensor_msgs::ImageConstPtr)\n", "ImageConstPtr", "QImage", "QImage", "msg", "msg", "std::move(image).conversion()", "// Implementation\n\nstatic QImage toImageShare(const sensor_msgs::ImageConstPtr &msg) {\n   using namespace sensor_msgs::image_encodings;\n   QImage::Format format = {};\n   if (msg->encoding == RGB8 || msg->encoding == BGR8)\n      format = QImage::Format_RGB888;\n   else if (msg->encoding == RGBA8 || msg->encoding == BGRA8)\n      format = QImage::Format_RGBA8888_Premultiplied;\n   else if (msg->encoding == MONO8)\n      format = QImage::Format_Grayscale8;\n   else\n      return {};\n   QImage img(msg->data.data(), msg->width, msg->height, format);\n   if (msg->encoding == BGR8 || msg->encoding == BGRA8)\n      img = std::move(img).rgbSwapped();\n   return img;\n}\n", "MainWindow", "MainWindow::MainWindow(int argc, char** argv, QWidget *parent) : QLabel(parent) {\n   qRegisterMetaType<sensor_msgs::ImageConstPtr>();\n#if QT_VERSION >= QT_VERSION_CHECK(5,0,0)\n   connect(this, &MainWindow::newImageMsg, this, &MainWindow::setImageMsg);\n#else\n   connect(this, SIGNAL(newImageMsg(sensor_msgs::ImageConstPtr)), SLOT(setImageMsg(sensor_msgs::ImageConstPtr)));\n#endif\n   ros::init(argc,argv,\"MainWindow\");\n   ros::NodeHandle n;\n   sub = n.subscribe(\"/usb_cam/image_raw\", 1, &MainWindow::newImageMsg, this);\n}\n\nvoid MainWindow::setImageMsg(const sensor_msgs::ImageConstPtr &msg) {\n   auto img = toImageShare(msg);\n   auto pix = QPixmap::fromImage(std::move(img));\n   setPixmap(pix);\n   resize(pix.size());\n}\n\nint main(int argc, char *argv[])\n{\n   QApplication app{argc, argv};\n   MainWindow w{argc, argv};\n   w.show();\n   return app.exec();\n}\n#include \"main.moc\"\n"], "url": "https://stackoverflow.com/questions/50262348/how-to-solve-qpixmap-it-is-not-safe-to-use-pixmaps-outside-the-gui-thread"},
{"title": "Recoding (real-time) large-size images on a usb stick with [ROS bag]", "time": "2017-02-10 11:02:44Z", "post_content": ["The quality of the record images is a key importance. Thus am not sure if ", " is relevant to this case, since it is reported that the compressed mode is lossy...", "There should a manner that even when the rostopic stops, the copying on the usb continues. Like this, one will not have frame drops.", "Any advice/solution?", "Note that the image streaming needs to be at a decent frequency."], "answer": ["From your question I assume that your images are too large / arrive too frequently to be able to be written in real-time on your USB stick.", "Depending on your setup/requirements, consider writing the bag to hard disk and copy it over to USB later.", "If you need to write directly to your USB stick, obviously the only solution is to reduce the amount of data to be written. Do not rule out ", " for that. By default it compresses data as JPEG (lossy), but you can switch it to PNG (lossless). Simply start your software and run ", ". For the image transport you should see an entry where you can switch from JPEG to PNG (", "). You should be able to set this value (namespace.format = \"png\") in your launch file, too (", ").", "You could also reduce the image resolution or framerate, if that is acceptable. In combination with PNG compression, this would be your best bet.", "If you don't want to compress as lossless PNG, another (less efficient) option is to have rosbag store compressed data (", " will not consume much CPU, but will not yield the best compression results; ", " will save more space but may impact your real-time requirements depending on your CPU and load)"], "question_code": ["rosbag record /camera/image_raw/compressed"], "answer_code": ["/camera/image_raw/compressed", "rosrun rqt_reconfigure rqt_reconfigure", "--lz4", "--bz2"], "url": "https://stackoverflow.com/questions/42157782/recoding-real-time-large-size-images-on-a-usb-stick-with-ros-bag"},
{"title": "message from ROSbridge server to client", "time": "2017-01-30 13:46:52Z", "post_content": ["Is it possible to send messages from the ROSbridge server to a connected client? I've connected an Android application using tcp, and able to send JSON messages from the app to the server. But is it possible to send messages in the other direction as well? ", "Thanks  "], "answer": ["as ", " you create a websocket by starting rosbridge. You would have to consume that socket. Not sure if rosjava can consume that for your android app"], "url": "https://stackoverflow.com/questions/41937447/message-from-rosbridge-server-to-client"},
{"title": "What is an undefined reference/unresolved external symbol error and how do I fix it?", "time": "2018-01-21 17:39:45Z", "post_content": ["What are undefined reference/unresolved external symbol errors? What are common causes and how to fix/prevent them?"], "answer": ["Compiling a C++ program takes place in several steps, as specified by ", " ", ":", "The precedence among the syntax rules of translation is specified by the following phases ", ".", " Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.", "The specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.", "Say you defined symbol ", " in ", ". Now, ", " ", " that symbol and used it. Before linking, it simply assumes that that symbol was defined ", ", but it doesn't yet care where. The linking phase is responsible for finding the symbol and correctly linking it to ", " (well, actually to the object or library that uses it).", "If you're using Microsoft Visual Studio, you'll see that projects generate ", " files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that ", " (if any).", "Similar mechanisms exist for other compilers/ platforms.", "Common error messages are ", ", ", ", ", " for ", " and ", " ", " for ", ".", "The code:", "will generate the following errors with ", ":", "and similar errors with ", ":", "Common causes include:", "Declaring a destructor pure still requires you to define it (unlike a regular function):", "This happens because base class destructors are called when the object is destroyed implicitly, so a definition is required.    ", "This is similar to non-", " methods with no definition, with the added reasoning that \nthe pure declaration generates a dummy vtable and you might get the linker error without using the function:", "For this to work, declare ", " as pure:", "Some members need to be defined even if not used explicitly:", "The following would yield the error:", "The implementation can be inline, in the class definition itself:", "or outside:", "If the implementation is outside the class definition, but in a header, the methods have to be marked as ", " to prevent a multiple definition.", "All used member methods need to be defined if used.", "The definition should be", "An initializer can be provided for a ", " ", " data member of integral or enumeration type within the class definition; however, odr-use of this member will still require a namespace scope definition as described above. C++11 allows initialization inside the class for all ", " data members.", "Commonly, each translation unit will generate an object file that contains the definitions of the symbols defined in that translation unit. \nTo use those symbols, you have to link against those object files.", "Under ", " you would specify all object files that are to be linked together in the command line, or compile the implementation files together.", "The ", " here is just the bare name of the library, without platform-specific additions. So e.g. on Linux library files are usually called ", " but you'd only write ", ". On Windows that same file might be called ", ", but you'd use the same argument. You might have to add the directory where those files can be found using ", ". Make sure to not write a space after ", " or ", ".", "For ", ":  Add the User Header Search Paths -> add the Library Search Path -> drag and drop the actual library reference into the project folder.", "Under ", ", files added to a project automatically have their object files linked together and a ", " file would be generated (in common usage). To use the symbols in a separate project, you'd \nneed to include the ", " files in the project settings. This is done in the Linker section of the project properties, in ", ". (the path to the ", " file should be\nadded in ", ") When using a third-party library that is provided with a ", " file, failure to do so usually results in the error.", "It can also happen that you forget to add the file to the compilation, in which case the object file won't be generated. In ", " you'd add the files to the command line. In ", " adding the file to the project will make it compile it automatically (albeit files can, manually, be individually excluded from the build).", "In Windows programming, the tell-tale sign that you did not link a necessary library is that the name of the unresolved symbol begins with ", ". Look up the name of the function in the documentation, and it should say which library you need to use. For example, MSDN puts the information in a box at the bottom of each function in a section called \"Library\".", "A typical variable declaration is", "As this is only a declaration, a ", " is needed. A corresponding definition would be:", "For example, the following would generate an error:", "Similar remarks apply to functions. Declaring a function without defining it leads to the error:", "Be careful that the function you implement exactly matches the one you declared. For example, you may have mismatched cv-qualifiers:", "Other examples of mismatches include", "The error message from the compiler will often give you the full declaration of the variable or function that was declared but never defined. Compare it closely to the definition you provided. ", "The order in which libraries are linked DOES matter if the libraries depend on each other. In general, if library ", " depends on library ", ", then ", " ", " appear before ", " in the linker flags.", "For example:", "Create the libraries:", "Compile:", "So to repeat again, the order ", " matter!", "I'll try to explain what is an \"undefined reference/unresolved external symbol\".", "note: i use g++ and Linux and all examples is for it ", "For example we have some code", "and", "Make object files", "After the assembler phase we have an object file, which contains any symbols to export. \nLook at the symbols", "I've rejected some lines from output, because they do not matter", "So, we see follow symbols to export.", "src2.cpp exports nothing and we have seen no its symbols", "Link our object files", "and run it", "Linker sees exported symbols and links it. Now we try to uncomment lines in src2.cpp like here", "and rebuild an object file", "OK (no errors), because we only build object file, linking is not done yet.\nTry to link", "It has happened because our local_var_name is static, i.e. it is not visible for other modules. \nNow more deeply. Get the translation phase output", "So, we've seen there is no label for local_var_name, that's why linker hasn't found it. But we are hackers :) and we can fix it. Open src1.s in your text editor and change", "to ", "i.e. you should have like below", "we have changed the visibility of local_var_name and set its value to 456789.\nTry to build an object file from it", "ok, see readelf output (symbols)", "now local_var_name has Bind GLOBAL (was LOCAL)", "link", "and run it", "ok, we hack it :)", "So, as a result - an \"undefined reference/unresolved external symbol error\" happens when the linker cannot find global symbols in the object files.", "The function (or variable) ", " was defined in a C program and you attempt to use it in a C++ program:", "The C++ linker expects names to be mangled, so you have to declare the function as:", "Equivalently, instead of being defined in a C program, the function (or variable) ", " was defined in C++ but with C linkage:", "and you attempt to use it in a C++ program with C++ linkage.", "If an entire library is included in a header file (and was compiled as C code); the include will need to be as follows;", "I was recently able to get rid of an unresolved external error in Visual Studio 2012 just by recompiling the offending file. When I re-built, the error went away. ", "This usually happens when two (or more) libraries have a cyclic dependency. Library A attempts to use symbols in B.lib and library B attempts to use symbols from A.lib. Neither exist to start off with. When you attempt to compile A, the link step will fail because it can't find B.lib. A.lib will be generated, but no dll. You then compile B, which will succeed and generate B.lib. Re-compiling A will now work because B.lib is now found.", "MSVS requires you to specify which symbols to export and import using ", " and ", ".", "This dual functionality is usually obtained through the use of a macro:", "The macro ", " would only be defined in the module that exports the function. That way, the declaration:", "expands to", "and tells the compiler to export the function, as the current module contains its definition. When including the declaration in a different module, it would expand to   ", "and tells the compiler that the definition is in one of the libraries you linked against (also see ", "). ", "You can similary import/export classes:", "This is one of most confusing error messages that every VC++ programmers have seen time and time again. Let\u2019s make things clarity first.", "\nIn short, a symbol is a name. It can be a variable name, a function name, a class name, a typedef name, or anything except those names and signs that belong to C++ language. It is user defined or introduced by a dependency library (another user-defined).", "\nIn VC++, every source file (.cpp,.c,etc.) is considered as a translation unit, the compiler compiles one unit at a time, and generate one object file(.obj) for the current translation unit. (Note that every header file that this source file included will be preprocessed and will be considered as part of this translation unit)Everything within a translation unit is considered as internal, everything else is considered as external. In C++, you may reference an external symbol by using keywords like ", ", ", " and so on.", "\nResolve is a linking-time term. In linking-time, linker attempts to find the external definition for every symbol in object files that cannot find its definition internally. The scope of this searching process including:", "This searching process is called resolve.", "\nIf the linker cannot find the external definition for a symbol that has no definition internally, it reports an Unresolved External Symbol error.", ": Unresolved External Symbol error.\nWe already know that this error is due to the linker failed to find the definition of external symbols, the possible causes can be sorted as:", "For example, if we have a function called foo defined in a.cpp:", "In b.cpp we want to call function foo, so we add", "to declare function foo(), and call it in another function body, say ", ":", "Now when you build this code you will get a LNK2019 error complaining that foo is an unresolved symbol. In this case, we know that foo() has its definition in a.cpp, but different from the one we are calling(different return value). This is the case that definition exists.", "If we want to call some functions in a library, but the import library is not added into the additional dependency list (set from: ", ") of your project setting. Now the linker will report a LNK2019 since the definition does not exist in current searching scope.", "Unspecialized templates must have their definitions visible to all translation units that use them. That means you can't separate the definition of a template\nto an implementation file. If you must separate the implementation, the usual workaround is to have an ", " file which you include at the end of the header that\ndeclares the template. A common situation is:", "To fix this, you must move the definition of ", " to the header file or some place visible to the translation unit that uses it.", "Specialized templates can be implemented in an implementation file and the implementation doesn't have to be visible, but the specialization must be previously declared.", "For further explanation and another possible solution (explicit instantiation) see ", ".", " (especially for ", ").", "You may have missed to choose the right project type with your actual IDE. The IDE may want to bind e.g. Windows Application projects to such entry point function (as specified in the missing reference above), instead of the commonly used ", " signature.", "If your IDE supports ", " you might want to choose this project type, instead of a windows application project.", "Here are ", " and ", " handled in more detail from a ", " problem.", "Also if you're using 3rd party libraries make sure you have the correct 32/64 bit binaries", "Microsoft offers a ", " to reference the correct library at link time;", "In addition to the library path including the directory of the library, this should be the full name of the library.", "I just had this problem trying to link libpng with Visual Studio 2013.  The problem is that the package file only had libraries for Visual Studio 2010 and 2012.", "The correct solution is to hope the developer releases an updated package and then upgrade, but it worked for me by hacking in an extra setting for VS2013, pointing at the VS2012 library files.", "I edited the package (in the ", " folder inside the solution's directory) by finding ", " and inside that file, copying all the ", " sections.  I changed the ", " to ", " in ", " being very careful to leave the filename paths all as ", ".  This simply allowed Visual Studio 2013 to link to the libraries for 2012, and in this case, it worked.", "Suppose you have a big project written in c++ which has a thousand of .cpp files and a thousand of .h files.And let's says the project also depends on ten static libraries. Let's says we are on Windows and we build our project in Visual Studio 20xx. When you press Ctrl + F7 Visual Studio to start compiling the whole solution ( suppose we have just one project in the solution )", "The Second step of compilation is done by Linker.Linker should merge all the object file and build finally the output ( which may be an executable or a library)", "    ", "Compiler Time Error : ", "Linker Time Error", "I recently had this problem, and it turned out ", ". I had to remove a source file from the project and re-add it to overcome the bug.", "Steps to try if you believe it could be a bug in compiler/IDE:", "Most modern linkers include a verbose option that prints out to varying degrees;", "For gcc and clang; you would typically add ", " or ", " to the command line. More details can be found here;", "For MSVC, ", " (in particular ", ") is added to the link command line.", "I had the same issue. Say i have projects MyProject and TestProject. I had effectively linked the lib file for MyProject to the TestProject. However, this lib file was produced as the DLL for the MyProject was built. Also, I did not contain source code for all methods in the MyProject, but only access to the DLL's entry points. ", "To solve the issue, i built the MyProject as a LIB, and linked TestProject to this .lib file (i copy paste the generated .lib file into the TestProject folder). I can then build again MyProject as a DLL. It is compiling since the lib to which TestProject is linked does contain code for all methods in classes in MyProject. ", "Since people seem to be directed to this question when it comes to linker errors I am going to add this here.", "One possible reason for linker errors with GCC 5.2.0 is that a new libstdc++ library ABI is now chosen by default.", "If you get linker errors about undefined references to symbols that involve types in the std::__cxx11 namespace or the tag [abi:cxx11] then it probably indicates that you are trying to link together object files that were compiled with different values for the _GLIBCXX_USE_CXX11_ABI macro. This commonly happens when linking to a third-party library that was compiled with an older version of GCC. If the third-party library cannot be rebuilt with the new ABI then you will need to recompile your code with the old ABI.", "So if you suddenly get linker errors when switching to a GCC after 5.1.0 this would be a thing to check out.", "Some .so files are actually ", ", e.g. ", " file is an ASCII text file with this contents:", "Some more complex builds may not support this. For example, if you include -v in the compiler options, you can see that the ", " discards linker script command files in the verbose output list of libraries to link in. A simple work around is to replace the linker script input command file with a copy of the file instead (or a symlink), e.g.", "Or you could replace the -l argument with the full path of the .so, e.g. instead of ", " do ", "Given the code snippet of a template type with a friend operator (or function);", "The ", " is being declared as a non-template function. For every type ", " used with ", ", there needs to be a non-templated ", ". For example, if there is a type ", " declared, then there must be an operator implementation as follows;", "Since it is not implemented, the linker fails to find it and results in the error.", "To correct this, you can declare a template operator before the ", " type and then declare as a friend, the appropriate instantiation. The syntax is a little awkward, but is looks as follows;", "The above code limits the friendship of the operator to the corresponding instantiation of ", ", i.e. the ", " instantiation is limited to access the private members of the instantiation of ", ".", "Alternatives include;", "Allowing the friendship to extend to all instantiations of the templates, as follows;", "Or, the implementation for the ", " can be done inline inside the class definition;", ", when the declaration of the operator (or function) only appears in the class, the name is not available for \"normal\" lookup, only for argument dependent lookup, from ", ";", "A name first declared in a friend declaration within class or class template X becomes a member of the innermost enclosing namespace of X, but is not accessible for lookup (except argument-dependent lookup that considers X) unless a matching declaration at the namespace scope is provided...", "There is further reading on template friends at ", " and the ", ".", ".", " ", "Examples are in C. They could equally well be C++", "You build your static library:", "You compile your program:", "You try to link it with ", " and fail:", "The same result if you compile and link in one step, like:", "Compile your program:", "Try to link your program with ", " and fail:", "Same if you compile and link in one go:", "And a variation on example 2 involving ", ":", "In the sequence of object files and libraries you want to link to make your\nprogram, you are placing the libraries before the object files that refer to\nthem. You need to place the libraries ", " the object files that refer\nto them.", "Link example 1 correctly:", "Success:", "Link example 2 correctly:", "Success:", "Link the example 2 ", " variation correctly:", ".", "By default, a linkage command generated by GCC, on your distro,\nconsumes the files in the linkage from left to right in\ncommandline sequence. When it finds that a file refers to ", "\nand does not contain a definition for it, to will search for a definition\nin files further to the right. If it eventually finds a definition, the\nreference is resolved. If any references remain unresolved at the end,\nthe linkage fails: the linker does not search backwards.", "First, ", ", with static library ", "A static library is an indexed archive of object files. When the linker\nfinds ", " in the linkage sequence and figures out that this refers\nto the static library ", ", it wants to know whether your program\nneeds any of the object files in ", ".", "There is only object file in ", ", namely ", ", and there's only one thing defined\nin ", ", namely the function ", ".", "The linker will decide that your program needs ", " if and only if it already knows that\nyour program refers to ", ", in one or more of the object files it has already\nadded to the program, and that none of the object files it has already added\ncontains a definition for ", ".", "If that is true, then the linker will extract a copy of ", " from the library and\nadd it to your program. Then, your program contains a definition for ", ", so\nits references to ", " are ", ".", "When you try to link the program like:", "the linker ", " ", " ", " when it sees\n", ". Because at that point, it has not seen ", ".\nYour program does not yet make any references to ", ": it\ndoes not yet make any references ", ", because all the references it makes\nare in ", ".", "So the linker does not add ", " to the program and has no further\nuse for ", ".", "Next, it finds ", ", and adds it to be program. An object file in the\nlinkage sequence is always added to the program. Now, the program makes\na reference to ", ", and does not contain a definition of ", "; but\nthere is nothing left in the linkage sequence that could provide the missing\ndefinition. The reference to ", " ends up ", ", and the linkage fails.", "Second, ", ", with shared library ", "A shared library isn't an archive of object files or anything like it. It's\nmuch more like a ", " that doesn't have a ", " function and\ninstead exposes multiple other symbols that it defines, so that other\nprograms can use them at runtime.", "Many Linux distros today configure their GCC toolchain so that its language drivers (", ",", ",", " etc)\ninstruct the system linker (", ") to link shared libraries on an ", " basis.\nYou have got one of those distros.", "This means that when the linker finds ", " in the linkage sequence, and figures out that this refers \nto the shared library (say) ", ", it wants to know whether any references that it has added to your program that aren't yet defined have definitions that are exported by ", "If that is true, then the linker will ", " copy any chunks out of ", " and\nadd them to your program; instead, it will just doctor the code of your program \nso that:-", "At runtime, the system program loader will load a copy of ", " into the\nsame process as your program whenever it loads a copy of your program, to run it.", "At runtime, whenever your program refers to something that is defined in\n", ", that reference uses the definition exported by the copy of ", " in\nthe same process.", "Your program wants to refer to just one thing that has a definition exported by ", ",\nnamely the function ", ", which is referred to just once, in ", ".\nIf the linker adds that reference to your program, and then finds the definition\nexported by ", ", the reference is ", " ", "But when you try to link the program like:", "the order of events is wrong in just the same way as with example 1.\nAt the point when the linker finds ", ", there are ", " references to anything\nin the program: they are all in ", ", which has not yet been seen. So the\nlinker decides it has no use for ", ". When it reaches ", ", adds it to the program,\nand then has undefined reference to ", ", the linkage sequence is finished;\nthat reference is unresolved, and the linkage fails.", "Lastly, the ", " variation of example 2 has a now obvious explanation.\nAfter shell-expansion:", "becomes:", "which is just example 2 again.", "The linkage:", "works just fine for you!", "(Or: That linkage worked fine for you on, say, Fedora 23, but fails on Ubuntu 16.04)", "That's because the distro on which the linkage works is one of the ones that \ndoes not configure its GCC toolchain to link shared libraries ", ".", "Back in the day, it was normal for unix-like systems to link static and shared \nlibraries by different rules. Static libraries in a linkage sequence were linked \non the ", " basis explained in example 1, but shared libraries were linked unconditionally.", "This behaviour is economical at linktime because the linker doesn't have to ponder\nwhether a shared library is needed by the program: if it's a shared library,\nlink it. And most libraries in most linkages are shared libraries. But there are disadvantages too:-", "It is uneconomical at ", ", because it can cause shared libraries to be\nloaded along with a program even if doesn't need them.", "The different linkage rules for static and shared libraries can be confusing\nto inexpert programmers, who may not know whether ", " in their linkage\nis going to resolve to ", " or to ", ",\nand might not understand the difference between shared and static libraries\nanyway.", "This trade-off has led to the schismatic situation today. Some distros have\nchanged their GCC linkage rules for shared libraries so that the ", "\nprinciple applies for all libraries. Some distros have stuck with the old\nway.", "If I just do:", "surely gcc has to compile ", " first, and then link the resulting\nobject file with ", ".  So how can it not know that object file\nis needed when it's doing the linking?", "Because compiling and linking with a single command does not change the\norder of the linkage sequence.", "When you run the command above, ", " figures out that you want compilation +\nlinkage. So behind the scenes, it generates a compilation command, and runs\nit, then generates a linkage command, and runs it, as if ", " had run the\ntwo commands:", "So the linkage fails just as it does if you ", " run those two commands. The\nonly difference you notice in the failure is that gcc has generated a\ntemporary object file in the compile + link case, because you're not telling it\nto use ", ". We see:", "instead of:", "Putting interdependent libraries in the wrong order is just one way\nin which you can get files that ", " definitions of things coming\nlater in the linkage than the files that ", " the definitions. Putting libraries before the \nobject files that refer to them is another way of making the same mistake.", "Linker errors can happen when a header file and its associated shared library (.lib file) go out of sync. Let me explain. ", "How do linkers work? The linker matches a function declaration (declared in the header) with its definition (in the shared library) by comparing their signatures. You can get a linker error if the linker doesn't find a function definition that matches perfectly. ", "Is it possible to still get a linker error even though the declaration and the definition seem to match? Yes! They might look the same in source code, but it really depends on what the compiler sees. Essentially you could end up with a situation like this:", "Note how even though both the function declarations look identical in source code, but they are really different according to the compiler.", "You might ask how one ends up in a situation like that? ", " of course! If when compiling the shared library, the include path leads to ", " and you end up using ", " in your own program, you'll be left scratching your header wondering what happened (pun intended).", "An example of how this can happen in the real world is explained below.", "I have two projects: ", " and ", ". Both projects depend on ", ". Suppose the library exports the following function:", "And then you go ahead and include the library in your own project.", "Boom! You get a linker error and you have no idea why it's failing. The reason is that the common library uses different versions of the same include ", " (I have made it obvious here in the example by including a different path, but it might not always be so obvious. Maybe the include path is different in the compiler settings).", "Note in this example, the linker would tell you it couldn't find ", ", when in reality you know it obviously is being exported by the library. You could spend hours scratching your head wondering what went wrong. The thing is, the linker sees a different signature because the parameter types are slightly different. In the example, ", " is a different type in both projects as far as the compiler is concerned. This could happen because they come from two slightly different include files (maybe the include files come from two different versions of the library).", "DUMPBIN is your friend, if you are using Visual Studio. I'm sure other compilers have other similar tools.", "The process goes like this:", "[1] By project I mean a set of source files that are linked together to produce either a library or an executable.", "EDIT 1: Rewrote first section to be easier to understand. Please comment below to let me know if something else needs to be fixed. Thanks!", "A Windows UNICODE build is built with ", " etc. being defined as ", " etc. When not building with ", " defined as build with ", " defined as ", " etc. These ", " and ", " defines affect all the ", "; ", ", ", " and their elk.", "Building one library with ", " defined and attempting to link it in a project where ", " is not defined will result in linker errors since there will be a mismatch in the definition of ", "; ", " vs. ", ".", "The error usually includes a function a value with a ", " or ", " derived type, these could include ", " etc. as well. When browsing through the affected function in the code, there will often be a reference to ", " or ", " etc. This is a tell-tale sign that the code was originally intended for both a UNICODE and a Multi-Byte Character (or \"narrow\") build.", "To correct this, build all the required libraries and projects with a consistent definition of ", " (and ", ").", "This can be done with either;", "Or in the project settings;", "Project Properties > General > Project Defaults > Character Set", "Or on the command line;", "The alternative is applicable as well, if UNICODE is not intended to be used, make sure the defines are not set, and/or the multi-character setting is used in the projects and consistently applied.", "Do not forget to be consistent between the \"Release\" and \"Debug\" builds as well.", "A \"clean\" of the build can remove the \"dead wood\" that may be left lying around from previous builds, failed builds, incomplete builds and other build system related build issues.", "In general the IDE or build will include some form of \"clean\" function, but this may not be correctly configured (e.g. in a manual makefile) or may fail (e.g. the intermediate or resultant binaries are read-only).", "Once the \"clean\" has completed, verify that the \"clean\" has succeeded and all the generated intermediate file (e.g. an automated makefile) have been successfully removed.", "This ", "; especially if the code related to the error has recently been added (either locally or from the source repository).", "For people coming from C it might be a surprise that in C++ global ", "variables have internal (or static) linkage. In C this was not the case, as all global variables are implicitly ", " (i.e. when the ", " keyword is missing).", "Example: ", "correct would be to use a header file and include it in file2.cpp ", " file1.cpp", "Alternatively one could declare the ", " variable in file1.cpp with explicit ", "Even though this is a pretty old questions with multiple accepted answers, I'd like to share how to resolve an ", " \"undefined reference to\" error.  ", "I was using an alias to refer to ", ": filesystem is in the standard library since C++17 but my program needed to ", " so I decided to use a variable alias:  ", "Let's say I have three files: main.cpp, file.h, file.cpp:", "Note the ", " used in main.cpp and file.h. Since main.cpp #include'd \"", "\" after <", ">, the version of filesystem used there was ", ". I used to compile the program with the following commands:", "$ ", " -> compiles main.cpp to main.o", "\n$ ", " -> compiles file.cpp and file.h to file.o", "\n$ ", " -> links main.o and file.o  ", "This way ", " contained in file.o and used in main.o that ", " gave \"undefined reference\" errors because ", " referred to ", " but ", " to ", ".  ", "To fix this I just needed to ", ".", "The default behavior of gcc is that all symbols are visible. However, when the translation units are built with option ", ", only functions/symbols marked with ", " are external in the resulting shared object.", "You can check whether the symbols your are looking for are external by invoking:", "the hidden/local symbols are shown by ", " with lowercase symbol type, for example ", " instead of `T for code-section:", "You can also use ", " with the option ", " to demangle the names (if C++ was used).", "Similar to Windows-dlls, one would mark public functions with a define, for example ", " defined as:", "Which roughly corresponds to Windows'/MSVC-version:", "More ", " can be found on the gcc wiki.", "When a translation unit is compiled with ", " the resulting symbols have still external linkage (shown with upper case symbol type by ", ") and can be used for external linkage without problem if the object files become part of a static libraries. The linkage becomes local only when the object files are linked into a shared library.", "To find which symbols in an object file are hidden run:", "You may see a message like:", "In that case, it means that the available symbols are for a different architecture than the one you are compiling for.", "On Visual Studio, this is due to the wrong \"Platform\", and you need to either select the proper one or install the proper version of the library.", "On Linux, it may be due to the wrong library folder (using ", " instead of ", " for instance).", "On MacOS, there is the option of shipping both architectures in the same file. It may be that the link expects both versions to be there, but only one is. It can also be an issue with the wrong ", "/", " folder where the library is picked up."], "quote": ["The precedence among the syntax rules of translation is specified by the following phases ", ".", " Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.", "note: i use g++ and Linux and all examples is for it ", "If you get linker errors about undefined references to symbols that involve types in the std::__cxx11 namespace or the tag [abi:cxx11] then it probably indicates that you are trying to link together object files that were compiled with different values for the _GLIBCXX_USE_CXX11_ABI macro. This commonly happens when linking to a third-party library that was compiled with an older version of GCC. If the third-party library cannot be rebuilt with the new ABI then you will need to recompile your code with the old ABI.", "A name first declared in a friend declaration within class or class template X becomes a member of the innermost enclosing namespace of X, but is not accessible for lookup (except argument-dependent lookup that considers X) unless a matching declaration at the namespace scope is provided...", " ", "Project Properties > General > Project Defaults > Character Set"], "answer_code": ["a", "a.cpp", "b.cpp", "b.cpp", ".lib", ".lib", "error LNK2001", "error LNK1120", "error LNK2019", "undefined reference to", "struct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n", "/home/AbiSfw/ccvvuHoX.o: In function `main':\nprog.cpp:(.text+0x10): undefined reference to `x'\nprog.cpp:(.text+0x19): undefined reference to `foo()'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A'\ncollect2: ld returned 1 exit status\n", "1>test2.obj : error LNK2001: unresolved external symbol \"void __cdecl foo(void)\" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol \"int x\" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol \"public: virtual __thiscall A::~A(void)\" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol \"public: virtual void __thiscall X::foo(void)\" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n", "#pragma", "UNICODE", "virtual", "struct X\n{\n    virtual ~X() = 0;\n};\nstruct Y : X\n{\n    ~Y() {}\n};\nint main()\n{\n    Y y;\n}\n//X::~X(){} //uncomment this line for successful definition\n", "virtual", "virtual", "struct X\n{\n    virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nint main()\n{\n   Y y; //linker error although there was no call to X::foo\n}\n", "X::foo()", "struct X\n{\n    virtual void foo() = 0;\n};\n", "virtual", "struct A\n{ \n    ~A();\n};\n", "A a;      //destructor undefined\n", "struct A\n{ \n    ~A() {}\n};\n", "A::~A() {}\n", "inline", "struct A\n{\n   void foo();\n};\n\nvoid foo() {}\n\nint main()\n{\n   A a;\n   a.foo();\n}\n", "void A::foo() {}\n", "static", "struct X\n{\n    static int x;\n};\nint main()\n{\n    int x = X::x;\n}\n//int X::x; //uncomment this line to define X::x\n", "static", "const", "static const", "g++ -o test objectFile1.o objectFile2.o -lLibraryName\n", "libraryName", "libfoo.so", "-lfoo", "foo.lib", "-L\u2039directory\u203a", "-l", "-L", "lib", "lib", "Input -> Additional Dependencies", "lib", "Linker -> General -> Additional Library Directories", "lib", "__imp_", "gcc main.c", "gcc main.c other.c", "extern int x;\n", "int x;\n", "extern int x;\nint main()\n{\n    x = 0;\n}\n//int x; // uncomment this line for successful definition\n", "void foo(); // declaration only\nint main()\n{\n   foo();\n}\n//void foo() {} //uncomment this line for successful definition\n", "void foo(int& x);\nint main()\n{\n   int x;\n   foo(x);\n}\nvoid foo(const int& x) {} //different function, doesn't provide a definition\n                          //for void foo(int& x)\n", "#includes", "A", "B", "libA", "libB", "// B.h\n#ifndef B_H\n#define B_H\n\nstruct B {\n    B(int);\n    int x;\n};\n\n#endif\n\n// B.cpp\n#include \"B.h\"\nB::B(int xx) : x(xx) {}\n\n// A.h\n#include \"B.h\"\n\nstruct A {\n    A(int x);\n    B b;\n};\n\n// A.cpp\n#include \"A.h\"\n\nA::A(int x) : b(x) {}\n\n// main.cpp\n#include \"A.h\"\n\nint main() {\n    A a(5);\n    return 0;\n};\n", "$ g++ -c A.cpp\n$ g++ -c B.cpp\n$ ar rvs libA.a A.o \nar: creating libA.a\na - A.o\n$ ar rvs libB.a B.o \nar: creating libB.a\na - B.o\n", "$ g++ main.cpp -L. -lB -lA\n./libA.a(A.o): In function `A::A(int)':\nA.cpp:(.text+0x1c): undefined reference to `B::B(int)'\ncollect2: error: ld returned 1 exit status\n$ g++ main.cpp -L. -lA -lB\n$ ./a.out\n", "// src1.cpp\nvoid print();\n\nstatic int local_var_name; // 'static' makes variable not visible for other modules\nint global_var_name = 123;\n\nint main()\n{\n    print();\n    return 0;\n}\n", "// src2.cpp\nextern \"C\" int printf (const char*, ...);\n\nextern int global_var_name;\n//extern int local_var_name;\n\nvoid print ()\n{\n    // printf(\"%d%d\\n\", global_var_name, local_var_name);\n    printf(\"%d\\n\", global_var_name);\n}\n", "$ g++ -c src1.cpp -o src1.o\n$ g++ -c src2.cpp -o src2.o\n", "$ readelf --symbols src1.o\n  Num:    Value          Size Type    Bind   Vis      Ndx Name\n     5: 0000000000000000     4 OBJECT  LOCAL  DEFAULT    4 _ZL14local_var_name # [1]\n     9: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 global_var_name     # [2]\n", "[1] - this is our static (local) variable (important - Bind has a type \"LOCAL\")\n[2] - this is our global variable\n", "$ g++ src1.o src2.o -o prog\n", "$ ./prog\n123\n", "// src2.cpp\nextern \"C\" int printf (const char*, ...);\n\nextern int global_var_name;\nextern int local_var_name;\n\nvoid print ()\n{\n    printf(\"%d%d\\n\", global_var_name, local_var_name);\n}\n", "$ g++ -c src2.cpp -o src2.o\n", "$ g++ src1.o src2.o -o prog\nsrc2.o: In function `print()':\nsrc2.cpp:(.text+0x6): undefined reference to `local_var_name'\ncollect2: error: ld returned 1 exit status\n", "$ g++ -S src1.cpp -o src1.s\n\n// src1.s\nlook src1.s\n\n    .file   \"src1.cpp\"\n    .local  _ZL14local_var_name\n    .comm   _ZL14local_var_name,4,4\n    .globl  global_var_name\n    .data\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; assembler code, not interesting for us\n.LFE0:\n    .size   main, .-main\n    .ident  \"GCC: (Ubuntu 4.8.2-19ubuntu1) 4.8.2\"\n    .section    .note.GNU-stack,\"\",@progbits\n", ".local  _ZL14local_var_name\n.comm   _ZL14local_var_name,4,4\n", "    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n", "    .file   \"src1.cpp\"\n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n    .globl  global_var_name\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; ...\n", "$ g++ -c src1.s -o src2.o\n", "$ readelf --symbols src1.o\n8: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 local_var_name\n", "$ g++ src1.o src2.o -o prog\n", "$ ./prog \n123456789\n", "void foo()", "void foo();\nint main()\n{\n    foo();\n}\n", "extern \"C\" void foo();\nint main()\n{\n    foo();\n}\n", "void foo()", "extern \"C\" void foo();\n", "extern \"C\" {\n    #include \"cheader.h\"\n}\n", "#ifdef __cplusplus [\\n] extern\"C\" { [\\n] #endif", "#ifdef __cplusplus [\\n] } [\\n] #endif", "[\\n]", "__declspec(dllexport)", "__declspec(dllimport)", "#ifdef THIS_MODULE\n#define DLLIMPEXP __declspec(dllexport)\n#else\n#define DLLIMPEXP __declspec(dllimport)\n#endif\n", "THIS_MODULE", "DLLIMPEXP void foo();\n", "__declspec(dllexport) void foo();\n", "__declspec(dllimport) void foo();\n", "class DLLIMPEXP X\n{\n};\n", "visibility", ".def", ".def", "extern", "__declspec (dllimport)", "int foo()\n{\n    return 0;\n}\n", "void foo();\n", "bar()", "void bar()\n{\n    foo();\n}\n", "Project | Properties | Configuration Properties | Linker | Input | Additional Dependency", "impl", "template<class T>\nstruct X\n{\n    void foo();\n};\n\nint main()\n{\n    X<int> x;\n    x.foo();\n}\n\n//differentImplementationFile.cpp\ntemplate<class T>\nvoid X<T>::foo()\n{\n}\n", "X::foo", "WinMain@16", "main()", "int main(int argc, char** argv);", "WinMain", "main", "#pragma", "#pragma comment(lib, \"libname.lib\")\n", "packages", "packagename\\build\\native\\packagename.targets", "v110", "v110", "v120", "v110", "error LNK2001: unresolved external symbol \"void __cdecl foo(void)\" (?foo@@YAXXZ)", "#pragma once", "-v -Wl,--verbose", "-v -Wl,-v", "/VERBOSE", "/VERBOSE:LIB", "/VERBOSE", "INPUT (libtbb.so.2)\n", "cp libtbb.so.2 libtbb.so\n", "-ltbb", "/home/foo/tbb-4.3/linux/lib/intel64/gcc4.4/libtbb.so.2", "template <typename T>\nclass Foo {\n    friend std::ostream& operator<< (std::ostream& os, const Foo<T>& a);\n};\n", "operator<<", "T", "Foo", "operator<<", "Foo<int>", "std::ostream& operator<< (std::ostream& os, const Foo<int>& a) {/*...*/}\n", "Foo", "// forward declare the Foo\ntemplate <typename>\nclass Foo;\n\n// forward declare the operator <<\ntemplate <typename T>\nstd::ostream& operator<<(std::ostream&, const Foo<T>&);\n\ntemplate <typename T>\nclass Foo {\n    friend std::ostream& operator<< <>(std::ostream& os, const Foo<T>& a);\n    // note the required <>        ^^^^\n    // ...\n};\n\ntemplate <typename T>\nstd::ostream& operator<<(std::ostream&, const Foo<T>&)\n{\n  // ... implement the operator\n}\n", "Foo", "operator<< <int>", "Foo<int>", "template <typename T>\nclass Foo {\n    template <typename T1>\n    friend std::ostream& operator<<(std::ostream& os, const Foo<T1>& a);\n    // ...\n};\n", "operator<<", "template <typename T>\nclass Foo {\n    friend std::ostream& operator<<(std::ostream& os, const Foo& a)\n    { /*...*/ }\n    // ...\n};\n", "warning: friend declaration 'std::ostream& operator<<(...)' declares a non-template function [-Wnon-template-friend]", "note: (if this is not what you intended, make sure the function template has already been declared and add <> after the function name here)", "libfoo", "libbar", "libfoo", "libbar", "undefined reference to", "#include", "#include \"my_lib.h\"\n#include <stdio.h>\n\nvoid hw(void)\n{\n    puts(\"Hello World\");\n}\n", "#ifndef MY_LIB_H\n#define MT_LIB_H\n\nextern void hw(void);\n\n#endif\n", "#include <my_lib.h>\n\nint main()\n{\n    hw();\n    return 0;\n}\n", "$ gcc -c -o my_lib.o my_lib.c\n$ ar rcs libmy_lib.a my_lib.o\n", "$ gcc -I. -c -o eg1.o eg1.c\n", "libmy_lib.a", "$ gcc -o eg1 -L. -lmy_lib eg1.o \neg1.o: In function `main':\neg1.c:(.text+0x5): undefined reference to `hw'\ncollect2: error: ld returned 1 exit status\n", "$ gcc -o eg1 -I. -L. -lmy_lib eg1.c\n/tmp/ccQk1tvs.o: In function `main':\neg1.c:(.text+0x5): undefined reference to `hw'\ncollect2: error: ld returned 1 exit status\n", "libz", "#include <zlib.h>\n#include <stdio.h>\n\nint main()\n{\n    printf(\"%s\\n\",zlibVersion());\n    return 0;\n}\n", "$ gcc -c -o eg2.o eg2.c\n", "libz", "$ gcc -o eg2 -lz eg2.o \neg2.o: In function `main':\neg2.c:(.text+0x5): undefined reference to `zlibVersion'\ncollect2: error: ld returned 1 exit status\n", "$ gcc -o eg2 -I. -lz eg2.c\n/tmp/ccxCiGn7.o: In function `main':\neg2.c:(.text+0x5): undefined reference to `zlibVersion'\ncollect2: error: ld returned 1 exit status\n", "pkg-config", "$ gcc -o eg2 $(pkg-config --libs zlib) eg2.o \neg2.o: In function `main':\neg2.c:(.text+0x5): undefined reference to `zlibVersion'\n", "$ gcc -o eg1 eg1.o -L. -lmy_lib\n", "$ ./eg1 \nHello World\n", "$ gcc -o eg2 eg2.o -lz\n", "$ ./eg2 \n1.2.8\n", "pkg-config", "$ gcc -o eg2 eg2.o $(pkg-config --libs zlib) \n$ ./eg2\n1.2.8\n", "my_lib.a", "-lmy_lib", "./libmy_lib.a", "libmy_lib.a", "libmy_lib.a", "my_lib.o", "my_lib.o", "hw", "my_lib.o", "hw", "hw", "my_lib.o", "hw", "hw", "$ gcc -o eg1 -L. -lmy_lib eg1.o\n", "eg1.o", "-lmy_lib", "eg1.o", "hw", "eg1.o", "my_lib.o", "libmy_lib.a", "eg1.o", "hw", "hw", "hw", "libz", "main", "gcc", "g++", "gfortran", "ld", "-lz", "/usr/lib/x86_64-linux-gnu/libz.so", "libz", "libz", "libz", "libz", "libz", "libz", "zlibVersion", "eg2.c", "libz", "gcc -o eg2 -lz eg2.o\n", "-lz", "eg2.o", "libz", "eg2.o", "zlibVersion", "pkg-config", "gcc -o eg2 $(pkg-config --libs zlib) eg2.o\n", "gcc -o eg2 -lz eg2.o\n", "gcc -o eg2 -lz eg2.o\n", "-lfoo", "/some/where/libfoo.a", "/some/where/libfoo.so", "$ gcc -o eg1 -I. -L. -lmy_lib eg1.c\n", "eg1.c", "libmy_lib.a", "gcc", "$ gcc -I. -c -o eg1.o eg1.c\n$ gcc -o eg1 -L. -lmy_lib eg1.o\n", "eg1.o", "/tmp/ccQk1tvs.o: In function `main'\n", "eg1.o: In function `main':\n", "// header1.h\ntypedef int Number;\nvoid foo(Number);\n\n// header2.h\ntypedef float Number;\nvoid foo(Number); // this only looks the same lexically\n", "header1.h", "header2.h", "graphics.lib", "main.exe", "common_math.h", "// graphics.lib    \n#include \"common_math.h\" \n\nvoid draw(vec3 p) { ... } // vec3 comes from common_math.h\n", "// main.exe\n#include \"other/common_math.h\"\n#include \"graphics.h\"\n\nint main() {\n    draw(...);\n}\n", "common_math.h", "draw()", "vec3", "UNICODE", "TCHAR", "wchar_t", "UNICODE", "TCHAR", "char", "UNICODE", "_UNICODE", "T", "LPTSTR", "LPCTSTR", "UNICODE", "UNICODE", "TCHAR", "char", "wchar_t", "char", "wchar_t", "std::basic_string<>", "TCHAR", "std::basic_string<TCHAR>", "UNICODE", "_UNICODE", "#define UNICODE\n#define _UNICODE\n", "/DUNICODE /D_UNICODE\n", "const", "const", "extern", "static", "// file1.cpp\nconst int test = 5;    // in C++ same as \"static const int test = 5\"\nint test2 = 5;\n\n// file2.cpp\nextern const int test;\nextern int test2;\n\nvoid foo()\n{\n int x = test;   // linker error in C++ , no error in C\n int y = test2;  // no problem\n}\n", "extern const int test;\nextern int test2;\n", "const", "extern", "std::filesystem::path", "#if (defined _GLIBCXX_EXPERIMENTAL_FILESYSTEM) //is the included filesystem library experimental? (C++14 and newer: <experimental/filesystem>)\nusing path_t = std::experimental::filesystem::path;\n#elif (defined _GLIBCXX_FILESYSTEM) //not experimental (C++17 and newer: <filesystem>)\nusing path_t = std::filesystem::path;\n#endif\n", "g++ -g -std=c++17 -c main.cpp", "g++ -g -std=c++17 -c file.cpp", "g++ -g -std=c++17 -o executable main.o file.o -lstdc++fs", "path_t", "std::filesystem::path", "std::experimental::filesystem::path", "-fvisibility=hidden", "__attribute__ ((visibility (\"default\")))", "# -D shows (global) dynamic symbols that can be used from the outside of XXX.so\nnm -D XXX.so | grep MY_SYMBOL \n", "nm", "t", "nm XXX.so\n00000000000005a7 t HIDDEN_SYMBOL\n00000000000005f8 T VISIBLE_SYMBOL\n", "nm", "-C", "DLL_PUBLIC", "#define DLL_PUBLIC __attribute__ ((visibility (\"default\")))\n\nDLL_PUBLIC int my_public_function(){\n  ...\n}\n", "#ifdef BUILDING_DLL\n    #define DLL_PUBLIC __declspec(dllexport) \n#else\n    #define DLL_PUBLIC __declspec(dllimport) \n#endif\n", "-fvisibility=hidden", "nm", ">>> objdump -t XXXX.o | grep hidden\n0000000000000000 g     F .text  000000000000000b .hidden HIDDEN_SYMBOL1\n000000000000000b g     F .text  000000000000000b .hidden HIDDEN_SYMBOL2\n", "nm -CD", "nm -gCD", "library machine type 'x64' conflicts with target machine type 'X86'\n", "lib", "lib64", "lib", "lib64"], "url": "https://stackoverflow.com/questions/12573816/what-is-an-undefined-reference-unresolved-external-symbol-error-and-how-do-i-fix"},
{"title": "How to get ROS MSG length in python?", "time": "2019-02-03 02:30:40Z", "post_content": ["I have a problem that needs to count the length of each ROS topic msg.", "I modified rostopic(/opt/ros/smart-ros/lib/python2.7/dist-packages/rostopic / __ init__.py):", "But when the message contains a vector or struct list, the length is incorrect.", "Please help solve this problem?", "Thanks."], "answer": ["The problem is the behaviour of ", ":", "Only the memory consumption directly attributed to the object is accounted for, not the memory consumption of objects it refers to.", "This means only the size of the reference to a list is used to calculate the object size.", "There are already a few questions dealing with this:", "The solution is to ", " which provides a function to the required calculation:", "Function asizeof calculates the combined (approximate) size of one or several Python objects in bytes", "After installing the package using ", "pip install pympler", "and importing it to your code like", "you are able to print the correct object size in your callback like"], "quote": ["Only the memory consumption directly attributed to the object is accounted for, not the memory consumption of objects it refers to.", "Function asizeof calculates the combined (approximate) size of one or several Python objects in bytes", "pip install pympler"], "question_code": ["Class CallbackEcho(object) ->\nDef callback (self, data, callback_args, current_time = None):\n    Print('message length =',sys.getsizeof(data)) #statics msg length\n"], "answer_code": ["from pympler.asizeof import asizeof\n", "print('Size: ' + str(asizeof(data)))\n"], "url": "https://stackoverflow.com/questions/54499456/how-to-get-ros-msg-length-in-python"},
{"title": "How to perform time-consuming task inside callback function in ROS", "time": "2018-06-09 13:43:04Z", "post_content": ["This question is more likely a coding hack and may not depend on ", ". I am receiving data from a subscriber inside a callback function. I am trying to perform time-consuming task inside this function. Please see the code snippet-", "I planned to use a flag to skip the next call if the previous task isn't finished. However, it didn't work! ", "Although it is suggested not to do any time-consuming task inside callback function. I have no issues, even if I skip few callbacks. ", "PS: I am using ROS Indigo on Ubuntu 14.04 LTS 64 Bit OS. Please use ", " to publish sample message."], "answer": [], "question_code": ["#include <ros/ros.h>\n#include <std_msgs/String.h>\n\nclass TimeConsumingTask {\nprivate:\n  bool still_processing;\n  void callback(const std_msgs::String::ConstPtr &msg);\n\npublic:\n  TimeConsumingTask();\n};\n\nvoid TimeConsumingTask::callback(const std_msgs::String::ConstPtr &msg) {\n  ROS_INFO(\"callback received\");\n  if (still_processing)\n    return;\n\n  still_processing = true;\n  // perform time consuming task\n  ros::Duration(5).sleep();\n  still_processing = false;\n}\n}\n\nTimeConsumingTask::TimeConsumingTask() {\n  still_processing = false;\n  ros::NodeHandle n;\n  ros::Subscriber sub =\n      n.subscribe(\"hello_word\", 10, &TimeConsumingTask::callback, this);\n  ros::spin();\n}\n\nint main(int argc, char **argv) {\n  ros::init(argc, argv, \"listener\");\n  TimeConsumingTask task;\n  return 0;\n}\n", "rostopic pub -r 10 hello_word std_msgs/String hello"], "url": "https://stackoverflow.com/questions/50774904/how-to-perform-time-consuming-task-inside-callback-function-in-ros"},
{"title": "Not retrieving NOTIFY with libpq in a C++ program", "time": "2013-12-10 15:27:23Z", "post_content": ["I'm enhancing a ROS (robot operating system) stack ", " to be able to handle postgresqls LISTEN and NOTIFY commands. As mentioned, I'm using libpq version 9.1.10-0 on Ubuntu12.04 within a C++ program.\nBut for some reasons I'm not able to retrieve a NOTIFY.", "I know, that there's an example (Example 28-2. libpq Example Program 2)  and it works perfectly fine. I've played around with it quite a long time and also tried to copy it to my code as exactly as possible and change the example code in a way making it more similar to the code I'm having problems with. But that didn't help for my problem.", "I can received notifies in the example program and in a manual login into the database, but not in the  code I want to use.", "What else did I try:", "The NOTIFY was always triggered manually with ", "The code can also be seen here ", " (on the unstable branches):", "class PostgresqlDatabase (in sql_interface->database_interface->src on github)", "\nThis class holds the connection PGconn and provides tasks like", "The main purpose of that class is to abstract the sql queries, so that ROS-programmers don't have to care about them anymore.", "class databaseBinding", "\nit's the glue between ROS and the database functionalities. It holds a PostgresqlDatabase object to get a database connection and to call the tasks.", "A main function ", "\nDoes the following things", "The checkNotify function, which is triggered about 5 times per second:"], "answer": ["So it turned out, that there was something wrong with the connection.\nIt was created with that code:", "With ", "\nBut an empty username doesn't satisfy the usage of PQconnectdb, which, for some parsing-reason, caused it to login to the database \"turtlebot\". That database unfortunately existed on my server. And there it - of course - didn't get any notifications sent out in the \"rosdb\"-database and had a good connection.", "What an, for me, awkward and unlucky behaviour."], "question_code": ["COMMIT;", "LISTEN <channel>;", "PQconsumeInput(connection_);", "NOTIFY <channel>;", " bool listenToChannel(std::string channel);\n", "PostgresqlDatabase::listenToChannel(std::string channel)", "PostgresqlDatabase::checkNotify(notification &no)", "/*! Checks for a received NOTIFY and returns it. */\nbool PostgresqlDatabase::checkNotify(notification &no)\n{\n  PGnotify   *notify;\n  PQconsumeInput(connection_);\n  if ((notify = PQnotifies(connection_)) != NULL)\n    {\n    no.channel = notify->relname;\n    no.sending_pid = notify->be_pid;\n    no.payload = notify->extra;\n    PQfreemem(notify);\n    return true;\n    } else\n    {\n    no.channel = \"\";\n    no.sending_pid = 0;\n    no.payload = \"\";\n    PQfreemem(notify);\n    return false;\n    }\n}\n", "/*! Listens to a specified channel using the Postgresql LISTEN-function.*/\nbool PostgresqlDatabase::listenToChannel(std::string channel) {\n  //look, if we're already listening to the channel in our list\n  if (std::find(channels_.begin(),channels_.end(),channel) == channels_.end() )\n    {\n      std::string query = \"LISTEN \" + channel;\n      PGresultAutoPtr result = PQexec(connection_,query.c_str());\n      if (PQresultStatus(*result) != PGRES_COMMAND_OK)\n          {\n              ROS_WARN(\"LISTEN command failed: %s\", PQerrorMessage(connection_));\n              return false;\n          }\n      ROS_INFO(\"Now listening to channel \\\"%s\\\"\",channel.c_str());\n      channels_.push_back(channel);\n      return true;\n    }\n  ROS_INFO(\"We are already listening to channel \\\"%s\\\" - nothing to be done\",channel.c_str());\n  return true;\n}\n"], "answer_code": ["void PostgresqlDatabase::pgMDBconstruct(std::string host, std::string port, \nstd::string user, std::string password, std::string dbname )\n{\n  std::string conn_info = \"host=\" + host + \" port=\" + port +\n    \" user=\" + user + \" password=\" + password + \" dbname=\" + dbname;\n  connection_= PQconnectdb(conn_info.c_str());\n  if (PQstatus(connection_)!=CONNECTION_OK)\n  {\n    ROS_ERROR(\"Database connection failed with error message: %s\", PQerrorMessage(connection_));\n  }\n}\n", "host=192.168.10.100, port=5432, user=turtlebot, password= , dbname=rosdb."], "url": "https://stackoverflow.com/questions/20495210/not-retrieving-notify-with-libpq-in-a-c-program"},
{"title": "ROS 2 on K8s: Multicast fails within same pod, succeeds in different pods", "time": "2020-01-23 22:05:05Z", "post_content": ["Cross-posted from ", ".", "Kubernetes version: v1.17.1\nCloud being used: bare-metal\nInstallation method: kubeadm\nHost OS: Ubuntu 18.04 LTS Server\nCNI and version: weave/flannel/kube-router/calico (latest releases of each)\nCRI and version: docker/containerd (19.03.5/1.2.10)", "I am attempting to bring up a ", " installation on Kubernetes, ideally using multiple containers in a single pod.  Under the hood, ROS 2 relies upon DDS for communication, which is based upon UDP multicast.", "When I bring up a simple pod deployment with two containers in a producer-consumer configuration, the consumer rarely (if ever) receives a message from the producer.  When I bring up two pods, each with a single container the same producer-consumer configuration, the consumer always receives the messages.", "Every once in a while, the consumer will start up and receive messages as expected.", "Furthermore, if one logs into the consumer with ", " then runs ", ", messages are sometimes received from the producer in the single pod scenario.", "Successful messages appear in the logs of the consumer container as:", "No such log messages are observed from the consumer.", "Apply the following pod definition: ros2-1.yaml", "Apply the following pod definition: ros2-2.yaml"], "answer": [], "question_code": ["kubectl exec -it ros2-1 -c consumer /bin/bash", "/ros_entrypoint.sh ros2 run demo_nodes_cpp listener", "[INFO] [1579805884.017171859] [listener]: I heard: [Hello World: 1]\n[INFO] [1579805885.017168023] [listener]: I heard: [Hello World: 2]\n[INFO] [1579805886.017025092] [listener]: I heard: [Hello World: 3]\n", "apiVersion: v1\nkind: Pod\nmetadata:\n  name: ros2-1\nspec:\n  containers:\n  - name: producer\n    image: osrf/ros2:nightly\n    args: [\"ros2\", \"run\", \"demo_nodes_cpp\", \"talker\"]\n  - name: consumer\n    image: osrf/ros2:nightly\n    args: [\"ros2\", \"run\", \"demo_nodes_cpp\", \"listener\"]\n  restartPolicy: Never\n", "kubectl logs --follow ros2-1 consumer", "apiVersion: v1\nkind: Pod\nmetadata:\n  name: ros2-2-producer\nspec:\n  containers:\n  - name: producer\n    image: osrf/ros2:nightly\n    args: [\"ros2\", \"run\", \"demo_nodes_cpp\", \"talker\"]\n  restartPolicy: Never\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: ros2-2-consumer\nspec:\n  containers:\n  - name: consumer\n    image: osrf/ros2:nightly\n    args: [\"ros2\", \"run\", \"demo_nodes_cpp\", \"listener\"]\n  restartPolicy: Never\n", "kubectl logs --follow ros2-2-consumer", "route add -net 224.0.0.0 netmask 240.0.0.0 dev lo"], "url": "https://stackoverflow.com/questions/59887742/ros-2-on-k8s-multicast-fails-within-same-pod-succeeds-in-different-pods"},
{"title": "How to make table and variable values to persist when calling a lua function from c++?", "time": "2016-06-09 07:24:13Z", "post_content": ["I am calling a lua function from a c++ script. Within the lua function, I need to update certain variables and tables based on the data that I am passing to the function from C++. The data has to be passed to the lua function in a continuous loop, and each successive update to the lua variables and tables must take into account the changes made by the previous updates. How to accomplish this in a robust way? One clumsy way might be just to pass the values around between C and lua, or save and load them repeatedly, but since my data tables are expected to be really large that really may not be a good option. Please suggest solutions. ", "PS: I cannot simply write the entire code in lua since the C++ code is meant to run rosservices and subscribe to rostopics. I think it may be difficult to achieve the same in lua, and although there is a package called roslua apparently it is not compatible with ros indigo. ", "Calling this from C++", "Here variable x is the state whose state I want to retain after incrementing it by the value passed from C++. What I am not getting is where is the local function ", " being invoked? should be within the outer lua function or elsewhere? when I comment out the line increment(t) within the outer lua function, I simply get 2, 10, 3, 10 as the output, whereas on with increment(t) I am just getting 2, 12, 3, 13. Clearly the static variable behaviour is not getting implemented correctly. Where am I going wrong? Thanks. "], "answer": ["Expanding on the use of upvalues to carry state, here is some pseudo-code to get you started.", "Lua function factory which returns a function (", ") which has persistent state as an upvalue (", ", ", "):", "Creating an instance of ", " with state from Lua:", "Creating an instance of ", " wih state from C:", "Calling this function from C in a loop", "Let me know if anything here is unclear.  I'm making some assumptions about what sort of state you are trying to maintain, and there are a bunch of other things that can be handled with a little extra work (like returning the state to C, for example).", "In your example calling the Lua code from C++, there are a couple of problems.  Here is what I believe you wanted:", "In order to see the results of these increments, you'll want to print them out inside the ", " function.  The factory function gets called once.  The function it returns gets called multiple times.", "If you want to be able to set the initial state and retrieve the value afterward, you might want a lua function something like this:", "Here the factory function returns two functions, one to increment the state, and the other to retrieve it.  ", " is an upvalue to both ", " and ", ".  (If you want the value of the state after each increment, it is easier to return it from ", ".)  This would be used like this:"], "question_code": [" function test_upvalues(a)\n print(a)\n local x=10\n local function increment(t)\n x=x+t\n end\n --increment(a)\n print(x)\nreturn(increment)\nend\n", "lua_getglobal(L, \"test_upvalues\");\nlua_pushvalue(L, -1);\n\nlua_pushnumber(L,2); //push a value to increment state\nlua_call(L,1,0);\n\nlua_pushvalue(L, -1);\nlua_pushnumber(L,3); //push another value to increment state further\nlua_call(L,1,0);\n", "increment(t)"], "answer_code": ["myfunction", "mystate", "mystate2", "function create_myfunction ()\n   local mystate = {} -- initial value of state\n   local mystate2 = 0 -- Can have more than one upvalue\n   local function myfunction (args)\n       -- modify mystate and mystate2 based on args here\n   end\n   return myfunction\nend\n", "myfunction", "called_from_c_function = create_myfunction();\n", "myfunction", "lua_getglobal(L, \"create_myfunction\");\nlua_call(L, 0, 1); // Zero arguments, one result\n", "// Assume myfunction is on the top of the stack\nfor (...) { // Loop\n    lua_pushvalue(L, -1); // Copy function on stack (so we can use it again, as it gets consumed by the call)\n    // Now push an argument to the function on the stack here\n    lua_pushfoo(L, ...); // Just an example\n    lua_call(L, 1, 0); // Call myfunction with 1 argument, returning 0\n    // We should be stack-neutral at this point, with myfunction on top\n}\n", "lua_getglobal(L, \"test_upvalues\"); // Put factory function on stack\nlua_pushnumber(L, 1); // Argument 'a' (not sure what you are using it for)\nlua_call(L, 1, 1); // Call factory.  Consumes argument 'a', returns function 'increment'\n\nlua_pushvalue(L, -1); // Copies 'increment' on stack\nlua_pushnumber(L, 2); //push a value to increment state\nlua_call(L,1,0); // Calls 'increment' function with increment\n\nlua_pushvalue(L, -1); // Copies 'increment' on stack\nlua_pushnumber(L, 3); //push another value to increment state further\nlua_call(L,1,0); // Calls 'increment' function with increment\n", "increment", "function increment_factory(value)\n  local function get_state()\n    return value\n  end\n  local function increment(x)\n    value = value + x\n  end\n  return get_state, increment\nend\n", "value", "get_state", "increment", "increment", "lua_getglobal(L, \"increment_factory\");\nlua_pushnumber(L, INITIAL_STATE);\nlua_call(L, 1, 2);  // One argument, two returned functions\n\nlua_pushvalue(L, -1); // Copy 'increment'\nlua_pushnumber(L, 2); // Push value to increment\nlua_call(L, 1, 0);    // Call 'increment'\n\nlua_pushvalue(L, -1); // Copy 'increment'\nlua_pushnumber(L, 3); // Push value to increment\nlua_call(L, 1, 0);    // Call 'increment'\n\nlua_pushvalue(L, -2); // Copy 'get_state'\nlua_call(L, 0, 1);    // Call 'get_state'\n\n// Now the current state is on the top of the stack\n"], "url": "https://stackoverflow.com/questions/37679050/how-to-make-table-and-variable-values-to-persist-when-calling-a-lua-function-fro"},
{"title": "How to use the Azure IoT Hub node on ROS?", "time": "2019-05-09 07:52:28Z", "post_content": ["I'm making a project combining robotics and cloud computing.\nBeginning simply, I currently use a raspberry py with Ubuntu and ROS Kinectic, controlling an arduino with some servomotors and sensors. In order to monitor the sensors data, I want to connect my Raspberry to Microsoft Azure Cloud using the Python SDK for Azure IoT Hub.", "This could be done by creating a node that subscribes to the \"sensors\" topics and sends the data received to Azure IoT Hub.", "I found an Azure IoT HuB node provided on Github but can't figure out how to use it or find documentation on it: ", " ", "I wonder if someone has some advice/experience about this node? any documentation?", "Thanks for helping!"], "answer": ["Here are the steps you need to do to connect your raspberry pi to Azure IOT hub using python", "1) Setup your PI", "For setup , you can use this ", " to enable SSH on your pi.", "Enable I2C on your Pi\nUse below link to enable I2C.\n", "2) Connect your sensor with your PI", "3) Download and setup referenced modules", "Clone the client application to local:", "git clone ", "Because the Azure IoT SDKs for Python are wrappers on top of the [SDKs for C][azure-iot-sdk-c], you will need to compile the C libraries if you want or need to generate the Python libraries from source code.", "In the above script, we run ./setup.sh without parameter, so the shell will automatically detect and use the version of python installed (Search sequence 2.7->3.4->3.5). Alternatively, you can use a parameter to specify the python version which you want to use like this: sudo ./setup.sh [--python-version|-p] [2.7|3.4|3.5]", "You can refer the sample code ", ".", "Hope it helps."], "answer_code": ["sudo apt-get install git-core\n", "cd ./iot-hub-python-raspberrypi-client-app\n   sudo chmod u+x setup.sh\n   sudo ./setup.sh\n", "Known build issues:\n\n1.) On building the Python client library (`iothub_client.so`) on Linux devices that have less than **1GB** RAM, you may see build getting **stuck** at **98%** while building `iothub_client_python.cpp` as shown below\n\n``[ 98%] Building CXX object python/src/CMakeFiles/iothub_client_python.dir/iothub_client_python.cpp.o``\n\nIf you run into this issue, check the **memory consumption** of the device using `free -m command` in another terminal window during that time. If you are running out of memory while compiling iothub_client_python.cpp file, you may have to temporarily increase the **swap space** to get more available memory to successfully build the Python client side device SDK library.\n"], "url": "https://stackoverflow.com/questions/56054661/how-to-use-the-azure-iot-hub-node-on-ros"},
