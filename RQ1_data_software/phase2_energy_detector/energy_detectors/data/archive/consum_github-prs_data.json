{"url": "https://github.com/ros/geometry2/pull/425", "pr_title": "Don't insert a TF frame if one of the same timestamp already exists, instead just overwrite it.", "username": "pbeeson", "username_url": "/pbeeson", "issue_status": "Open", "posted_on": "Oct 19, 2019", "pr_contents": ["So, we ran into an issue with ROS on a project (still on kinetic due to legacy robot issues, but this applies to melodic too, so I'll make a similar PR there).", "Generally, if a node is broadcasting TF data based on other incoming frames and/or other information, and something goes wrong, it will stop publishing data.  But we ran into a scenario where something went wrong in a node, and it kept broadcasting the same TF data with the same timestamp, forever.  When this happened, we noticed that all nodes with a tf listener started immediately consuming more and more memory.", "In looking into this, it is clear that when storing an incoming TF in the tf2 listener code, that if a frame between parent and child exists with the same timestamp, that the incoming data is not ignored, nor does it overwrite the previous frame, but it gets inserted next to the existing frame with the same timestamp, so that now there are multiple transforms between the same two frames with the same timestamp.", "I added some debug console outputs and a small publisher node and a node that just makes a tf listener and spins.  This proved that the storage for tf listener does indeed grow infinitely so long as no newer data comes in that is more than max_duration (10 seconds) to force these to be pruned.", "The fix is VERY simple, and has been tested with the stand alone programs. where previously the size of storage_ grew without bound when sending the exact same message in a loop, but now remains size 1 for that parent/child transform."]},
{"url": "https://github.com/ros/geometry2/pull/426", "pr_title": "Don't insert a TF frame if one of the same timestamp already exists, instead just overwrite it.", "username": "pbeeson", "username_url": "/pbeeson", "issue_status": "Open", "posted_on": "Oct 19, 2019", "pr_contents": ["So, we ran into an issue with ROS on a project (still on kinetic due to legacy robot issues, but this applies to melodic too, so here's a melodic PR).", "Generally, if a node is broadcasting TF data based on other incoming frames and/or other information, and something goes wrong, it will stop publishing data. But we ran into a scenario where something went wrong in a node, and it kept broadcasting the same TF data with the same timestamp, forever. When this happened, we noticed that all nodes with a tf listener started immediately consuming more and more memory.", "In looking into this, it is clear that when storing an incoming TF in the tf2 listener code, that if a frame between parent and child exists with the same timestamp, that the incoming data is not ignored, nor does it overwrite the previous frame, but it gets inserted next to the existing frame with the same timestamp, so that now there are multiple transforms between the same two frames with the same timestamp.", "I added some debug console outputs and a small publisher node and a node that just makes a tf listener and spins. This proved that the storage for tf listener does indeed grow infinitely so long as no newer data comes in that is more than max_duration (10 seconds) to force these to be pruned.", "The fix is VERY simple, and has been tested with the stand alone programs. where previously the size of storage_ grew without bound when sending the exact same message in a loop, but now remains size 1 for that parent/child transform.", "Thanks for the patch, I'd like to switch it to drop instead of overwriting. But otherwise it looks good.", "Adding a quick test would also be great to make sure that it keeps working.", "Great thanks for the update it looks great. I'd like to add one more element which is to add a warning that the message is being dropped. Also I'd like to check if we should be returning false from the insertData call if we don't insert. As I think that makes sense since the data wasn't inserted like the other false return case. Maybe the error can be caught one layer higher, but likely we'll have to just print a warning to console.", "OK ", ".  I pushed a change that does accomplish both an error message AND returns false.  Because there are 2 ways false can happen now, and there are 2 different error messages, the easiest was to borrow what other functions do here and pass back an error_message to the higher level.", "This pattern looks good for the long term with passing the, but at first pass it looks like adding the new argument is an ABI breaking change that I'd like to avoid backporting to the existing distros to avoid breaking people.", "I can setup a new ", " branch to retarget this clean implementation and then we can possibly reuse your previous implementation for the backports."], "pr_code": ["noetic-devel"]},
{"url": "https://github.com/jsk-ros-pkg/jsk_roseus/pull/415", "pr_title": "Revert \"[roseus/roseus.cpp] remove trivial error message from get-num-publishers\"", "username": "k-okada", "username_url": "/k-okada", "issue_status": "Open", "posted_on": "Nov 24, 2015", "pr_contents": ["Reverts ", "If this is used for ", " users, I think we should revert this, besides pub/sub system is not designed to use in 'one-shot' manner, system only depends on one-shot may too dangerous and we can use service call or actionlib", "If user calls on-shot-subscriber with unsubscribe t, then we do not need this, and without ubsubscribe it consume heaps and decrease performance."], "pr_code": ["one-shot-subscriber"]},
{"url": "https://github.com/ros/diagnostics/pull/126", "pr_title": "Add DowngradeAnalyser for reporting non-critical errors", "username": "Timple", "username_url": "/Timple", "issue_status": "Open", "posted_on": "Oct 16, 2019", "pr_contents": ["Our robots react on the top-level state of the aggregator. But sometimes we have error which are relevant to know, but not critical at all for operation.", "Therefor the DowngradeAnalyser, still report but just be happy.", "Looks reasonable to me. Something similar we've experimented with is a folding analyzer\u2014 if error X is set, downgrade errors Y and Z, so that there isn't user confusion about which problem to resolve first.", "Obviously the whole business of halting operation over diagnostics is in violation of the diagnostics REP, but it's a pretty common pattern, and awfully convenient given that there isn't any other commonly-supported system in ROS for exposing machine consumable component-level status: ", "I get the concerns indicated in the REP.", "\nBut doing it another way probably means implementing an pretty identical layout.", "But regardless of that, we have a green/yellow/light on our robot which indicates the diagnostics status. If this is red because of known issues, users will become insensible for the red light and the whole idea is gone.", "Does this PR need any more work to get accepted?", "It looks good to me, but I'm not the maintainer of this repo, just an interested third party.", " what do you think of this DowngradeAnalyser next to the DiscardAnalyser?"]},
{"url": "https://github.com/mavlink/mavros/pull/1184", "pr_title": "setpoint_position: accept set-position-target-global-int messages", "username": "rmackay9", "username_url": "/rmackay9", "issue_status": "Open", "posted_on": "Feb 25, 2019", "pr_contents": ["This PR attempts to allow mavros to accept ", " messages from the flight controller or GCS.  This is useful because it can allow a ground station operator to pass the position target to ROS (so that it can do the path planning) without using rviz.", "Below is an image of a test using Mission Planner attached to an ArduPilot Rover with ROS running on a tx2.  I was able to select ROS using MP's upper-left vehicle selector and the right-mouse-button-click and select, \"Fly To Here\".  When mavros consumes the message it converts the latitude, longitude, altitude into ENU and publishes it to /mavros/setpoint_position/cmd_pos topic", "Mavros's topic can be remapped to ", " (", ") so that it can accept the target.", "\n", "While testing I found two issues which I'm hoping the reviewers (", "?) can give me a hand in resolving:", "Anyway, all feedback is welcome, thanks!", "I think this PR is working now and I've done a ", " including a couple of videos (", ", ", ") showing how ROS's path planner can be used as an external navigation source for object avoidance.", ", any chance this can be merged?", "I'm happy to make changes but I probably need some more specific feedback on what needs changing.", "I understand ", "'s comments that we need to be careful of mixing up commands received from a GCS and those received from a vehicle but with ", ", the position target is now coming from the vehicle.", "At the risk of overblowing this minor change, I think it a nice enhancement that allows the flight code to remain in control and only use ROS as a navigation tool when it wants to.", " just because something is working for a particular case doesn't mean that we are doing things thr correct way. There is an API and an implementation logic that should always be respected, unless there's nothing we can do besides messing with the API logic.", "\nAs you can read on my review, I didn't just referenced the mixing of GCS and FCU messages. I also said that ", " prefix messages are sent to the flight controller, ", " coming from it. You can use the counter-part message to get the data from the FCU. Using the ", " messages here is, as I said, breaking the API and the implementation logic of this package. Doesn't make sense to have a group of messages which usage is respecting the API implementation and then have a case where this is change with no aparent reason.", "I'm happy to make changes but I probably need some more specific feedback on what needs changing.", "As a reviewer, I gave a specific feedback on what needs to be changed :) I am happy to help you make this implementation correct (not make it work, cause it seems to be).", "I understand\u00a0", "'s comments that we need to be careful of mixing up commands received from a GCS and those received from a vehicle but with\u00a0these enhancements to ArduPilot Rover, the position target is now coming from the vehicle.", "I wonder if this is correct from the Mavlink API standpoint. Again, ", " prefixes is something you send from a offboard controller to the FCU, not the other way around.", ", thanks again for the feedback.  So the objection is with the SET_TARGET_POSITION_GLOBAL_INT messages coming from the FCU?  I think we haven't had SET_ messages come from the FCU only because we haven't previously tried to make the flight controller the \"master\".  I.e. the flight controller has always been the \"leaf\".. it's been pushed around by upper level controllers within ROS.  I don't really see why there would be a restriction on a flight controller providing a position target to ROS's navigation controller... and if we accept that it is OK for a flight controller to provide a position target to ROS, I don't see how it would get it there unless it used the SET_TARGET_POSITION_GLOBAL_INT message (or the very similar SET_TARGET_POSITION_LOCAL_NED)..", ".. by the way, I'm very happy to having a voice chat somewhere if that would help speed things along.. we could use ", " but skype or hangouts or whatever also works for me.", "\u00a0this is not a matter of what has been tried or not. Is what the API is set to do and changing that paradigm first needs a discussion on the Mavlink API. We can't just assume we can use a message in a certain way just becaude it works. Then we would be using all the messages the way we wanted.", "\nYou can actually read on the message description the following:", "\"Used by an external controller to command the vehicle (manual controller or other system).\"", "If one wants to update the Mavlink protocol API, then one should suggest that same change first, and not apply the message in a certain way that contradicts the API.", "Besides really confusing message usage (with it's description),", "\nI'd like to see that as a separate plugin. That should give more clear separation of commanding setpoints", "\nand \"guidance receiver\" (better to find new name, that will not include ", ", as they treated as \"fly there\" command).", "Also perhaps that should be in extras, as it have very specific usage."], "pr_code": ["SET_", "SET_...", "SET_", "setpoint"], "pr_quotes": ["I'm happy to make changes but I probably need some more specific feedback on what needs changing.", "I understand\u00a0", "'s comments that we need to be careful of mixing up commands received from a GCS and those received from a vehicle but with\u00a0these enhancements to ArduPilot Rover, the position target is now coming from the vehicle.", "\"Used by an external controller to command the vehicle (manual controller or other system).\""], "pr_details_more": ["something seems incorrect with the conversion from lat/lon to ENU.  The north-south values seem to be reversed.  If I click to the north of the vehicle (in mission planner) the target (as viewed in rviz) appears to the south of the vehicle (or more accurately to the right of the vehicle which is facing east).  The East-West calculations seem ok.", "I had to force the z-axis output to zero (see comment, \"force z-axis to zero\") because I'm using a rover and ROS's navigation didn't seem happy unless the target has position of zero."]},
{"url": "https://github.com/ros-industrial/universal_robot/pull/284", "pr_title": "Rename 'world' frame to 'robot_base' in URDF", "username": "davetcoleman", "username_url": "/davetcoleman", "issue_status": "Open", "posted_on": "Jan 4, 2017", "pr_contents": ["The transform between base_link and world is currently located in the ", ":", "as well as a virtual_joint in MoveIt! ", "Which is bad for MoveIt! and complains:", "I propose we rename the fixed link to the world in the URDF so that MoveIt! can still modify the world transform to allow the robot to move. I do ", " think we should remove the fixed link in the URDF because the KDL warns about the base link having inertia.", ", thanks for the contribution.  What do you think about using the ROS-I ", " ", "?", "I do wonder why that frame transform is in the URDF and what might depend on it?  IK Solvers (", " could have hard-coded frames)? Gazebo?(Gazebo ", " a ", " frame and this might be why it's in the URDF)  Any thoughts on these?", "Assuming we can overcome these issues, is there a way to make this change backwards compatible(not sure I can think of one)?", "What do you think about using the ROS-I standard frame base?", "I tried ", " but something else already is using that frame... I just ", " and its the:", "ROS base_link to UR 'Base' Coordinates transform", "I do wonder why that frame transform is in the URDF and what might depend on it?", "No telling, but its a bug with MoveIt! and in general its wrong - the URDF should not assume how the robot is connected to the rest of the world, and what the world frame is. What if you connect it to a table then the \\world? What if the UR5 is on a mobile base, like many are? \\world should be the origin and static, and cannot be assumed to be a static transform to the robot base.", "I think this should be moved to the kinetic branch, since that is a safer place for potentially breaking changes like this.", "I updated the PR to ", ".  I'm in total agreement that the world frame doesn't belong in the URDF, but it's there to support gazebo (I've now verified this).  In order to remove the frame, we would need to create a URDF specific to the gazebo support packages.  We do this in other ROS-I packages, ", ".", "The fixed joint connecting the robot to world was needed for gazebo simulation - without it, the arm kept \"rolling\" around in simulation.", "\nIf you need to put the robot on mobile base or just don't want to use the world jount use the urN.urdf.xacro defining the macro staring with the robot's base link", "Welcome back @ipa-fxm!", "@ipa-fmw that's a good point. If that is the case, the *_moveit_config package is pointing to the wrong URDF ", " because there is still a MoveIt! bug", " and possibly ", "\nQuestion regarding this topic in general...  I understand the issue wrt the UR and the base name collision ", " when I try to use 'base' for the virtual joint in the MoveIt Steup Assistant I still get warnings at launch to the effect of", "\n", "\nIt seems that MoveIt needs the child-link of the virtual joint to the world to be the root link in the robot's URDF?  BUT all the ROS-I URDF's use the standard from ", " that put the artificial \"base\" link as a child of \"base-link\".", "Am I missing something or do the \"base\" definitions need to be flipped to read (child/parent swapped):", "If I modify an industrial-hosted urdf as above by flipping the child/parents of the base-link or equivalent then MoveIt! is happy...", "OR... is this MoveIt! just being too picky wrt the world-to-robot virtual joint?", "I would not use the ", " frame for this at all. It's really just meant to be used to be able to transform points / poses into the Cartesian coord sys of the ind controller, not for anything else.", "For all MoveIt configs that I've created, I've always made ", " (or the equivalent in composite urdfs (for workcells fi)) the child of the ", " virtual joint.", " wrote:", "BUT all the ROS-I URDF's use the standard from ", " that put the artificial \"base\" link as a child of \"base-link\".", "Nitpicky perhaps, but ", " is not an \"artificial base link\". It's an additional frame that allows us to setup a mapping between coordinate frames (ie: TF and the one the ind controller uses). That is also the reason why ", " is not part of the kinematic chain (or doesn't have to be): it's almost a semantic layer on-top of the regular chain that is defined in the xacro model.", "Thanks for the notes ", ", this helps.", "I tried changing to ", " with a few moveit configs and it works as described.  Using the ", " urdfs (urN.urdf.xacro), however, does result in a KDL warning (as Dave alluded to):", "Testing on real hardware there were no apparent issues despite the warning.", "I think that warning is not really a problem in your case. Afaik, it only becomes a problem if we want to ask KDL to calculate dynamics-related things for us, which we don't.", "What I'd like to suggest is to create three additional xacros in ", " that essentially wrap the ", "s and add the ", " link there. Only Gazebo would see it, and it should avoid the problem with the robot floating / flying away.", "Non-Gazebo-based consumers would use the ", "s in ", ", and these would then ", " include the ", " link. Ideally those would also ", " include the ", " bits, but that would probably cause a lot of bw-compatibility issues.", "The MoveIt configs would then use the non-Gazebo versions, which should address the issue reported by ", ".", "just make a duplication of ", " file which with ", ", and then just remove ", ". And just used this file for moveit config, is it OK?", "The changes suggested by this PR are conceptually ok: the urdfs/xacros should not contain a ", " frame. That is something for a top-level/composite xacro to add to the scenegraph.", "However, my suggestion would be to do something similar to what ", " proposes: the ", " frame, if we want to keep it around, should be moved to a wrapper xacro that could be used when the robot is loaded stand-alone (in Gazebo fi).", "In other robot support packages we've done exactly that, where as much of this in delegated to Gazebo support packages (although it's not necessarily Gazebo specific of course). See ", " for an example.", "Doing it this way would introduce a significant breaking change, so that would need to be a conscious decision.", "Tagging this with ", " so if ", " isn't up for this a replacement PR could be submitted by participants.", "Yes I'm not focused on UR efforts right now so would welcome someone else take this on", "Hoping that this will be helpful for other people with this issue I post here the two additional urdf created following the suggestion from ", " and ", "  . I post here the ones created for UR10", " to be added in /ur_description/urdf", " to be added in /ur_description/urdf", "edit  ur10_moveit_config/launch/planning_context.launch referencing the 2 new file just added", "edit  ur10_moveit_config/launch/move_group.launch adding the arg to load the robot_description", "Hoping that this will be helpful for other people with this issue I post here the two additional urdf created following the suggestion from ", " and ", "  . I post here the ones created for UR10", " to be added in /ur_description/urdf", " to be added in /ur_description/urdf", "edit  ur10_moveit_config/launch/planning_context.launch referencing the 2 new file just added", "edit  ur10_moveit_config/launch/move_group.launch adding the arg to load the robot_description", "Hoping that this will be helpful for other people with this issue I post here the two additional urdf created following the suggestion from ", " and ", "  . I post here the ones created for UR10", " to be added in /ur_description/urdf", " to be added in /ur_description/urdf", "edit  ur10_moveit_config/launch/planning_context.launch referencing the 2 new file just added", "edit  ur10_moveit_config/launch/move_group.launch adding the arg to load the robot_description", "Hoping that this will be helpful for other people with this issue I post here the two additional urdf created following the suggestion from ", " and ", "  . I post here the ones created for UR10", " to be added in /ur_description/urdf", " to be added in /ur_description/urdf", "edit  ur10_moveit_config/launch/planning_context.launch referencing the 2 new file just added", "edit  ur10_moveit_config/launch/move_group.launch adding the arg to load the robot_description", "Hoping that this will be helpful for other people with this issue I post here the two additional urdf created following the suggestion from ", " and ", "  . I post here the ones created for UR10", " to be added in /ur_description/urdf", " to be added in /ur_description/urdf", "edit  ur10_moveit_config/launch/planning_context.launch referencing the 2 new file just added", "edit  ur10_moveit_config/launch/move_group.launch adding the arg to load the robot_description", "Hoping that this will be helpful for other people with this issue I post here the two additional urdf created following the suggestion from ", " and ", "  . I post here the ones created for UR10", " to be added in /ur_description/urdf", " to be added in /ur_description/urdf", "edit  ur10_moveit_config/launch/planning_context.launch referencing the 2 new file just added", "edit  ur10_moveit_config/launch/move_group.launch adding the arg to load the robot_description", "Hoping that this will be helpful for other people with this issue I post here the two additional urdf created following the suggestion from ", " and ", "  . I post here the ones created for UR10", " to be added in /ur_description/urdf", " to be added in /ur_description/urdf", "edit  ur10_moveit_config/launch/planning_context.launch referencing the 2 new file just added", "edit  ur10_moveit_config/launch/move_group.launch adding the arg to load the robot_description"], "pr_code": ["  <link name=\"world\" />\n\n  <joint name=\"world_joint\" type=\"fixed\">\n    <parent link=\"world\" />\n    <child link = \"base_link\" />\n    <origin xyz=\"0.0 0.0 0.0\" rpy=\"0.0 0.0 0.0\" />\n  </joint>\n", "    <virtual_joint name=\"fixed_base\" type=\"fixed\" parent_frame=\"world\" child_link=\"base_link\" />\n", "ros.rosconsole_bridge.console_bridge: Skipping virtual joint 'fixed_base' because its child frame 'base_link' does not match the URDF frame 'world'\n", "base", "ur_kinematics", "world", "base", "kinetic-devel", "[ WARN] [1493219645.675131723]: Skipping virtual joint 'fixed_base' because its child frame 'base' does not match the URDF frame 'base_link'", "<link name=\"${prefix}base\" />\n\n<joint name=\"${prefix}base_link-base\" type=\"fixed\">\n  <child link=\"${prefix}base_link\" />\n  <parent link=\"${prefix}base\" />\n  <origin xyz=\"0 0 0\" rpy=\"0 0 0\" />\n</joint>\n", "base", "base_link", "FixedBase", "base", "base", "base_link", "universal_robot", "The root link base_link has an intertia specified in the URDF, but KDL does not support a root link with an inertia.  As a workaround, you can add an extra dummy link to your URDF.\n", "ur_gazebo", "urN.urdf.xacro", "world", "urN_robot.urdf.xacro", "ur_description", "world", "common.gazebo.xacro", "urN.urdf.xacro", "world", "world", "world", "world", "wrid18", "ur10_moveit.urdf.xacro", "<?xml version=\"1.0\"?>\n<robot xmlns:xacro=\"http://ros.org/wiki/xacro\"\n       name=\"ur10\" >\n\n  <!-- common stuff -->\n  <xacro:include filename=\"$(find ur_description)/urdf/common.gazebo.xacro\" />\n\n  <!-- ur10 -->\n  <xacro:include filename=\"$(find ur_description)/urdf/ur10.urdf.xacro\" />\n\n  <!-- arm -->\n  <xacro:ur10_robot prefix=\"\" joint_limited=\"false\"/>\n\n\n\n</robot>\n", "ur10_joint_limited_moveit.urdf.xacro", "<?xml version=\"1.0\"?>\n<robot xmlns:xacro=\"http://ros.org/wiki/xacro\"\n       name=\"ur10\" >\n\n  <!-- common stuff -->\n  <xacro:include filename=\"$(find ur_description)/urdf/common.gazebo.xacro\" />\n\n  <!-- ur10 -->\n  <xacro:include filename=\"$(find ur_description)/urdf/ur10.urdf.xacro\" />\n\n  <!-- arm -->\n  <xacro:ur10_robot prefix=\"\" joint_limited=\"true\"/>\n\n\n\n</robot>\n", "<!-- Load universal robot description format (URDF) -->\n  <group if=\"$(arg load_robot_description)\">\n    <param unless=\"$(arg limited)\" name=\"$(arg robot_description)\" command=\"$(find xacro)/xacro --inorder '$(find ur_description)/urdf/ur10_moveit.urdf.xacro'\" />\n    <param if=\"$(arg limited)\" name=\"$(arg robot_description)\" command=\"$(find xacro)/xacro --inorder '$(find ur_description)/urdf/ur10_joint_limited_moveit.urdf.xacro'\" />\n  </group>\n", "  <include file=\"$(find ur10_moveit_config)/launch/planning_context.launch\">\n    <arg name=\"limited\" value=\"$(arg limited)\" />\n    <arg name=\"load_robot_description\" value=\"true\" />\n  </include>\n", "ur10_moveit.urdf.xacro", "<?xml version=\"1.0\"?>\n<robot xmlns:xacro=\"http://ros.org/wiki/xacro\"\n       name=\"ur10\" >\n\n  <!-- common stuff -->\n  <xacro:include filename=\"$(find ur_description)/urdf/common.gazebo.xacro\" />\n\n  <!-- ur10 -->\n  <xacro:include filename=\"$(find ur_description)/urdf/ur10.urdf.xacro\" />\n\n  <!-- arm -->\n  <xacro:ur10_robot prefix=\"\" joint_limited=\"false\"/>\n\n\n\n</robot>\n", "ur10_joint_limited_moveit.urdf.xacro", "<?xml version=\"1.0\"?>\n<robot xmlns:xacro=\"http://ros.org/wiki/xacro\"\n       name=\"ur10\" >\n\n  <!-- common stuff -->\n  <xacro:include filename=\"$(find ur_description)/urdf/common.gazebo.xacro\" />\n\n  <!-- ur10 -->\n  <xacro:include filename=\"$(find ur_description)/urdf/ur10.urdf.xacro\" />\n\n  <!-- arm -->\n  <xacro:ur10_robot prefix=\"\" joint_limited=\"true\"/>\n\n\n\n</robot>\n", "<!-- Load universal robot description format (URDF) -->\n  <group if=\"$(arg load_robot_description)\">\n    <param unless=\"$(arg limited)\" name=\"$(arg robot_description)\" command=\"$(find xacro)/xacro --inorder '$(find ur_description)/urdf/ur10_moveit.urdf.xacro'\" />\n    <param if=\"$(arg limited)\" name=\"$(arg robot_description)\" command=\"$(find xacro)/xacro --inorder '$(find ur_description)/urdf/ur10_joint_limited_moveit.urdf.xacro'\" />\n  </group>\n", "  <include file=\"$(find ur10_moveit_config)/launch/planning_context.launch\">\n    <arg name=\"limited\" value=\"$(arg limited)\" />\n    <arg name=\"load_robot_description\" value=\"true\" />\n  </include>\n", "ur10_moveit.urdf.xacro", "<?xml version=\"1.0\"?>\n<robot xmlns:xacro=\"http://ros.org/wiki/xacro\"\n       name=\"ur10\" >\n\n  <!-- common stuff -->\n  <xacro:include filename=\"$(find ur_description)/urdf/common.gazebo.xacro\" />\n\n  <!-- ur10 -->\n  <xacro:include filename=\"$(find ur_description)/urdf/ur10.urdf.xacro\" />\n\n  <!-- arm -->\n  <xacro:ur10_robot prefix=\"\" joint_limited=\"false\"/>\n\n\n\n</robot>\n", "ur10_joint_limited_moveit.urdf.xacro", "<?xml version=\"1.0\"?>\n<robot xmlns:xacro=\"http://ros.org/wiki/xacro\"\n       name=\"ur10\" >\n\n  <!-- common stuff -->\n  <xacro:include filename=\"$(find ur_description)/urdf/common.gazebo.xacro\" />\n\n  <!-- ur10 -->\n  <xacro:include filename=\"$(find ur_description)/urdf/ur10.urdf.xacro\" />\n\n  <!-- arm -->\n  <xacro:ur10_robot prefix=\"\" joint_limited=\"true\"/>\n\n\n\n</robot>\n", "<!-- Load universal robot description format (URDF) -->\n  <group if=\"$(arg load_robot_description)\">\n    <param unless=\"$(arg limited)\" name=\"$(arg robot_description)\" command=\"$(find xacro)/xacro --inorder '$(find ur_description)/urdf/ur10_moveit.urdf.xacro'\" />\n    <param if=\"$(arg limited)\" name=\"$(arg robot_description)\" command=\"$(find xacro)/xacro --inorder '$(find ur_description)/urdf/ur10_joint_limited_moveit.urdf.xacro'\" />\n  </group>\n", "  <include file=\"$(find ur10_moveit_config)/launch/planning_context.launch\">\n    <arg name=\"limited\" value=\"$(arg limited)\" />\n    <arg name=\"load_robot_description\" value=\"true\" />\n  </include>\n", "ur10_moveit.urdf.xacro", "<?xml version=\"1.0\"?>\n<robot xmlns:xacro=\"http://ros.org/wiki/xacro\"\n       name=\"ur10\" >\n\n  <!-- common stuff -->\n  <xacro:include filename=\"$(find ur_description)/urdf/common.gazebo.xacro\" />\n\n  <!-- ur10 -->\n  <xacro:include filename=\"$(find ur_description)/urdf/ur10.urdf.xacro\" />\n\n  <!-- arm -->\n  <xacro:ur10_robot prefix=\"\" joint_limited=\"false\"/>\n\n\n\n</robot>\n", "ur10_joint_limited_moveit.urdf.xacro", "<?xml version=\"1.0\"?>\n<robot xmlns:xacro=\"http://ros.org/wiki/xacro\"\n       name=\"ur10\" >\n\n  <!-- common stuff -->\n  <xacro:include filename=\"$(find ur_description)/urdf/common.gazebo.xacro\" />\n\n  <!-- ur10 -->\n  <xacro:include filename=\"$(find ur_description)/urdf/ur10.urdf.xacro\" />\n\n  <!-- arm -->\n  <xacro:ur10_robot prefix=\"\" joint_limited=\"true\"/>\n\n\n\n</robot>\n", "<!-- Load universal robot description format (URDF) -->\n  <group if=\"$(arg load_robot_description)\">\n    <param unless=\"$(arg limited)\" name=\"$(arg robot_description)\" command=\"$(find xacro)/xacro --inorder '$(find ur_description)/urdf/ur10_moveit.urdf.xacro'\" />\n    <param if=\"$(arg limited)\" name=\"$(arg robot_description)\" command=\"$(find xacro)/xacro --inorder '$(find ur_description)/urdf/ur10_joint_limited_moveit.urdf.xacro'\" />\n  </group>\n", "  <include file=\"$(find ur10_moveit_config)/launch/planning_context.launch\">\n    <arg name=\"limited\" value=\"$(arg limited)\" />\n    <arg name=\"load_robot_description\" value=\"true\" />\n  </include>\n", "ur10_moveit.urdf.xacro", "<?xml version=\"1.0\"?>\n<robot xmlns:xacro=\"http://ros.org/wiki/xacro\"\n       name=\"ur10\" >\n\n  <!-- common stuff -->\n  <xacro:include filename=\"$(find ur_description)/urdf/common.gazebo.xacro\" />\n\n  <!-- ur10 -->\n  <xacro:include filename=\"$(find ur_description)/urdf/ur10.urdf.xacro\" />\n\n  <!-- arm -->\n  <xacro:ur10_robot prefix=\"\" joint_limited=\"false\"/>\n\n\n\n</robot>\n", "ur10_joint_limited_moveit.urdf.xacro", "<?xml version=\"1.0\"?>\n<robot xmlns:xacro=\"http://ros.org/wiki/xacro\"\n       name=\"ur10\" >\n\n  <!-- common stuff -->\n  <xacro:include filename=\"$(find ur_description)/urdf/common.gazebo.xacro\" />\n\n  <!-- ur10 -->\n  <xacro:include filename=\"$(find ur_description)/urdf/ur10.urdf.xacro\" />\n\n  <!-- arm -->\n  <xacro:ur10_robot prefix=\"\" joint_limited=\"true\"/>\n\n\n\n</robot>\n", "<!-- Load universal robot description format (URDF) -->\n  <group if=\"$(arg load_robot_description)\">\n    <param unless=\"$(arg limited)\" name=\"$(arg robot_description)\" command=\"$(find xacro)/xacro --inorder '$(find ur_description)/urdf/ur10_moveit.urdf.xacro'\" />\n    <param if=\"$(arg limited)\" name=\"$(arg robot_description)\" command=\"$(find xacro)/xacro --inorder '$(find ur_description)/urdf/ur10_joint_limited_moveit.urdf.xacro'\" />\n  </group>\n", "  <include file=\"$(find ur10_moveit_config)/launch/planning_context.launch\">\n    <arg name=\"limited\" value=\"$(arg limited)\" />\n    <arg name=\"load_robot_description\" value=\"true\" />\n  </include>\n", "ur10_moveit.urdf.xacro", "<?xml version=\"1.0\"?>\n<robot xmlns:xacro=\"http://ros.org/wiki/xacro\"\n       name=\"ur10\" >\n\n  <!-- common stuff -->\n  <xacro:include filename=\"$(find ur_description)/urdf/common.gazebo.xacro\" />\n\n  <!-- ur10 -->\n  <xacro:include filename=\"$(find ur_description)/urdf/ur10.urdf.xacro\" />\n\n  <!-- arm -->\n  <xacro:ur10_robot prefix=\"\" joint_limited=\"false\"/>\n\n\n\n</robot>\n", "ur10_joint_limited_moveit.urdf.xacro", "<?xml version=\"1.0\"?>\n<robot xmlns:xacro=\"http://ros.org/wiki/xacro\"\n       name=\"ur10\" >\n\n  <!-- common stuff -->\n  <xacro:include filename=\"$(find ur_description)/urdf/common.gazebo.xacro\" />\n\n  <!-- ur10 -->\n  <xacro:include filename=\"$(find ur_description)/urdf/ur10.urdf.xacro\" />\n\n  <!-- arm -->\n  <xacro:ur10_robot prefix=\"\" joint_limited=\"true\"/>\n\n\n\n</robot>\n", "<!-- Load universal robot description format (URDF) -->\n  <group if=\"$(arg load_robot_description)\">\n    <param unless=\"$(arg limited)\" name=\"$(arg robot_description)\" command=\"$(find xacro)/xacro --inorder '$(find ur_description)/urdf/ur10_moveit.urdf.xacro'\" />\n    <param if=\"$(arg limited)\" name=\"$(arg robot_description)\" command=\"$(find xacro)/xacro --inorder '$(find ur_description)/urdf/ur10_joint_limited_moveit.urdf.xacro'\" />\n  </group>\n", "  <include file=\"$(find ur10_moveit_config)/launch/planning_context.launch\">\n    <arg name=\"limited\" value=\"$(arg limited)\" />\n    <arg name=\"load_robot_description\" value=\"true\" />\n  </include>\n", "ur10_moveit.urdf.xacro", "<?xml version=\"1.0\"?>\n<robot xmlns:xacro=\"http://ros.org/wiki/xacro\"\n       name=\"ur10\" >\n\n  <!-- common stuff -->\n  <xacro:include filename=\"$(find ur_description)/urdf/common.gazebo.xacro\" />\n\n  <!-- ur10 -->\n  <xacro:include filename=\"$(find ur_description)/urdf/ur10.urdf.xacro\" />\n\n  <!-- arm -->\n  <xacro:ur10_robot prefix=\"\" joint_limited=\"false\"/>\n\n\n\n</robot>\n", "ur10_joint_limited_moveit.urdf.xacro", "<?xml version=\"1.0\"?>\n<robot xmlns:xacro=\"http://ros.org/wiki/xacro\"\n       name=\"ur10\" >\n\n  <!-- common stuff -->\n  <xacro:include filename=\"$(find ur_description)/urdf/common.gazebo.xacro\" />\n\n  <!-- ur10 -->\n  <xacro:include filename=\"$(find ur_description)/urdf/ur10.urdf.xacro\" />\n\n  <!-- arm -->\n  <xacro:ur10_robot prefix=\"\" joint_limited=\"true\"/>\n\n\n\n</robot>\n", "<!-- Load universal robot description format (URDF) -->\n  <group if=\"$(arg load_robot_description)\">\n    <param unless=\"$(arg limited)\" name=\"$(arg robot_description)\" command=\"$(find xacro)/xacro --inorder '$(find ur_description)/urdf/ur10_moveit.urdf.xacro'\" />\n    <param if=\"$(arg limited)\" name=\"$(arg robot_description)\" command=\"$(find xacro)/xacro --inorder '$(find ur_description)/urdf/ur10_joint_limited_moveit.urdf.xacro'\" />\n  </group>\n", "  <include file=\"$(find ur10_moveit_config)/launch/planning_context.launch\">\n    <arg name=\"limited\" value=\"$(arg limited)\" />\n    <arg name=\"load_robot_description\" value=\"true\" />\n  </include>\n"], "pr_quotes": ["What do you think about using the ROS-I standard frame base?", "ROS base_link to UR 'Base' Coordinates transform", "I do wonder why that frame transform is in the URDF and what might depend on it?", "BUT all the ROS-I URDF's use the standard from ", " that put the artificial \"base\" link as a child of \"base-link\"."]},
{"url": "https://github.com/jsk-ros-pkg/jsk_recognition/pull/1295", "pr_title": "[jsk_pcl_ros] Add model to gazebo in model generation script", "username": "mmurooka", "username_url": "/mmurooka", "issue_status": "Open", "posted_on": "Oct 29, 2015", "pr_contents": ["This PR includes commits in ", " and ", " because of dependency on those PRs.", " , if there is no problem, cloud you merge?", "Can you implement it without generating a file?", "Can you implement it without generating a file?", "Do you mean inserting a model into gazebo without generating a urdf file?", "\nI don't know how to do that..", "\nThe following is the usage of the command to spawn model into gazebo,", "\nand we need a model file to spawn.", "In that case, I need to reimplement program by C++ with depending on gazebo.", "\nI think that jsk_pcl_ros should not depend on gazebo, because compiling process might become more complicated and time-consuming.", "\nWhich package should I add? I don't want to add to hrpsys_gazebo_tutorials because it is not related to hrpsys.", "And I'd like to confirm your intention.", "\nWhich program do you think should be removed from PR.", "\nI added three program.", "Generating urdf itself is also meaningful because we can show the model in rviz as RobotModel.", "1 sounds good.", "2 sounds bad idea.", "3 is, I believe, already implemented in gazebo.", " ping,", "\ndo we still need this type of feature ? ( i think yes), if so may be you can re-implement this or you'll find another way to archive this.", "do we still need this type of feature ?", "I don't need this right now, but maybe become to need some day.", "you can re-implement this or you'll find another way to archive this.", "I'm still thinking that it is not bad to generate temporary urdf file to spawn recognized object to gazebo.", "\nHow do you think about that?", "if purpose of this pr is to spawn octtree to the gazebo model, I think we can create spawn node to do that which we can change the shape on realtime, and that would be worth to put in upstream package,."], "pr_code": ["$ gzfactory spawn -h\nThis tool for spawning or deleting models into or from a running Gazebo simulation.\n\n  gzfactory <spawn|delete> [options]\n    spawn   : Spawn new model. Must specify a SDF model file.\n    delete  : Delete existing model. Must specify model name.\n\n\nAllowed options:\n  -h [ --help ]           produce this help message\n  -f [ --sdf ] arg        SDF model file.\n  -w [ --world-name ] arg Name of Gazebo world.\n  -m [ --model-name ] arg Model name.\n  -x [ --pose-x ] arg     set model x position.\n  -y [ --pose-y ] arg     set model y position.\n  -z [ --pose-z ] arg     set model z positione.\n  -R [ --pose-R ] arg     set model roll orientation in radians.\n  -P [ --pose-P ] arg     set model pitch orientation in radians.\n  -Y [ --pose-Y ] arg     set model yaw orientation in radians.\n"], "pr_quotes": ["Can you implement it without generating a file?", "do we still need this type of feature ?", "you can re-implement this or you'll find another way to archive this."]},
{"url": "https://github.com/ros-controls/ros_controllers/pull/149", "pr_title": "Mecanum drive", "username": "arennuit", "username_url": "/arennuit", "issue_status": "Open", "posted_on": "Oct 29, 2014", "pr_contents": ["This is a proposition to integrate a mecanum_drive_controller in ros_controllers. This controller computes the wheels velocities given a desired twist and computes the odometry given the observed wheels velocity.", "This PR relates to issue ", " :  Making room for mecanum_drive_controller.", "There is no unit test yet.", "Also it is not clear yet which twists are expected as input (desired twist) and output (odometry twist). This question is raised in issue ", " and in ROS answers: ", ".", "This code still needs further testing, unit tests and review. I will try to do this when pressure cools down a bit :)", "You can find plenty of tests in diff_drive_controller/test, feel free to refactor them. I'm sure most of them will come very useful to you!", "((It might make sense after you have them to run a coverage tool to see which parts of the code are not being excersized during the tests.))", " You are right, this is exactely how I plan to proceed. Only need to get out of my rush to consolidate all this. Thanks ;)", "Please let us know when the code stops being in flux and is in shape for a review. Adding tests would be a big plus.", "As for the unit tests I agree with you and this is my intention. As for the review, code has been rather stable for a week or two now, but I am still undergoing a few hand tests before making things officially for review ;)", "I'm interested in this, and may be able to contribute to tests and verification in the new year.", "Regarding simulation, how do you expect this to work with Gazebo? Is a simulation of mecanum geometry sufficient to get accurate behaviour, or is it necessary to have a separate plugin which handles the properties of the wheels themselves?", "Related: ", "Glad to see there is interest about this package ;)", "Regarding the simulation, I recommend not to use gazebo for mecanum wheels. I spent a lot of time (I mean A LOT ;)) only to realize gazebo is not quite ready yet for the scenario.", "Basically you have 2 choices for simulating mecanum wheels:", "The solution shown in the link you sent does not simulate the mecanum wheels at all: it is only a kinematic trick allowing to get good looking visuals, but unfortunately you do not get a proper mecanum wheels behavior.", "Because of this we decided to use vrep rather than gazebo, and... well, this turned out to be an excellent decision. Vrep really rocks and does feel professional. I have coded a ros_control / vrep back-end example (equivalent to ros-indigo-gazebo-ros-control, but for vrep rather than gazebo), and it is available here: ", ".", "Regarding your contribution, let me know when you feel ready, I may be able to help ;)", " We're now using your ", " on our prototype ", " units, and we're very happy with it. One thing to note is that it's definitely hard-coded for the rectangular case, and I wonder if the name of the controller should reflect that (ie, that it is not suitable for a platform with six mecanum wheels, or three, or whatever).", "Also, have you coalesced on an ideal approach to simulating mecanum wheels in Gazebo? We've not really been satisfied with any of the existing options.", "Hello Mike,", "And thanks for your feedback. You are right, the fixed number of wheels the controller can handle is not clear from its name (and you certainly have to dig into the doc and code to know about it). I need to come back to the controller's code in a few weeks so this observation may lead to ", " ;)", "Now as for simulating mecanum wheels inside gazebo, there are several ways to do it: 1) ", ": this has turned out to be very resource intensive and is not very stability, or 2) ", " such as ", ": this is the method I decided to go for. I have found using 2) within gazebo required code modifications of gazebo really deeply rooted and too time consuming to meet our R&D constraints. The restriction inside gazebo is described ", " and reported ", ". The workaround I have found is to use vrep (after using it for a few months now, I can say this simulation software highly deserves attention, it really rocks) and the trick mentioned in 2). I have shared some code bridging vrep and ros_controllers ", " (this allows me to use the ", " in a clean and straightforward way).", "\nNow maybe you allow me to take advantage of your message to ask you another question. The mecanum_drive_controller takes a cartesian velocity as input (i.e. the command input in the mecanum_drive_controller is a twist). Now what we want to do is to have our mobile robot follow a cartesian path. We can sample our path in such a way that each sample contains the desired cartesian position, twist (and even acceleration but we do not use the acceleration) of the mobile robot - the desired cartesian path is obviously on a plane. In order to transform the desired path into a velocity command (i.e. the input of the ", ") we use the following command law (this is C++ code):", "[i] * desiredVelocity_inBody[i] + kp_[i] * errorPosition_inBody[i] + kv_[i] * errorVelocity_inBody[i];_", "that is the twist command is made up out of the desired twist + feedback on the position and velocity errors.", "This command law turns out not to be as stable as I had hoped. Hence my question: what method do you use in order to have your robot follow a path precisely? Do you use a command law such as mine, or do you have another method?", "PS: sorry GitHub does not seem to regard my markdown instructions...", " Could you provide the reference for the kinematics equations you're using for the mecanum drive?", "\nIn principle, it seems to be based on ", " by Mackenzie; although some signs differ on ", ", the kinematic parameter ", " seems to be 4 times the ", " on Mackenzie's model, and it seems you don't follow the same wheels enumeration as him, as in ", ". According to it, the name mecanum drive looks appropriate to me.", "\nAnyway, you're applying more equations... (at least in the odometry integration) so I guess you're using another reference.", "Hello ", ", thanks for your feedback (sorry I have only been able to come back to the mecanum controller now. The equations I use come from ", ". The reference frame is indeed different from the one used Mackenzie (which explains the signs difference).", "\nNow I am not sure I understand why you say my ", " is 4 times Mackenzie's ", ". ", " is computed in file ", "\nand is a mean on the 4 wheels, this looks fine to me, no?", "\nAnd to answer your last question, the reason why there is a frame transformation in the odometry is because the odometry computes a body velocity (i.e. a body twist) but a world position (well the position is actually not expressed in the world frame but in the /odom frame, which can be different).", "Also, have you experimented with the quality of the odometry? I have a large drift which I am not happy with: a few centimers on a 10s movement - could be due to the fact I use simulation at 40Hz only. Can you let me know if the results you obtain with the odometry are good enough in your case?", "--- UPDATE ---", "The drift was actually caused by the feedback using odometry measures (there is not much that can be done here: drift is a well know problem of odometry). So I have double checked and I am now confident that the IK and FK bits of code are fine.", "I have thought about a workaround to get useful unit tests despite of not being able to simulate mecanum wheels in gazebo. We could actually design a robot using standard wheels (rather than mecanum wheels) and unit test the mecanum IK and FK (odometry) on this scene.", "\nRunning the scene and the unit test would not show that the controller is working (the behavior would obviously be nonesense) but this unit test could actually show that the behavior of the code does not change over time... which is actually the reason of being unit tests.", "\nWe know that the controller works, if we enforce its behavior does not change over time then we get what we want out of the unit tests, no?", "Note that I'm working on trying to simulate these wheels in Gazebo using directional friction. I believe it's pretty close to functional, though there is some remaining oddball behaviour that I was hoping to get some assistance from the Gazebo devs on: ", "Can't you get some basic testing in place without a dynamic simulator?. Something like comparing controller outputs to known correct results?. Some white-box (implementation aware) testing could maybe exercise different known code paths, or validate different configurations (wheel placement, size, etc.). I typically like to unit test the guts (actual computation) in simple, very targeted tests, and then test the whole system (ROS interfaces) in a higher-level, but less exhaustive integration rostest.", " interesting, keep us informed on how this goes...", " you are right the gazebo-based tests are more ", " than ", ". What you propose is real unit tests (atomic as unit tests should be).", "any chance to see this merged one day ? :)", "I pulled the guts of it into ", ": ", "I'd love to have this merged in; it sounds like lack of tests is the main barrier? ", " do you have any new thoughts on the feasibility of accurate omni-drive simulation in gazebo?", "Re-pasting ", ":", "I really wanted the directional friction solution to work, and sunk a nontrivial amount of time on it, but all that was ~3 years ago and under Gazebo 7. It's possible that the situation is different under Gazebo 8 or 9\u2014 if anyone's interested to pick up the work again, you can start here:", "Basically just switch the plugins in the URDF over to the commented-out ones, launch the sim, and give it a series of twists that command it to move in X and Y. Generally I found that the \"strafe\" commands would seem to work correctly in either direction for a metre or two and then it would seemingly go unstable and spin out of control. I strongly suspect that the plugin was not correctly updating the directional friction as the wheel turned, but without a reliable way to visualize the friction vector in realtime, it seems like a dead end to try to fix it."], "pr_code": ["mecanum_drive_controller", "wheels_k_", "a + b", "ridgeback_control"], "pr_quotes": ["I really wanted the directional friction solution to work, and sunk a nontrivial amount of time on it, but all that was ~3 years ago and under Gazebo 7. It's possible that the situation is different under Gazebo 8 or 9\u2014 if anyone's interested to pick up the work again, you can start here:", "Basically just switch the plugins in the URDF over to the commented-out ones, launch the sim, and give it a series of twists that command it to move in X and Y. Generally I found that the \"strafe\" commands would seem to work correctly in either direction for a metre or two and then it would seemingly go unstable and spin out of control. I strongly suspect that the plugin was not correctly updating the directional friction as the wheel turned, but without a reliable way to visualize the friction vector in realtime, it seems like a dead end to try to fix it."], "pr_details_more": ["you simulate the real mecanics with the many rollers\n", "\n", "you emulate them using this trick: ", "\n", "\n"]},
{"url": "https://github.com/ros-planning/moveit/pull/1165", "pr_title": "Pre-planning start_state fetch is implemented", "username": "tahsinkose", "username_url": "/tahsinkose", "issue_status": "Open", "posted_on": "Oct 26, 2018", "pr_contents": ["Behavior described in ", " is implemented.", "Looks like the tests just timed out, not sure why but I've retriggered it.", "Looks like the tests just timed out, not sure why but I've retriggered it.", "I think, the tests of ", " causes that behavior. The code I have added is pretty much irrelevant with that package, nonetheless the scripts written for continuous integration tries to satisfy its needs too. It might be redundant.", "Why do you think its related to SRDFDom?", "Thank you for contributing ", " ! This is a long-standing issue, as you have seen.", "I added more feedback in a review. It would be great if you could address this.", "\nIf you should not have the cycles for this anymore (pretty please? :)), please tell us, so someone else might take over at some point.", " To be honest, I'm not convinced you proposed the correct approach in ", ", i.e. filling the ", " in a particular capability.", "\nCurrently there are two default planning capabilities, namely ", " and ", ". And there might be much more planning capabilities out there. It doesn't make sense to fix them all to copy the PlanningScene's current ", " into the ", " of the ", " (as suggested by this PR).", "I'm not even convinced we have an issue here at all. According to the documentation in ", ", the ", " should be empty, except the rare case that we explicitly want to plan from a different state than the current one. Hence, it ", " the task of the planner to retrieve the actual start state by merging the PlanningScene's current state with changes specified in ", ". This is in contrast to what has been discussed in ", ".", "Sorry for entering the discussion so late... But I really think, that this issue should be discussed in more depth first.", " ", " Opinions?", "I do see your point ", ".", "\nI remain unsure what is the better way to handle this and, as often, I don't think the situation is as one-sided as you argue.", "I agree with you that the current patch is not ideal and just looked into things a bit more.", "Hence, it ", " the task of the planner to retrieve the actual start state", "This assumes the planner always receives the ", " state from outside, also outside the move_group node context.", "\nNot unreasonable, but also not currently defined as far as I can see.", "\nAlso I would argue, the concept a planner should not have ", " notion of \"current\".", "\nIt only has a concept of \"associated planning scene\". In our case we currently have two related inputs, where one would suffice: The passed in ", " and the ", " possibly as offset.", "\nIt seems ridiculous to expect any consumer to interpret them both when we could aggregate the information before.", "Currently there are two default planning capabilities, namely MoveGroupAction and PlanService. And there might be much more planning capabilities out there", "Just as there are a variety of PlannerManager plugins out there that you have no control over.", "Also please keep in mind that you already patched our capabilities (", ") to ensure a current state is passed in. :-)", "I looked into this a bit more and it is possible to get rid of the", "logic by moving the conditional that interprets the ", " field into ", " and ", ".", "\nThere the PlanningScene object that is passed into ", " can be updated directly.", "\nThis would entail that the ", " field will always be empty when passed to an actual planner instance and the PlanningScene is already updated if requested.", "This is the entirely the other way around from ", " initially.", "Also, this would help to simplify logic in some ", "  that amusingly also parses the scene+start_state and even ", " based on the scene.", "\nI very much believe this should be changed too!*", "  ", "  ", "  What do you think?", " It looks like this grows a bit out of bounds for a WMD contribution, so if you don't feel up to implement the outcome of this discourse (whatever it is going to be), just tell us to take over.", "*btw, these adapters apparently cause some of the remaining \"Found empty JointState message\" warnings people see with MoveIt these days."], "pr_code": ["srdfdom", "start_state", "MoveGroupAction", "PlanService", "RobotState", "start_state", "MotionPlanRequest", "start_state", "MotionPlanRequest::start_state", "PlanningScene", "start_state", "robot_state::robotStateToRobotStateMsg(start_state, goal_with_start_state->request.start_state); \n", "start_state", "execute_MoveCallback_PlanOnly", "planUsingPlanningPipeline", "generatePlan", "start_state", "PlanningRequestAdapters"], "pr_quotes": ["Looks like the tests just timed out, not sure why but I've retriggered it.", "Hence, it ", " the task of the planner to retrieve the actual start state", "Currently there are two default planning capabilities, namely MoveGroupAction and PlanService. And there might be much more planning capabilities out there"], "pr_details_more": [" ", ": Code is auto formatted using ", " Extended the tutorials / documentation, if necessary ", " Include a screenshot if changing a GUI", " Document API changes relevant to the user in the moveit/MIGRATION.md notes", " Created tests, which fail without this PR ", " Decide if this should be cherry-picked to other current ROS branches", " While waiting for someone to review your request, please consider reviewing ", " to support the maintainers"]},
{"url": "https://github.com/ros-industrial/fanuc/pull/284", "pr_title": "WIP: add opw kinematics config files", "username": "JeroenDM", "username_url": "/JeroenDM", "issue_status": "Open", "posted_on": "Dec 24, 2019", "pr_contents": ["To get the ball rolling on issue ", ", I added the kinematic parameters from ", " repository to the support packages.", "For the file name, I went for ", " instead of ", " suggested ", " because it documents that these parameters are related to the robot kinematics.", "As far as the parameter names go, I used the MoveIt specific ", ", again because this documents what the parameters are for, and is backward compatible. But on this one, I'm also open to merge ", " diff and remove the MoveIt specific name.", "Based on the discussion in ", ", I think it would be nice if the MoveIt setup assistant configures the plugin automatically. For example by adding this line to the launch file as suggested ", ":", "Or as an alternative, the setup assistant could copy the parameters to the ", " file.", "I also like this idea of ", "I have another idea I would like to throw in here:", "\nWhile we seem to agree that deriving the parameters directly from URDF might be too difficult/impossible/error-prone ... we could still try to embed the OPW parameters into the URDF. There is support for loading YAML files from xacro, so we could put the parameters in a generic file in config and load this from _macro.xacro. It could then be added as a parameter/child nodes of tool_0 link. The MoveIt kinematics.yaml could then be completely generic again and other consumers like Descartes could either read the yaml/rosparam or be extended to parse the robot_description/urdf as well", "Do you think this idea is worth a prototype?", "I think this should be the responsibility of the MoveIt setup assistant, and not of the plugin.", "If we fixed the way the plugin loads the parameters from the ROS parameter server, we can change as much as we want with the way these parameters end up there...", "What do you think? ", "  ", "\nThe conversation in ", " was a long one, so I'm not sure I processed al the suggestions. :)", "\nI used the recently introduced ", " to check the parameters and then manually copy-pasted them in this repository."], "pr_code": ["opw_kinematics_...", "opw_params_...", "kinematic_solver_", "<rosparam command=\"load\" ns=\"manipulator\" file=\"$(find fanuc_m10ia_support)/config/opw_params_m10ia.yaml\"/>\n", "kinematics.yaml"], "pr_quotes": ["I have another idea I would like to throw in here:", "\nWhile we seem to agree that deriving the parameters directly from URDF might be too difficult/impossible/error-prone ... we could still try to embed the OPW parameters into the URDF. There is support for loading YAML files from xacro, so we could put the parameters in a generic file in config and load this from _macro.xacro. It could then be added as a parameter/child nodes of tool_0 link. The MoveIt kinematics.yaml could then be completely generic again and other consumers like Descartes could either read the yaml/rosparam or be extended to parse the robot_description/urdf as well", "Do you think this idea is worth a prototype?"]},
{"url": "https://github.com/ros-industrial-consortium/descartes/pull/239", "pr_title": "[Windows][melodic-devel] Windows\\MSVC port", "username": "seanyen", "username_url": "/seanyen", "issue_status": "Open", "posted_on": "Jun 7, 2019", "pr_contents": ["This is a change to enable ", " to build by MSVC toolchains with ", " installation.", "The CI failure seems not to do with the change. The error message are as followed:", " Hope I am pinging the correct owner. Any feedback would be appreciated!", "I've restarted the build.", "This is most likely due to the recent key change.", " ", " Sorry to ping again. Any chance to take a look and make this PR move forward?", ": apologies, I was not notified of this for some reason.", "I'm actually not a maintainer here. Most changes look like they're simple enough, so a review should be easy.", ": ping."], "pr_code": ["descartes", "catkin", "TR1", "[[gnu::unused]]", "-std=c++11 -Wall -Wextra", "eigen_conversions", "ikfast_moveit_state_adapter.cpp", ": GPG error: http://packages.ros.org/ros-shadow-fixed/ubuntu bionic InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY F42ED6FBAB17C654\nE: The repository 'http://packages.ros.org/ros-shadow-fixed/ubuntu bionic InRelease' is not signed.\nThe command '/bin/sh -c sed -i \"/^# deb.*multiverse/ s/^# //\" /etc/apt/sources.list     && apt-get update -qq     && apt-get -qq install --no-install-recommends -y         build-essential         python-catkin-tools         python-pip         python-rosdep         python-wstool         ros-melodic-catkin         ssh-client     && apt-get clean     && rm -rf /var/lib/apt/lists/*' returned a non-zero code: 100\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nFunction 'prepare_docker_image' returned with code '100' after 0 min 25 sec\nThe command \"source .ci_config/travis.sh\" exited with 100.\n"], "pr_details_more": ["Fixed installation location to align with ", " guide.", "Added necessary dllexport/dllimport for public interfaces.", "Conditionally include ", " headers by checking C++ standard version supported by compilers.", "Favor C++11 attributes ", ".", "Conditionally add compiler options ", " by checking what compiler is in use.", "Added missing ", " dependency since some cpp files consuming it. (e.g., ", ".)"]},
{"url": "https://github.com/googlecartographer/cartographer_ros/pull/879", "pr_title": "Sanitize node memory consumption with a smaller TF buffer size.", "username": "wally-the-cartographer", "username_url": "/wally-the-cartographer", "issue_status": "Closed", "posted_on": "May 29, 2018", "pr_contents": ["Fixes an (almost) unbounded growth of the TF buffer.", "See the heap profile logs in the PR for more information.", "Noticed this with a profiling session with the ", " heap profiler.", "Tested with the localization demo of ", ", see the README there.", "Added this to the launch XML of the cartographer node in ", ":", "Because of the slow-down by valgrind, rviz and bagplay were removed from the launch file. Once the node was initialized I used ", " for slow data playback.", "The ", " logs are attached, I recommend to open them with the ", " which you can get via ", ".", "With the previous buffer limit (", "), the queue size grows steadily to a peak of more than 25MiB for this dataset. It stays more or less constant at 2MiB with a cache time of ", ".", "This is likely a cause for memory issues as reported e.g. ", ".", "\n", " ", "\nDo you know why this was set to such a high value in the first place?", "I remember stumbling into this as well! Tried running git blame and following the source... it seems this comes from the oldest commit, the initial import of the Cartographer codebase.", " Yes, looks like a constant that was added very early and never questioned again ;)", "Please also update node_grpc_main.cc (and check elsewhere).", "\nGood catch!", " ", " is included. Reverted to a constant of 10 seconds for the buffer time instead of a parameter, which seems reasonably long enough for me. Unless someone complains: ready for merge.", " do you see any issues having the default TF buffer length (10s)?", "seems fine to me. I do not remember why we set the constant so high, probably because we did the TF lookups later in the pipeline at which point we could have fallen arbitrarily behind. Not sure if that was the case though.", " merge", "Merge requested by authorized user gaschler. Merge queue now has a length of 1."], "pr_code": ["demo_toru_localization.launch", "rosbag play --clock hallway_localization.bag --delay 10 --rate 0.1", "massif", "massif-visualizer", "apt", "1e6", "1e1", "node_grpc_main"]},
{"url": "https://github.com/jsk-ros-pkg/jsk_common/pull/778", "pr_title": "[jsk_network_tools] Add ~packet_interval to highspeed streamer to avoid consuming too much bandwidth", "username": "garaemon", "username_url": "/garaemon", "issue_status": "Closed", "posted_on": "Feb 15, 2015", "pr_contents": ["\n            ", "\n          "]},
{"url": "https://github.com/ROBOTIS-GIT/ROBOTIS-THORMANG-MPC/pull/1", "pr_title": "Fixed high CPU consumption due to busy waits", "username": "ROBOTIS-zerom", "username_url": "/ROBOTIS-zerom", "issue_status": "Closed", "posted_on": "May 18, 2016", "pr_contents": ["Reduces CPU usage by 95%", "Thank you for your help."]},
{"url": "https://github.com/start-jsk/rtmros_hironx/pull/349", "pr_title": "[robot-compile-hrpsys.sh] remove downloaded source file, this consumes hdd spaces", "username": "130s", "username_url": "/130s", "issue_status": "Closed", "posted_on": "Mar 31, 2015", "pr_contents": ["\n            ", "\n          "]},
{"url": "https://github.com/autowarefoundation/autoware/pull/1082", "pr_title": "[Feature] incremental voxel update for ndt_mapping", "username": "kitsukawa", "username_url": "/kitsukawa", "issue_status": "Closed", "posted_on": "Feb 15, 2018", "pr_contents": ["incremental voxel update for ndt_mapping  ", "\nThis feature was made by ", ".", "Select \"pcl_anh\" and check  \"incremental voxel update\" from the app button of ndt_mapping.", "launch ndt_mapping.", "Be careful as it will consume a lot of memory when build a large map.", " Thank you for your review.", "\nI think that it will also work with indigo, so please try it.", " Thank you. It worked in my environment."], "pr_details_more": [" Tests", "[] Documentation"]},
{"url": "https://github.com/autowarefoundation/autoware/pull/1098", "pr_title": "Feature/incremental ndt cpu", "username": "kitsukawa", "username_url": "/kitsukawa", "issue_status": "Closed", "posted_on": "Mar 6, 2018", "pr_contents": ["Update the nearest neighbor search using octree. This search is used in getFitnessScore function.", "Select \"pcl_anh\" and check  \"incremental voxel update\" from the app button of ndt_mapping.", "launch ndt_mapping.", "Be careful as it still consumes a lot of memory when build a large map."], "pr_details_more": ["[x ] Tests", " Documentation"]},
{"url": "https://github.com/autowarefoundation/autoware/pull/1006", "pr_title": "Fix crash on NDT mapping gpu", "username": "YamatoAndo", "username_url": "/YamatoAndo", "issue_status": "Closed", "posted_on": "Feb 9, 2018", "pr_contents": ["Fix the illegal gpu memory access error in ndt_mapping gpu, which causes ndt_mapping crash as reported in ", "List related PRs against other branches:", "\n", "\nThe error still happens on my PC.", "\nUbuntu 14.04 + ROS Indigo", "\nGeForce GTX TITAN Black", "\nCUDA 8.0", " Can you check the operation on Ubuntu 16.04?", "\nI tested on Ubuntu 16.04.", "\nit work longer than before,", "\nbut when I made a map for 200 sec, the program ended with out of memory.", "I did it with the same rosbag (moriyama/20150324.bag).", " This program still falls on the way, but it is much faster than PCL's original.", "\nGood Job!", " your error is different from the one reported in ", ", which relates to illegal memory access on the GPU memory. I guess the reason of your error is the kernel at line 780 of the NormalDistributionsTransform.cu requires too many registers per block for launching. Actually I 've never had that error on my pc before, but I'm gonna fix it soon.", " can you tell me how many points are there on the loaded map when the program failed?", " The last message of ndt_mapping is as below :", "So, 19837423 points.", " I see. So your GPU cannot handle around 20 million points.", "\nI am working on a solution for that out of memory problem. By dividing the input point cloud into smaller chunks (around 2 millions points per each) and process them one by one, the out of memory problem can be avoided. However, I am not sure about the accuracy of this implementation method. Though when I ran it on my pc, the output map looks the same as when using CPU, I still need more tests.", " Sounds good. I am looking forward to your improvement.", "Great!  i will test later", "yes. mapping takes too much memory, and can we use 'generator' and write data to tmp files on disk to save memory?", " actually another function called approximate ndt mapping has already solved that problem. It loads a portion of the current map to the main memory instead of all the map. So it consumes less memory than this ndt mapping.", " \uff0chi, dear, yes, I test now.  quite faster than NDT_mapping, but still have many problems .", "\nexample:", "I think it needs to spend time and spirit to optimize.", "and much warning info in the command window. this warning is same as ndt_mapping.", "during handling process, the map data will lost suddenly and disappear, and re-produce the map from scratch. this step I tried many times, and almost in every loop will lost data, I think it's easy to re-produce the issue.", "approximate_ndt_mapping node outputs PCDs in /home/.ros/ directory every certain distance. So the data is not lost.", " , hi, dear, yes, I checked the directory, and find the files.", "\nThanks!", "\nso the disappearance is normal case, right? is it cleaning and releasing the old memory?", " The disappearance is normal. It is releasing the old memory.", "Error: an illegal memory access was encountered /home/xxxx/Autoware-master/ros/src/computing/perception/localization/lib/fast_pcl/ndt_gpu/src/NormalDistributionsTransform.cu 929", "\n(Processed/Input): (1096 / 1519)", "\nError: all CUDA-capable devices are busy or unavailable /home/xxxx/Autoware-master/ros/src/computing/perception/localization/lib/fast_pcl/ndt_gpu/src/MatrixDevice.cu 21", "\n[ndt_mapping_omp-2] process has died [pid 35421, exit code 1, cmd /home/xxxx/Autoware-master/ros/devel/lib/ndt_localizer/ndt_mapping_omp __name:=ndt_mapping_omp __log:=/home/xxxxx/.ros/log/9c9d66fe-1787-11e8-897d-7085c25362be/ndt_mapping_omp-2.log].", "\nlog file: /home/xxxxx/.ros/log/9c9d66fe-1787-11e8-897d-7085c25362be/ndt_mapping_omp-2*.log", "\n`"], "pr_code": ["['roslaunch', 'ndt_localizer', 'ndt_mapping.launch', 'use_imu:=False', 'imu_topic:=/imu_raw', 'use_odom:=False', 'imu_upside_down:=False', 'use_openmp:=False', 'use_fast_pcl:=False', 'use_gpu:=True']\npid=5373\nsched policy=OTHER prio=0\n... logging to /home/kitsukawa/.ros/log/19150b26-eae0-11e7-a35a-d0509946b845/roslaunch-lab-5373.log\nChecking log directory for disk usage. This may take awhile.\nPress Ctrl-C to interrupt\nDone checking log file disk usage. Usage is <1GB.\n\nstarted roslaunch server http://lab:45588/\n\nSUMMARY\n========\n\nPARAMETERS\n* /ndt_mapping/imu_topic: /imu_raw\n* /ndt_mapping/imu_upside_down: False\n* /ndt_mapping/use_fast_pcl: False\n* /ndt_mapping/use_gpu: True\n* /ndt_mapping/use_imu: False\n* /ndt_mapping/use_odom: False\n* /ndt_mapping/use_openmp: False\n* /rosdistro: indigo\n* /rosversion: 1.11.21\n\nNODES\n/\nndt_mapping (ndt_localizer/ndt_mapping)\nqueue_counter (ndt_localizer/queue_counter)\n\nROS_MASTER_URI=http://localhost:11311\n\ncore service [/rosout] found\nuse_imu: 0\nuse_gpu: 1\nuse_openmp: 0\nuse_fast_pcl: 0\nimu_upside_down: 0\nuse_odom: 0\nimu_topic: /imu_raw\n(tf_x,tf_y,tf_z,tf_roll,tf_pitch,tf_yaw): (1.4, 0, 1.415, 0, 0, 0)\nparam_callback\nndt_res: 1\nstep_size: 0.1\ntrans_epsilon: 0.01\nmax_iter: 100\nvoxel_leaf_size: 1\nmin_scan_range: 5\nmin_add_scan_shift: 1\n['rosparam', 'set', '/use_sim_time', 'true']\n['rosbag', 'play', '--clock', '/media/kitsukawa/ssd/academy/log/drive/moriyama/20150324.bag']\npid=5525\nsched policy=OTHER prio=0\nError: too many resources requested for launch /home/kitsukawa/Autoware/ros/src/computing/perception/localization/lib/fast_pcl/ndt_gpu/src/NormalDistributionsTransform.cu 780\nError: invalid device pointer /home/kitsukawa/Autoware/ros/src/computing/perception/localization/lib/fast_pcl/ndt_gpu/src/MatrixDevice.cu 21\n[ndt_mapping-2] process has died [pid 5416, exit code 1, cmd /home/kitsukawa/Autoware/ros/devel/lib/ndt_localizer/ndt_mapping __name:=ndt_mapping __log:=/home/kitsukawa/.ros/log/19150b26-eae0-11e7-a35a-d0509946b845/ndt_mapping-2.log].\nlog file: /home/kitsukawa/.ros/log/19150b26-eae0-11e7-a35a-d0509946b845/ndt_mapping-2*.log\n", "-----------------------------------------------------------------\nSequence number: 87147\nNumber of scan points: 35510 points.\nNumber of filtered scan points: 2135 points.\ntransformed_scan_ptr: 35510 points.\nmap: 19837423 points.\nNDT has converged: 1\nFitness score: 13.0525\nNumber of iteration: 0\n(x,y,z,roll,pitch,yaw):\n(134.534, -171.704, -5.41864, -0.02511, -0.00109023, -0.22433)\nTransformation Matrix:\n0.974943    0.22241 0.00452263    135.713\n-0.222453    0.97463  0.0247207   -171.922\n0.00109023 -0.0251073   0.999684   -3.41797\n0          0          0          1\nshift: 1.69948\n-----------------------------------------------------------------\nError: out of memory /home/yamato_ando/Autoware_fix_ndt_mapping_crash_gpu/ros/src/computing/perception/localization/lib/fast_pcl/ndt_gpu/src/SymmetricEigenSolver.cu 10\nError: invalid device pointer /home/yamato_ando/Autoware_fix_ndt_mapping_crash_gpu/ros/src/computing/perception/localization/lib/fast_pcl/ndt_gpu/src/MatrixDevice.cu 21\n(Processed/Input): (1954 / 2244)\n[ndt_mapping-2] process has died [pid 20950, exit code 1, cmd /home/yamato_ando/Autoware_fix_ndt_mapping_crash_gpu/ros/devel/lib/ndt_localizer/ndt_mapping __name:=ndt_mapping __log:=/home/yamato_ando/.ros/log/380a88be-e930-11e7-a196-309c230ebc74/ndt_mapping-2.log].\nlog file: /home/yamato_ando/.ros/log/380a88be-e930-11e7-a196-309c230ebc74/ndt_mapping-2*.log\n\n"], "pr_quotes": ["during handling process, the map data will lost suddenly and disappear, and re-produce the map from scratch. this step I tried many times, and almost in every loop will lost data, I think it's easy to re-produce the issue."], "pr_details_more": [" Tests", " Documentation"]},
{"url": "https://github.com/AutonomyLab/ardrone_autonomy/pull/31", "pr_title": "Disable hover, complete navdata feedback", "username": "mani-monaj", "username_url": "/mani-monaj", "issue_status": "Closed", "posted_on": "Nov 23, 2012", "pr_contents": [" This pull request does a few things:", "\nTo use this, consult the new launch file, you will see many new flags such as ", ". These flags control whether the contents of this particular navdata message will be published (if not specified, the topics won't be published). For message contents, consult the new messages in ", ", or the SDK file ", ". I am using it to receive additional information about the drone's internal controller (navdata_references) for mathematical modeling purposes.", "\nBy default, the ", ", ", " and ", " topics will always be published. This can be turned off by setting ", " to false in the launch file (if not specified, defaults to true).", "\nAs per ", " 's request, by specifying ", " in the launch file, hover can be disabled (the drone will not try to control to vx=vy=0 when not actively being flown)", "\nSetting ", " in the launch file will force the sending of hover commands. This only has an effect if the hover mode is not disabled.", ": I have been flying with change 1 for about a week now and it works as expected.", "I flew with change 3 and 4 this afternoon after making the change, and they both worked as expected. Recorded flight data shows that the drone never left flying mode (state==3). Visually, the drone also did not stabilize velocity after commanding to 0 body angle, as is expected when not entering hover.", "When running experiments, I've found that it is nice to get the drone in the air using the built in hover mode, then switch to a pure flying mode. I think we should allow for dynamic shifting from hover to flying mode. Maybe a new topic? /ardrone/settings/hover_enable?", "I think developing a subtopic concerning some high level decisions that can be changed mid-flight (aka those not set in the launch file) could be a nice place to put things like this going forward.", "That's a good point. Do you envisage a single topic, for example ", " which takes a message structured something like:", "which when received will cause a configuration update? Thinking about it, this shouldn't be too hard to integrate with the current driver if there is interest?", "I've got to think about it further, but we've got a few options:", "\n-The topic method you mentioned (easier, but a lot of data to pass around constantly)", "\n-Individual topics (more code, but cleaner to use in the nodes)", "\n-Services (like the camera toggle)", "Either way, I think being able to dynamically change these parameters is important. The service method may be nice for the simple state machine bool variables, where the topic method could be better for the floats.", "I guess the 4th option would be to expose the configuration parameters through a dynamic_reconfigure server.", "Regarding setting up individual topics for each configuration parameter, this is actually quite easy. The configuration parameters and all associated loading, setting, etc code are generated through a few lines of C macros (eg ardrone_sdk.cpp:104). Extending this to create an individual topic for each configuration parameter would not be difficult; I'm happy to do this tomorrow if people agree it's the best option? ", ", ", "?", "The above is true at least for all drone parameters.", "For driver parameters such as enabling or disabling hover, I agree perhaps a service call may be the cleanest way, or an empty topic like is used for land/takeoff/reset.", "For ease of implementation I would suggest individual topics. I would be happy to lend my assistance in testing since the code will be quickly generated via the macro.", "Sounds good. It's 1AM here (Z\u00fcrich, Switzerland), so I'm calling it a night. I'll implement these changes first thing in the morning and post an update here when I'm done.", "In my opinion, the ROS standard way to change the configurations on the fly is by using services. This way GUI can be added to manipulate the parameters using tools like ", ". The question is how many parameters should be configurable on the fly. So far, we have ", ", none of them changing a variable in the parameters section.", "I need to take a look into ", " again, as far as I can remember, the package could magically create appropriate services to reconfigure parameters you specify. The only missing piece is a callback function to re-apply changed parameters.", "Dynamic reconfigure is a good method, although I don't think I've ever changed variables outside of the GUI interface.", "Actually, thinking about it this morning, I think the best option would be simply to have an `/ardrone/update_configuration' topic/service, which just reads the ros parameters from the parameter server and then updates if necessary.", "This way we just need to update values on the parameter server and call the topic/service, rather than sending lots of messages and cluttering the service/topic namespace with a service/topic for every configurable parameter.", "Thoughts?", "dynamic_reconfigure is a nice tool for setting such parameters, and actually really easy to integrate.", "\nOnly problem i see is that parameters controlled via dynamic_reconfigure cannot be changed any other way.", "That is, parameters \"managed\" via dynamic_reconfigure will exclusively be changable by the reconfigure_gui, which is kind of anoying (e.g. cannot automatically reset these parameters to default, not even when restarting the custom node).", "Only workaround i know of is using a system call from within the code, which is kind of ugly:", "\n", "These are my recommendations:", "dynamic reconfigure is good for parameters that", "and anybody should have it installed already anyway, because it is one of the default packages or something like that (everybody uses it, and everybody will immediately know how to use it).", "its easy to imprelent, basically u get a callback function which is called every time a parameter is changed, in which u can then directly send the new configuration to the drone.", "I must thank ", " for this valuable contribution to the driver. I really liked (and amazed by) your idea of using auto-generated templates to publish all ", ".", "Although I manually merged your changes to ", ", ", " closed the pull request (without an option to re-open), so we'd better move our discussions about features to a different topic.", "Some issues regarding the auto code generation:", "Good Point, I will change this now to a class member variable. Also thanks for picking up that about the header. I never use this data so I hadn't realized.", "Also, as per your comment in ", "'s discussion, I will change the way hover enable/disable works."], "pr_code": ["enable_navdata_references", "/msg", "navdata_common.h", "navdata", "mag", "imu", "enable_legacy_navdata", "command_disable_hover=true", "command_always_send", "/ardrone/update_configuration", "dynamic_reconfigure", "dynamic_reconfigure", "auto hover", "cmd_vel", "update_configurations", "navdata", "dev-unstable", "Header.stamp", "header.frame_id", "ardrone_autonomy::${item['struct_name']} msg;"], "pr_details_more": ["are only changed interactively by the user", "can be changed at any point in time", "\nso i think for the drone parameters its actually not a bad idea to use it. in particular because it already comes with a nice gui :)"]},
{"url": "https://github.com/AutonomyLab/ardrone_autonomy/pull/26", "pr_title": "Changing parameters will now affect the drone, rather than doing nothing!", "username": "mikehamer", "username_url": "/mikehamer", "issue_status": "Closed", "posted_on": "Nov 9, 2012", "pr_contents": ["I fixed the bug I reported a few days ago, whereby changes to parameters (from CAT_USER, CAT_APPLI, CAT_COMMON) would not affect the drone at all.", "Previously, the drone was setup using a call to ardrone_tool_main(), this is no longer recommended by Parrot. I wrote a custom initialization routine. Now the driver correctly initializes its application and profile config files on the drone. Then, once initialized, the driver pushes the new configuration values to the drone.", "I have tested this in flight. This also solves the problem with onboard tag detection not working (because now you can turn it on and change what it detects!), and allows control parameters of the drone to be adjusted (eg, euler_angle_max, control_vz_max, etc). This allows more aggressive flight with the drone.", "I have also extended the parameter system to allow any user-editable parameter to be changed, rather than the limited set available on the previous driver. For possible keys, see the AR.Drone SDK manual, or the file ", ".", "Thank you very much ", " for the interesting patch. I will test the changes today.", "I merged your proposed changes into ", ". I also modified your code a little bit. My initial tests using the new code were all good. I would really appreciate it if you test the ", " branch yourself a little bit more.", "I also have a question. Is the current ", " file's claim about configurations still hold:", "The parameters listed below are named according to AR-Drone's SDK 2.0 configuration. Unless you set the parameters using ", " or in your ", " file, the default values will be used.", "I also think that that the sample launch file should include values close to default values. I added a warning to the beginning of the file because I think novice users may get confused. What is your opinion?", "I agree about the default launch file, perhaps (see end of this msg), we just include the suggested parameter changes, and set them to the default values? Important is the clear_params=\"true\" though, it took me a while to realise why the drone parameters weren't getting reset to default if removed from the launch file.", "The README is correct, if the parameters are not set using ", " or in a launch file, they will remain at drone default. The list of configurable parameters can however be extended to include all modifiable parameters of the AR.Drone, namely:", "\nnum_version_config", "\nnum_version_mb", "\nnum_version_soft", "\ndrone_serial", "\nsoft_build_date", "\nmotor1_soft", "\nmotor1_hard", "\nmotor1_supplier", "\nmotor2_soft", "\nmotor2_hard", "\nmotor2_supplier", "\nmotor3_soft", "\nmotor3_hard", "\nmotor3_supplier", "\nmotor4_soft", "\nmotor4_hard", "\nmotor4_supplier", "\nardrone_name", "\nflying_time", "\nnavdata_demo", "\nnavdata_options", "\ncom_watchdog", "\nvideo_enable", "\nvision_enable", "\nvbat_min", "\ngyro_offset_thr_x", "\ngyro_offset_thr_y", "\ngyro_offset_thr_z", "\npwm_ref_gyros", "\nosctun_value", "\nosctun_test", "\ncontrol_level", "\neuler_angle_max", "\naltitude_max", "\naltitude_min", "\ncontrol_iphone_tilt", "\ncontrol_vz_max", "\ncontrol_yaw", "\noutdoor", "\nflight_without_shell", "\nautonomous_flight", "\nmanual_trim", "\nindoor_euler_angle_max", "\nindoor_control_vz_max", "\nindoor_control_yaw", "\noutdoor_euler_angle_max", "\noutdoor_control_vz_max", "\noutdoor_control_yaw", "\nflying_mode", "\nhovering_range", "\nflight_anim", "\ntravelling_mode", "\ntravelling_enable", "\nssid_single_player", "\nssid_multi_player", "\nwifi_mode", "\nwifi_rate", "\nowner_mac", "\nultrasound_freq", "\nultrasound_watchdog", "\npic_version", "\ncamif_fps", "\ncodec_fps", "\ncamif_buffers", "\nnum_trackers", "\nvideo_codec", "\nvideo_slices", "\nvideo_live_socket", "\nvideo_storage_space", "\nbitrate", "\nmax_bitrate", "\nbitrate_ctrl_mode", "\nbitrate_storage", "\nvideo_channel", "\nvideo_on_usb", "\nvideo_file_index", "\nleds_anim", "\nenemy_colors", "\ngroundstripe_colors", "\nenemy_without_shell", "\ndetect_type", "\ndetections_select_h", "\ndetections_select_v_hsync", "\ndetections_select_v", "\noutput", "\nmax_size", "\nnb_files", "\nuserbox_cmd", "\nlatitude", "\nlongitude", "\naltitude", "Many of these parameters should probably not be changed... however they are exposed for advanced users to change if they want. Of course, if they are not set, they will remain default.", "Perhaps a good idea would be to provide a list of \"suggested parameters to change\", which would include", "\neuler_angle_max", "\naltitude_max", "\naltitude_min", "\ncontrol_vz_max", "\ncontrol_yaw", "\noutdoor", "\nflight_without_shell", "video_codec", "\nbitrate", "\nmax_bitrate", "\nbitrate_ctrl_mode", "enemy_colors", "\ngroundstripe_colors", "\nenemy_without_shell", "\ndetect_type", "\ndetections_select_h", "\ndetections_select_v_hsync", "\ndetections_select_v", "Of course, the SDK manual details all of these parameters and how they should be changed.", "I'll test the changes and get back to you on Monday with results.", "Cheers,", "\nMike", "Thank you very much for helping me with this.", "One more thing needs to be considered. Not all params are writable, things like firmware version are read only according to SDK2 manual.", ": No problems \u2013 I'm using the driver for my master's project and needed to be able to change drone parameters; these changes are as much beneficial to me, as they are to the other users!", "In ", " you will find a pull request that implements a fix to your comment \u2013 now only the writable subset of parameters will be loaded from ros parameters.", "Now only the following parameters will be checked:", "ardrone_name", "\nnavdata_demo", "\nnavdata_options", "\ncom_watchdog", "\nvideo_enable", "\nvision_enable", "\ncontrol_level", "\neuler_angle_max", "\naltitude_max", "\naltitude_min", "\ncontrol_iphone_tilt", "\ncontrol_vz_max", "\ncontrol_yaw", "\noutdoor", "\nflight_without_shell", "\nautonomous_flight", "\nmanual_trim", "\nindoor_euler_angle_max", "\nindoor_control_vz_max", "\nindoor_control_yaw", "\noutdoor_euler_angle_max", "\noutdoor_control_vz_max", "\noutdoor_control_yaw", "\nflying_mode", "\nhovering_range", "\nflight_anim", "\ntravelling_mode", "\ntravelling_enable", "\nssid_single_player", "\nssid_multi_player", "\nwifi_mode", "\nwifi_rate", "\nowner_mac", "\nultrasound_freq", "\nultrasound_watchdog", "\ncodec_fps", "\nvideo_codec", "\nvideo_slices", "\nvideo_live_socket", "\nbitrate", "\nmax_bitrate", "\nbitrate_ctrl_mode", "\nbitrate_storage", "\nvideo_channel", "\nvideo_on_usb", "\nvideo_file_index", "\nleds_anim", "\nenemy_colors", "\ngroundstripe_colors", "\nenemy_without_shell", "\ndetect_type", "\ndetections_select_h", "\ndetections_select_v_hsync", "\ndetections_select_v", "\noutput", "\nmax_size", "\nnb_files", "\nuserbox_cmd", "\nlatitude", "\nlongitude", "\naltitude", "Regarding testing the dev-unstable branch, I flew for an hour today (multiple flights) using my modifications (above) to the dev-unstable branch and had no issues.", "Thank you very much. I merged  ", " into ", ". The last thing is to update the ", " file. My proposal is to remove all the information in \"parameters\" section. Instead add the fact that every READONLY configuration key listed in SDK2 manual can be configured via ", " using the same name.", "I think the only difference is that, the \"multi-configuration\" is implemented different than what SDK2 recommends. The driver will reset all the configurations (SESSION/APLI/COMMON) to default at startup, then reads ", " to apply the user changes.", "Updating the README with all the available variables to be included in a launch file would be very helpful considering the density of the SDK reference.", "Thanks for the feedback ", ". I'll try and update it this week (at least on my fork). I'll also be adding some more functionality on the navdata side of things.", "For both of these changes I will submit a pull request to this main repository.", " ", " Do you mean listing only the name of all params? I was thinking of including the default values (or maybe a short description) as well, but I am afraid that it will take lots of space in the README file.", " Is the claim in my ", " correct to be included in the README?", " The list I posted in my ", " is the list of all parameters which are checked. The list is all the drone's ", " (not readonly as you stated) parameters.", "I feel either the list or a list with explanation would be helpful for those interested in getting the drone to work under ROS. The more the drivers don't seem like a blackbox, the more contributions to the code I would expect.", "The list I posted in my previous comment is the list of all parameters which are checked. The list is all the drone's Read/Write (not readonly as you stated) parameters.", "Thanks.", "I feel either the list or a list with explanation would be helpful for those interested in getting the drone to work under ROS. The more the drivers don't seem like a blackbox, the more contributions to the code I would expect.", "I will include the small list in the REAMDE. I may create a wiki page for the long list with explanation and default values. In the meantime people can use the SDK2 manual to find the explanations and default values.", "I've just generated the following, perhaps it will be of help for the wiki page. These are all the parameters which are checked, along with their default values, both as defined through macros if applicable, and numerically, as should be entered in a launch file.", " The changes above this comment do a few things:", "\nTo use this, consult the new launch file, you will see many new flags such as ", ". These flags control whether the contents of this particular navdata message will be published (if not specified, the topics won't be published). For message contents, consult the new messages in ", ", or the SDK file ", ". I am using it to receive additional information about the drone's internal controller (navdata_references) for mathematical modeling purposes.", "\nBy default, the ", ", ", " and ", " topics will always be published. This can be turned off by setting ", " to false in the launch file (if not specified, defaults to true).", "\nAs per ", " 's request, by specifying ", " in the launch file, hover can be disabled (the drone will not try to control to vx=vy=0 when not actively being flown)", "\nSetting ", " in the launch file will force the sending of hover commands. This only has an effect if the hover mode is not disabled.", ": I have been flying with change 1 for about a week now and it works as expected.", "I flew with change 3 and 4 this afternoon after making the change, and they both worked as expected. Recorded flight data shows that the drone never left flying mode (state==3). Visually, the drone also did not stabilize velocity after commanding to 0 body angle, as is expected when not entering hover.", " thank you very much for your contributions. Is it possible for you to move the new commits to a new pull request? We will discuss them in the new place.", "My roadmap was to merge the current ", " to ", " today. I guess the new pull request should be sent afterwards.", "I forgot to mention, please create the new pull request to ", " branch.", " is now on ", ", I think anything after that (starting from   ", " ) should be moved to a new pull request.", "New pull request submitted in ", ", lets discuss there."], "pr_code": ["ARDroneLib/Soft/Common/config_keys.h", "dev-unstable", "README", "rosparam", "launch", "rosparam", "dev-unstable", "README", "rosparam", "rosparam", "enable_navdata_references", "/msg", "navdata_common.h", "navdata", "mag", "imu", "enable_legacy_navdata", "command_disable_hover=true", "command_always_send", "dev-unstable", "master", "dev-unstable", "dev-unstable"], "pr_quotes": ["The parameters listed below are named according to AR-Drone's SDK 2.0 configuration. Unless you set the parameters using ", " or in your ", " file, the default values will be used.", "The list I posted in my previous comment is the list of all parameters which are checked. The list is all the drone's Read/Write (not readonly as you stated) parameters.", "I feel either the list or a list with explanation would be helpful for those interested in getting the drone to work under ROS. The more the drivers don't seem like a blackbox, the more contributions to the code I would expect."]},
{"url": "https://github.com/BCLab-UNM/SwarmBaseCode-ROS/pull/122", "pr_title": "Don't accept manual waypoint input for rover's in autonomous mode", "username": "gmfricke", "username_url": "/gmfricke", "issue_status": "Closed", "posted_on": "Nov 2, 2017", "pr_contents": ["Added map to MapData indicating rover modes. When a user clicks in the", "\nmap frame we consult that map and if the mode is not manual then the", "\nclick is ignored. This addresses issue ", " by simply preventing that", "\nsituation.", "1.) Waypoints cannot be placed while in autonomous mode", "\n2.) When placing a waypoint in manual mode, then switching to autonomous mode, then back to manual mode, the rover goes successfully returns to the way point.", "None", "None"]},
{"url": "https://github.com/ekumenlabs/tangobot/pull/41", "pr_title": "Add pluginlib support", "username": "jubeira", "username_url": "/jubeira", "issue_status": "Closed", "posted_on": "Mar 10, 2017", "pr_contents": ["This PR adds the plugin libraries to the static linkage list to use pluginlib support (valid since ", " was merged in ", ").", "\nIt also proposes a fix to the race condition when loading parameters (move_base consumes the parameters before they are loaded into the server without this fix). This ", " ", ".", "Note: ", " can be upstreamed once again and removed from the project once this is merged. This modification doesn't break the original API for the node.", "couple nits then LGTM", "Thanks for the review; comments addressed!", "\nMerging now"], "pr_code": ["ParameterLoaderNode"]},
{"url": "https://github.com/cra-ros-pkg/robot_localization/pull/202", "pr_title": "Start relative poses at target frame", "username": "T045T", "username_url": "/T045T", "issue_status": "Closed", "posted_on": "May 10, 2015", "pr_contents": ["Disclaimer: This is a late-night development to get one specific use case to work. I'd appreciate a review and comment on whether this makes sense for the project at large :)", "The description in ", " describes the change in some detail - basically, with this change, setting a pose input \"relative\" should result in the initial ", " tf being the identity, rather than ", ".", "Thanks for the PR! I'll look this over tonight. I think you're probably correct on this. Thanks again!", "Looking at this a little deeper, I think we may be looking at another case where IMU data has to be handled differently. For example, imagine a robot that drives sideways on the wall. Its world coordinate frame is rotated by 90 degrees from the ground plane. Let's say we are running an instance of ekf_localization_node on some device in the ground plane, and we wanted to know the position of the wall robot w.r.t. the ground plane. If we turn on relative mode, we take the wall vehicle's world frame X-Y position (and remember that since it started sideways, its X-Y plane is the wall itself), and \"removes\" its initial X-Y position. This leaves it in some position in the X-Y frame.", " we need to transform that position so that it's in the X-Z frame, so we apply the target frame transformation. In other words, the order of operations was (1) compute the difference, and (2) apply the transform.", "I think part of the issue you're having is that IMUs always report their orientations w.r.t. the world frame. In our wall robot example, it will start out with a roll of 90, and then after moving around a bit, it will still have a roll of 90. When we take the difference, we get 0 (correct), but then if we apply the transform to the ground plane device running the EKF, it adds 90 again.", "If the IMU were to always report its orientation data w.r.t. its world frame when the robot started, the method I have would work: if the robot on the wall turned so it was driving straight up the wall, its world frame ", " should be 90. In that case, the transformation scheme I'm using would work: first we remove the initial measurement, yielding some yaw value, and then we apply the transformation, so that yaw for the wall vehicle is pitch for the device in the ground plane. Unfortunately, IMUs don't work this way.", "One other thing: you're applying the transform in the wrong direction. You're multiplying the pose times the target frame as the initial measurement, so what you get is this:", "First time we get a measurement (line 2090 in your version):", "Then, for some future measurement at time N (line 2094 in the your version):", "Finally, we apply the target frame transformation again (lines 2270-2284 in your version, but only because we're using IMU data):", "In the end, all you're doing is removing the target frame transformation entirely. While this gives the correct result for what you want, there's a better way. The real issue here - and I concede there is a bug - is that for relative mode measurements of IMU data, we ", " want to apply the orientation correction for the IMU. If your IMU is rolled over and we always \"remove\" that initial orientation, then we have no need to carry out the transform.", "Try this: before line 2248 in your version, you need to insert this:", "Try inserting that and then undoing your changes. Let me know how it goes!", "First off, thanks for taking the time to type this up! I'm not 100%  sure I got everything you talked about, but I think I did for the major points.", "You're obviously right about me removing ", " entirely. It was late and I didn't notice, sorry.", "I haven't tried out your suggestion yet, but I will, as soon as possible.", "\nHowever, I'm not sure that simply omitting ", " for relative measurements is correct, either, if we're taking into account the entire IMU pose, rather than just its orientation;", "\nConsider a long robot with ", " at the front and the IMU mounted way at the back.", "\nIf we lift that back end, but leave the front at the same height, the IMU will report its pitch changing accordingly, but ", " its z coordinate increasing.", "\nBut since we're interested in the movement of ", ", that ist not what we want.", "Instead, I think we need to do something like the following (caveat: it is late again and I'm not sure if the order is correct this time...):", "Does that make sense?", "IMUs don't report position, only orientation (so no Z). They report linear acceleration, which is handled in a different callback function. Also, sensors that provide Z position (i.e., that are not IMUs) are handled differently in the pose callback function.", "However, this does raise an interesting point, which is unrelated to the relative parameter: let's say we have a depth sensor on the rear end of a UUV. The depth sensor is measuring data in the world frame (", " or ", "). Right now, the ", " function attempts to transform pose data from the reported message ", " to the ", " (or whatever your ", " parameter is set to) frame. So for our depth sensor, you would need to define a transform from ", " to the ", " that technically has the transform from ", "->", " in it.  This is wrong, as it won't handle the vehicle's orientation. What we really want to do is this:", "So, for example, if we have a depth sensor that has a X offset of -1.5 meters from the vehicle center, and a +Z offset of 0.5 meters, then when the vehicle is level, then (assuming our depth sensor reads negative values as it gets deeper, so -Z is down), we just subtract the Z offset from the raw measurement to get the vehicle center measurement. However, if the vehicle is pitched down, then the \"true\" vertical offset in the ", " frame is a function of both the X offset ", " the Z offset. Therefore, we need a combination of the ", "->", " transform and the vehicle's current orientation, which is specified by part of the ", "->", " transform.", "Oh. Sorry, I got a bit lost in ", " there and didn't notice translation is handled elsewhere.", "I'm not sure I follow your other point. There should be a transform from ", " to ", " -- possibly published by one of the ", " nodes, and including the vehicle's orientation -- and one from ", " to ", ", most likely as part of the vehicle's URDF. Why wouldn't that TF tree handle orientation?", "For this reason (and I've run into this before):", "Let's say we simply use the ", " method and go from the ", " to ", ". What really happens is that the measurement gets transformed as", "We first apply the ", " to ", " transformation. Let's say that the sensor has an offset of (-1, 0, 0.5) from the vehicle center, and for now, we'll ignore the orientation of the sensor w.r.t. the body frame, as it doesn't matter (a depth sensor rotated on its side reads the same depth). We get a depth measurement from the sensor of 10 meters. Now we apply the ", " transform, and we get a depth of 10.5 meters. Now, let's say our vehicle is at pose (0, 0, 10), with RPY of (0, 0.4, 0). This is the same as the ", " (technically its inverse, but that doesn't matter). We apply that transform and we get (0, 0, 10.5) rotated by an RPY of (0, 0, 0.4), and then we add (0, 0, 10) to it, yielding something like (just making this up) (2.3, 0, 19.2).", "What we lose in this transform chain is the fact that we only want to rotate the linear ", " of the sensor from the vehicle origin, i.e., ", ", but just the 0.5 meters, which we ", " add to 10. Imagine that the vehicle is pitched down 90 degrees. The offset from the sensor to the vehicle centroid is 1 meter (the X offset). Now imagine it's level. The offset from the vehicle centroid is 0.5 meters. In both of these cases, you want to rotate that linear offset (", "->", ") by ", " the vehicle's current orientation (", " the orientation of the ", "->", " transform).", "It should be pretty straightforward to write a few lines of code with ", " that go through these steps.", "I see. So the depth sensor always measures distance straight down?", "\nWe've encountered a similar situation, and yeah, the TF tree isn't perfectly suited to setups like that. We ended up using a virtual link to 'undo' the rotation of ", ", so the measurement frame is always level with the ground.", "For sensors that measure in a straight line from their reference frames (say, a Kinect or laser scanner), this wouldn't be an issue, would it?", "If a sensor is measuring a range to some landmark, then any node that consumes that information should be able to use that information directly. If a sensor is using a Kinect to determine its 3D pose, then  I think this could be an issue. I'm not seeing many responses to my ROS Driver Sig post on this topic, so I'm tempted for now to push any such logic to the driver and just carry out the transforms as I am.", "In any case, can you verify if the code change (reverting your changes and adding my lines) worked? Thanks!", "Worked on this a lot over the weekend. Long story short: I know how to fix this, but it isn't with the code change I gave you here. I just pushed a release, but they haven't been synched yet, so I'll try to fix this and release it ASAP.", "Thanks for continuing to look into this!", "\nI'm afraid I haven't found the time to test your suggestion yet, sorry.", "I think I've addressed this issue in the latest release. It's out for Indigo, and Jade/Hydro will follow whenever the next package sync happens. Let me know if you have any issues when you've updated.", "Just to formally wrap this up: The new release works as expected. Thanks!"], "pr_code": ["odom -> base_link", "base_link -> sensor_frame", "initial_meas = pose_1 * target_trans;\n", "relative_meas = initial_meas^-1 * pose_N \nrelative_meas = (pose_1 * target_trans)^-1 * pose_N\nrelative_meas = target_trans^-1 * pose_1^-1 * pose_N = target_trans^-1 * (pose_1^-1 * pose_N)\n", "final_meas = target_trans * transformed_meas \nfinal_meas = target_trans * target_trans^-1 * (pose_1^-1 * pose_N)\nfinal_meas = pose_1^-1 * pose_N\n", "else if(relative)\n{\n  if(!imuData)\n  {\n    poseTmp.mult(targetFrameTrans, poseTmp);\n  }\n}\n", "targetFrameTrans", "targetFrameTrans", "base_link", "base_link", "initial_meas  = pose_0 * target_transform\nrelative_meas = initial_meas^-1 * pose_N * target_transform\n              = (pose_0 * target_transform)^-1  * pose_N * target_transform\n              = target_transform^-1 * pose_0^-1 * pose_N * target_transform\n", "poseCallback", "frame_id", "ros_filter.cpp", "robot_localization", "tf", "final_meas = odom_base_link_trans * base_link_sensor_trans * measurement\n", "tf"]},
{"url": "https://github.com/EndPointCorp/lg_ros_nodes/pull/205", "pr_title": "lg_sv: Camera timer", "username": "mvollrath", "username_url": "/mvollrath", "issue_status": "Closed", "posted_on": "Apr 29, 2016", "pr_contents": ["Passive SpaceNav message consumption.", "test"]},
{"url": "https://github.com/googlecartographer/cartographer_ros/pull/84", "pr_title": "Do not republish unchanged scan matched point clouds.", "username": "wohe", "username_url": "/wohe", "issue_status": "Closed", "posted_on": "Oct 6, 2016", "pr_contents": ["Before, republishing the point clouds at high frequency caused unnecessary", "\ncomputational load.", "This also fixes an issue seen in RViz:", "\nAfter replaying a bag, point clouds with the same timestamp were continued to", "\nbe published. These were never dropped by the PointCloud2 display leading to", "\nexcessive memory consumption and bad visualization performance."]},
{"url": "https://github.com/googlecartographer/cartographer_ros/pull/510", "pr_title": "OccupancyGrid(pgm and meta) exporter from pbstream", "username": "jihoonl", "username_url": "/jihoonl", "issue_status": "Closed", "posted_on": "Sep 25, 2017", "pr_contents": ["This file loads submaps from pbstream file, generates occupancy grid, and exports map server compatible pgm image and yaml file.", "Note that ", " isn't very optimized. So, any optimization suggestion is welcome. And ", " is copy from old code.", " ", "Why did you not do this in the asset writer?", "Your solution seems to be fundamentally the same as bringing up Cartographer with the map and then running ", ".", "Why did you not do this in the asset writer?", "Because asset writer requires rosbag. Using rosbag is not an option for us.", "Your solution seems to be fundamentally the same as bringing up Cartographer with the map and then running map_server.", "Yes, you are right. It is fundamentally the same as bringing up run cartographer with the map, run map_server, and map_saver. I implemented this exporter because running ", ",  ", ", ", ", ", ", and ", " is too much overhead to extract a single map from a file.", "Because asset writer requires rosbag. Using rosbag is not an option for us.", "Are you saying that you using a different data format to serialize your data to disk? Or that you do not serialize your sensor data?", "Yes, you are right. It is fundamentally the same as bringing up run cartographer with the map, run map_server, and map_saver. I implemented this exporter because running roscore, cartographer, occupancy grid node, map server, and map saver is too much overhead to extract a map from a file.", "What you describing can be expressed in a single launch file - is that not a workable solution.", "Here are my thoughts: The proposed way for ", " is to use the asset writer to generate probability grids (currently blocked on ", ", but we'll fix this probably today). My understanding is that you are unable to use the asset_writer because you do not fully embrace the ROS standards, but swapped out rosbag for a custom implementation. Because of this, the asset writer is unavailable to you and you built this workaround - which should not be used by anybody that uses rosbag. This raises the question why it should be maintained in ", ". If this reasoning is sound, I am uncomfortable with merging this.", "Instead it seems like we should think how you can make use of the assets writer, probably by providing an interface that is not tied to rosbag. Wdyt?", "Here are my thoughts: The proposed way for cartographer_ros is to use the asset writer to generate probability grids (currently blocked on ", ", but we'll fix this probably today). My understanding is that you are unable to use the asset_writer because you do not fully embrace the ROS standards, but swapped out rosbag for a custom implementation. Because of this, the asset writer is unavailable to you and you built this workaround - which should not be used by anybody that uses rosbag. This raises the question why it should be maintained in cartographer_ros. If this reasoning is sound, I am uncomfortable with merging this.", "I don't get why you got an impression that we are using the different format of serialized data. It is just a extracting a data from pbstream file that is already generated. And it is just because we let the robot move lively around to SLAM the environment and generate pbstream file without recording rosbag data(and of coure we can't record rosbag 24/7).", "And since the generated pbstream file already included all submap images and their poses, it was easy to generate a unified version of map just as ", " does.", "Instead it seems like we should think how you can make use of the assets writer, probably by providing an interface that is not tied to rosbag. Wdyt?", "It can be alternative if asset writer can run only with pbstream file. I don't like the fact that I have to maintain another inflexible configuration file though.(e.g I can't dynamically(or via cmd line) configure the exported map file location.)", "I would like to divert your attention to ", ", which might be a bit relevant.", "In case you do not want to save bags, but only the serialized .pbstream state - if inside the trajectory nodes you also had the full range data stored as before (which is the subject of that issue), you would not need the bag at all to write assets, the pbstream would be enough.", " that's something else actually. I am currently pretty happy with not having range data in pbstream and during operation. It reduced the pbstream file size and saved from memory consumption.", " I do not agree that this is relevant in this discussion. ", " is about holding scans in memory or not - essentially having an in-memory-asset-writer-light. While ", " is concerned about converting a Cartographer state with the contained map textures into a PGM + yaml.", "I don't get why you got an impression that we are using the different format of serialized data.", "It was a misunderstanding of your statement that rosbag is not an option. I understand now that you are not interested in an offline process using canned sensor data at all, instead you specifically only want to use Cartographer state to generate PGM and YAML. I then also understand that you do not perceive the asset writer as an option to you.", "I think you would get the best possible quality for your occupancy grid if you were writing a bag with maybe subsampled sensor data and generating your map using the asset writer - it will give equal quality if all submaps are good and higher quality in case any of your submaps in the .pbstream are faulty. It seems to me a more principled approach to your needs that is long term supported and superior in quality.", "But to support precisely the use case you add in this new binary, how about we add a service to the occupancy grid node that writes out a PGM and YAML? In your online example you could just keep the OccupancyGrid node running, but not subscribe to its ", " topic. This means it effectively does not use any CPU. Instead you could call this new rosservice to write out a PGM and YAML occasionally. This would effectively replace ", " for Cartographer and help users of ", " as well. Would that work for you?", "Ok. It looks like I misguided the direction here. I step back and describe the intention behind.", "What I intended with this PR is to introduce a way of introspecting, manipulating and utilising the content of pbstream without bothering cartographer_node(or let's say offline processing without rosbag).  Occupancy grid extraction was the easy first step(and of course to fulfill our usecase) of taking a look the submaps in pbstream. Later, I plan to merge overlapping submaps, drop submaps with no information, and rearrange submap coordination in pbstream.", "I understand that this PR has a very specific use case. But, it was to simplify many hassle processes. Having a rosservice in occupancy grid is just a replacement of map_saver which doesn't reduce # of nodes to run to obtain the same output.", "Do you concern about opening pbstream data besides ", " and ", "? Or what's your concern? If you don't like the exporter, can you accept the PR that only refactors occupancy grid? Then, I can keep the exporter in our package.", "I step back and describe the intention behind.", "This is much appreciated. Without elaborate context some PRs are really hard to evaluate and review sometimes.", "Later, I plan to merge overlapping submaps, drop submaps with no information, and rearrange submap coordination in pbstream.", "This is interesting and also here I'd like to understand why. It seems superior to me to keep some sensor data around and then reassembling a new state using the best SLAM trajectory in the asset_writer instead of rewiring the online state. Maybe we should discuss this in person or on a VC.", "Do you concern about opening pbstream data besides cartographer_node and asset_writer? Or what's your concern?", "This is one of my concerns. The main ones can be summarized by \"no is temporary, yes is forever\" (", "). To make this a bit more fine grained and spell some of them out:", "If you don't like the exporter, can you accept the PR that only refactors occupancy grid? Then, I can keep the exporter in our package.", "Yes, how about for now you pull the drawing code into a library in ", " and make use of it in the occupancy grid node. Then you can have the binary in your own package and we do not bring back the yamlcpp dependency in ROS?", "This is interesting and also here I'd like to understand why. It seems superior to me to keep some sensor data around and then reassembling a new state using the best SLAM trajectory in the asset_writer instead of rewiring the online state. Maybe we should discuss this in person or on a VC.", "We have been using a small size of submap(num_range_data < 30) to reduce errors from odometry. It resulted to have hundreds of submaps with a lot of overlapping area. So, I would like to explore options to manipulate submaps to drop outdated submaps, merge small size submaps, and etc.", "Thanks for the clarification! It helped to understand your concern as a maintainer. I am basically creating PRs that fulfill our use cases and things that can benefit many others as a contributor. Then, letting you to decide how to merge the PR . ", " ", " ", "I think providing an access to ", " is inevitable for later use such as data introspection, and modification. I can't explain in details since I didn't get to the point to investigate this necessity. But, I have a strong feeling about it.", "I was also unsure where it should go. I put it in ", " because pgm and yaml are for ROS though. I agree that the code that touches ", " would be better to go under ", ".", "Yes, how about for now you pull the drawing code into a library in cartographer and make use of it in the occupancy grid node. Then you can have the binary in your own package and we do not bring back the yamlcpp dependency in ROS?", "Ok. sounds good to me. I close this and will open a new PR against cartographer.", "Optimizing the cartographer state, i.e. the .pbstream seems in scope of Cartographer, but it is not done right now. There I'd like to understand the use cases better.", "This is the exact motivation why I worked on full deserialization of Cartographer's state over at the libcartographer repo.", "Thanks for the clarification! It helped to understand your concern as a maintainer. I am basically creating PRs that fulfill our use cases and things that can benefit many others as a contributor. Then, letting you to decide how to merge the PR . \ufffc \ufffc \ufffc", "That is fine of course! I hope that you can understand my reluctance too.  My goal is to get everybody what they need. I am sorry if it might occasionally feel like I am actively standing in the way of progress. That is really not my intention.", "I think it would help if your goals with any code change are made more clear to us earlier, so that we can advise and iterate earlier on potential approaches."], "pr_code": ["WriteOccupancyGridToPgm", "WriteOccupancyGridInfoToYaml", "map_server", "roscore", "cartographer", "occupancy grid node", "map server", "map saver", "cartographer_ros", "cartographer_ros", "occupancy_grid_node", "/map", "map_saver", "cartographer_node", "asset_writer", ".pbstream", ".pbstream", "cartographer", "cartographer", ".pbstream", "cartographer", ".pbstream", "cartographer_ros", ".pbstream", "cartographer"], "pr_quotes": ["Why did you not do this in the asset writer?", "Your solution seems to be fundamentally the same as bringing up Cartographer with the map and then running map_server.", "Because asset writer requires rosbag. Using rosbag is not an option for us.", "Yes, you are right. It is fundamentally the same as bringing up run cartographer with the map, run map_server, and map_saver. I implemented this exporter because running roscore, cartographer, occupancy grid node, map server, and map saver is too much overhead to extract a map from a file.", "Here are my thoughts: The proposed way for cartographer_ros is to use the asset writer to generate probability grids (currently blocked on ", ", but we'll fix this probably today). My understanding is that you are unable to use the asset_writer because you do not fully embrace the ROS standards, but swapped out rosbag for a custom implementation. Because of this, the asset writer is unavailable to you and you built this workaround - which should not be used by anybody that uses rosbag. This raises the question why it should be maintained in cartographer_ros. If this reasoning is sound, I am uncomfortable with merging this.", "Instead it seems like we should think how you can make use of the assets writer, probably by providing an interface that is not tied to rosbag. Wdyt?", "I don't get why you got an impression that we are using the different format of serialized data.", "I step back and describe the intention behind.", "Later, I plan to merge overlapping submaps, drop submaps with no information, and rearrange submap coordination in pbstream.", "Do you concern about opening pbstream data besides cartographer_node and asset_writer? Or what's your concern?", "If you don't like the exporter, can you accept the PR that only refactors occupancy grid? Then, I can keep the exporter in our package.", "This is interesting and also here I'd like to understand why. It seems superior to me to keep some sensor data around and then reassembling a new state using the best SLAM trajectory in the asset_writer instead of rewiring the online state. Maybe we should discuss this in person or on a VC.", "Yes, how about for now you pull the drawing code into a library in cartographer and make use of it in the occupancy grid node. Then you can have the binary in your own package and we do not bring back the yamlcpp dependency in ROS?", "Optimizing the cartographer state, i.e. the .pbstream seems in scope of Cartographer, but it is not done right now. There I'd like to understand the use cases better.", "Thanks for the clarification! It helped to understand your concern as a maintainer. I am basically creating PRs that fulfill our use cases and things that can benefit many others as a contributor. Then, letting you to decide how to merge the PR . \ufffc \ufffc \ufffc"]},
{"url": "https://github.com/googlecartographer/cartographer_ros/pull/337", "pr_title": "Trajectory and Constraints visualization", "username": "jihoonl", "username_url": "/jihoonl", "issue_status": "Closed", "posted_on": "May 15, 2017", "pr_contents": ["Cleaned up a bit and synced with latest code. It still requires ", "Can you retrigger travis? It should work as ", " is already merged", " To save you some time, this pull request does not work with the newest libcartographer anymore, I have made a pull request for you at ", " (where I also fixed that typo)", "So there's good news and bad news.", " The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.", " The bad news is that it appears that one or more commits were authored by someone other than the pull request submitter.  We need to confirm that they're okay with their commits being contributed to this project.  Please have them confirm that here in the pull request.", "Sorry for the delay. Two general comments:", " aren't you inside the ", " on line 182 which already checks that?", "Yes, that is true. I will prepare a fix.", "Maybe this shouldn't be hardcoded to one second (e.g. if you had GPS every 10 seconds, you wouldn't delay all the messages whose processing depends on that transform)?", "I do not understand what you are saying here. To ROS, nothing should change conceptually - we just pull TF messages forward and make sure they are in the buffer already, so that we can always transform everything. All other data still gets published in order and the header->stamp is unchanged. It should make no difference for SLAM down the line.", "Okay. I haven't completely thought out what you're doing here, so my question could be complete nonsense. It's just that when I saw the hardcoded one second constant, I wondered in what scenario this constant might not be adequate.", "By the way, does this mean that the offline node works different from the online node + rosbag play, since it has transforms from one second in the future available in the buffer for interpolation? Sorry if I'm too annoying with my questions, I'm just trying to figure out why exactly you needed this, and what exactly this one second of buffering transforms means.", "No worries.", "Yes, the online node is slightly different - it waits for data and for TF to transform it, so it is more realtime. Data might queue up or get dropped by ROS if the consumer of the data is not quick enough to consume it.", "The offline one is made to run through the data as quickly as SLAM can consume it without ever dropping data - it is very useful for debugging, since you get a result as quickly as possible. The result of offline is very similar to the output of online if no data was dropped.", "The reason I apologized is that my question is a little bit more nitpicky than you realized :) I'm aware that the offline node chews through the bag at its own pace. The exact mechanics of buffering transforms confused me a little.", "The result of offline is very similar to the output of online if no data was dropped.", "This made it clearer for me. In fact, I think this was true previously - ", " transforms were buffered, and as you said, we would get behavior as if there were no sensor data drops due to awaiting transforms. Now, I think the answer is a little bit more complicated, something involving a second. If you could come up with an example where we would need to increase this period of one second, it would make it perfectly clear for me.", "Another reason why this got my interest is that I am playing with instrumenting the SLAM process. The main message loop provided a nice indicator of progress in the bag; this change makes it slightly more difficult to define progress.", "Also, one more minor nit:", "\n", "Because we are always keeping the front of delayed_messages one second behind the current message in the bag, does this mean that we will never process the last second of the bag?", "If you could come up with an example where we would need to increase this period of one second, it would make it perfectly clear for me.", "I do not think there is ever a reason to increase this value. It is just to make sure that TF can transform the buffer. The 1 second is a small margin since we distrust tf2 a bit. You could probably make it smaller, but non-zero. The downside is that 1 second of data at the end of the bag is not processed - no big deal.", "The main message loop provided a nice indicator of progress in the bag; this change makes it slightly more difficult to define progress.", "Actually it was broken before too - only giving feedback on a packet that we were interested in. Feel free to change the way progress is reported.", "The 1 second is a small margin since we distrust tf2 a bit.", "So something like \u03b5 > 0 :) Thanks again.", "It looks like the PR became a mess while rebasing and merging the up-to-date changes. Closing this.", " Have you given up on this? Too bad, I had really wanted to see this merged."], "pr_code": ["cla/google", "if", "while (!delayed_messages.empty() && delayed_messages.front().getTime() < msg.getTime() + ::ros::Duration(1.))"], "pr_quotes": ["The result of offline is very similar to the output of online if no data was dropped.", "If you could come up with an example where we would need to increase this period of one second, it would make it perfectly clear for me.", "The main message loop provided a nice indicator of progress in the bag; this change makes it slightly more difficult to define progress.", "The 1 second is a small margin since we distrust tf2 a bit."]},
{"url": "https://github.com/googlecartographer/cartographer_ros/pull/613", "pr_title": "Add finalize option in write state service.", "username": "jihoonl", "username_url": "/jihoonl", "issue_status": "Closed", "posted_on": "Nov 29, 2017", "pr_contents": ["to support saving of fully optimized state without killing the cartographer node.", "Reopen of ", ".", "Thanks. Can you explain how you want to use this? Should I imagine that you have a robot running SLAM, then you want to save the optimized state to disk. Now your cartographer_node is not consuming sensor data anymore as all trajectories have been finished. What do you do now with that cartographer_node? Do you want to start a new trajectory now and localize against the existing ones?", "Yes, I can start a new trajectory to localize the robot or to extend the existing map without killing the robot. Since our robots should be operatable 24/7, I need to achieve the followings without killing the cartographer_node.", "Also, I had a trouble to find a moment to save the pose graph after SLAM programmatically when optimization takes longer than robot's actual movement. As a cartographer developer, I can more or less tell when to save the map by checking terminal logs(", "). But, I cannot ask the robot operators to read terminal logs to find out when to save the map. Thus, I would like to guarantee that the generated pbstream file is fully optimized by adding ", " option in write_asset service. So that, I can tell robot operators that they can just call this service to generate optmized map.", "Ok, makes sense to me. I am just wondering whether conflating state writing and finishing and running optimization is the right thing. Currently WriteState is a \"const\" functions so to speak. Setting ", " then modifies the state.", "We already have a call to finish a trajectory. I am wondering whether it wouldn't be possible to add a ROS method that forces an optimization and returns when the optimization is done. This way you could", "This way other people might be more easily able to reuse these building blocks in a different way for their own use case. WDYT?", "Sounds good to me. Basically, ", " is a missing step for my usecase.", "Then, how about creating a ros service that finishes all trajectories and call ", "? so I can call ", " afterward. I think issuing ", " via ros service call would make headaches in cartographer level", "Yes I was also wondering about how difficult it is to make such a ", " call. I will take a look tomorrow and get back to you. Otherwise a new call that does finish all trajectories and optimizes sounds good to me.", "Ok. Let me know how your investigation goes.", "FYI, ", " was being evil when I was trying to refactor ", " as we discussed in ", ".", "I agree about adding a ", " service.", "Regarding the work queue, I think that ", " (the method in the pose graph) should be pushed to the work queue as well. I have refactored that in my manual constraints branch, but merging that branch is currently postponed. I am very busy atm, but I was planning on singling out some smaller changes I made there as separate PRs. Refactoring ", " is one of these changes. With that change, it plays well with that check!", "Small update: I spent some time today studying the concurrency in PoseGraph / ConstraintBuilder but I need to think about this a little more before I understand it fully.", " To separate the issues from ", " from this discussion here, could upload a PR where you show how you tried to refactor ", " and ran into the", "check in ", "?", " I looked at your custom constraints PR. Why do you think refactoring ", " in this way is advantageous?", "One thing I guess is that the trimmers are not invoked as part of the current ", ".", "It's really been a while since I wrote that code so I don't remember right now, but my guess would be the following: I have multiple things (such as ", ") which can trigger optimization (no longer just ", "/", " as it's now called), so I refactored that into ", ". ", " didn't play well with that (e.g. if ", " is called a little bit before, or during the final optimization).", "I still have a really tight schedule, but I will get back to this when I can :)", "I am closing this PR since we decided not to take this approach."], "pr_code": ["Remaining work items in queue: xxx", "finalize", "finalize = true", "FinishTrajectory", "RunOptimization", "WriteState", "*2. Issue RunOptimization and wait for it to finish*", "RunFinalOptimization()", "WriteState", "RunOptimization", "force optimization", "RunFinalOptimization", "RunFinalOptimization", "RunFinalOptimization", "HandleWorkQueue()", "CHECK(when_done_ == nullptr);\n", "ConstraintBuilder", "RunFinalOptimization", "void SparsePoseGraph::RunFinalOptimization() {\n{\n  common::MutexLocker locker(&mutex_);\n  AddWorkItem([this]() REQUIRES(mutex_) {\n    optimization_problem_.SetMaxNumIterations(\n      options_.max_num_final_iterations());\n    DispatchOptimization();\n    });\n  WaitForAllComputations();\n}\n", "RunFinalOptimization", "AddCustomConstraint", "AddScan", "AddNode", "DispatchOptimization", "RunFinalOptimization", "AddCustomConstraint"], "pr_details_more": ["create a current pbstream snapshot", "update existing pose graph. (by starting a new trajectory)", "localize the robot.(by starting a pure localization trajectory)"]},
{"url": "https://github.com/googlecartographer/cartographer_ros/pull/411", "pr_title": "support map loading in offline node", "username": "wohe", "username_url": "/wohe", "issue_status": "Closed", "posted_on": "Jul 6, 2017", "pr_contents": ["\n            ", "\n          ", "Not sure whether this makes sense. The offline node consumes data as quickly as possible which means it might fall behind easily and does not produce meaningful output. I think the offline node is really only useful for producing a map as quickly as possible. Opinions? ", "I'm considering the case of merging a new rosbag into an existing serialized data. Assume that the new rosbag discovers a new area that hasn't been visited before. Then, you just want to add a new information into the existing data instead of replaying all rosbags again.", "Or do you have a plan to provide a way of merging two serialized data into one?", "This is my use case too, I would also like to be able load prior mapping knowledge into the offline node.", "That makes sense to me. Let's get this in then.", "Note that right now going this route will not be as good as doing multi trajectory. The reason is that the serialized state does not contain the associated scans for each submap (and no IMU and odometry data of course) - which means that loop closure can only be done from new scans to old maps, not the other way around. And of course the loaded map is frozen in the optimization problem - which could be configurable as well.", "Great! Although, isn't loop closure currently done only between new scans and finished submaps?", "Then maybe add a ", " that ", " should be replaced by some better deserialization of full SLAM state as non-frozen trajectories once possible? And change the parameter name to reflect the intention?", "I added ", " to replace ", " and renamed ", " to ", ". If you have any better suggestion for naming filename, let me know.", " you don't necessarily have to claim the TODO :) The person inside the parentheses is the assigned person, who may not be the same person as the TODO author."], "pr_code": ["TODO", "LoadMap", "TODO", "LoadMap", "map_filename", "pbstream_filename"]},
{"url": "https://github.com/googlecartographer/cartographer_ros/pull/712", "pr_title": "Follow googlecartographer/cartographer#859", "username": "wally-the-cartographer", "username_url": "/wally-the-cartographer", "issue_status": "Closed", "posted_on": "Feb 7, 2018", "pr_contents": ["\n            ", "\n          ", "Sorry, I forgot that the assets writer and the pbstream to map node are also consumers of the proto stream.", " no problem :)", " merge", "Merge requested by authorized user cschuet. Merge queue now has a length of 1."]},
{"url": "https://github.com/googlecartographer/cartographer_ros/pull/912", "pr_title": "Discard proto data in pbstream_map_publisher via RAII.", "username": "wally-the-cartographer", "username_url": "/wally-the-cartographer", "issue_status": "Closed", "posted_on": "Jun 29, 2018", "pr_contents": ["We don't need it after the occupancy grid is drawn.", "\nReduces the memory consumption especially for large maps.", "Thank you", " merge", "Merge requested by authorized user gaschler. Merge queue now has a length of 1."]},
{"url": "https://github.com/jackal/jackal/pull/1", "pr_title": "Initial messages for review.", "username": "mikepurvis", "username_url": "/mikepurvis", "issue_status": "Closed", "posted_on": "Apr 18, 2014", "pr_contents": ["Please review, ", ", ", "Additional MCU msgs/srvs (to be documented on the jackal_firmware ROS wiki page):", "nmea_msgs/Sentence -> raw strings to and from globaltop module", "\nsensor_msgs/IMU -> raw data from accelerometer and gyro", "\ngeometry_msgs/Vector3Stamped -> raw magnetometer data", "\nstd_srvs/Empty -> enable_motors, stop_motors services", "\nstd_msgs/Bool (?) -> wifi connected status", "MCU parameters to be reviewed separately.", "Placeholder for MCU firmware comments:", "\nsensor_msgs/IMU isn't meant for truly raw data. Will need to determine where is best to scale to m/s^2, etc", "I like going from least complex to most. So, PWM, then SPEED, then TORQUE", "The reason it's as it is so that speed is the default. This ordering is \"order of likelihood that it's what you want\".", "If we're always going to be sync'd between motors (which we should be), should we make that clear in this part by explicitly creating left_* and right_* members? IMO it'll be easier than arrays when using CLI tools to monitor", "Based on my experience with Grizzly, it comes in handy having them be arrays rather than named members. It's a lot easier to assign names to the members than it is to produce an array after the fact.", "Is \"drivers_active\" the enabled status? Otherwise known as the \"/ESTOP\"?", "Yes, but I'd prefer to avoid \"estop\" terminology, since it isn't really one.", "If we change the message period, are we going to autoadjust this in in firmware (as in, is it worth the trouble)? Maybe just say \"1 Hz\" for the average", "It's easier to go by publish period than to say that it will always be a 1sec average. (ie, someone changes the period to 5Hz for some reason, then you need to track 5 separate averages-in-progress, ugh)", "For which voltage level? If we're talking all voltages, what's the use you've got in mind? IMO a \"lowest battery voltage\" would be more usable for diagnosing brownouts.", "VBATT\u2014I believe all the currents are being measured upstream of the respective regulators, and it's VBATT feeding the PC and motor drivers. The use is to alert the user of overall system current spikes which may not be visible in the 1Hz averages. I agree that lowest-seen voltage would be useful as well.", "An alternative way to do this would be to define a CurrentFeedback message with avg, peak, variance, whatever, and then use instances of those in this message. I'm not sold either way.", "Where do we report MCU uptime?", "Should be here. That's missing, thanks.", "re: sensor_msgs/IMU", "The intent is that the MCU will publish a data message suitable for consumption by ", ", using standard REP-103 units.", "So, scaling will occur on the MCU, controlled by rosparams."]},
{"url": "https://github.com/jackal/jackal/pull/6", "pr_title": "Robot description for Jackal", "username": "mikepurvis", "username_url": "/mikepurvis", "issue_status": "Closed", "posted_on": "Jul 23, 2014", "pr_contents": ["Description as written is missing mass and inertial numbers. These will need to be filled in correctly when the simulator is developed.", "There's a test rviz launcher committed ", ".", " for review.", "Now includes accessory mount points", "Now includes the navsat and imu links. ", ", ", ", I'd appreciate if either of you could give a quick thumbup on this as well, as you're the end consumers of it.", "LGTM", " ok?", "Didn't get a chance to review. OK with Yan's OK.", "On Wed, Jul 23, 2014 at 4:18 PM, Mike Purvis ", "\nwrote:", " ", " ok?", "\u2014", "\nReply to this email directly or view it on GitHub", "\n", "."], "pr_quotes": [" ", " ok?", "\u2014", "\nReply to this email directly or view it on GitHub", "\n", "."]},
{"url": "https://github.com/ipa320/cob_robots/pull/364", "pr_title": "added scan unifier to bringup layer", "username": "floweisshardt", "username_url": "/floweisshardt", "issue_status": "Closed", "posted_on": "Nov 17, 2015", "pr_contents": ["launch the scan unifier by default", "related PRs:", "\n", "\n", "\n", "tested on cob4-2: scan unifier starts as expected", "LGTM", "LGTM", "I know this is nit-picking...", "\n...but wouldn't it make more sense to add the scan_unifier.launch lines just under the sick_s300.launch section?", "\n...do really all robots need the scan_unifier? Or just those using ipa_navigation? (CPU consumption?)", "Imagine we use a new Laserscanner, then we need extra work to add the scan unifier to the new launch files.", "Formal Review OK", "\nAs PR ", " came later, the launch file for ", " should be added in ", "Missing dependency in cob_bringup/package.xml (will be fixed after merging by @ipa320/owners"], "pr_code": ["cob4-3"]},
{"url": "https://github.com/jsk-ros-pkg/jsk_recognition/pull/68", "pr_title": "add two launch files to run openni on remote machine", "username": "garaemon", "username_url": "/garaemon", "issue_status": "Closed", "posted_on": "Apr 28, 2014", "pr_contents": ["\n            ", "\n          ", " could you explain when we should use this code. not just for me, but for your future.", "I didn't do this commit.", "\nMaybe ", " ?", "In order to view PointCloud with RGB in VGA resolution, we need 2.1Gbps communication.", "These two launch files just transport image rather than pointcloud and construct pointclouds from", "\ndepth and color image on remote machines.", "\nIn this case, we only consumes 250Mbps.", "And \"driver launch file\" sends the non-calibrated images and we calibrate, un-distort and rectify the images on remote machine.", "\nThe vision programs require those rectified images.", "\nIt means that there only few communications between remote and driver machines for each image", "\nand the vision programs does not consume network bandwidth."]},
{"url": "https://github.com/jsk-ros-pkg/jsk_robot/pull/834", "pr_title": "Add throttled RGB / Pointcloud topics for RViZ", "username": "k-okada", "username_url": "/k-okada", "issue_status": "Closed", "posted_on": "Oct 17, 2017", "pr_contents": ["deriving ", "Do not merge this PR now since some old commits are into yet removed.", "Updated.", "please check cpu load when you use this node, we have noticed that nodelet (PCL?) and safe_teleop? take 50% of cpu load and total cpu load becomes over 5.00, we also noticed high cpu load for rosmaster, may be because of service call.", "Cc: ", "added PR to check who is calling service call ", "  ", " Thank you for important information! I'd like to clarify.", "we have noticed that nodelet (PCL?) and safe_teleop? take 50% of cpu load and total cpu load becomes over 5.00", "Are you using this pull-requested branch?", "CC: ", " I briefly inspected  and found that ", " consumes more than 50% CPU resource on idle.", " Sorry the nodelet that consumes CPU is ", " not throttle.", "\nAnd safe_teleop_base node uses downsampled point cloud for updating costmap.", "\nSo it is reasonable to use these CPU resource for safe teleop.", "Now updated this pull request.", "waiting for ", "Now build passed, thanks to ", "!"], "pr_code": ["jsk_topic_tools/LightweightThrottle", "head_camera/depth_downsample/points_downsample", "safe_teleop_base"], "pr_quotes": ["we have noticed that nodelet (PCL?) and safe_teleop? take 50% of cpu load and total cpu load becomes over 5.00"], "pr_details_more": ["Load average is now reduced to about 2.2", "The main reason that CPU load on this pull request is high is ", " subscribes raw point cloud (Not directly related to this pull request)"]},
{"url": "https://github.com/jsk-ros-pkg/jsk_common/pull/1224", "pr_title": "[jsk_topic_tools] Function to warn with no remappings", "username": "k-okada", "username_url": "/k-okada", "issue_status": "Closed", "posted_on": "Nov 12, 2015", "pr_contents": ["\n            ", "\n          ", "this is general comment on topic tools", "\u25c9 Kei Okada", "On Wed, Nov 11, 2015 at 3:29 AM, Kentaro Wada ", "\nwrote:", "You can view, comment on, or merge this pull request online at:", "\nCommit Summary", "File Changes", "Patch Links:", "\u2014", "\nReply to this email directly or view it on GitHub", "\n", ".", "Where is bottleneck? ", "?", "if we use this kind of highspeed message relay tools", "I think this is not relay tool precisely, do you say 'relay' as example?", "and why do you specify the situation ", " ?", "\nbecause each node has to listen ", " topic?", "if we use this kind of highspeed message relay tools, we'd better to choose", "\nc++ client (or roseus which call c++ function internally), or dig into the", "\npython implementation and find the solution. of course, this is the lowest", "\npriority task.", "This is a tool when writing node of python, so we cannot use c++ or roseus as the substitution.", "\nSo if the performance is too critical, I need change rospy implementation. (maybe call c++ function inside it if currently not)", "C++ version for this is ", "do you say 'relay' as example?", "yes, and he said listing topic running at 1000hz may consume CPU power,", "\nwhich may not become a problem on C++ implementation. so I believe you want", "\nto write everything in python, but  you may need to fix this problem at", "\nsome point, not now.", "\u25c9 Kei Okada", "On Wed, Nov 11, 2015 at 10:45 PM, Kentaro Wada ", "\nwrote:", "and why do you specify the situation use_sim_tim:=true ?", "\nbecause each node has to listen /clock topic?", "\u2014", "\nReply to this email directly or view it on GitHub", "\n", "\n."], "pr_code": ["use_sim_tim:=true", "/clock", "% rosparam get /use_sim_time\nERROR: Parameter [/use_sim_time] is not set\n\n% echo \"$(rosnode list | wc -l) , $(rostopic list | wc -l)\"\n94 , 495\n\n% ./warn_no_remap_performance.py\nrospy.get_name\nelapsed: 2e-06 [s]\nrospy.names.resolve_name\nelapsed: 1.1e-05 [s]\n['/spam/input', '/spam/input/a', '/spam/output', '/spam/output/a']\nrospy.names.get_resolved_mappings\nelapsed: 1e-06 [s]\n{}\n"], "pr_quotes": ["You can view, comment on, or merge this pull request online at:", "\nCommit Summary", "File Changes", "Patch Links:", "\u2014", "\nReply to this email directly or view it on GitHub", "\n", ".", "if we use this kind of highspeed message relay tools", "if we use this kind of highspeed message relay tools, we'd better to choose", "\nc++ client (or roseus which call c++ function internally), or dig into the", "\npython implementation and find the solution. of course, this is the lowest", "\npriority task.", "do you say 'relay' as example?", "and why do you specify the situation use_sim_tim:=true ?", "\nbecause each node has to listen /clock topic?", "\u2014", "\nReply to this email directly or view it on GitHub", "\n", "\n."], "pr_details_more": ["using python on this type of topic tools may not a good idea, especially", "\nfor simulated environment; they have significant performance issues", "\ndiscussed at", "\n", "\n(btw, kwc:ken is the original rospy coder, JSK mentor during pr2 program,", "\nand moved to G 1-2 year before they acquired many robotics company.), so", "\nif we use this kind of highspeed message relay tools, we'd better to choose", "\nc++ client (or roseus which call c++ function internally), or dig into the", "\npython implementation and find the solution. of course, this is the lowest", "\npriority task.", "\nCf.", "\n"]},
{"url": "https://github.com/KCL-Planning/ROSPlan/pull/113", "pr_title": "[rosplan_knowledge_base] fix KB node consuming 100 percent cpu", "username": "oscar-lima", "username_url": "/oscar-lima", "issue_status": "Closed", "posted_on": "Jul 16, 2018", "pr_contents": ["KB node is currently consuming 100 percent cpu, this pull request uncomments some lines of code that were there already but for some reason were commented out"]},
{"url": "https://github.com/mavlink/mavros/pull/863", "pr_title": "RPM plugin added for reporting Ardupilot RPM #226 message", "username": "pavloblindnology", "username_url": "/pavloblindnology", "issue_status": "Closed", "posted_on": "Nov 14, 2017", "pr_contents": ["RPM plugin added for reporting Ardupilot RPM # 226 message", "\n", "I believe this is not a commonly used msg. So it should be both blacklisted in ", " and in ", " (in this case, it's because it is not supported).", "\nBtw, and as a curiosity, what would be the intent of this msg on the ROS side?", "The intent is to compute wheel odometry, as currently this feature is very raw in Ardupilot beta firmware.", "Also I'm thinking that this plugin would be useful if it could be written as a plugin to write wheel odometry directly. So it could be called ", " and would publish Odmetry msgs and TF from it based on the RPM msgs received. Something like this: ", " ; ", ".", "\nI can merge this plugin but I think it would be more useful for all the community with land robots using Ardupilot to directly extract the Odometry from MAVROS and the more complex stuff do it on their own. What's your opinion ", "?", "Regarding wheel_odometry. I was thinking about that. Don't know if it's really useful. Wheel odometry is going to be computed inside Ardupilot (and with more precision, because they are using encoder's ticks directly, and not converting them to RPMs, which, I suppose, reduce the accuracy). So, this whole thing was conceived as a temporary solution to add wheel odometry to the robot while it is still raw in Ardupilot firmware, and while all the stuff is connected through Pixhawk. So, finally, for odometry\\positioning people will use either pure Pixhawk with everything done internally, or use ROS with encoders and other stuff connected directly to the main computer (without Pixhawk at all). In both cases there is no need in wheel odometry implemented as a mavros plugin. In 1st case - bcz it's done internally, in 2nd case - bcz you don't use mavros and you need separate node for wheel odometry.", "\nWhat do you think ", "?", "And if still computing wheel odometry inside mavros plugin, then I think better idea is to report it as geometry_msgs/TwistWithCovarianceStamped - which is exactly information wheel encoders produce, and which can be digested to smth like robot_localization. nav_msgs/Odometry is too redundant I think - if fused with some other odometry message - you'll have two different poses with say small covariances - which will result in jumping from one pose to another (this behaviour is described in robot_localization package).", "\nAlso, nav_msgs/Odometry and corresponding TFs need to know initial position and orientation connected with local_position\\global_position origin, to fuse them with other sources. And this will need cooperating with those plugins.", "Regarding wheel_odometry. I was thinking about that. Don't know if it's really useful. Wheel odometry is going to be computed inside Ardupilot (and with more precision, because they are using encoder's ticks directly, and not converting them to RPMs, which, I suppose, reduce the accuracy).", "My question is: so why don't create a msg to use ticks instead of RPM?", "So, this whole thing was conceived as a temporary solution to add wheel odometry to the robot while it is still raw in Ardupilot firmware, and while all the stuff is connected through Pixhawk.", "What would be the output from it after?", "So, finally, for odometry\\positioning people will use either pure Pixhawk with everything done internally, or use ROS with encoders and other stuff connected directly to the main computer (without Pixhawk at all).", "You are right. But in this case, we are creating a solution for something for the current existent structure. Meaning that we are creating a plugin that uses encoders data coming on Mavlink msg to process the wheel odometry. Which IMO is what is useful for this case. Cause as you say, people can use encoders directly connected to the OBC or they can just use the data coming from Ardupilot to compute it directly on the plugin and then use that data for robot localization.", "I think that while it is not done internally, we could add a much more complete plugin which provides useful wheel odometry. I don't think it makes sense to just add a plugin as a RPM parser to ROS when we can extend it to do something more useful.", "which will result in jumping from one pose to another (this behavior is described in robot_localization package).", "If you have a position estimator filter (like a KF) that behavior is avoided. What I suggest is that we add the option to: 1. publish ", ", which gives an estimation of the pos/velocity already; 2. publish ", " as you suggest, to be consumed by a localization package.", "Also, nav_msgs/Odometry and corresponding TFs need to know initial position and orientation connected with local_position\\global_position origin, to fuse them with other sources. And this will need cooperating with those plugins.", "That seems reasonable IMO. We already do that on other plugins.", "So do you think you can tackle the approaches we discussed above? I think it is much more reasonable and will come up to be much more useful to everyone. Also, I would suggest to have a Ardupilot msg that provides the encoder ticks instead of RPM.", " Ok. Let's do it as you suggest. The only concern is about new message for ticks, as it adds burden to throughput.", "And maybe it's better to report not ticks but angle rotated. This will require less modifications to Ardupilot and will save us from specifying CPR in mavros plugin.", "And maybe it's better to report not ticks but angle rotated. This will require less modifications to Ardupilot and will save us from specifying CPR in mavros plugin.", "I leave it to your decision based on what you are implementing and what can be useful to everyone.", "Even more, not angle rotated but distance travelled - saves us specifying the radius.", "Is it better to create new PR or extend this one?", "I think it is better to create a new one.", "Then I'm closing this PR."], "pr_code": ["wheel_odometry", "nav_msgs/Odometry", "geometry_msgs/TwistWithCovarianceStamped"], "pr_quotes": ["Regarding wheel_odometry. I was thinking about that. Don't know if it's really useful. Wheel odometry is going to be computed inside Ardupilot (and with more precision, because they are using encoder's ticks directly, and not converting them to RPMs, which, I suppose, reduce the accuracy).", "So, this whole thing was conceived as a temporary solution to add wheel odometry to the robot while it is still raw in Ardupilot firmware, and while all the stuff is connected through Pixhawk.", "So, finally, for odometry\\positioning people will use either pure Pixhawk with everything done internally, or use ROS with encoders and other stuff connected directly to the main computer (without Pixhawk at all).", "which will result in jumping from one pose to another (this behavior is described in robot_localization package).", "Also, nav_msgs/Odometry and corresponding TFs need to know initial position and orientation connected with local_position\\global_position origin, to fuse them with other sources. And this will need cooperating with those plugins.", "And maybe it's better to report not ticks but angle rotated. This will require less modifications to Ardupilot and will save us from specifying CPR in mavros plugin."]},
{"url": "https://github.com/mavlink/mavros/pull/1102", "pr_title": "add ability to receive vision pose from FCU", "username": "EliaTarasov", "username_url": "/EliaTarasov", "issue_status": "Closed", "posted_on": "Oct 22, 2018", "pr_contents": ["This PR adds handler for ", " msg to be received from FCU.", " what's really the point of this? You send vision pose estimates to the FCU, you don't get it from the FCU. What's the use case here?", " the point is the same as for px4flow plugin. Vision data source may be attached to px4 directly, but in the same time you may need to handle it in ROS.", " the point is the same as for px4flow plugin. Vision data source may be attached to px4 directly, but in the same time you may need to handle it in ROS.", "Can you give a practical example where that already happens? I don't think that's the case. PX4 doesn't process (directly) any kind of vision source. This is usually done by an onboard computer, that ", " the data into the PX4 internals, usually using MAVROS or any other SDK capable of doing that. The idea of the ", " is to be consumed, not to be used as feedback. The PX4Flow case is different, since the flow data is computed on the module itself, and that data can be propagated to the Mavlink stream so to be used on the onboard computer (not a typical usage since you can also use a serial interface for that and use ", "), or even for debugging purposes. The MAVROS side usually runs on the OBC, and it's the OBC that produces the data (after CV algorithms processing pipelines) to be sent and consumed ", ".", " agree. Let's close this."], "pr_code": ["mavlink_vision_position_estimate", "VISION_POSITION_ESTIMATE", "rosserial"], "pr_quotes": [" the point is the same as for px4flow plugin. Vision data source may be attached to px4 directly, but in the same time you may need to handle it in ROS."]},
{"url": "https://github.com/mavlink/mavros/pull/111", "pr_title": "Some changes in setpoint_attitude plugin", "username": "TSC21", "username_url": "/TSC21", "issue_status": "Closed", "posted_on": "Aug 14, 2014", "pr_contents": ["Namely:", "Also you set wrong name for gitconfig (show user VisionEstimatePX4), while better use your name.", "\nAlso you can use ", " for remove mistakes (but it works before push to github).", "My '~/.gitconfig`:", "How do I delete this pull request and try another? I want to do this ok and need your help! I have some more mods to add.", "Please use NAMED log macross.", "What do you mean with this?", "Please check what files included by git status. I add '*~' pattern to git ignore.", "How do I do this?", "This file definitely shouldn't be here.", "Already deleted this.", "Where's the  '~/.gitconfig` so I can change it too?", "Ok I'm going to close it then. Just tell me what do I need to do to get this properly.", "I manually rebase & edit commit info and push it for you. But you must fix logging (use _NAMED variant).", "First: configure git, ", "\nSecond: do changes in branch (not master) ", "But you must fix logging (use _NAMED variant).", "Still don't understand what do you mean with this.", "First: configure git, ", "Did ", " and ", "just now.", "Second: do changes in branch (not master) ", "What's the problem of changing in my ", "? It can be considered as a branch (even though it's a fork) from yours where I do my modifications. Doing a new branch every time I want to do a modification seems to be too much time consuming."], "pr_code": ["Twist", "TwistStamped", "reverse_throttle", "cmd_vel", "git rebase -i <hash>", "[user]\n    name = Vladimir Ermakov\n    email = vooon341@gmail.com\n[color]\n    branch = auto\n    diff = auto\n    pager = true\n    status = auto\n    ui = auto\n[alias]\n    ci = commit\n    st = status\n[push]\n    default = simple\n[merge]\n    tool = meld\n    log = true\n[credential]\n    helper = cache\n[diff]\n    algorithm = patience\n    renames = copies\n", "git config --global user.name \"Nuno Marques\"", "git config --global user.email \"n.marques21@hotmail.com\"", "master"], "pr_quotes": ["Please use NAMED log macross.", "Please check what files included by git status. I add '*~' pattern to git ignore.", "This file definitely shouldn't be here.", "But you must fix logging (use _NAMED variant).", "First: configure git, ", "Second: do changes in branch (not master) "], "pr_details_more": ["changed ", " to ", "added ", " option for throttle control", "use ", " as the same topic to control linear a angular velocities (it's commonly used by controllers)", "added normalization filter to thrust"]},
{"url": "https://github.com/mavlink/mavros/pull/1165", "pr_title": "obstacle_distance: combine sensor distances to fit within distances array", "username": "vooon", "username_url": "/vooon", "issue_status": "Closed", "posted_on": "Feb 1, 2019", "pr_contents": ["This PR attempts to resolve issue ", ".  The issue is that the obstacle_distance plugin does not correctly handle LaserScan messages from sensors with more than 72 distances.  The limitation comes from the ", " which can only carry up to 72 distances.", "The existing code simply truncates the data while the new code instead \"compresses\" the data to fit.  It does this by combining adjacent distances (always choosing the shortest distance).", "So as to ensure as little impact as possible on existing users of this plugin, the new \"compression\" code is separated out with an if/else.", "I've tested this on an Nvidia Tx2 running ROS/mavros with an RPLidarA2.  I modified the RPLidar's node.cpp file to send messages of three sizes: 36 distances, 72 distances and 360 distances.  The distances were hard-coded to always be index * 10cm to make it easy to check the results.", "// testing code to send LaserScan to mavros::obstacle_distance plugin", "\nscan_msg.intensities.resize(36);", "\nscan_msg.ranges.resize(36);", "\nscan_msg.angle_increment = 360 / 36 * M_PI / 180.0f;", "\nfor (size_t i = 0; i < scan_msg.ranges.size(); i++) {", "\nscan_msg.ranges[i] = 0.1f * i;", "\n}", "\nscan_msg.range_max = 0.1f * scan_msg.ranges.size() + 1;", "\npub->publish(scan_msg);", "Below are the testing results showing there are no changes to behaviour when there are 36 or 72 distances.", "\n", "Below are the testing results when more than 72 distances are sent.  In this case 360 distances are sent", "\n", "Any and all feedback more than welcome!", " ", " ", " ", " your reviews are welcomed.", "Looks ok, except some places.", "Do we need to revisit ", " message? (in addition to this - to enable \"proper\" support)?", "I've added two commits which I think addresses the issues raised.  I've retested and confirmed there's no change to the final results.", "As a side note, I didn't want to confuse things but I think that the existing calcs for the \"increment\" (the number of degrees covered by each element in the distances array) is often incorrect by \"1\" due the putting a floating point number into an integer field.", "obstacle.increment = req->angle_increment * RAD_TO_DEG;\t\t\t\t//!< [degrees]", "This is an existing problem so I didn't correct it as part of this PR but I could address it in a follow-up PR if people like.  Basically I think we should use ceil() like in the new code.", ", not to be impatient or anything but maybe it's time to merge to master?", " can I get your approval here?", "In case it helps, I'm very happy to help maintain this little contribution going forward in case problems appear (which I don't think they will).", "Did someone test whether this breaks the collision prevention capabilites of PX4/avoidance?", ", i'd be surprised if someone had done that testing (I'm not in a position to do that) but I have proven that the output before and after this change is the same for cases where the source sensor produces less than 72 slots.  I cannot imagine that existing consumers use more than 72 slots or they would surely have noticed the error this PR fixes.", "Good enough for me. The current avoidance is broken for the most recent mavros anyway (Fix ready in ", ")"], "pr_quotes": ["// testing code to send LaserScan to mavros::obstacle_distance plugin", "\nscan_msg.intensities.resize(36);", "\nscan_msg.ranges.resize(36);", "\nscan_msg.angle_increment = 360 / 36 * M_PI / 180.0f;", "\nfor (size_t i = 0; i < scan_msg.ranges.size(); i++) {", "\nscan_msg.ranges[i] = 0.1f * i;", "\n}", "\nscan_msg.range_max = 0.1f * scan_msg.ranges.size() + 1;", "\npub->publish(scan_msg);"]},
{"url": "https://github.com/PilzDE/pilz_industrial_motion/pull/38", "pr_title": "Convert Eigen::Affine3d -> Eigen::Isometry3d.", "username": "clalancette", "username_url": "/clalancette", "issue_status": "Closed", "posted_on": "Dec 11, 2018", "pr_contents": ["This is to keep up with the recent changes in moveit", "\n(", ") and", "\nkeep this package building in melodic (it is currently failing; see ", ")", " FYI (I think you've been doing most of this work in MoveIt proper)", "MoveIt migrated from Eigen::Affine3d to more efficient Eigen::Isometry3d.", "\nTravis seems to fail due to an unrelated issue.", "Thank you for bringing this up and thanks for your pull request.", "The travis failure seems to be due to the ", " with the latest moveit upload as well. So we'll have to re-generate the plugin from the upstream template and do a binary release.", "Re-generating the ikfast plugin will not resolve the issue. The ikfast generator is not yet adapted to the new IK plugin API (", ": reminder for ", ").", "\nI think, for now, it will suffice to accept deprecation warnings and remove \"-Werror=deprecated-declarations\" in the ikfast build.", "\nIf you prefer to cleanup the ikfast API, please consult the ", " for hints and ", " for an example.", " If you don't mind disabling warnings for the time being, that would be ideal.  I'd like to do a Melodic sync soon (next week), but the regression on these packages (via the MoveIt! changes) is holding that back.  Let me know what you want to do, and thanks for your effort.", " Thanks for taking care of the release. Yes, we'll try a test build and push a point release of our packages tomorrow morning. So a melodic sync next tuesday (allowing us a quick test of the binaries on monday) should be feasible."]},
{"url": "https://github.com/PX4/avoidance/pull/215", "pr_title": "Initialize node handle in main function", "username": "nicovanduijn", "username_url": "/nicovanduijn", "issue_status": "Closed", "posted_on": "Mar 28, 2019", "pr_contents": ["This PR initializes the node handle in the main function.", "This enables multiple objects to consume node handle within the local planner object in the constructor.", "This is a nice refactor, let's get it rebased, SITL tested and merged.", "Rebased!", "I'm trying to run a rebased version in SITL but it won't start. Can you take a look?", " It seems like the change of the ", " name space broke subscribing to the correct topics. I have made a fix.", "I've rebased this, but I'm still getting the same error as before, the avoidance system won't start on SITL ", " Give me a ping, let's discuss what's happening here.", " The refactor on initializing ", " was causing the problem.", "I have reverted the changes regarding this part. I will try to look more into what is going on with the ", ", but would like to conclude this PR here", "Also tested in SITL, works as normal!"], "pr_code": ["node handle", "dynamic_reconfigure", "dynamic_reconfigure"]},
{"url": "https://github.com/PX4/avoidance/pull/279", "pr_title": "Transform pointclouds parallel", "username": "jkflying", "username_url": "/jkflying", "issue_status": "Closed", "posted_on": "Apr 3, 2019", "pr_contents": ["Transforming cloudpoint consume too much time,especially for multi-cameras,", "\nso create threads to transform cloudpoints parallel.", "Hi ", " , have you done any benchmarking that you can share with us on how this improves speed? Transforming the cloud is pretty fast (although definitely a slow part of the algorithm), and I just want to make sure the overhead of context switching and running the multiple threads is worth the speed gain.", "Hi ", " ,i don't know which platform you use, we run it on Qua-core 1.44G platform, it needs about 20ms to transform cloudpoints for one camera.", "The transform is done in updatePlanner(). If don't create threads to transform cloudpoints parallel, updatePlanner() consume about 20ms. With this PR, the function consume less than 1ms.", "Thanks for the info! This really tells us where the bottleneck are in your setup.", "What sizes are your point clouds? I really don't think the transforms should be so slow, we should investigate that and make it faster, having the processing in a different thread only moves the problem to a different core ", " i don't print the size of cloud points , but i test it on the same place, and don't move the drone.", "It's not move the problem, it converts serial to parallel to speed up.", "\nFirstly, updatePlanner() will block path planner, thus cause path planner wait data ready, wast processing time.", "\nSecondly, when the cloudpoints came out from camera, no module handle/transform it. just wait,until updatePlanner() is called.", "Have you flight-tested this yet?", "Also, on what hardware exactly are you running? Something similar to Up Core?", "Yes, i tested outdoor several times,it worked well.", "we run it on Intel Qua-core 1.44G with Realsense R200", "Great. We'll do some flight tests our side with D435 and the Up Core, also we need to test that it works well with multi-camera.", "We tested it and it looked really good, we just need to add the fix for the box-size from yesterday and test again, then I'll be happy to merge this.", "Flight testing with increased clipping radius worked really well. I've gone over the code in detail and everything looks correctly protected, each camera is in its own thread, etc, so this is good for merging.", "Thanks for the contribution ", "!", "Just for reference, here are the flight logs from the last test:", "\n", " Thanks for your test! and I also test with increased box size, the drone react far away from obstacle, it will improve drone's speed."]},
{"url": "https://github.com/PX4/avoidance/pull/360", "pr_title": "Remove repeated info outputs in visualizer", "username": "jkflying", "username_url": "/jkflying", "issue_status": "Closed", "posted_on": "May 22, 2019", "pr_contents": ["After visualizing the world moved to ", ", ", " is flooding the console output with ", " as below", "This PR makes the statement be printed only once", "Is this an indication that it was only being published once before, and now is happening once per second? Is there any potential for performance problems here, eg. is rviz going to run out of memory?", " This was introduced after ", " as the rviz world was published repeatedly(Once per second), to be able to visualize the world even after ", " is closed / reopened.->This was my intention.", "It happened to me that sometimes when I open rviz separately, the rviz world never makes it to rviz. Requiring repeated publishing of visualizations is a big downside of rviz, but it still needs to be done to have a consistent result.", "I think it would be worth looking into if rviz stores the history of the published worlds, but I doubt that this will lead to high memory usage on the system. : I will try and increase the rate and see if it leads to high loads on the system", "Also, we can also lower the world publishing rate further more.", "What if you just make the visualisations a latched topic - this way you don't need to repeatedly call publish.", "New subscribers always gets the last message that was published, even if the message was published before the subscriber was connected.", " I think previously it was done that way, but in that case it will still not be able to visualize the world if rviz is respawned", " I checked the bandwidth of how much bandwidth the world publishing consumes at (0.5Hz)", " could not measure the bandwidth, so I published the world at 5Hz and found out that it consumes ~15KB/s. Therefore I suspect currently we are publishing at ~1.5KB/s", "Would we want to go back to publishing the world once?", "Nice, I wasn't even aware of the ", " API. I'm fine with this"], "pr_code": ["WorldVisualizer", "ROSINFO", "Successfully loaded rviz world", "[ INFO] [1557945199.308421401, 20.588000000]: Creating 1 swatches\n[ INFO] [1557945200.522503617, 21.600000000]: Creating 1 swatches\n[ INFO] [1557945200.961392230, 22.000000000]: Successfully loaded rviz world\n[ INFO] [1557945201.408963923, 22.436000000]: HP: requesting home position\n[ INFO] [1557945201.611341746, 22.636000000]: Creating 1 swatches\n[ INFO] [1557945202.603751584, 23.612000000]: Creating 1 swatches\n[ INFO] [1557945203.004797869, 24.004000000]: Successfully loaded rviz world\n[ INFO] [1557945203.467378202, 24.452000000]: Creating 1 swatches\n[ INFO] [1557945204.459814082, 25.212000000]: Creating 1 swatches\n[ INFO] [1557945205.228142521, 25.920000000]: Creating 1 swatches\n[ INFO] [1557945205.317867858, 26.004000000]: Successfully loaded rviz world\n", "rviz", "rqt", "ROS_INFO_ONCE"]},
{"url": "https://github.com/PilzDE/pilz_industrial_motion/pull/170", "pr_title": "pass planning pipeline from context to solve()", "username": "ct2034", "username_url": "/ct2034", "issue_status": "Closed", "posted_on": "May 28, 2019", "pr_contents": ["to avoid re-initialization of a new planning pipeline for every request", " ", " Please test the time consumption with this patch applied.", "Without the fix the reaction time is around 210 milliseconds.", "With the fix the console output shows that the process only take a few microseconds.", "Thats very fast. I also looked after the time difference between the timestamps of", "\n", " and ", ".", "\nThe average difference is around 40 milliseconds. Without the fix it was up to 500 milliseconds.", " Thank you for confirming of the fix!", "Tested. Looks considerably faster to me."], "pr_code": ["[ INFO] [1558592898.235564860]: Combined planning and execution request received for MoveGroupSequenceAction.\n[ INFO] [1558592898.235757880]: Planning attempt 1 of at most 1\n[ INFO] [1558592898.247100247]: Reading limits from namespace /robot_description_planning\n[ INFO] [1558592898.442368916]: Available plugins: pilz::PlanningContextLoaderCIRC pilz::PlanningContextLoaderLIN pilz::PlanningContextLoaderPTP \n[ INFO] [1558592898.442565529]: About to load: pilz::PlanningContextLoaderCIRC\n[ INFO] [1558592898.443378805]: Registered Algorithm [CIRC]\n[ INFO] [1558592898.443524793]: About to load: pilz::PlanningContextLoaderLIN\n[ INFO] [1558592898.444334683]: Registered Algorithm [LIN]\n[ INFO] [1558592898.444481818]: About to load: pilz::PlanningContextLoaderPTP\n[ INFO] [1558592898.445534258]: Registered Algorithm [PTP]\n[ INFO] [1558592898.445698684]: Using planning interface 'Simple Command Planner'\n[ INFO] [1558592898.446179410]: Initialized Point-to-Point Trajectory Generator.\n[ INFO] [1558592898.446391179]: Starting generation of PTP Trajectory!\n[ INFO] [1558592898.446587636]: Goal already reached, set one goal point explicitly.\n", "[ INFO] [1558956970.864097121]: Combined planning and execution request received for MoveGroupSequenceAction.\n[ INFO] [1558956970.864261547]: Planning attempt 1 of at most 1\n[ INFO] [1558956970.864469201]: Initialized Point-to-Point Trajectory Generator.\n[ INFO] [1558956970.864591649]: Generating PTP trajectory...\n", "sequence_move_group/goal", "/prbt/gripper_joint_trajectory_controller/follow_joint_trajectory/goal"]},
{"url": "https://github.com/PX4/avoidance/pull/405", "pr_title": "[GlobalPlanner] Add support for multicamera in global_planner", "username": "jkflying", "username_url": "/jkflying", "issue_status": "Closed", "posted_on": "Jun 12, 2019", "pr_contents": ["This PR adds support for multicamera to ", " with mostly the same interface with the local_planner. The pointcloud is republished from global_planner so that it can be consumed in a single topic to construct the Octomap.", "This has been tested in SITL, with the ", " model.", "To launch the 3camera model,", " I have addressed the comments!"], "pr_code": ["global_planner", "iris_depth_camera_3", "roslaunch global_planner global_planner_sitl_3cam.launch\n"]},
{"url": "https://github.com/PX4/avoidance/pull/370", "pr_title": "Add down-sampled depth images for logging", "username": "nicovanduijn", "username_url": "/nicovanduijn", "issue_status": "Closed", "posted_on": "May 28, 2019", "pr_contents": ["This commit adds a down-sampled version of the depth images of each camera to the auto-generated launch file.", "This results in an additional topic ", ", published at 1/15th the rate of the original topic.", "For our current rates on this topic (15Hz) this results in a bandwidth of 650kb/s for each camera, which is a reasonable size to log, even on embedded platforms.", "Ideally, we would do this with the infra red images, but I cannot get the realsense driver to publish that stream, regardless of what configuration I set. I believe it may be a USB2.0 vs 3.0 issue:", "\n", "Disabling the second infra stream makes the first one work - this seems to be a limitation of using USB2.1 vs. USB3.1", "\nAdded downsampled IR image as well", "I think this needs some further investigation before merging. Reason being that it moves the point cloud generation from the ROS wrapper into the driver.", "\nAt first sight, this seemed to be more efficient (I was running just the driver and subscribing to the cloud)", "Somehow I'm now getting increased CPU load when the planner is running with 3 cameras:", "\n", "I find it also suspiscious that one camera takes ~50% CPU while the others are round 40%. But in turn the planner seems to consume less.", "In comparison the 'old' way had this usage:", "\n", "There's a small conflict now with the Structure Core, since that publishes the point cloud at /sc/depth/points and you've now changed it to /$1/depth/color/points. So that either needs to go back to what it was, or we need to use separate topic names depending on the camera type.", "Also, I saw in the ROS wrapper that the colored point cloud might be cropped to fit the RGB camera FOV. There is now an option to turn this off: "], "pr_code": ["CAMERA_NAME/depth/image_rect_raw_drop"]},
{"url": "https://github.com/ros-controls/ros_controllers/pull/161", "pr_title": "thread-safe forward controllers", "username": "adolfo-rt", "username_url": "/adolfo-rt", "issue_status": "Closed", "posted_on": "Feb 4, 2015", "pr_contents": ["Fix for issue ", ", supersedes ", "ForwardCommandController was not thread-safe for 32bit systems, but  maybe for 64bit.", "\nForwardJointGroupCommandController was not thread-safe at all.", "Please note: this version uses references to the realtime-data, this works only for single-consumer cases. They could be replaced by copies, but this introduces some overhead..", "I have commented on the specific lines..", "\nSince all your comments come down to the drawbacks of RealtimeBuffer (that I circumvented by the design of the  implementation), I highly suggest that you merge it anyway..", "\nThe old implementation leads to segmenation faults if the input topic was published before the controller was actually started (race condition with allocation/resize in commandCB and starting).", "I have already thought about alternatives to RealtimeBuffer, I will open an issue in realtime_tools for discussion on this as soon I got more insights on the alternatives.", "Please take a look at the inline comment on the init method. We can then merge.", "Done :)", "Could you please squash the last three commits together, and leave ", " as-is?. This will simplify cherry-picking the fix to other branches.", "Great, thanks for making these controllers better!."], "pr_details_more": ["thread-safe/realtime-safe topic handling", "check for empty list of joints", "properly resets to neutral zeros at restart (resize only works the first time)", "dependency on realtime_tools", "command(s)_ was renamed to command(s)", "."]},
{"url": "https://github.com/ros-planning/navigation/pull/119", "pr_title": "Use boost::shared_array for memory allocations to fix memory leaks (fix #118)", "username": "meyerj", "username_url": "/meyerj", "issue_status": "Closed", "posted_on": "Aug 27, 2013", "pr_contents": ["\n            ", "\n          ", "For the unknowledgeable in the ways of boost, can you briefly describe what advantage the shared_array has?", " ", " is the equivalent of a ", " for arrays allocated with ", ". These smart pointers keep track internally of how often they have been copied and automatically call ", " (or ", " in the case of a ", ") if there is no reference to the allocated memory anymore. Basically they just save you from keeping track of all memory allocated with ", " in order to free it properly using ", ". See ", " for reference.", "Basically ", " just replaces the pointers by ", "s and therefore ensures that no memory is lost over time. In the original version ", " just allocates new memory and eventually overwrites the pointer to the previous allocation. ", " was only called once in the destructor. Even if you would add ", " each time you call ", " you would have to make sure that ", " has not changed since the last call to ", ". The same holds for ", " and ", ".", " just does that book-keeping auto-magically without having to bother too much. If the static map is really static, this leak might be neglectable, but in the dynamic map case with frequent ", " calls and without the patch from ", " memory consumption of move_base on low-memory machines might be an issue.", "Should I revert ", " before an eventual merge as it had obviously nothing to do with the memory leak? I am sorry.", "Sorry for the slow response. I'll be a little more free after the ICRA deadline.", "I rebased the commits on the latest HEAD revision in hydro-devel.", "I am not sure, if the memory leak problem in costmap_2d still persists, as there are some new checks in ", " since ", ". I will try during the next days and close this pull request if the problem has already been solved.", "Independent of the memory leak I would still say that the shared_arrays are safer and make the code more readable for little costs.", "Is ", " used after this commit?", "I don't remember the details about this patch, but in general calling ", " is not required anymore since the smart pointers automatically free all the memory that is not referenced. Resetting the pointers will free the memory allocated during previous invocations of ", ".", "This is no longer merge-able and discussion has died off, please reopen a new PR if this is still relevant."], "pr_code": ["shared_array", "shared_ptr", "new[]", "delete", "delete[]", "shared_array", "new", "delete", "shared_array", "InflationLayer::computeCaches()", "InflationLayer::deleteKernels()", "deleteKernels()", "computeCaches()", "cell_inflation_radius_", "computeCaches()", "Costmap2D::initMaps()", "Costmap2D::deleteMaps()", "shared_array", "resizeMap()", "void InflationLayer::computeCaches()", "deleteKernels", "deleteKernels()", "computeCaches()"]},
{"url": "https://github.com/ros-planning/navigation2/pull/744", "pr_title": "Safety Monitor", "username": "SteveMacenski", "username_url": "/SteveMacenski", "issue_status": "Closed", "posted_on": "May 21, 2019", "pr_contents": ["This PR hasn't been largely tested, this is going up here to start a discussion about where it best belongs. It resolves different conversations we've had about using the laser for special things, now this should replace and self contain all the information needed to use a typical safety sensor for at-rate collision or slow down region detection.", "It implements on the laser level collision detection like ", ", sonar/range via looking at some minimum range, and collision sensor by, well, collisions.", "I haven't gone through the code yet, but the concept looks good to me. I'll try to finish reviewing in the next few days.", "This looks good. You'll need to update to use the new ", " mechanism for the parameters to work in this module though.", "I've added everyone on this PR to look at it. I'd like everyone to take a look at the way ", " has done the message callbacks. They don't do any work. They just post the message to the object and then the main loop comes back and processes them.", "I think this is a good model to follow where applicable. This comes at the cost of latency in some cases though, so it probably doesn't work everywhere.", " hi, yeah, sorry, I know this has been sitting around for a long time. This has been in the icebox since I got back from Europe. Maybe I'll get to it next week.", "On your comment about the callbacks, sensor callbacks should never process data in the callback itself if its safety critical (AMCL if it lags doesn't make the robot run into stuff, thats not safety critical, costmap_2d is however). Moreover, lidars can come in at 1 Khz sampling rate so unless you're running a main loop that can achieve 1,000hz with low CPU, you need to keep a buffer around and its best to just ignore it until you need it so you're not wasting CPU cycles on unused results, especially when the processing is quick.", "You might have a thread that's processing the data buffer to then signal to the parent that hey, there's a problem, but given how the navigator is built, its easier to have it poll, but it would be trivial to add a thread to process all the data every N hz, but then its asynchronous of the caller's poll requests for state.", "You're totally OK dropping 300 laser scans if you can guarantee you're never going to lag behind realtime and the one you have is the latest and greatest. Your loop you can certify will run at N-hz and require N > M-hz to qualify as \"safe\" by some standard. Doesn't matter if you have all the data, you just need the latest and enough of it. Right now the data buffers are just 1 message but they could be proper queue if we wanted to process more.", "You're not getting latency worth worrying about, plus like I mentioned doing the work in the callback is a bad idea for safety code. You could spin up the thread to process in the background but you're doing alot of background work that won't be used and these checks are lightening fast -- and now you have to worry about asynchronous elements.", "tl;dr always buffer data from sensors because you have no idea how fast its going to come at you (1hz, 10hz, 1000hz) unless you can certify that your callback work can always be done in less than 1/frequency of any possible sensor, and throttle the execution to the rate needed by the consumers with batch processing or latest information (or in this case as a library, let the consumer choose how fast it wants that information).", "always buffer data from sensors because you have no idea how fast its going to come at you", "Hmm. We've already got the queue baked into ROS. We can specify the queue depth we want. It seems there should be an API in ROS to allow one to poll for messages in that queue rather than only getting messages through the subscriber callback. As it stands now, every message would need to be queued twice: once in the ROS layer and once in our application", "This is also a simple case, in many other cases there is work that needs to be done on reception to queue (move into a frame for a short memory TF buffer to minimize embedded memory footprint).", "My understanding of the queue is its FIFO, which is not what we want, we want FILO. We want the absolute most recent data to process first, and then others that can be batch processed in the same update cycle", "Re-started CI", " - I think it would be great to discuss this in the Nav2 WG, I haven't had a chance to review it yet and it seems like a large change. I think a brief overview in the meeting would help set context and expectations.", " this is still in my icebox, we're welcome to talk about it but I wouldn't make it a priority. Its not much of a change since its the inclusion of this library and example usage but I didn't make it enabled anywhere in particular (yet).", " - can we close this for now then until you're ready to thaw it out of the icebox?", "Then I'd love to get an overview in the WG when you're ready to do that, but it can wait until you thaw this.", "I can pull this out tomorrow -- lets chat at the weekly and see what makes sense"], "pr_code": ["while", "declare_parameter"], "pr_quotes": ["always buffer data from sensors because you have no idea how fast its going to come at you"], "pr_details_more": ["Implementation of a sensor-level safety monitor for use in the stack", "Simple API to include in the main action server, or add in any ", " loop for an action", "Parameter example of how to fully use", "All typical safety sensors are included: laser, sonar, bump sensors", "Example in readme", "optional timeouts for sensors not publishing or in collision region for too long to make sure robot doesnt dead lock", "May work with any number of sensors (0-N lasers, sonars, and bump sensors)", "Support multiple safety or collision regions for laser", "Support more sensors (not sure what they'd be?)", "Configs for safety zones and ranges per sensor vs. per instance"]},
{"url": "https://github.com/ros-planning/navigation2/pull/743", "pr_title": "adding rate loops where applicable", "username": "SteveMacenski", "username_url": "/SteveMacenski", "issue_status": "Closed", "posted_on": "Jul 29, 2019", "pr_contents": ["Small changes, nothing worth getting into much. Adding rate objects to throttle loops as needed.", "Thats really good feedback, I appreciate the look. Going to redo with the rclcpp::sleep_for to resolve the lack of loop spinning in the initialization cases. From a product standpoint, I just want to make sure there's never any ", " without sleeping around or it will consume too many resources away from other processes.", " can you rebase this?", "Oh wow, this is old. Will do. ", " can i get a second review so i can merge when done?", "Updated to current"], "pr_code": ["while (true)"]},
{"url": "https://github.com/ros-planning/navigation2/pull/346", "pr_title": "System fixes to Costmap 2D", "username": "mkhansen-intel", "username_url": "/mkhansen-intel", "issue_status": "Closed", "posted_on": "Nov 20, 2018", "pr_contents": ["This is to improve system stability and ease of traceability", " Can you give an example of when you might want to disable waiting for TF? I can't think of any - its a critical piece of this package. If you think it makes it unstable, why it is default ", " and not default ", "?", " -  Putting the wait for transform in the constructor isn't really necessary, it can be waited for when it is actually used. In this case it waits for it but doesn't use it inside the constructor at all. Thus it is blocking waiting for something it doesn't need yet. Because it is blocked, we have seen that if the constructor never exits, the node time never gets reset by setting the use_sim_time parameter to true, and thus it hangs waiting for the tf forever. It's kind of a deadlock state.", "The other option, and I can make this change if it's preferred, is that instead of the 'while' loop where it keeps rechecking for the transform, it could just check once, and if it isn't there, print the warning and move on. I could make that change if its preferred.", " My main point wasnt that it shouldn't be included, but that it should not default to ", " but ", " because the typical application will want it to be true.", "You might be getting into a deadlock state as well because there's no sleep in this while loop so its going to consume a core. That should definitely be changed.", "The plugins need TF to be ready to operate. If you don't block until TF is ready and you start processing commands without TF available, that's a safety critical condition that could create a collision.", " - if the transform isn't present, it will try the transform later and catch the failure here:", "\n", "\n      ", "\n    ", "\n         Line 449\n      in\n      ", "\n    ", "So if the transform fails, the robot won't move.", "Failing to update the map doesnt stop someone from processing a motion planning request with empty costmaps", "You're right, I guess the robot can move, it just won't get the map update. But can't that case still happen anyway? I mean if the transform is working at construction time, then it goes away, or freezes up, you would still hit the case you're talking about.", "I'll back that change out of this PR and see if I can get things working without it. If I can't I'll re-submit on another PR later.", "Sure, but going down I believe is the users fault, this would be a bad startup procedure. Many robots will power on and when ready immediately process commands, if the constructor blocks it makes sure all the tools have what they need to process. The 2 biggest things I want to see is default ", " so that unless a user goes out of their way to specify they dont want to wait, it will do the conservative (and in my opinion rational) thing. Second being that you issue a stern warning to users that do pass on waiting and its not up that they could indeed collide due to empty maps.", "Steve, I don't mean to argue. I'm just trying to get things working reliably right now. If you haven't had a chance yet to try running the code now would be a great time to start. We're trying to debug issues and there seem to be quite a few due to the lack of message filters and the parameters changes in ROS2. There's no global 'use_sim_time' so every node needs to have the parameter set, and sometimes it doesn't seem to take correctly in the launch file. We're trying to debug these issues now. Anyway, that's another issue I should probably file.", "Oh and I backed out the change.", "Sorry, As well, just trying to make sure things are safe. To me, that takes total priority over functioning and other considerations. If this navigation framework has little quirks that lets people easily get themselves in trouble, we're going to be having a near impossible time getting any major people (or myself) to move over to it to continue the development and push the community forward (and potentially company ending lawsuits). Simulation should be a first class recipient of support, but all defaults and considerations should be focused on hardware as that's where it counts.", "CI failed on missing smart planner in testing. This looks like you might have a merge issue on ", " in mainline.", "closing since ", " fixes this in a different way"], "pr_code": ["false", "true", "false", "true", "true"], "pr_details_more": ["This cherry-picks a commit from the integration-debug2 branch made by mjeronimo which moves the parameter setting to the end of the Costmap 2D constructor", "This adds 2 INFO messages for the /initialpose and /move_base_simple/goal topics for ease of traceability", "Adds a 'wait_for_tf' parameter with a default of false to Costmap 2D constructor to bypass waiting for the transform to be there. At a future date, we could deprecate this entirely since we think it makes the system less stable. By making it controlled by a parameter, we make it possible for a user to enable it if they have a use case requiring it"]},
{"url": "https://github.com/ros-planning/moveit/pull/1338", "pr_title": "Travis: enable clang-tidy-fix", "username": "rhaschke", "username_url": "/rhaschke", "issue_status": "Closed", "posted_on": "Feb 18, 2019", "pr_contents": ["In ", " ", "  introduced some naming conventions, I don't agree with, namely enforcing UPPER_CASE for all constant variables. I think we agreed, that UPPER_CASE is reserved for macros, maybe static const variables as well. However, const members should be lower_case as other variables as well.", "This PR also removes the very time-consuming code analysis checks (clang-analyzer-*). They are nice to have locally, but they don't provided automatic fixes and thus are not useful on Travis.", "Some remarks on the next steps can be found in ", ".", " ", " ", " Would be great to get some feedback from you on this.", "LGTM. Only question is if the already tidy'd code should be tidy'd again to fix these naming conventions.", "In ", " ", " introduced some naming conventions, I don't agree with", "For the record, I suggested these naming conventions in ", ", 7 months before ", " was merged. I do agree with the reasoning here to not have all const be UPPER_CASE though."], "pr_quotes": ["In ", " ", " introduced some naming conventions, I don't agree with"]},
{"url": "https://github.com/ros-planning/navigation/pull/168", "pr_title": "Fix for issue #167: hardcoded tf frames", "username": "mikeferguson", "username_url": "/mikeferguson", "issue_status": "Closed", "posted_on": "Jul 29, 2014", "pr_contents": ["This is my suggested fix for issue ", ". At the moment, robot_pose_ekf makes use of hardcoded string literals \"odom_combined\" and \"base_footprint\" as names for output and base frames. Since support for tf_prefix was dropped, having multiple robots with separate tf trees means having unique frame names (e.g., ", ").", "The changes are backwards compatible with tf_prefix and hence it would not break any launch file. I have made some tests myself, but I hope someone else can assert these proposed changes.", "It is rather straightforward: I added 2 string variables (output_frame_ and base_footprint_frame_) to OdomEstimation class to represent output and base frames, along with 2 mutator methods to set their values after fetching them from the parameter server. Then, the hardcoded references (string literals) to the output (\"odom_combined\") and base (\"base_footprint\") frames were replaced with output_frame_ and base_footprint_frame_, respectively.", "With these changes it is possible to set the output and base frames using parameters \"output_frame\" and \"base_footprint_frame\".", "I modified the example launch file to illustrate how to set the base frame as well as the output frame.", "Hi,", "\nSorry to ask, but has anyone had any spare time to check this pull request?", "Hi Murilo,", "\nI've been consumed by my thesis for the last couple months and haven't had the time. Is there a specific time frame that you need this to be merged in?", "Hi ", ",", "I was actually just wondering, out of curiosity, if someone had tested the changes I made.", "\nI understand the maintainers must be busy, and I know for a fact that a thesis is a good enough reason to avoid getting side-tracked.", "This is not affecting me at the moment, as I've been using the navigation stack with these changes in an overlaid catkin workspace.", "Let me know if there is any specific test I can run to help.", "\nThanks!", "This looks OK, but I think it must be rebase on top of ", " ", " (I don't understand why the last 3 merge commits)", "Hi ", ", those 3 merge commits were not intended to be part of the pull request; I was just pulling the latest changes to my fork (in a rather messy way) -- should've created another branch for that, or rebased my pull request. I had almost forgotten about my pull request, since it was such a long time ago.", "Update: I've just rebased my local branch and force pushed it to my fork; the pull request was updated and does not have those merge commits anymore.", "LGTM"], "pr_code": ["robot1_base_footprint", "hydro-devel"]},
{"url": "https://github.com/ros-planning/moveit/pull/420", "pr_title": "address gcc6 build error", "username": "rojkov", "username_url": "/rojkov", "issue_status": "Closed", "posted_on": "Jan 19, 2017", "pr_contents": ["With gcc6, compiling fails with ", ",", "\nas including '-isystem /usr/include' breaks with gcc6, cf.,", "\n", ".", "This commit addresses this issue for this package in the same way", "\nit was addressed in various other ROS packages. A list of related", "\ncommits and pull requests is at:", "This patch should be better cherry-picked to indigo-devel since it's the base for the current meta-ros layer for Yocto.", "Hey ", " , thank you for pointing this out!", "\nI've been compiling MoveIt with gcc 6.2 for a while now and didn't encounter the problem in Lunar-Linux, so apparently the Ubuntu versions of eigen, boost or libfcl add /usr/include for no reason..", "I know this is a problem throughout ROS, so thanks for taking care of it!", "I just looked for other SYSTEM includes in the moveit repository:", "Did these not fail for you?", "\nCould you please have a look at them and include appropriate changes there in this request?", "\nI cannot reproduce the error over here, so I would appreciate the help!", "Hm... So far only moveit_core has been a builddep I need. I'll check the rest of the packages.", "Like the original reporter of the issue I'm building it with OpenEmbedded. Might be that it tweaks CMake to order the compile options in some unfortunate way that triggers the failure.", "Does this introduce previously suppressed compiler warnings from external headers?", "Of course, compiling successfully is more important than avoiding warnings, but if this does introduce warnings (from headers which are out of our control) it could be worth investigating a solution that doesn't do that.", " wrote:", "If it becomes necessary, we could filter all received include dirs for /usr/include, but that seems pretty exaggerated to me.", "That could be done with a one-liner in CMake (", " IIRC). But I agree that it's a bit much, perhaps.", "I do think that building warning-free is very useful. Many warnings are relatively harmless, but some point to serious problems which are otherwise easy to miss. Having those swamped out would be a shame. But I'll try this PR locally to see what the result is. Maybe there's nothing to worry about.", "So, the problem comes mostly from the Boost package: CMake provides a standard module for Boost and this module sets ", " to ", ". Where ", " depends on where you install your cross-compilation environment (e.g. ", "). Together with gcc's ", " option it triggers the failure.", "I've reduced the patch not to mark Boost being SYSTEM and it doesn't generate build warnings with gcc 6.2 (unlike in case of libeigen).", "Unfortunately I'm consumed by other tasks and simply don't have enough time to test the other packages. I'll submit a separate patch for the ", " branch though.", "Looks good to me. Thanks for looking at the warnings.", "Actually, this should be in sync with ", " before merging. At least the changes to ", " vs non ", " ", " should be the same in indigo and kinetic. For jade we can just cherry-pick the indigo PR I think.", " I just merged ", ". what needs to change here? we can backport this to I/J no problem", " already includes the change made here and more, so I think this one can be closed."], "pr_code": ["stdlib.h: No such file or directory", "  https://github.com/ros/rosdistro/issues/12783\n", "$ grep -r \"(SYSTEM\" --include CMakeLists.txt\nmoveit_plugins/moveit_fake_controller_manager/CMakeLists.txt:include_directories(SYSTEM ${Boost_INCLUDE_DIR})\nmoveit_plugins/moveit_simple_controller_manager/CMakeLists.txt:include_directories(SYSTEM ${Boost_INCLUDE_DIR})\nmoveit_plugins/moveit_controller_manager_example/CMakeLists.txt:include_directories(SYSTEM ${Boost_INCLUDE_DIR})\nmoveit_setup_assistant/CMakeLists.txt:include_directories(SYSTEM ${Boost_INCLUDE_DIR})\nmoveit_ros/planning/CMakeLists.txt:include_directories(SYSTEM\nmoveit_ros/move_group/CMakeLists.txt:include_directories(SYSTEM\nmoveit_ros/robot_interaction/CMakeLists.txt:include_directories(SYSTEM ${Boost_INCLUDE_DIRS})\nmoveit_ros/planning_interface/CMakeLists.txt:include_directories(SYSTEM\nmoveit_ros/visualization/CMakeLists.txt:include_directories(SYSTEM\nmoveit_ros/perception/CMakeLists.txt:include_directories(SYSTEM\nmoveit_ros/warehouse/CMakeLists.txt:include_directories(SYSTEM ${Boost_INCLUDE_DIRS})\nmoveit_ros/manipulation/CMakeLists.txt:include_directories(SYSTEM\nmoveit_planners/ompl/CMakeLists.txt:include_directories(SYSTEM\nmoveit_experimental/CMakeLists.txt:include_directories(SYSTEM ${EIGEN3_INCLUDE_DIRS}\nmoveit_core/CMakeLists.txt:include_directories(SYSTEM ${EIGEN3_INCLUDE_DIR}\nmoveit_kinematics/CMakeLists.txt:include_directories(SYSTEM\n\n", "list(REMOVE_ITEM ..)", "Boost_INCLUDE_DIRS", "SYSROOT/usr/include", "SYSROOT", "YOUR_YOCTO_DIR/build/tmp-glibc/sysroots/intel-corei7-64/", "--sysroot", "indigo-devel", "SYSTEM", "SYSTEM", "include_dirs"], "pr_quotes": ["If it becomes necessary, we could filter all received include dirs for /usr/include, but that seems pretty exaggerated to me."]},
{"url": "https://github.com/ros-perception/image_pipeline/pull/63", "pr_title": "Image rotate using tf2", "username": "vrabaud", "username_url": "/vrabaud", "issue_status": "Closed", "posted_on": "Apr 12, 2014", "pr_contents": ["image_rotate subscribes /tf and building tf tree consumes CPU resources a lot.", "\nthis patch supports tf2 to decrease CPU consumption.", "what's the point of adding a flag for tf2 ? This is all hapennig behind the scene so you can switch to tf2 by default no ? (and remove tf: tf actually uses tf2 behind the scene).", "\nI have done it in indigo with ", " . Should I backport it ?", "I have done it in indigo with ", " . Should I backport it ?", "cool!", "the reason why I add tf2 flag is I don't know how many ros users uses tf2_buffer_server.", " I think this is reasonable; the use_tf2 flag uses the tf2 buffer server instead of subscribing directly to the /tf fire hose.", "thanks!", "is it difficult to apply this patch to groovy-devel?", "  , merged in groovy"], "pr_quotes": ["I have done it in indigo with ", " . Should I backport it ?"], "pr_details_more": ["~use_tf2 parameter to switch tf and tf2"]},
{"url": "https://github.com/ros-industrial/universal_robot/pull/272", "pr_title": "New message definition for the ToolData", "username": "NikolasE", "username_url": "/NikolasE", "issue_status": "Closed", "posted_on": "Nov 30, 2016", "pr_contents": ["This PR contains a new message definition for the ToolData that contains the analog inputs from the tool which where not available so far. The message contains numerical constants so that the user can understand the flags and modes easier.", ": Could you approve the PR? I could then open a PR to integrate the related parsing code into the ur_modern_driver", "A comment on this PR: thinking about it a bit, I'm actually not really a fan of adding these kind of messages. I'm rather a fan of having ROS drivers publish messages that are interpretable on their own, instead of needing another bit of information to be able to understand their contents.", "In this case, I'd rather the ", " / ", " publish values for the analogue inputs / outputs that are already converted (using the data in the ", " packet in the binary stream coming from the controller). That way we don't shift the responsibility of doing that to consumers of the data.", "I'll still merge it, but I think we should take a good look at how we want to handle these kind of cases in the future.", ": fyi.", ": I've had to update your ", " branch to merge in some commits from ", ".", "If you have the time (and opportunity), it would be nice if we could squash all your commits into one, and do a rebase on top of current ", ". That would avoid the merge commit as well.", ": ignore my last comment.", "I've squashed your commits and merged them in ", ".", "Thanks for the PR."], "pr_code": ["ur_driver", "ur_modern_driver", "ToolData", "indigo-devel", "indigo-devel"]},
{"url": "https://github.com/tork-a/rtmros_nextage/pull/73", "pr_title": "(#71) add more run_depends", "username": "130s", "username_url": "/130s", "issue_status": "Closed", "posted_on": "Jun 12, 2014", "pr_contents": ["\n            ", "\n          ", "How about ", " instead of PR2-specific ", "? Got a hint at ", ". On my Ubuntu on ", " where there seems to be an issue with ", " and thus I can't run properly, I tried ", " on either package in question, and the error message seems to be the same. So I assume ", " does it.", "at this moment, nextage moveit config requres pr2 related plugin ", "because, we still have pr2 related code at", "\n", "off course, we can remove these code, but need comprehensive tests.", "\neuslisp related code is not included in travis test and I think we also need to fix", "\n", " -> ", "please consult ", " and ", " for rtm-ros-robot-interface.l issue and ", " for euslisp client for nextage/hironx", "off course, we can remove these code, but need comprehensive tests.", "\neuslisp related code is not included in travis test and I think we also need to fix", "\n", " -> ", "I see. That sounds like a bit too much for now. ", "."], "pr_code": ["pr2_moveit_plugins", "virtualbox", "RViz", "run_depend", "moveit_fake_controller_manager"], "pr_quotes": ["off course, we can remove these code, but need comprehensive tests.", "\neuslisp related code is not included in travis test and I think we also need to fix", "\n", " -> "]},
{"url": "https://github.com/start-jsk/rtmros_common/pull/423", "pr_title": "use random staritng  port number for rtm_naming, also try to continue if...", "username": "k-okada", "username_url": "/k-okada", "issue_status": "Closed", "posted_on": "Apr 16, 2014", "pr_contents": ["... name server is already running", "Don't we want to specify the range that random port number can take (e.g. 2800 - 2900) so that we can avoid hitting the taken number more? Sorry if this PReq already handles the situation.", "this patch will generate number between 2890 - 3880 for every 10 (it means 2890, 2900, 2910....), do you think its too wide?", "\nIf a package compile three robot (pa10, samplerobot, hrp4c) then it consumes three corba port, one for each model, so currently we can handle 10 robot for one package, and 10 parallel build.", "I briefly googled and ", " looks barely used. For the record:", "Limiting up to 3000 might be even safer?", "travis ", " to see what happens this time.", "see ", " for final solution"], "pr_code": ["set(_corba_port 2890)\n+string(RANDOM LENGTH 2 ALPHABET 0123456789 _corba_port_offset)\n +math(EXPR _corba_port \"${_corba_port}+${_corba_port_offset}*10\") ## set start point randomly\n +message(STATUS \"using corba port ${_corba_port} (using offset ${_corba_port_offset})\")\n", "2890 - 3880", "gsiftp      2811/tcp\ngsiftp      2811/udp\ngpsd        2947/tcp\ngpsd        2947/udp\ngds-db      3050/tcp    gds_db      # InterBase server\ngds-db      3050/udp    gds_db\nicpv2       3130/tcp    icp     # Internet Cache Protocol\nicpv2       3130/udp    icp\nmysql       3306/tcp\nmysql       3306/udp\nnut     3493/tcp            # Network UPS Tools\nnut     3493/udp\ndistcc      3632/tcp            # distributed compiler\ndistcc      3632/udp\ndaap        3689/tcp            # Digital Audio Access Protocol\ndaap        3689/udp\nsvn     3690/tcp    subversion  # Subversion protocol\nsvn     3690/udp    subversion\nsuucp       4031/tcp            # UUCP over SSL\nsuucp       4031/udp\n"]},
{"url": "https://github.com/uf-mil/SubjuGator/pull/36", "pr_title": "ALARMS: Added C++ interface to alarm system", "username": "jpanikulam", "username_url": "/jpanikulam", "issue_status": "Closed", "posted_on": "Nov 18, 2015", "pr_contents": ["Added the AlarmBroadcaster and AlarmRaiser", "\nclasses, to be used to publish", "\nmessages on the /alarm topic. These", "\nmsgs will be consumed by the AlarmHandler.", "*Note: The user can optionally supply", "\na JSON blob containing useful information within", "\nthe alarm msg. For C++, this must be in a", "\nwell-formed JSON string.", "TODO: Will test linking libsub8_alarm.so with the TGEN", "\nwhen I add alarms to the TGEN next week", "This looks good.", "In my imagination, all of the alarm handling scenarios will be done in Python -- do you agree?", "I agree. We could probably write a few generic alarm handlers for common scenarios to get started.", "Closing to fix the git history (will use git merge instead of rebasing); will re-open a new PR"]},
{"url": "https://github.com/start-jsk/rtmros_common/pull/426", "pr_title": "set REALTIME=ture as default", "username": "k-okada", "username_url": "/k-okada", "issue_status": "Closed", "posted_on": "Apr 19, 2014", "pr_contents": ["set , so that hrpsys_ros_bridge did not consume cpu power", "see ", " for discussion"]},
{"url": "https://github.com/UBC-Thunderbots/Software/pull/399", "pr_title": "Define path planner interface and create an A* path planner", "username": "jordanzliu", "username_url": "/jordanzliu", "issue_status": "Closed", "posted_on": "Feb 28, 2019", "pr_contents": ["Define an interface for a ", ". Use a grid graph and boost::astar_search to implement A* path planning.", "Unit tests for sanity. Printed path to stdout, looks fine.", "Partially ", " ", "Assuming that we're not going for a full review here, so just looking at high level design stuff (not comments, moving stuff around, etc.).", "Overall, this is looking pretty good, definitely the right direction. I don't see any major architectural issues. Nice work! ", "This is pretty much done now and ready for review, the only additional thing required is path smoothing. I've opened an issue for that: ", "Not much more to add to this", "This is looking good, main thing is that I'd like to see some more tests for navigating around obstacles. The navigator is such an important thing, and we've had so many issues with it in the past, so we should really make sure it's as robust as possible this year.", " I agree re: the testing, but the \"Violation\" functions that would be used to provide the lambda function to the navigator aren't done yet.", "Are you proposing testing the avoidance with a placeholder function / function only used for testing? (Like kind of exists now, but with the function actually doing something). Exact avoidance behavior will depend on the \"Violation\" functions.", "So the issue I'm worried about here is most obviously shown by the case where the robot cannot find any path to the goal. In this case, since we are reliant on edge weights to \"indicate\" obstacles, this will force A* to find a path that is not possible.", "Yeah, I don't ", " that it's possible at all to remove vertices inside objects, unless we use an implicit graph, or a hacky solution where edge weights toward unreachable vertices are orders of magnitude higher than regular edge weights, and we compare against an empirically determined constant. I think we should proceed for now with a warning about this behaviour, and eventually scrap this grid graph implementation for something better - I personally think Theta* star suits our use case better.", "Theta* definitely looks like a better choice, especially for a more implicit graph description. Great find!", " - is there anything blocked, or will be eminently blocked by this getting in? If we need to get this in order to make progress with other stuff, I'm OK with it, but if we're not rushed I think we might as well try to come up with decently robust implementation? (ie. see if we can implement something like Theta*)", "Regarding the ", " interface, I was thinking about adding obstacles to the arguments to ", ", because other approaches to path planning such as Theta* require knowing the position of obstacles.", " ", ", your thoughts on having ", " consume obstacles, ", ", or both? I was thinking that ", " could be used for field boundaries, and obstacles for robot avoidance.", " - I'd say that we probably shouldn't start modifying the interface until we actually go to start implementing something like Theta*, because it shouldn't be super hard to change, and it will should be much clearer what we actually need when we start implementing it.", "As a a general note, this is the principle of \"YAGNI\": ", "Moved some conversation to Slack for speed.", "I think this should be closed now that we've change our approach and are working towards Theta* with some different interfaces?"], "pr_code": ["PathPlanner", ".cpp", ".h", "thunderbots/software/geom", ".h", "thunderbots/software/geom", "TODO", "PathPlanner", "findPath", "findPath", "ViolationFunction", "ViolationFunction"], "pr_details_more": [" ", ": each ", " and ", " file should have a comment at the start of it. See files in the ", " folder for examples.", " ", ": All function definitions (usually in the ", " file) should have a javadoc style comment at the start of them. For examples, see the classes defined in ", " ", " ", ": for example, those just used for testing", " ", ": All ", " (or similar) statements should either be completed or associated with a github issue", " ", ": If this PR results in a non-trivial drop in code coverage (a bot should post a coverage diagram as a comment), please justify why we can't test the code that's not covered."]},
{"url": "https://github.com/UBC-Thunderbots/Software/pull/393", "pr_title": "Created a placeholder navigator", "username": "MathewMacDougall", "username_url": "/MathewMacDougall", "issue_status": "Closed", "posted_on": "Feb 27, 2019", "pr_contents": ["Created a placeholder navigator that directly converts Intents into Primitives (no actual intelligent navigation). This gives an example of how a navigator would be implemented and a starting point for better navigators (We can just rename/modify this one for our first \"real\" navigator\").", "Unit tests for each ", " conversion. Also tested that giving Intents to the navigator moves robots in grSim.", "None", "Lots of changes needed to add the Visitors (and the tests were reasonably long), but it's only slightly over 500", "Merging ", " into ", " will ", " coverage.", "\nThe diff coverage is ", ".", ".", " - ", "\n", ", ", ", ", "\nPowered by ", ". Last update ", ". Read the ", ".", "Just as a note for the future, something like this should probably be multiple PR's (in this case intent visitor and navigator).", "This is looking pretty sane, a few small doc comments and one test comment.", "Would it make more sense to have just one ", " and have it own a ", " that consumes start and destination ", "s and returns a vector of ", "? This way we can avoid duplicating the visitor structure.", "But what if different navigators do different things for different Intents? What you suggested seems to assume (correct me if I'm wrong) that all Intents would somehow go through the ", "? This might not be the case for Intents such as ", " or ", ", which may want to bypass the PathPlanner entirely or even do something else.", "It doesn't feel like duplication to me since it's just following/implementing an interface.", "If all Intents went through a ", " instead the \"duplication\" would just appear there. And if not all Intents go through a ", " we need the ability for Intents to be handled differently.", "I think it makes sense to have both a navigator and a Path Planner interface. That way we can have multiple navigators that do different things and also swap out pathfinding algorithms as needed?", " some context on what some different navigators we might use would like like would be helpful here", "I definitely agree we should have a ", " interface in the future.", "For context, some example ", ":", "Example things different Navigators may or may not do on top of the ", ":", "I think there's definitely enough separation of concerns here to warrant the separate interfaces.", "LGTM ", " "], "pr_code": ["Intent -> Primitive", ".cpp", ".h", "thunderbots/software/geom", ".h", "thunderbots/software/geom", "TODO", "n/a", "\u0394 = absolute <relative> (impact)", "\u00f8 = not affected", "? = missing data", "Navigator", "PathPlanner", "Point", "Point", "PathPlanner", "Catch", "Pivot", "PathPlanner", "PathPlanner", "PathPlanner", "PathPlanners", "PathPlanner", "priority", "Intents"], "pr_quotes": ["Merging ", " into ", " will ", " coverage.", "\nThe diff coverage is ", ".", " - ", "\n", ", ", ", ", "\nPowered by ", ". Last update ", ". Read the ", "."], "pr_details_more": [" ", ": each ", " and ", " file should have a comment at the start of it. See files in the ", " folder for examples.", " ", ": All function definitions (usually in the ", " file) should have a javadoc style comment at the start of them. For examples, see the classes defined in ", " ", " ", ": for example, those just used for testing", " ", ": All ", " (or similar) statements should either be completed or associated with a github issue", " ", ": If this PR results in a non-trivial drop in code coverage (a bot should post a coverage diagram as a comment), please justify why we can't test the code that's not covered.", "Graph search", "Start with a straight line and recursively split the path until no collisions", "RRT", "Guess-and-check splines", "Collision avoidance using generated paths", "Physics-based immediate collision avoidance (could apply to all Primitives, not just those with generated paths)", "Other post-processing on generated paths", "Any adjustments needed to obey ", " flags or other logic contained with the ", "Primitive-specific planners"]},
{"url": "https://github.com/UBC-Thunderbots/Software/pull/1104", "pr_title": "Shot Evaluation Re-do (AngleSweepCircles replacement)", "username": "EvanMorcom", "username_url": "/EvanMorcom", "issue_status": "Closed", "posted_on": "Jan 15, 2020", "pr_contents": ["This PR includes the replacement of AngleSweepCircles with a new algorithm, which is essentially projecting the 'blocked' area of obstacles into Segments, then combining all of the 'blocked Segments' into the fewest independent pieces before grabbing the 'open space' between the Segments.", "Includes minor fixes to existing code that were overlooked because of AngleSweep bugs.", "\n(Random edits to files done by clang-format)", "Passes all existing AngleSweepCircles unit tests.", "\nPasses the secret AngleSweepCircles unit tests that broke AngleSweep.", "\nPasses new unit tests.", "Needs to be tested on Robots/GrSim.", "\nN/A", "Lot's of stuff had to be replaced at once because shot evaluation is a part of many sections of code.", "Travis failing me even though fix_formatting was run lol.", "What a guy.", " - what flags did you use with ", "? If you used ", ", try pulling the most recent version of master and trying again.", "I did -a, I'll try re-pulling.", "Did a pull, no new changes", "Pushed again and now it works ", "Looks like CI is still failing?", "I definitely get some files changed on your branch from formatting.", "\n", "Just to be super clear, you're doing:", "?", "Really happy to see this function finally get rewritten. The logic is pretty complicated, so I'll definitely need another pass or two to really understand it, but seems OK at first glance.", "I definitely get some files changed on your branch from formatting.", "\n", "Just to be super clear, you're doing:", "?", "I always do 'bash fix_formatting.sh -a'", "Glad to see this finally being fixed ", " No coverage uploaded for pull request base (", "). ", ".", "\nThe diff coverage is ", ".", ".", " - ", "\n", ", ", ", ", "\nPowered by ", ". Last update ", ". Read the ", ".", " - can we remove the ", " file? Not sure what it does, but it's a 90mb binary file.", "Looking much better, just a few minor (non-blocking) nits", "One last thing, I found the conversation where we debated returning a ", " or ", ". Consensus at the time was leave things as they are, which I interpreted as just returning ", " (not optional).", "Everything is using optional right now, so just wanted to check if we feel strongly enough about either to make a change. I personally prefer returning a ", " directly (no optional) since consumer should be checking the angle even if the shot is valid, but would make that change on my own time to not hold up this PR.", " Yeah, that was my initial thought too.", "I changed it back to optional because it seemed awkward to return a 'shot direction' for a shot that doesn't exist.", "I think this way the users have to check that a shot exists, and then check how good the shot is (the angle)", "Fine with me as long as we're all on the same page", "LGTM ", " ", "Minor naming details but would really help me code read if we can rename the 3 calcBestShotOnGoal to differentiate them. Otherwise, looking good.", "LGTM ", " ", "LGTM ", " ", "LGTM! "], "pr_code": [".h", "thunderbots/software/geom", "TODO", "fix_formatting", "-b master", "git checkout master\ngit pull upstream master\ngit checkout ShootScoreTemp\n./clang_format/fix_formatting.sh -b master\n", "git checkout master\ngit pull upstream master\ngit checkout ShootScoreTemp\n./clang_format/fix_formatting.sh -b master\n", "master@498562b", "100%", "66.66% <\u00f8> (\u00f8)", "98.73% <100%> (\u00f8)", "94.78% <100%> (\u00f8)", "\u0394 = absolute <relative> (impact)", "\u00f8 = not affected", "? = missing data", "src/core", "Shot", "std::optional<Shot>", "Shot", "Shot"], "pr_quotes": ["I definitely get some files changed on your branch from formatting.", "\n", "Just to be super clear, you're doing:", "?", " No coverage uploaded for pull request base (", "). ", ".", "\nThe diff coverage is ", ".", " - ", "\n", ", ", ", ", "\nPowered by ", ". Last update ", ". Read the ", "."], "pr_details_more": [" ", ": All function definitions (usually in the ", " file) should have a javadoc style comment at the start of them. For examples, see the functions defined in ", ". Similarly, all classes should have an associated Javadoc comment explaining the purpose of the class.", " ", " ", ": for example, those just used for testing", " ", ": All ", " (or similar) statements should either be completed or associated with a github issue", " ", ": If this PR results in a non-trivial drop in code coverage (a bot should post a coverage diagram as a comment), please justify why we can't test the code that's not covered."]},
{"url": "https://github.com/ANYbotics/elevation_mapping/pull/98", "pr_title": "Add get_raw_submap service", "username": "mktk1117", "username_url": "/mktk1117", "issue_status": "Closed", "posted_on": "Mar 20, 2019", "pr_contents": ["A service for getting raw submap.", "Why do you want to merge this to pre-release?", "As you suggested before when I made a pull request ", ".", "Then we misunderstood ourselves, sorry. The reason there was that we were in a release phase, where we fix bugs on pre-release. This phase is now over we can again work on master.", "Okay, thank you for your explanation.", "\nI will switch to master.", "I turned the warning message into info message.", "\nAlso, I cleaned the code for get_submap and get_raw_submap services.", " and ", " : Can we please merge this PR soon?", " From my perspective we can merge it soon. To be honest, reviews from side of RSL which are a little bit more critical would not hurt. Re-visiting PRs every day is time-consuming.", " : I agree. But you should then define default reviewers from RSL side for the ANYbotics repos. In this pull request, I am the only person from RSL looking at the pull request. I tested the code with ", " on the robot. We are quite active on all our pull request of the leggedrobotics group.", "This PR is taking up a lot of time to comment on things which could have been done correctly in the first place of more care had been taken about code quality. For the future, please work more carefully.", " I modified the code based on your comments.", "\nWould you check these, please?", "Closing, because changes were introduced with this PR "], "pr_code": ["Removed mutex lock of visibilityCleanupMap"]},
{"url": "https://github.com/ros-industrial-consortium/descartes/pull/174", "pr_title": "Internal-Joint-Point", "username": "Jmeyer1292", "username_url": "/Jmeyer1292", "issue_status": "Closed", "posted_on": "Jun 18, 2016", "pr_contents": ["This PR replaces the use of ", " inside the ", " with a ", " class that mimics the former's interface, but only includes components used by the planning graph.", "This means that every vertex no longer stores additional upper/lower/discretization vectors or coordinate frame transforms.", "On the ROSCON demo, with discretization of 0.05 radians, maximum memory consumption dropped 36%. With 0.1 radians, it dropped approximately 48%. Program execution time dropped by about 10%.", "Does this change not affect the high level Sparse and Dense planners?", "It does not. The internal point mimics the interface of a ", " (ala Python duck-typing) and no modifications to the other components are required.", "+1"], "pr_code": ["JointTrajectoryPt", "planning_graph", "InternalJointPt", "JointTrajectoryPoint"]},
{"url": "https://github.com/ros-industrial-consortium/descartes/pull/179", "pr_title": "Planning Graph Completely Refactored", "username": "Jmeyer1292", "username_url": "/Jmeyer1292", "issue_status": "Closed", "posted_on": "Apr 6, 2017", "pr_contents": ["This PR is a work in progress; I intend to expand a little more on what I did and why it should replace what's already here.", "This pull request represents a complete re-write of the ", " data structure that underlies Descartes' existing planners. It strips away much of the abstraction that was previously there and focuses on storing the vast amount of graph data in a compact fashion that mirrors the actual problem that we solve.", "I tried a lot of small ways to fix various issues that really bugged me in Descartes' existing code. After a lot of proto-typing and internal debate, I decided that to achieve the speed, space efficiency, and correctness that I wanted would require me to drop the use of boost graph altogether.", "The highlights are (for larger search problems with many edges):", "These comparisons are made with respect to the current ", " branch and DO NOT take into account the cost of collision checking. That dominates everything, and we'll need a different approach to make that more manageable.", "The biggest change introduced by this PR is the replacement of the ", " graph with a custom graph type called a ", ".", "Previously, Descartes used several structures to represent data:", "All of this indirection comes with a cost.  The last item has to be recomputed every time a modification is done to the graph because all of the vertex descriptors are invalidated when the graph changes.", "The new algorithm has one data structure (psuedo-code):", "This directly stores the information we care about with just about no redundancy or extra overhead. A vertex can be accessed through an indirect read without having to do any extra lookups. Mutating the graph is also cheap, as rungs can be swapped without copying the underlying data using C++11 move semantics.", "The new graph makes some assumptions:", "Furthermore this structure emphasizes graph mutation that changes everything at a rung level. If we wanted to remove individual joint points, it would require some additional work and ", " be less efficient for that.", "Dijkstra's search algorithm is currently used to search the graph. This PR does not change that, but provides a custom implementation of it to work directly with our existing graph. I attempted to keep the existing boost graph algorithm by ", ", but the adapter code, particularly the iterators, ended up being longer than the actual implementation of the search.", "The search is based on the existing ", " and uses Boost's BinaryHeap to efficiently implement a priority queue.", "The above chart shows the relative speed and memory improvements of solving:", "The graph was solved at different angular discretizations shown along the bottom. The y value represents the time/space consumption of this PR relative to indigo-devel.", "After the changes in this PR, the test to see if an arc between two vertices is possible (i.e. if does not exceed joint vel limits) is actually a huge expense. This function looks like:", "This does a lot of redundant work with the cost computation, also called in the hot loop:", "Also the ", " is the same for all joints associated with a given user input point (because they all share a single timing constraint).", "Long story, short: If codify the idea we will test for joint velocity limits directly into the planner we can get another 1.3 to 2x speed improvement depending on the graph size. This change involves adding a ", " to the robot model.", "With these changes, OMP can be used to completely parallelize the graph building using three extra lines of code (plus some config file changes). I saw 3-4x speed improvements from this.", "I recognize that is PR will need more documentation, but I really want to get some eyes on it:", "\n", "\n", "I almost want to approve this PR based on the exquisite write-up, but that would be frowned upon.  I guess I have to review the code. :/", "I will need to expose the ", " accessor in ", " and ", " for users like ", " that need direct access. This change will break code like that, so I understand waiting or pushing it into a new release.", "I think you'll find that accessing the underlying structure of the graph is far easier now.", " Thank you for looking at this.", ", overall this is a thing of beauty.  I'm hesitant to accept this without some test comparing the new approach to the old approach.  Also, as a path to release, I would recommend creating this as an alternate planner in ", " and then replacing the planner in ", ".", "I will strike out changes related to ", " (for the moment), and create an alternative ", " that uses this graph.", "I will move toward adding unit tests that show the equivalence of these two methods. In my own testing, I have used my custom benchmarking branch to run tests (printing final cost and joint solutions along the way) which is based on the UR5. That has matured quite a bit, so maybe it's time to add that as a stepping stone to the final result.", " What do you think an appropriate name or namespacing for a new planner would be?", "Is it appropriate to put things in an \"experimental\" namespace, ala ", "?", "Any progress updates on this?  I am pretty interested in having this available in Indigo.  I can maybe find some time to help test if that would speed up the merging.", "Dood, I merged ", " into this and ran some tests.  I am seeing amazing results in my trials!", "Here is one of the runs:", "\n", "\nCalculating Joint Solutions: 4s", "\nCalculating Edge Weights: 3s", "\nPopulating Graph Vertices: 2s", "\nPopulating Graph Edges: ", "\nTotal Run Time: 22s", "\nCalculating Joint Solutions: 4s", "\nPopulating Graph Vertices: 0.2s", "\nCalculating/Populating Graph Edges: ", "\n", "Awesome job ", " ", " ", "Travis CI still has some problems with my cloning functions for reasons I haven't figured out, but here are the omp changes applied to your refactoring ", "Edit: Travis CI now passes for ", " and ", "Impressive!", " Your numbers are appreciated. Helps me feel more accomplished.", "I'm open to other suggestions, but I'd really like to get these changes merged with some breaking changes to the base classes and without labeling things as experimental.", "With that in mind, I'll aim to release a ", " version of this library (that you can still download and compile on Indigo).", "+1", "Alright, I've left this repository alone for long enough. I'm rebasing on kinetic-devel and I'm going to start pushing these changes.", "My plan forward:"], "pr_code": ["planning_graph", "planning_graph.cpp", "indigo-devel", "boost::adjacency_list", "LadderGraph", "DOF", "max_dtheta", "getJointVelocityLimits()", "LadderGraph", "DensePlanner", "SparsePlanner", "indigo", "jade", "SparsePlanner", "DensePlanner", "descartes_planner::experimental::DensePlanner", "jade-devel"], "pr_quotes": ["This PR is a work in progress; I intend to expand a little more on what I did and why it should replace what's already here."], "pr_details_more": ["~2x faster", "1/10 of the memory usage", "Less code (", " 1060 -> 260 LOC; even extras are only a few hundred lines)", "Easier to reason about graph mutation", "A boost graph which contained vertices (with IDs), and edges (with start ID, stop ID, and cost).", "A map relating IDs to JointPoints (which contain joint values and auxiliary info)", "A map relating the IDs of user input points to information such as what joint IDs are valid for that point, the next and former point, etc", "A map relating IDs to boost vertex_descriptors", "Every \"vertex\" will always have the same size (", ")", "Vertices in a given rung can only connect to vertices in the next rung", "The roscon 2015 demo", "1200 points", "time step = 0.1s between points", "There may be some regressions in warning messages generated by the graph", "The remove vertex function (not exercised by sparse planner) has not really been tested", "There is a bug with sparse planner and timing constraints (again/still). It is present in both indigo-devel and this PR. To fix other issues and do testing, this PR does include changes in ", "."]},
{"url": "https://github.com/osrf/capabilities/pull/79", "pr_title": "Return an error if start_capability requested for a capability that is already running", "username": "wjwwood", "username_url": "/wjwwood", "issue_status": "Closed", "posted_on": "Aug 28, 2014", "pr_contents": ["Addresses ", "This is a first pass; I'm open to suggestions on how to do this better. I wasn't sure how detailed of information to return to the callee; I settled on telling them whether the capability they requested is \"RUNNING\", \"STARTING\", or \"STOPPING\". Giving more detailed info (like \"stopping\" vs. \"terminated\") seemed like it exposed a bit too much internal state. Giving less detailed info (only that the call failed, for instance) seemed like not quite enough for many use cases.", "After these changes, one of the launch_manager tests hangs - I'm having a hard time debugging it. I didn't change anything in the launch manager code, so I'm not sure what is going on.", "Sorry Jon, I've not had time to look at this yet. I'll try to spend some time on it today, I first need to fix the failing unit tests which existed before your pull request.", "Can you rebase now that I merged ", "? Thanks!", "Rebased. Passes tests on my desktop.", "Passes on Travis too, I'll start the logical review now.", "The coverage percentage will go down, but these will be especially difficult to be coax out in a coverage test. I think this will be fine.", "The other thing to consider is deployment. This not only adds constants to the message file which will change the MD5sum of the message, but we also change the return type, which might be problematic for people consuming this in C++. With that being said I think the impact will be minimal since I imagine that most people are not using this currently.", " do you have any feedback on releasing this into indigo/hydro/groovy?", "If there is existing C++ code that relies on this service call returning a simple bool, I could modify my changes to keep the \"success\" bool, and just add an additional integer flag that has an error code if that bool is false. Then any existing code should continue to work (after a recompile, though)"]},
{"url": "https://github.com/jakeware/global_mapper/pull/2", "pr_title": "Jakeware/flatten map", "username": "jakeware", "username_url": "/jakeware", "issue_status": "Closed", "posted_on": "Apr 2, 2017", "pr_contents": ["Added a 2D map the uses pixel_map to store the data and nav_msgs::occupancy_grid to publish.", "lgtm. Couple higher-level comments:", "I'm going to stick with publishing on a timer for now.  I think it best captures the requirements of the downstream consumers of the output.  I also don't like the idea that the map would publish at a different rate with different sensors.  If I were to downsample the pointcloud update rate, it also isn't clear how it should be affected by other sensors that come in at a different rate.", "I have done some reading on what should be included in a constructor and feel like my opinion has changed.", "Before, I thought the primary concern with a constructor was that it not fail.  I thought that no actual work was to be done in the constructor and that this was partly because that work might fail.  The motivation being that no developer would expect a constructor to fail, so it should be conservative and let the developer call a clearly defined worker function such as Run.", "However, people seem to generally think that the most important part of a constructor is that it leave the class in a usable state when possible.  In this case, you really need to get the params and initialize the I/O to be able to call the run function.", "Although I made the change in ", ", I hate passing data with a member variable.  You have to in this setup, though.", "I will separate publishing the output vs the visualization.  This will be tied into the rviz plugin work.  I'm actually not sure how I want to publish the output.  costmap_2d uses a pointcloud2 and another process accepts that pointcloud and creates the marker array that gets sent to rviz.  That all feels pretty dirty.  I guess a custom message with a big data array is probably the best option.", "Cleaned up PopulateVoxelMapMsg.  ", ".", "Clearly, I need to just break this out into an rviz plugin.  But that was a good exercise anyway."], "pr_code": ["GetParam", "InitSubscribers", "InitPublishers", "Run", "PopulateVoxelMapMsg", "voxel_vec", "std::vector<double>", "std::vector<VoxelXYZ>", "VoxelXYZ", "unique_ptr"]},
{"url": "https://github.com/EndPointCorp/lg_ros_nodes/pull/147", "pr_title": "panoviewer: unload meshes to reduce memory use", "username": "minshallj", "username_url": "/minshallj", "issue_status": "Closed", "posted_on": "Jan 20, 2016", "pr_contents": ["possible fix for ", "This might be a fun one for ", " to test out. I'll outline the way to test it.", "On the headnode, first try to recreate this problem with the regular development setup:", "Now turn on the panoviewer and move around through panos until it breaks", "Then checkout this branch and resync the files", "And attempt to break the system. :)"], "pr_code": ["cd src/lg_ros_nodes\n./scripts/init_workspace -x ~/src/appctl/appctl  # needs to be initialized with a path to appctl\n./scripts/sync_to_disp_nodes.sh  # press enter when requested to\n", "git checkout issue/146_panoviewer_memory_consumption\n./scrypts/sync_to_disp_nodes.sh\n"]},
{"url": "https://github.com/fetchrobotics/fetch_ros/pull/96", "pr_title": "[Fetch Calibration] fix syntax error", "username": "moriarty", "username_url": "/moriarty", "issue_status": "Closed", "posted_on": "Nov 1, 2018", "pr_contents": ["Noticed here "], "pr_code": ["Failed to parse launchfile launch/capture_manual.launch:\n    Missing end tag for 'rosparam' (got \"launch\")\n    Line: 16 Position: 668 Last 80 unconsumed characters:\n"]},
{"url": "https://github.com/googlecartographer/cartographer_ros/pull/964", "pr_title": "Follow cartographer#1357", "username": "pifon2a", "username_url": "/pifon2a", "issue_status": "Closed", "posted_on": "Aug 13, 2018", "pr_contents": ["Follow ", "Compilation on kinetic seems to fail", "I singled out the CI fix in ", " since it's unrelated, if you want to merge it separately.", " Thanks. I am afraid we can't ", " separately I won't compile due to the Cartographer changes.", " Travis has been unbelievably unreliable recently. Every other build fails because it can't clone Ceres or some other network issue. And it often hits timeouts. Installing Ceres and Protobuf is not cached."], "pr_code": ["[42/52] Building CXX object cartographer_ros/CMakeFiles/cartographer_rosbag_validate.dir/rosbag_validate_main.cc.o\nFAILED: : && /usr/bin/c++   -O3 -DNDEBUG   cartographer_ros/CMakeFiles/cartographer_offline_node.dir/offline_node_main.cc.o  -o /catkin_ws/devel_isolated/cartographer_ros/lib/cartographer_ros/cartographer_offline_node  -rdynamic /catkin_ws/devel_isolated/cartographer_ros/lib/libcartographer_ros.a /opt/cartographer_ros/lib/libcartographer.a /opt/cartographer_ros/lib/libceres.a -lglog -lgflags -lpthread -lspqr -lcholmod -lccolamd -lcamd -lcolamd -lamd -llapack -lf77blas -latlas -lsuitesparseconfig -lrt -lcxsparse -lgomp -lpthread -lspqr -lcholmod -lccolamd -lcamd -lcolamd -lamd -llapack -lf77blas -latlas -lsuitesparseconfig -lrt -lcxsparse -lgomp -llua5.2 -lm -lglog -lgflags -lcairo /usr/local/lib/libprotobuf.a -lpthread abseil/src/abseil-build/absl/synchronization/libabsl_synchronization.a abseil/src/abseil-build/absl/debugging/libabsl_symbolize.a abseil/src/abseil-build/absl/time/libabsl_time.a abseil/src/abseil-build/absl/strings/libabsl_strings.a abseil/src/abseil-build/absl/strings/libstr_format_internal.a abseil/src/abseil-build/absl/strings/libstr_format_extension_internal.a abseil/src/abseil-build/absl/strings/libabsl_str_format.a abseil/src/abseil-build/absl/algorithm/libabsl_algorithm.a abseil/src/abseil-build/absl/base/libabsl_base.a abseil/src/abseil-build/absl/base/libabsl_dynamic_annotations.a abseil/src/abseil-build/absl/base/libabsl_malloc_internal.a abseil/src/abseil-build/absl/base/libabsl_spinlock_wait.a abseil/src/abseil-build/absl/base/libabsl_throw_delegate.a abseil/src/abseil-build/absl/container/libabsl_container.a abseil/src/abseil-build/absl/container/libtest_instance_tracker_lib.a abseil/src/abseil-build/absl/debugging/libabsl_debugging.a abseil/src/abseil-build/absl/debugging/libabsl_examine_stack.a abseil/src/abseil-build/absl/debugging/libabsl_failure_signal_handler.a abseil/src/abseil-build/absl/debugging/libabsl_leak_check.a abseil/src/abseil-build/absl/debugging/libabsl_stack_consumption.a abseil/src/abseil-build/absl/debugging/libabsl_stacktrace.a abseil/src/abseil-build/absl/memory/libabsl_memory.a abseil/src/abseil-build/absl/meta/libabsl_meta.a abseil/src/abseil-build/absl/numeric/libabsl_int128.a abseil/src/abseil-build/absl/numeric/libabsl_numeric.a abseil/src/abseil-build/absl/synchronization/libabsl_synchronization.a abseil/src/abseil-build/absl/types/libabsl_any.a abseil/src/abseil-build/absl/types/libabsl_bad_any_cast.a abseil/src/abseil-build/absl/types/libabsl_bad_optional_access.a abseil/src/abseil-build/absl/types/libabsl_optional.a abseil/src/abseil-build/absl/types/libabsl_span.a abseil/src/abseil-build/absl/types/libabsl_variant.a abseil/src/abseil-build/absl/utility/libabsl_utility.a -lboost_system -lboost_filesystem -lboost_thread -lboost_date_time -lboost_serialization -lboost_chrono -lboost_atomic -lpthread -lpcl_common /opt/ros/kinetic/lib/libeigen_conversions.so /opt/ros/kinetic/lib/liborocos-kdl.so.1.3.0 /opt/ros/kinetic/lib/librosbag.so /opt/ros/kinetic/lib/librosbag_storage.so /opt/ros/kinetic/lib/libroslz4.so -llz4 /opt/ros/kinetic/lib/libtopic_tools.so /opt/ros/kinetic/lib/libroslib.so /opt/ros/kinetic/lib/librospack.so -lpython2.7 -lboost_program_options /opt/ros/kinetic/lib/libtf2_ros.so /opt/ros/kinetic/lib/libactionlib.so /opt/ros/kinetic/lib/libmessage_filters.so /opt/ros/kinetic/lib/libtf2.so /opt/ros/kinetic/lib/liburdf.so -lurdfdom_sensor -lurdfdom_model_state -lurdfdom_model -lurdfdom_world -ltinyxml /opt/ros/kinetic/lib/librosconsole_bridge.so /opt/ros/kinetic/lib/libroscpp.so -lboost_signals /opt/ros/kinetic/lib/librosconsole.so /opt/ros/kinetic/lib/librosconsole_log4cxx.so /opt/ros/kinetic/lib/librosconsole_backend_interface.so -llog4cxx /opt/ros/kinetic/lib/libxmlrpcpp.so /opt/ros/kinetic/lib/libroscpp_serialization.so /opt/ros/kinetic/lib/librostime.so /opt/ros/kinetic/lib/libcpp_common.so -lboost_system -lboost_filesystem -lboost_thread -lboost_date_time -lboost_serialization -lboost_chrono -lboost_atomic -lpthread -lpcl_common /opt/ros/kinetic/lib/libeigen_conversions.so /opt/ros/kinetic/lib/liborocos-kdl.so.1.3.0 /opt/ros/kinetic/lib/librosbag.so /opt/ros/kinetic/lib/librosbag_storage.so /opt/ros/kinetic/lib/libroslz4.so -llz4 /opt/ros/kinetic/lib/libtopic_tools.so /opt/ros/kinetic/lib/libroslib.so /opt/ros/kinetic/lib/librospack.so -lpython2.7 -lboost_program_options /opt/ros/kinetic/lib/libtf2_ros.so /opt/ros/kinetic/lib/libactionlib.so /opt/ros/kinetic/lib/libmessage_filters.so /opt/ros/kinetic/lib/libtf2.so /opt/ros/kinetic/lib/liburdf.so -lurdfdom_sensor -lurdfdom_model_state -lurdfdom_model -lurdfdom_world -ltinyxml /opt/ros/kinetic/lib/librosconsole_bridge.so /opt/ros/kinetic/lib/libroscpp.so -lboost_signals /opt/ros/kinetic/lib/librosconsole.so /opt/ros/kinetic/lib/librosconsole_log4cxx.so /opt/ros/kinetic/lib/librosconsole_backend_interface.so -llog4cxx /opt/ros/kinetic/lib/libxmlrpcpp.so /opt/ros/kinetic/lib/libroscpp_serialization.so /opt/ros/kinetic/lib/librostime.so /opt/ros/kinetic/lib/libcpp_common.so -lboost_iostreams -lboost_regex -lconsole_bridge -Wl,-rpath,/opt/ros/kinetic/lib: && :\n/opt/ros/kinetic/lib/liburdf.so: undefined reference to `rosconsole_bridge::RegisterOutputHandlerProxy::~RegisterOutputHandlerProxy()'\ncollect2: error: ld returned 1 exit status\nninja: build stopped: subcommand failed.\n\ufffd[91mCommand failed, exiting.\ufffd[0mboost_filesystem.so;/usr/lib/x86_64-linux-gnu/libboost_thread.so;/usr/lib/x86_64-linux-gnu/libboost_date_time.so;/usr/lib/x86_64-linux-gnu/libboost_iostreams.so;/usr/lib/x86_64-linux-gnu/libboost_serialization.so;/usr/lib/x86_64-linux-gnu/libboost_chrono.so;/usr/lib/x86_64-linux-gnu/libboost_atomic.so;/usr/lib/x86_64-linux-gnu/libboost_regex.so;/usr/lib/x86_64-linux-gnu/libpthread.so  \n"]},
{"url": "https://github.com/ros-planning/navigation/pull/559", "pr_title": "update map_server to support Python 2 and 3", "username": "DLu", "username_url": "/DLu", "issue_status": "Closed", "posted_on": "Apr 9, 2017", "pr_contents": ["I also added a missing copyright header to one of the files.", "On a side note, I'm not sure what ", " is used for either. It isn't referenced from anything. It could probably be removed."], "pr_code": ["map_server/test/consumer.py"]},
{"url": "https://github.com/ros-planning/moveit/pull/333", "pr_title": "move_group_interface: Clarify variable name to reduce confusion", "username": "v4hn", "username_url": "/v4hn", "issue_status": "Closed", "posted_on": "Nov 1, 2016", "pr_contents": [" was mislead by ", " so I've clarified the difference between planning time allowed for the solver, and the returned actual planning time. i do not think this should be backported to I/J", "I don't think this change helps in the case you reference.", "\nThe problem there is that ", " has a field ", ", that should actually be called ", " or something like that.", "\nBut I don't want to change the API there for no real reason.", "I approve the patch, just don't really think it helps much...", "Yes I agree ", ", but the var I'm changing is private so its ok, and the one that really needs to be changed is public. This PR is actually more for myself, because when I was checking ", "'s and your work I got confused myself."], "pr_code": ["moveit::planning_interface::MoveGroupInterface::Plan", "planning_time", "consumed_planning_time"]},
{"url": "https://github.com/start-jsk/rtmros_common/pull/428", "pr_title": "does not call shopt on zsh", "username": "garaemon", "username_url": "/garaemon", "issue_status": "Closed", "posted_on": "Apr 18, 2014", "pr_contents": ["it's a hotfix for ", "test fails because of unstability of test itself", " may cause something wrong..", "However travis of ", " passed.", "\nI think this is similar to ", "I think rtmlaunch uses something that is not tested in rtshell's test code and we introduced some bug on v3.0.1.", "when we runs prerelease job, it will check all downstream package, so we should run this before we release new version and downstream users who uses deb files will not in trouble.", " will fix this.", "the original topic is about sh script", "thanks, ", " fixed the compilation problem."], "pr_code": ["  [AGGREGATED TEST RESULTS SUMMARY]\n\n  ERRORS/FAILURES:\n  [openrtm_tools.rosunit-rtmlaunch/test_provider_and_consumer_connected][ERROR]---\n  'NoneType' object has no attribute 'properties'\n    File \"/usr/lib/python2.7/unittest/case.py\", line 327, in run\n      testMethod()\n    File \"/home/travis/ros/ws_rtmros_common/src/rtmros_common/openrtm_tools/test/test-rtmlaunch.py\", line 68, in test_provider_and_consumer_connected\n      self.assertTrue(connection.properties['port.port_type']=='CorbaPort')\n  --------------------------------------------------------------------------------\n\n  [openrtm_tools.rosunit-rtmlaunch/test_seqin_and_seqout_connected][ERROR]--------\n  'NoneType' object has no attribute 'properties'\n    File \"/usr/lib/python2.7/unittest/case.py\", line 327, in run\n      testMethod()\n    File \"/home/travis/ros/ws_rtmros_common/src/rtmros_common/openrtm_tools/test/test-rtmlaunch.py\", line 123, in test_seqin_and_seqout_connected\n      self.assertTrue(connection1.properties['dataport.data_type']=='IDL:RTC/TimedFloat:1.0')\n  --------------------------------------------------------------------------------\n\n  PACKAGES: \n   * openrtm_tools\n\n\n  SUMMARY\n   * RESULT: FAIL\n   * TESTS: 9\n   * ERRORS: 2\n   * FAILURES: 0\n\n"]},
{"url": "https://github.com/fetchrobotics/fetch_ros/pull/97", "pr_title": "Fix launch file indigo (back-port #96)", "username": "moriarty", "username_url": "/moriarty", "issue_status": "Closed", "posted_on": "Nov 1, 2018", "pr_contents": ["Noticed here ", "backport "], "pr_code": ["Failed to parse launchfile launch/capture_manual.launch:\n    Missing end tag for 'rosparam' (got \"launch\")\n    Line: 16 Position: 668 Last 80 unconsumed characters:\n"]},
{"url": "https://github.com/cra-ros-pkg/robot_localization/pull/472", "pr_title": "fix: wall time used when `use_sim_time` is true", "username": "ayrton04", "username_url": "/ayrton04", "issue_status": "Closed", "posted_on": "Aug 8, 2019", "pr_contents": ["Hi,", "When using the param ", ", the initialization of ", " would cause ", " to return the wall time instead of the clock time, if it is not yet published. The expected behaviour would be to wait for the ", " topic, and returning ", " in the meantime.", "\nIn addition, the time initialization is already done by the node init and should not be called by hand, except in a library. This does not seems to be the case here, as ", " is always part of a node.", "Yes, agreed, though this seems like it might cause some fairly major changes in behaviour. I wonder if anyone is relying on the current setup, even if it is incorrect.", "Also, I wonder if it makes sense to add a block like this, from ", ":", "\n      ", "\n    ", "\n         Line 69\n      in\n      ", "\n    ", "From the implementation of isValid : ", " this seems to wait for the ros::Time to be different from 0 in the case of ", " is used. I would say this is rather important in order for the filter not to make any predict / update while the delta-time will obviously be 0.", "I don't think the ROS time init should cause issues. The ROS init is called before the filter is created ", " so that time init should be called. I think that call is redundant and maybe from a time pre-ROS to make use of the timing library?", " here is how to reproduce the bug (sorry, I should have posted this at the beginning) :", "\nAdd the following ", " ", ".", "Now running a kalman node with ", " set to ", ", you will see the ", " loop is running with wall time. Removing the ", " fixes the issue.", "I can't recall why that's there, TBH, but I suppose that, as long as it doesn't break the behaviour of live robots, I'd be OK with applying the fix as-is. Still, I'd like to add a call to ", ". Should we also gate it behind a new parameter? I can't see why you'd want the filter to run with 0 time stamps, so perhaps no state estimate is preferred.", "I guess my main concern is a use case whereby some other node is affected by the lack of filter output for the time between when the software starts and when ", " starts publishing.", "I can't see why you'd want the filter to run with 0 time stamps, so perhaps no state estimate is preferred.", "Actually that's the behavior we get when removing the ", ", the filter wait for ", " messages in order to output something. That's fine by me.", "I guess my main concern is a use case whereby some other node is affected by the lack of filter output for the time between when the software starts and when /clock starts publishing.", "In my opinion, this kind of race condition should be taken care of in the other node consuming the filter output. Publishing \"as fast as possible\" cannot guarantee other node to not be affected by this, as roslaunch and node lifecycles are somewhat non-deterministic in ROS1.", "In my opinion, this kind of race condition should be taken care of in the other node consuming the filter output. Publishing \"as fast as possible\" cannot guarantee other node to not be affected by this, as roslaunch and node lifecycles are somewhat non-deterministic in ROS1.", "Agreed, but it's the change in behaviour that concerns me. This is all completely hypothetical, but what worries me is we make this change, release, etc., and then we break someone's stack because of it. Should they fix the other nodes? Sure. Will tracking this down create a headache for them? Yes.", "Having said that, this is for Melodic, and while that's been out for a while, I think I'd be willing to risk it, especially since, again, this should only affect sim.", "In any case, would you mind also (a) adding a call to ", ", and (b) putting that call behind a new parameter?", "My bad, I didn't consider backward compatibility and breaking changes, you're absolutely right.", "\nHowever, I don't understand the use of this ", ". What is this supposed to do ? In the case of ", ", the node already waits for ", " messages before running.", "Wouldn't it be better to gate the call of ", " behind a (default true) parameter to ensure the previous behavior by default ?", "I hope this is what you meant. It does not induce any bugs, but I'm not sure what it brings either.", "Sorry re-reading my comment I can see how it could be taken the wrong way. The point I failed to articulate is that since time initialization happens on ROS initialization prior, the correct clock (sim, wall) is used and it should be totally harmless to remove that line as proposed on hardware robots and for simulated robots it should create consistent behavior.", "Ah, OK, now that I've had time to actually look at this, yes, I agree that the original approach was fine. Feel free to put the PR back to your original change and I'll merge. Sorry about that. Thanks!", "Glad to finally find this issue - I've been having this problem on melodic and it's been driving me crazy as I've been certain I've followed the right steps (setting use_sim_time, publishing clock, etc.) yet the debug file is showing wall time likewise with the frequency of the filter!", "When is this due to be merged? Are there any instructions somewhere on how to patch a ros package in the meantime?", "if someone else stumbles on it - I managed to use \"overlays\" by cloning ", " 's branch into a catkin_ws and building it; although I'm still seeing in the debug file this:", "\n", "despite having set ", "EDIT:", "\nI thought that maybe I needed the node to wait for valid time, which seems to have been the discussion above. BTW I do think that should be the default behavior as that's what the /use_sim_time documentation implies. I understand that others might be relying on the current non-confirming behavior, and exposing a fix as done in your ", " commit would be the right thing to do (I wish you hadn't force-pushed, makes it harder to properly get the commit from git history :p)", "Despite that I'm still seeing integration time not starting at 0 even though that's the value I'm sending in /clock ?", "Despite that I'm still seeing integration time not starting at 0 even though that's the value I'm sending in /clock", "You're manually publishing to ", "? Are you perhaps also playing back a bag file with ", "? What are the time stamps on your sensor measurements?", "Also, I'll merge and release this next week. I'm on vacation at the moment. Thanks, ", "!", "if someone else stumbles on it - I managed to use \"overlays\" by cloning ", " 's branch into a catkin_ws and building it; although I'm still seeing in the debug file this:", "\n", "despite having set ", "EDIT:", "\nI thought that maybe I needed the node to wait for valid time, which seems to have been the discussion above. BTW I do think that should be the default behavior as that's what the /use_sim_time documentation implies. I understand that others might be relying on the current non-confirming behavior, and exposing a fix as done in your ", " commit would be the right thing to do (I wish you hadn't force-pushed, makes it harder to properly get the commit from git history :p)", "Despite that I'm still seeing integration time not starting at 0 even though that's the value I'm sending in /clock ?", " : From my test setup, the commit ", " happened to do nothing. Using ", " with my first commit did the magic : the node \"blocked\" until it received a valid time on ", ", and that's the behaviour I was searching for. Isn't it the case for you ? I'm not to understand the issue you had despite having the fix.", " : yes I'm manually publishing to /clock from a python script that's streaming the data. I can verify that the timestamps of the messages printed in the debug log are what I expect (modulo a couple of oddities printing timestamps with decimal points less than .10, and the messages sometimes being out of order) . ", "My bad - in the process of debugging things i had moved the use_sim_time to be done by a ", " but apparently that doesn't work. I hadn't seen a difference before due to the bug caused by Time::Init, but I've now moved it back to be in a  in my launch file and things are  finally starting to work more like the way I expect them to!", " This cost us 2 days debugging! ;) Greeting from ADS", "Quick peek into the docs and we know what ros::Time::init actually does: ", ";-)"], "pr_code": ["use_sim_time", "ros::Time", "ros::Time::now()", "/clock", "0", "ros_filter.cpp", "navsat_transform_node", "use_sim_time", "ROS_ERROR_STREAM_THROTTLE(0.1, \"\" << curTime);", "use_sim_time", "true", "periodicUpdate", "Time::init", "waitForValid()", "/clock", "Time::init", "/clock", "waitForTime", "ros::Time::waitForValid", "use_sim_time", "/clock", "ros::Time::init", "Integration time is 1564630170.833963871", "rosparam set /use_sim_time true", " 9fdbcc8", "/clock", "--clock", "Integration time is 1564630170.833963871", "rosparam set /use_sim_time true", " 9fdbcc8", "9fdbcc8", "sim_time", "/clock", "rostopic echo /clock", "rosparam set"], "pr_quotes": ["I can't see why you'd want the filter to run with 0 time stamps, so perhaps no state estimate is preferred.", "I guess my main concern is a use case whereby some other node is affected by the lack of filter output for the time between when the software starts and when /clock starts publishing.", "In my opinion, this kind of race condition should be taken care of in the other node consuming the filter output. Publishing \"as fast as possible\" cannot guarantee other node to not be affected by this, as roslaunch and node lifecycles are somewhat non-deterministic in ROS1.", "Despite that I'm still seeing integration time not starting at 0 even though that's the value I'm sending in /clock", "if someone else stumbles on it - I managed to use \"overlays\" by cloning ", " 's branch into a catkin_ws and building it; although I'm still seeing in the debug file this:", "\n", "despite having set ", "EDIT:", "\nI thought that maybe I needed the node to wait for valid time, which seems to have been the discussion above. BTW I do think that should be the default behavior as that's what the /use_sim_time documentation implies. I understand that others might be relying on the current non-confirming behavior, and exposing a fix as done in your ", " commit would be the right thing to do (I wish you hadn't force-pushed, makes it harder to properly get the commit from git history :p)", "Despite that I'm still seeing integration time not starting at 0 even though that's the value I'm sending in /clock ?"]},
{"url": "https://github.com/gtagency/buzzmobile/pull/77", "pr_title": "Bearing displacement", "username": "williamsam1", "username_url": "/williamsam1", "issue_status": "Closed", "posted_on": "Nov 1, 2016", "pr_contents": [" ", "When this is ready for review, just put the \"needs review\" label to lmk and I'll look at it", "two tiny nits but I looked over the actual logic and it looks good. Sorry about the confusion earlier. Your factoring out helped a lot.", "I dont think ", " is a reserved word by Python. Just ", " is. So", "\nyou can use. Also when we have the pylint working it will yell at you for", "\nstylist errors so you can learn those by the frustration of pylint :)", "On Thu, Oct 27, 2016, 10:52 Roland (William) Samuelson <", "\n", "> wrote:", "In buzzmobile/process/bearing/bearing.py", "\n", ":", "@@ -25,10 +25,10 @@ def median(self):", "\nreturn (sortedArray[index] + sortedArray[index + 1]) / 2.0", "-#Global Variables", "\n-bearings = {}", "\n-bearings['last_fix'] = None", "\n-bearings['med_filter'] = MedianFilter(rospy.get_param('median_filter_size'))", "\n+# Global variables", "\n+globalVars = {}", "\n+globalVars['last_fix'] = None", "\n+globalVars['med_filter'] = MedianFilter(rospy.get_param('median_filter_size'))", "OK cool. I haven't done Python before so please tell me of any stylistic", "\nor whatever errors. I understand what the dict was doing when Dip2Dip", "\noriginally wrote it when he had it kinda badly named as bearings, but when", "\nyou change the name to globals it is highlighted by the IDE? Is globals a", "\nreserved word or a special dict or something?", "\u2014", "\nYou are receiving this because you commented.", "Reply to this email directly, view it on GitHub", "\n", ", or mute the thread", "\n", "\n.", "Okay the Python god has spoken and not to rat out Rapha or anything but he", "\nhad me remove usages of the global keyword in that method", "On Thu, Oct 27, 2016, 7:24 PM Josh Morton ", " wrote:", "In buzzmobile/process/bearing/bearing.py", "\n", ":", "rapha no!", "Its a scoping rule. If a value is ever assigned inside a function, it is", "\nassigned a local varname and a value (see some_method.", ".co_varnames).", "\nIf it is never assigned to, then a recursive lookup is used to parent", "\n(nonlocal) function and finally the global scope.", "That's why the result of", "a = 5", "\ndef func():", "\na = 7", "\nfunc()", "\nprint(a)", "will be 5, and not 7, and also why", "a = 5", "\ndef f():", "\nb = a", "\na = 5", "\nf()", "will raise UnboundLocalError. Depsite the fact that a exists at runtime,", "\nat compile time (that is, when the function was compiled), it was created", "\nas a local. And that local isn't yet bound in the function.", "To fix, use the global keyword.", "a_global", "\ndef message_cb(new_msg):", "\nglobal a_global", "\na_global = new_msg", "This instructs python to use the global version of a_global in this", "\nfunction instead of creating a local.", "\u2014", "\nYou are receiving this because you authored the thread.", "\nReply to this email directly, view it on GitHub", "\n", ", or mute the thread", "\n", "\n.", "Well, its possible that there's a design issue. Consider using ros as a way to 'store' globals. Think, for example, having a node that subscribes to here, that keeps the last pose, and this node also subscribes to that node. IDK if you can even do that though.", "Wait if I'm being ratted out I'll point out that I had consulted Josh about this and we both said the use of ", " was kind of icky. That's why we've been doing dicts, because that works.", "I believe Josh's \"rapha no\" comment was bc my explanation was wrong, correct?", "We can look up if ros has a better way of storing globals but I'm almost 100% sure the answer is no. Until then I'll say dicts are still the way we're using to store globals, because it works.", "Not doing this. See below", "Correct, explanation was wrong. Globals are stil icky.", "On Thu, Oct 27, 2016 at 8:37 PM Raphael Gontijo Lopes <", "\n", "> wrote:", "Wait if I'm being ratted out I'll point out that I had consulted Josh", "\nabout this and we both said the use of global was kind of icky. That's", "\nwhy we've been doing dicts, because that works.", "I believe Josh's \"rapha no\" comment was bc my explanation was wrong,", "\ncorrect?", "We can look up if ros has a better way of storing globals but I'm almost", "\n100% sure the answer is no. Until then I'll say dicts are still the way", "\nwe're using to store globals, because it works.", "\u2014", "\nYou are receiving this because you commented.", "\nReply to this email directly, view it on GitHub", "\n", ",", "\nor mute the thread", "\n", "\n.", "Why did my one method low hanging fruit pr have to spawn a whole", "\napplication structure discussion -_-", "On Fri, Oct 28, 2016 at 8:39 AM Josh Morton ", "\nwrote:", "Correct, explanation was wrong. Globals are stil icky.", "On Thu, Oct 27, 2016 at 8:37 PM Raphael Gontijo Lopes <", "\n", "> wrote:", "Wait if I'm being ratted out I'll point out that I had consulted Josh", "\nabout this and we both said the use of global was kind of icky. That's", "\nwhy we've been doing dicts, because that works.", "I believe Josh's \"rapha no\" comment was bc my explanation was wrong,", "\ncorrect?", "We can look up if ros has a better way of storing globals but I'm almost", "\n100% sure the answer is no. Until then I'll say dicts are still the way", "\nwe're using to store globals, because it works.", "\u2014", "\nYou are receiving this because you commented.", "\nReply to this email directly, view it on GitHub", "\n", ",", "\nor mute the thread", "\n<", "\n", ".", "\u2014", "\nYou are receiving this because you authored the thread.", "\nReply to this email directly, view it on GitHub", "\n", ",", "\nor mute the thread", "\n", "\n."], "pr_code": ["globals", "global", " if fix is not None:\n", "   last_fix = fix\n", "   if last_fix is not None:\n", "       distance = get_distance(last_fix, fix)\n", "       bearing = get_forward_angle(last_fix, fix)\n", "       med_filter.add(bearing)\n", "       bearing_pub.publish(med_filter.median())\n", "       if distance >= MIN_FIX_DISTANCE:\n", "           last_fix = fix\n", "   else:\n", "       last_fix = fix\n", "global", "global a_global", "bearing.py"], "pr_quotes": ["In buzzmobile/process/bearing/bearing.py", "\n", ":", "-#Global Variables", "\n-bearings = {}", "\n-bearings['last_fix'] = None", "\n-bearings['med_filter'] = MedianFilter(rospy.get_param('median_filter_size'))", "\n+# Global variables", "\n+globalVars = {}", "\n+globalVars['last_fix'] = None", "\n+globalVars['med_filter'] = MedianFilter(rospy.get_param('median_filter_size'))", "OK cool. I haven't done Python before so please tell me of any stylistic", "\nor whatever errors. I understand what the dict was doing when Dip2Dip", "\noriginally wrote it when he had it kinda badly named as bearings, but when", "\nyou change the name to globals it is highlighted by the IDE? Is globals a", "\nreserved word or a special dict or something?", "\u2014", "\nYou are receiving this because you commented.", "Reply to this email directly, view it on GitHub", "\n", ", or mute the thread", "\n", "\n.", "In buzzmobile/process/bearing/bearing.py", "\n", ":", "rapha no!", "Its a scoping rule. If a value is ever assigned inside a function, it is", "\nassigned a local varname and a value (see some_method.", ".co_varnames).", "\nIf it is never assigned to, then a recursive lookup is used to parent", "\n(nonlocal) function and finally the global scope.", "That's why the result of", "a = 5", "\ndef func():", "\na = 7", "\nfunc()", "\nprint(a)", "will be 5, and not 7, and also why", "a = 5", "\ndef f():", "\nb = a", "\na = 5", "\nf()", "will raise UnboundLocalError. Depsite the fact that a exists at runtime,", "\nat compile time (that is, when the function was compiled), it was created", "\nas a local. And that local isn't yet bound in the function.", "To fix, use the global keyword.", "a_global", "\ndef message_cb(new_msg):", "\nglobal a_global", "\na_global = new_msg", "This instructs python to use the global version of a_global in this", "\nfunction instead of creating a local.", "\u2014", "\nYou are receiving this because you authored the thread.", "\nReply to this email directly, view it on GitHub", "\n", ", or mute the thread", "\n", "\n.", "Wait if I'm being ratted out I'll point out that I had consulted Josh", "\nabout this and we both said the use of global was kind of icky. That's", "\nwhy we've been doing dicts, because that works.", "I believe Josh's \"rapha no\" comment was bc my explanation was wrong,", "\ncorrect?", "We can look up if ros has a better way of storing globals but I'm almost", "\n100% sure the answer is no. Until then I'll say dicts are still the way", "\nwe're using to store globals, because it works.", "\u2014", "\nYou are receiving this because you commented.", "\nReply to this email directly, view it on GitHub", "\n", ",", "\nor mute the thread", "\n", "\n.", "Correct, explanation was wrong. Globals are stil icky.", "On Thu, Oct 27, 2016 at 8:37 PM Raphael Gontijo Lopes <", "\n", "> wrote:", "\u2014", "\nYou are receiving this because you authored the thread.", "\nReply to this email directly, view it on GitHub", "\n", ",", "\nor mute the thread", "\n", "\n."]},
{"url": "https://github.com/ros-industrial/fanuc/pull/213", "pr_title": "Add 'flange' frames to all robot models", "username": "gavanderhoorn", "username_url": "/gavanderhoorn", "issue_status": "Closed", "posted_on": "May 19, 2017", "pr_contents": ["As per subject. Commit comment from ", ":", "Similar to 'tool0', but without the orientation change (to make Z+ parallel to X+).", "The 'flange' frame is intended as attachment point for EEFs, while 'tool0' is meant to be a immutable frame that always encodes an \"all-zeros tool centre point\" configuration.", "Both 'tool0' and 'flange' should not be changed.", "There should be no functional changes.", "Composite URDFs that attach EEFs to ", " should be unaffected: ", " is inserted between ", " (or ", ") and ", " which maintains its original orientation. In addition, since ", " is connected to both by a ", " joint, no kinematics changes are required.", "Edit: updated the commit msg:", "The 'flange' frame is intended to function as an 'attachment point' for EEF xacros. In order to easily swap robot models, it is beneficial for such attachment points -- typically the last link in a robot xacro -- to have a consistent orientation.", "'flange' is defined as always having x+ pointing out of the (physical) flange link. For robots that happen to have the link-local coordinate frame of their last link in their zero pose already aligned with REP-103 conventions (x+ forward, y+ left, z+ up), 'flange' will be an identity transform. In other cases, 'flange' includes appropriate rotations to orient x+ such that it again follows the above described convention.", "Note that the above does not mean that 'flange' will ", " be world aligned, only that x+ will always point away from the (physical) flange / last link of the robot model. Rotations and translations will impact 'flange's pose just as they do other robot links.", "It's sibling frame, 'tool0', is similar, but this frame is ", " located and oriented such that it corresponds to whatever is configured on the robot controller as an 'all zeros' tool frame.", "Both 'tool0' and 'flange' are to be considered immutable frames, and are not intended to be changed or updated by consumers of xacro macros including them.", "I intend to follow up with a (modified) REP that takes the current (fragmented) documentation on the ", " and ", " frames and extends it to include the new ", " frame.", "Does the flange frame have a common orientation?  Is it always Z out?", "Basically, ", " is meant as an attachment point in the urdf/xacro. It is what many ppl now (ab)use ", " for, but without the awkward z-pointing-out-of-the-last-link problem, and associated 'fixup' rotations I see in composite xacros that try to attach an EEF model to it.", " follows regular ROS conventions: x forward, y to the left, z up. ", " then adds the rotations necessary to orient that frame so it corresponds to whatever the mfg ctrlr has.", "The point of introducing this frame is to separate responsibilities: ", " is the common attachment point that (I propose) we add to all our models and to which EEF models should be attached (still using a fixed joint), and ", " should ", " correspond to an 'all-zeros' tool frame (and thus should ", " be changed, users should ", " add new frames that correspond to whatever toolframe they really want to / need to use).", "A second goal is to add some abstractions to our kinematic chains: ", " and ", " already did that, now ", " adds another abstraction.", "I agree with your reasoning, but wouldn't flange be more useful if the orientation could be counted on across robots?  I've had a lot of trouble swapping arms because the X-forward convention relies on the zero position of the robot.", "The idea of ", " is indeed to have a frame that always has the same orientation.", "I'm not too enthousiastic about it, but we could perhaps require that X+ should always be aligned such that it is perpendicular to the (main?) surface of the end-of-arm.", "For some robots that will mean that ", " will then perhaps undo some of the rotations (depending on whether ", " and ", " are parent-child or siblings of course), but it would at least force ROS conventions on it and keep things interchangable.", "We could say the flange should be located at the center of the mounting plate (center of the bolt pattern) with the x-axis pointing out (in the direction of the end-effector).  The only ambiguity is the rotation about the x-axis.", "We could say the flange should be located at the center of the mounting plate (center of the bolt pattern) with the x-axis pointing out (in the direction of the end-effector)", "isn't that basically what I just wrote ? :)", "The only ambiguity is the rotation about the x-axis.", "yes. If we additionally add that Z+ should be pointing 'up' (ie: towards the sky / away from the ground) we should avoid any ambiguity given that ROS uses a right-handed system.", "Thanks for the review.", "I'm going to update ", " on the two M-430iA variants and then merge the PR if I receive no further comments.", ": I've updated the definition of the frame, made ", " not a child but a sibling (so both have the last link in the main chain of the robot as their parent) and fixed the orientation on the M-430iA variants (the only series that doesn't have ", " / ", " world aligned in its zero position).", " will now ", " have ", " pointing away from the (physical) flange / last link of the robot. This should make it a good attachment point for EEF models, as this orientation should be identical across all supported robot series and variants.", "Thanks for the review ", ". "], "pr_code": ["tool0", "flange", "link_6", "link_5", "tool0", "flange", "fixed", "base", "tool0", "flange", "flange", "tool0", "flange", "tool0", "flange", "tool0", "base", "tool0", "flange", "flange", "tool0", "flange", "tool0", "flange", "tool0", "link_5", "link_6", "flange", "x+"], "pr_quotes": ["Similar to 'tool0', but without the orientation change (to make Z+ parallel to X+).", "The 'flange' frame is intended as attachment point for EEFs, while 'tool0' is meant to be a immutable frame that always encodes an \"all-zeros tool centre point\" configuration.", "Both 'tool0' and 'flange' should not be changed.", "The 'flange' frame is intended to function as an 'attachment point' for EEF xacros. In order to easily swap robot models, it is beneficial for such attachment points -- typically the last link in a robot xacro -- to have a consistent orientation.", "'flange' is defined as always having x+ pointing out of the (physical) flange link. For robots that happen to have the link-local coordinate frame of their last link in their zero pose already aligned with REP-103 conventions (x+ forward, y+ left, z+ up), 'flange' will be an identity transform. In other cases, 'flange' includes appropriate rotations to orient x+ such that it again follows the above described convention.", "Note that the above does not mean that 'flange' will ", " be world aligned, only that x+ will always point away from the (physical) flange / last link of the robot model. Rotations and translations will impact 'flange's pose just as they do other robot links.", "It's sibling frame, 'tool0', is similar, but this frame is ", " located and oriented such that it corresponds to whatever is configured on the robot controller as an 'all zeros' tool frame.", "Both 'tool0' and 'flange' are to be considered immutable frames, and are not intended to be changed or updated by consumers of xacro macros including them.", "We could say the flange should be located at the center of the mounting plate (center of the bolt pattern) with the x-axis pointing out (in the direction of the end-effector)", "The only ambiguity is the rotation about the x-axis."]},
{"url": "https://github.com/ros-controls/ros_controllers/pull/298", "pr_title": "Update joint_trajectory_controller_impl.h for issue #48", "username": "onionsflying", "username_url": "/onionsflying", "issue_status": "Closed", "posted_on": "Sep 30, 2017", "pr_contents": ["fix the issue ", "This is basically the same patch @ipa-fxm  did in ", ", but it ", ".", "I think ", " should be called outside the RT update. It consumes about 0.3 ms, which is a little long for RT.", "Hi, ", " ! Would you like to review the new commit? If you have any suggestion, please tell me.", "I am not convinced that this is a proper fix, it might even introduce a race condition with multi-threaded spinners.", "I think setHoldPosition should be called outside the RT update. It consumes about 0.3 ms, which is a little long for RT.", "How did you measure this?", "\nAnd why are 0.3ms too long for RT?", "If you have any suggestion, please tell me.", "I think it would be great to have a unit test for ", ".", "\nTheir might be a bug somewehe underneath that leads to problem with lost goals.", "I just added some codes e.g. ROS_DEBUG_NAMED(name, \"msg, %f\", ros::Time::now().toSec()) into ", " and ", " . Then I could get the informations that I mentioned. It's obviously not a strict test. I thought a RT cycle should take less than 1ms. And 0.3ms could be a big part, that might make the whole cycle take more than 1ms. So I wanna insist on my thoughts, since I couldn't imagine the race condition. ", " should be a method without race condition. Have you seen some differences between actionResultCB in ", " and ", " from the perspective of race condition?", "I agree that there might be a bug somewhere. Thus I'm not able to explain why the timer ", " stops running abnormally when we patched the code in a way like ", " . (I know when the timer stops, because I added a line ", " in ", " .)", "I couldn't imagine the race condition", "Your code stops the motions without checking the goal matching the aborted one.", "\nHowever, I don't think that adding a subscriber is a proper fix.", "I just added some codes e.g. ROS_DEBUG_NAMED(name, \"msg, %f\", ros::Time::now().toSec()) into", "This not a very precise measurement..", "I thought a RT cycle should take less than 1ms. And 0.3ms could be a big part, that might make the whole cycle take more than 1ms.", "In our context RT is about determinism and non-blocking behavior.", "\nThe actual cycle time is bound to the application.", "I agree that there might be a bug somewhere. Thus I'm not able to explain why the timer goal_handle_timer_ stops running abnormally when we patched the code in a way like ", "That's why it would be great to have a unit test for this case.", "\nIt might even help to do proper time measurements.", "Does this PR still hold relevance? Can I close it? Should we retarget/rework for melodic?"], "pr_quotes": ["I think setHoldPosition should be called outside the RT update. It consumes about 0.3 ms, which is a little long for RT.", "If you have any suggestion, please tell me.", "I couldn't imagine the race condition", "I just added some codes e.g. ROS_DEBUG_NAMED(name, \"msg, %f\", ros::Time::now().toSec()) into", "I thought a RT cycle should take less than 1ms. And 0.3ms could be a big part, that might make the whole cycle take more than 1ms.", "I agree that there might be a bug somewhere. Thus I'm not able to explain why the timer goal_handle_timer_ stops running abnormally when we patched the code in a way like "]},
{"url": "https://github.com/ros-planning/moveit/pull/1146", "pr_title": "[C++14] Use C++14 in Melodic", "username": "v4hn", "username_url": "/v4hn", "issue_status": "Closed", "posted_on": "Nov 26, 2018", "pr_contents": ["On Ubuntu 18.04, gcc-7 defaults to C++14.", "\nOn Ubuntu 16.04, C++14 is available, but only used if explicitly set.", "Targeted Languages:", "Thanks for opening this pull request! Please check out our contributing guidelines.", " as discussed during World MoveIt Day. The local build is still running ", " so wait for the Jenkins job", "Do not merge until we get approval from ", " and ", "I'm not sure about the side effects of this. I remember we had shared_ptr issues when mixing C++98 and C++11 compiled code in the past. What is the default used by basic ROS libs, e.g. roscpp, urdf, etc.?", "Melodic is C++14", "\n", "Kinetic is C++11", "Melodic is C++14", "So, we will not cherry-pick this to Kinetic?", " re: mixing C++98 and C++11, Those were particularly big changes in C++, but were they run-time or compile-time issues?", "This shouldn't be cherry-picked to Kinetic", "My experience is that if you mix use of c++11 and c++14 you'll be ok if it's the same compiler and stdlib just with different settings (the compiler and standard library developers work hard ensure this ABI compatibility).", "So ", " from me, but it's not guaranteed to be issue free.", "I'm now recompiling and will run a mixed test, directly on the robot hardware:", "fetch_ikfast_plugin with C++11, and this branch for MoveIt C++14...", "Unfortunately we didn't have time to have get it compiled and tested on the robot ", ", ", " and I were ssh'd into the same robot, sharing a catkin workspace it got into a bit of a mess.", "To ensure it was all the changes on the robot causing the catkin errors, I setup a clean environment on a server and tested that things compiled... And it worked... so it was something we had in our local environment, we can clean it up and test it on hardware tomorrow.", "I was going to try out another robot in gazebo simulation... but there is no melodic-devel branch for moveit_robots: ", "We have had MoveIt! Kinetic running on C++14 for some while as our/ensenso's profiling tool requires that ... no issues observed", " wrote:", "Melodic is C++14", "\n", "Bit late, but I don't think you can say this.", "The language used in the REP is:", "Targeted Languages:", ", if we look at how ", " is compiled (for instance, there are many other packages that do similar things):", "Note the ", " in there.", "Edit: C++11 explicitly set ", ".", " see the comment above", "Edit: C++11 explicitly set here.", "Should/Can that change for Melodic?", "Some of the other ", " stack packages have switched ", "The only ones which haven't are:", "(in a clean rosinstall_generator ros_comm)", "All the packages which aren't setting this flag will use the default C++14 set by gcc-7 in Ubuntu 18.04, an ls of this workspace is:", "Bit late, but I don't think you can say this.", " that's a misadvertisement from OSRF then that should be clarified / fixed in the REP or core ROS code", "Bit late, but I don't think you can say this.", " that's a misadvertisement from OSRF then that should be clarified / fixed in the REP or core ROS code", "Use of the word \"", "\" in REP-003 has been explained in the past as meaning: new / user code should make sure to be compatible with / use the C++ standard mentioned in the REP, but existing packages (such as ", ") will not be updated to that particular standard.", "As long as ABI compatibility is guaranteed between C++11 and C++14 then there would seem to be no problem, but I at least wanted to highlight the difference between \"Melodic ", " C++14\" and \"C++14 code is allowed in Melodic\".", "Use of targets in REP-003 has been explained in the past as meaning", "Yes, but I agree with ", " this is what is in the REP:", "Melodic", "\nAs of ROS Melodic, we are using the C++14 (ISO/IEC 14882:2014) standard. All packages are free to use C++14 features in public and private APIs. Before changing existing public APIs to use C++14 features, package maintainers should carefully consider whether the change is worth the breakage to downstream consumers of the API. If at all possible, maintainers should use a \"tick-tock\" model where the new APIs are introduced alongside the old (deprecated) APIs, and then remove the old APIs in a subsequent release.", "It doesn't say targeting, it says using C++14, which seems like some were just forgotten.", ": I'm not sure that is the case:", "All packages are free to use C++14 features in public and private APIs.", "nowhere does it state that ROS Melodic uses C++14 everywhere, nor that it is a requirement.", "It doesn't say targeting, it says using C++14, which seems like some were just forgotten.", "and the REP does use the word ", ", see my earlier comment (", ").", "Sorry, I\u2019m traveling today so I can\u2019t dig into the history to find the discussion about it. For now I\u2019ll just cc ", " since he\u2019s the maintainer of ros_comm and ", " because he\u2019s the melodic ros boss.", "I opened the PRs to the packages from the ros_comm stacks, some tests failed to find ", "  and I'll look into those.", "nowhere does it state that ROS Melodic uses C++14 everywhere, nor that it is a requirement.", "\nThis line from the REP needs editing if it is not the case. It doesn't say ", " but it does say ", ".", "As of ROS Melodic, we are using the C++14 (ISO/IEC 14882:2014) standard.", "If the ros_comm packages aren't using C++14 and then this same issue of C++11/C++14 compatibility is going to be brought up and discussed with any downstream package in the ecosystem... which would be a bit waste of time: C++17 is already out: and we're eagerly awaiting C++20...", "\nKinetic on Ubuntu 16.04 is available until ", " for those who need C++11.", "If the ros_comm packages aren't using C++14 and then this same issue of C++11/C++14 compatibility is going to be brought up and discussed with any downstream package in the ecosystem...", "you seem to mistake me for someone who came up with this policy / approach. I'm not and I wasn't.", "I just commented here to clarify that ", "'s assertion was essentially not true, and then I explained how \"", "\" has been explained in the past (when C++11 first appeared in REP-3) as that seemed to have caused some confusion.", "Do you expect everyone to update all their packages to C++14 (if needed) in order to release into Melodic? That is both infeasible as well as unmaintainable.", "In any case: let's see whether ", " comments.", "Sorry, the above comment wasn\u2019t meant to be directed at you. But in general, and maybe the Open Robotics maintainers who have been tagged or anyone who follows the links from the PRs I opened.", "You brought up a valid point, which I would summarize as:", "\n\u201cdo we need to be concerned with C++11/C++14 compatibility.\u201d", "And in my opinion, from reading the REP the answer should be no. All packages compiled with GCC 6+ which ", " explicity setting C++11, it\u2019s defaulting to C++14.", "And to be honest: because most of this stemmed from a face to face conversation at move it day with ", " & others...", "The main reason I\u2019m pushing for this so strongly, isn\u2019t even to get any particular C++14 features in this release... It is so that we are one step closer towards getting C++17 features in a near future release.", "So again: my apologies if the comments felt directed at you specifically.", "So, I originally wrote the update to REP-0003 for Melodic.  And looking at it again, I agree that the wording is somewhat ambiguous.  ", " interpretation is correct; packages are ", " to use C++14 in Melodic, but are not required to do so.  I'd happily review and merge any changes to REP-0003 that makes this less ambiguous.", " how do you suggest to change the wording?", "I think that would clarify the state of things. The sentence which follows is clear:", "All packages are free to use C++14 features in public and private APIs. Before changing existing public APIs to use C++14 features, package maintainers should carefully consider whether the change is worth the breakage to downstream consumers of the API.", "But still lead to confusion as if it's safe to use C++14 when there are core libraries are setting ", " ... This is done in only 4 places, so ", ", ", ", and ", " how do you suggest to change the wording?", "That wording is fine, though I slightly prefer:", "But still lead to confusion as if it's safe to use C++14 when there are core libraries are setting ", " ... This is done in only 4 places, so ", ", ", ", and ", "Yeah, that's a separate issue, which will be resolved one way or another in ", " wrote:", "Do not merge until we get approval from ", " and ", " has been merged.", " has been merged.", "And ", " has been rejected - just to provide the full context.", "still +1 from me :)", "\nI think the only risk is maybe it would affect Ubuntu 16.04 users building the melodic branch, but seems unlikely.", " actually I had thought of that, and it is why the change sets the version to c++14 instead of removing the option and letting it us the default from gcc.", "Ubuntu 16.04 and ROS Kinetic ship with ", "\nC++14 is available on gcc-5, but it wasn't the default option until gcc-6.", "\nSo, this ", " work for users building on ", ", but Kinetic doesn't support it as per REP-0003, and Melodic doesn't support 16.04 so that does seem unlikely.", "\nYes, that ", " was rejected, but it was actually only effecting the unit test. So if you compile ", " without CATKIN_ENABLE_TESTING it will use ", " as per the gcc default.", "Congrats on merging your first pull request and contributing to open source robotics!", "Congrats on merging your first pull request and contributing to open source robotics!", "lol.", "Who is this bot addressing with this comment? :) ", ", or ", "?", "In both cases it's funny :)", "Congrats on merging your first pull request and contributing to open source robotics!", " you don't ", " that comment, do you? That's just ridiculous.", "\nIf it is meant to address ", " , it should probably say \"on getting your first pull request merged\" instead.", "On the pull-request: there is nothing wrong with C++14 on 16.04. I'm glad to get the additional expressiveness, although I really hope we need almost none of it.", "Two things we might want to consider:", " instead of our ", " macro - the earlier allows to add comments without unnecessary bloat.", "lol. I'm happy to ", " but I really feel like overall its an \"automated\" way to improve inclusivity. From ", ":", "Inclusivity is the quality of an open organization that allows and encourages people to join the organization and feel a connection to it. Practices aimed at enhancing inclusivity are typically those that welcome new participants to the organization and create an environment that makes them want to stay.", "Awesome! I guess it\u2019s about time I made a PR to MoveIt!, I\u2019ve been using it for years.", "I remember seeing some other places where I think boost was used but can be replaced.", "Awesome! I guess it\u2019s about time I made a PR to MoveIt!, I\u2019ve been using it for years.", " Please take this as positive feedback to contribute more in the future ", "I remember seeing some other places where I think boost was used but can be replaced.", "Please feel free to look into it.", "I'm afraid the way C++14 is enabled is not right, not only for MoveIt but for every ROS package (that uses a specific C++ standard) I've seen so far.", "I've already seen some discussions about how C++14 should be triggered, here is a quick summary about the different ways of enabling a specific C++ standard:", "There are others like ", " but it would not make a lot of sense to enable C++11 only for a subset of each project.", "The only one that is safe is ", " because it will \"overwrite\" ", " and ", ".", "Example:", "You will end up with a compilation line that looks like:", "\n", "The latest flag is the one that will prevail, resulting in C++11 code! (", ").", "The ", " variable was added in CMake 3.1, while ROS packages usually only require CMake 2.8.3 (first version that ", " supports).", "Should I make a pull request so that packages requires CMake 3.1 and enables C++14 properly?"], "pr_code": ["fetch at fetch3 in ~/melodic-stable/src\n$ grep -r c++1 --include=CMakeLists.txt\nfetch_ros/fetch_ikfast_plugin/CMakeLists.txt:  add_compile_options(-std=c++11)\nmoveit/moveit_plugins/moveit_controller_manager_example/CMakeLists.txt:add_compile_options(-std=c++14)\nmoveit/moveit_plugins/moveit_fake_controller_manager/CMakeLists.txt:add_compile_options(-std=c++14)\nmoveit/moveit_plugins/moveit_ros_control_interface/CMakeLists.txt:add_compile_options(-std=c++14)\nmoveit/moveit_plugins/moveit_simple_controller_manager/CMakeLists.txt:add_compile_options(-std=c++14)\nmoveit/moveit_setup_assistant/CMakeLists.txt:add_compile_options(-std=c++14)\nmoveit/moveit_experimental/CMakeLists.txt:add_definitions(-std=c++14)\n...\n", "roscpp", "[ 33%] Building CXX object CMakeFiles/roscpp.dir/src/libros/master.cpp.o\n/usr/bin/c++  -DROSCONSOLE_BACKEND_LOG4CXX -DROS_PACKAGE_NAME=\\\"roscpp\\\" -Droscpp_EXPORTS -I/tmp/binarydeb/ros-melodic-roscpp-1.14.3/obj-x86_64-linux-gnu/devel/include -I/tmp/binarydeb/ros-melodic-roscpp-1.14.3/include -I/tmp/binarydeb/ros-melodic-roscpp-1.14.3/obj-x86_64-linux-gnu/devel/include/ros -I/opt/ros/melodic/include -I/opt/ros/melodic/share/xmlrpcpp/cmake/../../../include/xmlrpcpp -I/tmp/binarydeb/ros-melodic-roscpp-1.14.3/obj-x86_64-linux-gnu  -g -O2 -fdebug-prefix-map=/tmp/binarydeb/ros-melodic-roscpp-1.14.3=. -fstack-protector-strong -Wformat -Werror=format-security -DNDEBUG -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC   -std=c++11 -Wall -Wextra -o CMakeFiles/roscpp.dir/src/libros/master.cpp.o -c /tmp/binarydeb/ros-melodic-roscpp-1.14.3/src/libros/master.cpp\n", "-std=c++11", "$ grep -r --include=CMakeLists.txt  \"\\-std\" .\n./ros_comm/xmlrpcpp/test/CMakeLists.txt:set_target_properties(test_base64 PROPERTIES COMPILE_FLAGS -std=c++11)\n./ros_comm/roscpp/CMakeLists.txt:  set_directory_properties(PROPERTIES COMPILE_OPTIONS \"-std=c++11;-Wall;-Wextra\")\n./pluginlib/CMakeLists.txt:  check_cxx_compiler_flag(\"-std=c++11\" COMPILER_SUPPORTS_CXX11)\n./pluginlib/CMakeLists.txt:      set_target_properties(${PROJECT_NAME}_unique_ptr_test PROPERTIES COMPILE_FLAGS -std=c++11 LINK_FLAGS -std=c++11)\n./roscpp_core/rostime/CMakeLists.txt:    set_property(TARGET ${PROJECT_NAME}-test_time APPEND_STRING PROPERTY COMPILE_FLAGS \"-std=c++11\")\n", "catkin\nclass_loader\ncmake_modules\ngencpp\ngeneus\ngenlisp\ngenmsg\ngennodejs\ngenpy\nmessage_generation\nmessage_runtime\npluginlib\nros\nros_comm\nros_comm_msgs\nrosconsole\nroscpp_core\nros_environment\nroslisp\nrospack\nstd_msgs\n", "roscpp", "std::nextafter", "gcc (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609", "c++14", "[[deprecated]]", "MOVEIT_DEPRECATED", "std::make_unique", "run-clang-tidy -header-filter='.*' -checks='-*,modernize-*'\n", "add_compile_options", "add_definitions", "CMAKE_CXX_STANDARD", "CMAKE_CXX_STANDARD_REQUIRED", "CMAKE_CXX_EXTENSIONS", "target_compile_options", "CMAKE_CXX_STANDARD", "add_compile_options", "add_definitions", "add_compile_options", "CMAKE_CXX_STANDARD", "-std=c++14 -Wall -Wextra -fPIC -std=gnu++11", "CMAKE_CXX_STANDARD", "catkin"], "pr_quotes": ["Targeted Languages:", "Melodic is C++14", "Melodic is C++14", "\n", "Targeted Languages:", "Edit: C++11 explicitly set here.", "Bit late, but I don't think you can say this.", " that's a misadvertisement from OSRF then that should be clarified / fixed in the REP or core ROS code", "Use of targets in REP-003 has been explained in the past as meaning", "Melodic", "\nAs of ROS Melodic, we are using the C++14 (ISO/IEC 14882:2014) standard. All packages are free to use C++14 features in public and private APIs. Before changing existing public APIs to use C++14 features, package maintainers should carefully consider whether the change is worth the breakage to downstream consumers of the API. If at all possible, maintainers should use a \"tick-tock\" model where the new APIs are introduced alongside the old (deprecated) APIs, and then remove the old APIs in a subsequent release.", "All packages are free to use C++14 features in public and private APIs.", "It doesn't say targeting, it says using C++14, which seems like some were just forgotten.", "nowhere does it state that ROS Melodic uses C++14 everywhere, nor that it is a requirement.", "As of ROS Melodic, we are using the C++14 (ISO/IEC 14882:2014) standard.", "If the ros_comm packages aren't using C++14 and then this same issue of C++11/C++14 compatibility is going to be brought up and discussed with any downstream package in the ecosystem...", "All packages are free to use C++14 features in public and private APIs. Before changing existing public APIs to use C++14 features, package maintainers should carefully consider whether the change is worth the breakage to downstream consumers of the API.", " how do you suggest to change the wording?", "But still lead to confusion as if it's safe to use C++14 when there are core libraries are setting ", " ... This is done in only 4 places, so ", ", ", ", and ", "Do not merge until we get approval from ", " and ", " has been merged.", "Congrats on merging your first pull request and contributing to open source robotics!", "Congrats on merging your first pull request and contributing to open source robotics!", "Inclusivity is the quality of an open organization that allows and encourages people to join the organization and feel a connection to it. Practices aimed at enhancing inclusivity are typically those that welcome new participants to the organization and create an environment that makes them want to stay.", "Awesome! I guess it\u2019s about time I made a PR to MoveIt!, I\u2019ve been using it for years.", "I remember seeing some other places where I think boost was used but can be replaced."], "pr_details": [" instead of our ", " macro - the earlier allows to add comments without unnecessary bloat."], "pr_details_more": [" ", ": Code is auto formatted using ", " Extended the tutorials / documentation, if necessary ", " Include a screenshot if changing a GUI", " Document API changes relevant to the user in the moveit/MIGRATION.md notes", " Created tests, which fail without this PR ", " Decide if this should be cherry-picked to other current ROS branches", " While waiting for someone to review your request, please consider reviewing ", " to support the maintainers", "\n", "\n", "\n", "\n", " (and ", ", ", ")", "You specify a C++ standard (C++14) using ", "You find package and link to a project that defines ", " to C++11"]},
{"url": "https://github.com/ros-planning/moveit/pull/1354", "pr_title": "Clang tidy", "username": "RoboticsYY", "username_url": "/RoboticsYY", "issue_status": "Closed", "posted_on": "Feb 18, 2019", "pr_contents": ["In ", " ", " proposed a clang-tidy road-map which mainly contains two steps: make the clang-tidy fix to the entire MoveIt! codebase and enable the clang-tidy in travis_ci. ", " solved the second step in ", ". This PR targets the first step. Since clang-tidy sometimes may report false positive fixes, each change may need careful check which makes code review time-consuming. So I think maybe it is better to first apply these changes to ", " which is not changing very fast. If the changes are acceptable to everyone, then a following PR can be submitted to do the same thing for ", ". Please also note in this PR:", "Thanks for helping in improving MoveIt!", "So I think maybe it is better to first apply these changes to Kinetic which is not changing very fast.", "Thanks a lot for your effort. I'm not yet convinced that we should apply such a huge code change both to Kinetic and Melodic. From my point of view, we should focus development to Melodic only, particularly because the melodic-branch also compiles on Kinetic.", "\nPlease, ", " and ", " comment on this before anybody starts the tedious review process for this PR.", "\nAn advantage of applying those patches to both branches is that we can more easily cherry-pick between them.", "Since clang-tidy sometimes may report false positive fixes, each change may need careful check which makes code review time-consuming.", "How often did you observed false-positives? Which kind of fixes are erroneous?", "How often did you observed false-positives? Which kind of fixes are erroneous?", "I don't think I met false positives very often. I met risky changes mostly from:", "From my point of view, we should focus development to Melodic only, particularly because the melodic-branch also compiles on Kinetic.", "I strongly agree with ", ", effort spent on Kinetic seems wasted.", " 's previous clang-tidy effort was only targeted at Melodic: ", " so we should continue that trend.", " can you run this on Melodic? Also, this PR is so big that my web browser has a hard time loading it, even with most files collapsed. Is it possible to split it up into fewer number of checks? If you think that's not worth it / too slow i understand and can mostly just trust the automation.", " ", " I will submit a new clang-tidy PR for Melodic.", " I agree that this PR is so big for review. Each of ", ", ", " and ", " can bring many changes. Some of the changes may be risky and require careful check. Maybe it's better to submit individual PR for each of them, and another PR for the rest clang-tidy checks, this will make review easier and reduce the risk of big changes to the API."], "pr_code": ["Kinetic", "Melodic", "clang-analyzer-*", "readability-identifier-naming", "auto", "modernize-loop-convert", "more readable", "readability-inconsistent-declaration-parameter-name", "modernize-use-nullptr", "0", "pullptr", "readability-simplify-boolean-expr", "if(...){...return...}...return...", "return ...", "if", "return", "readability-identifier-naming", "modernize-loop-convert", "readability-inconsistent-declaration-parameter-name", "modernize-loop-convert", "[]", "readability-identifier-naming", "modernize-loop-convert", "readability-inconsistent-declaration-parameter-name"], "pr_quotes": ["So I think maybe it is better to first apply these changes to Kinetic which is not changing very fast.", "Since clang-tidy sometimes may report false positive fixes, each change may need careful check which makes code review time-consuming.", "How often did you observed false-positives? Which kind of fixes are erroneous?", "From my point of view, we should focus development to Melodic only, particularly because the melodic-branch also compiles on Kinetic."], "pr_details_more": ["clang-tidy-3.9 is used.", " is disabled as the discussion suggests in ", ".", " checks are configured as ", " suggestes.", "All of ", "s generated by ", " checks are manually changed according to the discussions in ", " and practices in ", ".", "Variable names ", " in my own opinion are picked when doing the ", " fixes.", " ", ": Code is auto formatted using "]},
{"url": "https://github.com/start-jsk/rtmros_common/pull/700", "pr_title": "compile_robot contains output files, not targets", "username": "k-okada", "username_url": "/k-okada", "issue_status": "Closed", "posted_on": "Apr 11, 2015", "pr_contents": ["\nWhy this line is deleted?", "Currently, ", " catkin build does not pass", "\n(In serveral PCs and rtmros hrp2 travis test).", "\nBy reverting this, test seems to pass.", "Because the test did not passed with this line, only for travis.", "The reason rtmros_hrp2 did not pass may different reason. I'm afraid we have consumed free trial for that. Travis on private repo is not free .", "The reason we remove this line is this line runs multiple euslisp model generation for one robot mode, and tha breaks model generation build chain. i.e. Some target uses euslisp model to generate/modify differed model , but at same time the different target overwrite euslisp model and that breaks compilation.", "This only happens in rtmros _hrp2, maybe creating many model cause this condition", "I see.", "Because the test did not passed with this line, only for travis.", "Which travis test does not pass?", "The reason rtmros_hrp2 did not pass may different reason. I'm afraid we have consumed free trial for that. Travis on private repo is not free .", "Error message in several PC (my laptop, desktops,... ) seem to be same as rtmros hrp2 error message.", "\nSo, the reasons may be the same.", "\nCould you check ", " catkin build on your PCs?", "I have same error too and when I revert this change, it works.", "see ", ", this is only happend on travis.", "it works on my local machine.", "did you rm build? (maybe build/hrpsys_ros_bridge_tutorials are fine)", "\ndid you ", " on hrpsys_ros_bridge_tutorials ?", "what error did you get?", "\n", "I cleaned hrpsys_ros_bridge_tutorials directory by git clean -xfd", "did you rm catkin_ws/build/hrpsys_ros_bridge_tutorials ?", "\u25c9 Kei Okada", "On Wed, Apr 15, 2015 at 12:26 PM, Ryohei Ueda ", "\nwrote:", "I cleaned hrpsys_ros_bridge_tutorials directory by git clean -xfd", "\u2014", "\nReply to this email directly or view it on GitHub", "\n", "\n.", "no, I did not remove that directory", "I have same error even though remove /build/hrpsys_ros_bridge_tutorials", "I tried ", " and ", ".", "\nThen I got the same error (this error message is already reported in rtmros hrp2).", " Do you have multisense_description?", "I think tihs error message is not essential(?).", "Applying this PR commit, some dependency seem to be broken.", "\nFor example, if error occurs, cmake stops (loop?).", "Humm, please try ", " that  clean all build/devel", "or try", "\u25c9 Kei Okada", "On Wed, Apr 15, 2015 at 12:42 PM, Shunichi Nozawa ", "\nwrote:", "I think tihs error message is not essential(?).", "Applying this PR commit, some dependency seem to be broken.", "\nFor example, if error occurs, cmake stops (loop?).", "\u2014", "\nReply to this email directly or view it on GitHub", "\n", "\n.", "Thanks, I tried", "and then I checked", "and", "Same error occurred in hrpsys_ros_bridge_tutorials.", "Moreover, ", " and ", " travis errors are occurring.", "\nI think travis test starts from ", " status.", "? i have succeeded to compile on 3gokan PC this noon.", "\u25c9 Kei Okada", "On Wed, Apr 15, 2015 at 10:21 PM, Shunichi Nozawa ", "\nwrote:", "Thanks, I tried", "rm -fr $(find build | grep hrpsys_ros_bridge)  $(find devel | grep hrpsys_ros_bridge)", "and then I checked", "roscd hrpsys_ros_bridge && catkin bt --start-with-this -i -v", "and", "roscd hrpsys_ros_bridge_tutorials && catkin bt --start-with-this -i -v", "Same error occurred in hrpsys_ros_bridge_tutorials.", "Moreover, rtmros_hrp2 travis errors is occurring.", "\nI think travis test starts from clean status.", "\u2014", "\nReply to this email directly or view it on GitHub", "\n", "\n.", "I asked ", " to tell ", " about this.", "\u25c9 Kei Okada", "On Wed, Apr 15, 2015 at 11:09 PM, Kei Okada ", "\nwrote:", "? i have succeeded to compile on 3gokan PC this noon.", "\u25c9 Kei Okada", "On Wed, Apr 15, 2015 at 10:21 PM, Shunichi Nozawa <", "\n", "> wrote:", "Thanks, I tried", "rm -fr $(find build | grep hrpsys_ros_bridge)  $(find devel | grep hrpsys_ros_bridge)", "and then I checked", "roscd hrpsys_ros_bridge && catkin bt --start-with-this -i -v", "and", "roscd hrpsys_ros_bridge_tutorials && catkin bt --start-with-this -i -v", "Same error occurred in hrpsys_ros_bridge_tutorials.", "Moreover, rtmros_hrp2 travis errors is occurring.", "\nI think travis test starts from clean status.", "\u2014", "\nReply to this email directly or view it on GitHub", "\n", "\n.", "I asked ", " to tell ", " about this.", "Yes, I told ", " san that ", " sensei had said \"catkin build passed after update of hrpsys-ros-bridge\" or something like that.", "\nI'm sorry if I missed something...", "I heard that.", "\nThen I tried ", " and ", " on my PC, catkin bt failed.", "After that, I checked 3gokan PC which you tested.", "\nI confirmed that catkin bt on ", " and ", " still failed.", "\n(", " and ", " are maybe PCs which you tested.)", "For example, when i executed the following command,", "\n", "ProjectGenerator error occurs for all local PCs.", "Curiously, return codes are all ", ", but ProjectGenerator seems to fail.", "By the way, regardless of local PCs, travis test on ", " downstream packages such as ", " and ", " still fails.", "I  think removing only xml is not a good idea, but are you saying that", "\u25c9 Kei Okada", "2015/04/16 0:10\u3001Shunichi Nozawa ", " \u306e\u30e1\u30c3\u30bb\u30fc\u30b8:", "I heard that.", "\nThen I tried git clean -xfd and rm -fr $(find build | grep hrpsys_ros_bridge) $(find devel | grep hrpsys_ros_bridge) on my PC, catkin bt failed.", "After that, I checked 3gokan PC which you tested.", "\nI confirmed that catkin bt on ocs11 and ocs12 still failed.", "\n(ocs11 and ocs12 are maybe PCs which you tested.)", "For example, when i executed the following command,", "\nroscd hrpsys_ros_bridge && rm models/*.xml && catkin bt --start-with-this -v -i --force-cmake", "ProjectGenerator error occurs for all local PCs.", "[hrpsys_ros_bridge] [ROSTEST]Running test [projectgenerator]", "\n[hrpsys_ros_bridge] auto-starting new master", "\n[hrpsys_ros_bridge] process[master]: started with pid [16854]", "\n[hrpsys_ros_bridge] ROS_MASTER_URI=", "\n[hrpsys_ros_bridge] setting /run_id to 90f82ef4-e37f-11e4-a1d6-5c514ff5a2c6", "\n[hrpsys_ros_bridge] process[rosout-1]: started with pid [16959]", "\n[hrpsys_ros_bridge] started core service [/rosout]", "\n[hrpsys_ros_bridge] process[modelloader-2]: started with pid [16981]", "\n[hrpsys_ros_bridge] [ROSTEST]running test projectgenerator", "\n[hrpsys_ros_bridge] IDL:omg.org/CORBA/TRANSIENT:1.0", "\n[hrpsys_ros_bridge] [modelloader-2] process has finished cleanly", "\n[hrpsys_ros_bridge] log file: /home/nozawa/.ros/log/90f82ef4-e37f-11e4-a1d6-5c514ff5a2c6/modelloader-2_.log", "\n[hrpsys_ros_bridge] respawning...", "\n[hrpsys_ros_bridge] [modelloader-2] restarting process", "\n[hrpsys_ros_bridge] process[modelloader-2]: started with pid [16996]", "\n[hrpsys_ros_bridge] IDL:omg.org/CORBA/TRANSIENT:1.0", "\n[hrpsys_ros_bridge] process[projectgenerator-3]: started with pid [17023]", "\n[hrpsys_ros_bridge] terminate called after throwing an instance of 'std::bad_alloc'", "\n[hrpsys_ros_bridge]   what():  std::bad_alloc", "\n[hrpsys_ros_bridge] [modelloader-2] process has finished cleanly", "\n[hrpsys_ros_bridge] log file: /home/nozawa/.ros/log/90f82ef4-e37f-11e4-a1d6-5c514ff5a2c6/modelloader-2_.log", "\n[hrpsys_ros_bridge] respawning...", "\n[hrpsys_ros_bridge] [modelloader-2] restarting process", "\n[hrpsys_ros_bridge] process[modelloader-2]: started with pid [17040]", "\n[hrpsys_ros_bridge] IDL:omg.org/CORBA/TRANSIENT:1.0", "\n[hrpsys_ros_bridge] [modelloader-2] process has finished cleanly", "\n[hrpsys_ros_bridge] log file: /home/nozawa/.ros/log/90f82ef4-e37f-11e4-a1d6-5c514ff5a2c6/modelloader-2_.log", "\n[hrpsys_ros_bridge] respawning...", "\n[hrpsys_ros_bridge] [projectgenerator-3] process has died [pid 17023, exit code -6, cmd /home/nozawa/ros/hydro_parent/devel/lib/hrpsys/ProjectGenerator -o corba.nameservers:localhost:2940 /home/nozawa/ros/hydro_parent/devel/share/OpenHRP-3.1/idl/../sample/model/PA10/pa10.main.wrl /home/nozawa/ros/hydro_parent/devel/share/OpenHRP-3.1/sample/model/longfloor.wrl,0,0,0,0,0,1,0 --integrate false --output /home/nozawa/ros/hydro/src/rtm-ros-robotics/rtmros_common/hrpsys_ros_bridge/models/pa10_nosim.xml --gtest_output=xml:/home/nozawa/ros/hydro/build/hrpsys_ros_bridge/test_results/hrpsys_tools/rosunit-projectgenerator.xml --text __name:=projectgenerator _", ".log", "\n[hrpsys_ros_bridge] [modelloader-2] restarting process", "\n[hrpsys_ros_bridge] process[modelloader-2]: started with pid [17068]", "\n[hrpsys_ros_bridge] IDL:omg.org/CORBA/TRANSIENT:1.0", "\n[hrpsys_ros_bridge] [ROSTEST]test [projectgenerator] finished", "\n[hrpsys_ros_bridge] [ROSTEST][ROSTEST] test [projectgenerator] done", "\n[hrpsys_ros_bridge] [ROSTEST]tearDown[/home/nozawa/ros/hydro/src/rtm-ros-robotics/rtmros_common/hrpsys_tools/launch/_gen_project.launch]", "\n[hrpsys_ros_bridge] shutting down processing monitor...", "\n[hrpsys_ros_bridge] [modelloader-2] killing on exit", "\n[hrpsys_ros_bridge] [rosout-1] killing on exit", "\n[hrpsys_ros_bridge] [master] killing on exit", "\n[hrpsys_ros_bridge] ... shutting down processing monitor complete", "\nCuriously, return codes are all 0, but ProjectGenerator seems to fail.", "By the way, regardless of local PCs, travis test on hrpsys_ros_bridge downstream packages such as hrpsys_ros_bridge_tutorials and rtmros_hrp2 still fails.", "\u2014", "\nReply to this email directly or view it on GitHub.", "but are you saying that Reverting ", " fix the behavior of ProjectGenerator?", "Yes, on my PC, reverting ", " seem to resolve this problem.", "\nIt is worth to try reverting to pass travis for downstream package.", "I think removing only xml is not a good idea", "Sorry, after that, in addition to ", ",", "\nI also tried ", " and ", " and catkin build failed.", "Howerver, why removing only xml file is not so good?", "\nBefore ", ", removing only xml files and execute catkin build succeeded.", "\nIf cmake's build target dependencies are correctly defined, removing only xml file seem to be natural and catkin build after removing should work.", "\nOtherwise, cmake's build target dependencies have problem.", "build target dependency have problem because due to too much complexity,", "\nFor me, I could not explan why ", " related to project generation at all.", "\u25c9 Kei Okada", "On Thu, Apr 16, 2015 at 1:03 AM, Shunichi Nozawa ", "\nwrote:", "but are you saying that Reverting ", "\n", " fix the behavior of", "\nProjectGenerator?", "Yes, on my PC, reverting ", "\n", " seem to resolve", "\nthis problem.", "\nIt is worth to try reverting to pass travis for downstream package.", "I think removing only xml is not a good idea", "Sorry, after that, in addition to rm *.xml,", "\nI also tried git clean -xfd and rm -fr $(find build | grep", "\nhrpsys_ros_bridge) $(find devel | grep hrpsys_ros_bridge) and catkin", "\nbuild failed.", "Howerver, why removing only xml file is not so good?", "\nBefore ", " ", ",", "\nremoving only xml files and execute catkin build succeeded.", "\nIf cmake's build target dependencies are correctly defined, removing only", "\nxml file seem to be natural and catkin build after removing should work.", "\nOtherwise, cmake's build target dependencies have problem.", "\u2014", "\nReply to this email directly or view it on GitHub", "\n", "\n.", "Yes, dependency is too difficult its because of rostest and corba. We cannot run multiple rostest and corba processes and we should remove them first in order to simplify compile_robot.cmake", "I completely agree that target dependency is too difficult.", "One choice is to re-write ", ".", "\nI may not fully understand, but ", " directly load VRML model without ", ".", "\nSo we do not need to invoke ", " and CORBA name server.", "\n(I posted the related issue on hrpsys-base, but I cannot find it...)", "If we can re-write ", " like ", ",", "\ncompile_robot.cmake will be simpler."], "pr_code": ["hrpsys_ros_bridge_tutorials", "hrpsys_ros_bridge_tutorials", "\ufffd]2;[build] 19/24\ufffd[ 39%] \ufffd[34m\ufffd[1mGenerating hrp2w_joint_minmax_done                                       \ufffd[0m\ufffd[0m\n\ufffd]2;[build] 19/24\ufffd\ufffd[0m[ 40%] \ufffd[34m\ufffd[1mGenerating /home/travis/ros/ws_rtmros_hrp2/src/rtmros_tutorials/hrpsys_ros_bridge_tutorials/models/hrp2w.l \ufffd[0m\ufffd[0m\n\ufffd]2;[build] 19/24\ufffd\ufffd[0m\ufffd[31mXserver connection failed\ufffd[0mtorso@5                                                \ufffd[0m\ufffd[0m\n\ufffd]2;[build] 19/24\ufffdlarm@20                                                                         \ufffd[0m\ufffd[0m\n\ufffd]2;[build] 19/24\ufffdrarm@11                                                                         \ufffd[0m\ufffd[0m\n\ufffd]2;[build] 19/24\ufffdhead@8                                                                          \ufffd[0m\ufffd[0m\n\ufffd]2;[build] 19/24\ufffdNumber of Visual Scene 1 (= 1)                                                  \ufffd[0m\ufffd[0m\n\ufffd]2;[build] 19/24\ufffdNumber of Nodes 1 (= 1)                                                         \ufffd[0m\ufffd[0m\n\ufffd]2;[build] 19/24\ufffdVisual_scene HRP2W                                                              \ufffd[0m\ufffd[0m\n\ufffd]2;[build] 19/24\ufffd/opt/ros/hydro/share/euslisp/jskeus/eus/Linux64/bin/irteusgl: ERROR th=0 unbound variable hrp2w_g1_4_geom0hrp2w_g1_4_geom0 in (instantiate hrp2w_g1_4_geom0);; Segmentation Fault. \ufffd[0m\ufffd[0m\n\ufffd]2;[build] 19/24\ufffd;; in (instantiate hrp2w_g1_4_geom0)                                            \ufffd[0m\ufffd[0m\n\ufffd]2;[build] 19/24\ufffd;; You are still in a signal handler.                                           \ufffd[0m\ufffd[0m\n\ufffd]2;[build] 19/24\ufffd;;Try reset or throw to upper level as soon as possible.                        \ufffd[0m\ufffd[0m\n\ufffd]2;[build] 19/24\ufffd;; code=3581424 x=36a4c0 addr=73dce0                                            \ufffd[0m\ufffd[0m\n\ufffd]2;[build] 19/24\ufffdsignal=11 to thread 0,                                                          \ufffd[0m\ufffd[0m\n\ufffd]2;[build] 19/24\ufffd;; No, you cannot continue the previous evaluation.                             \ufffd[0m\ufffd[0m\n\ufffd]2;[build] 19/24\ufffdConvert /home/travis/ros/ws_rtmros_hrp2/src/rtmros_tutorials/hrpsys_ros_bridge_tutorials/models/HRP2W.dae to /home/travis/ros/ws_rtmros_hrp2/src/rtmros_tutorials/hrpsys_ros_bridge_tutorials/models/hrp2w.l \ufffd[0m\ufffd[0m\n\ufffd]2;[build] 19/24\ufffd with /home/travis/ros/ws_rtmros_hrp2/src/rtmros_tutorials/hrpsys_ros_bridge_tutorials/models/hrp2w.yamlmake[2]: *** [hrp2w_joint_minmax_done] Error 11 \ufffd[0m\ufffd[0m\n\ufffd]2;[build] 19/24\ufffdmake[1]: *** [CMakeFiles/hrp2w_hrpsys_ros_bridge_tutorials_compile2.dir/all] Error 2 \ufffd[0m\ufffd[0m\n\ufffd]2;[build] 19/24\ufffdmake[1]: *** Waiting for unfinished jobs....                                    \ufffd[0m\ufffd[0m\n\ufffd]2;[build] 19/24\ufffd[ 41%] \ufffd[34m\ufffd[1mGenerating /home/travis/ros/ws_rtmros_hrp2/src/rtmros_tutorials/hrpsys_ros_bridge_tutorials/models/HRP4R.dae \ufffd[0m\ufffd[0m\n\ufffd]2;[build] 19/24\ufffd\ufffd[0mtmpinfo.name         = leftarm                                                  \ufffd[0m\ufffd[0m\n\ufffd]2;[build] 19/24\ufffdtmpinfo.basename     = L_SHOULDER_P_LINK                                        \ufffd[0m\ufffd[0m\n\ufffd]2;[build] 19/24\ufffdtmpinfo.effectorname = L_WRIST_R_LINK                                           \ufffd[0m\ufffd[0m\n", "git clean -xfd", "git clean -xfd", "rm -fr $(find build | grep hrpsys_ros_bridge_tutorials) $(find devel | grep hrpsys_ros_bridge_tutorials)", "]2;[build] 4/7[projectgenerator-3] process has died [pid 12665, exit code -6, cmd /opt/ros/hydro/lib/hrpsys/ProjectGenerator -o corba.nameservers:localhost:2985 /home/travis/ros/ws_rtmros_hrp2/src/rtmros_hrp2/hrp2_models/HRP2JSKNTS_for_OpenHRP3/HRP2JSKNTSmain.wrl /opt/ros/hydro/share/OpenHRP-3.1/sample/model/longfloor.wrl,0,0,0,0,0,1,0 --integrate false --output /home/travis/ros/ws_rtmros_hrp2/src/rtmros_tutorials/hrpsys_ros_bridge_tutorials/models/HRP2JSKNTS_nosim.xml --conf-file-option abc_leg_offset: 0.0,0.105,0.0 --conf-file-option #end_effectors: rleg,RLEG_JOINT5,WAIST,0.035589,-0.01,-0.105,0.0,0.0,0.0,0.0, lleg,LLEG_JOINT5,WAIST,0.035589,0.01,-0.105,0.0,0.0,0.0,0.0, rarm,RARM_JOINT6,CHEST_JOINT1,-0.0042,0.0392,-0.1245,0.0,1.0,0.0,1.5708, larm,LARM_JOINT6,CHEST_JOINT1,-0.0042,-0.0392,-0.1245,0.0,1.0,0.0,1.5708, --conf-file-option end_effectors: rleg,RLEG_JOINT6,WAIST,-0.079411,-0.01,-0.031,0.0,0.0,0.0,0.0, lleg,LLEG_JOINT6,WAIST,-0.079411,0.01,-0.031,0.0,0.0,0.0,0.0, rarm,RARM_JOINT6,CHEST_JOINT1,-0.0042,0.0392,-0.1245,0.0,1.0,0.0,1.5708, larm,LARM_JOINT6,CHEST_JOINT1,-0.0042,-0.0392,-0.1245,0.0,1.0,0.0,1.5708, --conf-file-option # for ThermoEstimator --conf-file-option motor_heat_params: 0.0075,0.5, 0.003,0.5, 0.003,0.5, 0.003,0.5, 0.003,0.5, 0.0075,0.5, 0.02,0.3, 0.0075,0.5, 0.003,0.5, 0.003,0.5, 0.003,0.5, 0.003,0.5, 0.0075,0.5, 0.02,0.3, 0.003,0.5, 0.003,0.5, 0.2,0.3, 0.2,0.3, 0.003,0.5, 0.003,0.5, 0.02,0.3, 0.003,0.5, 0.2,0.3, 0.2,0.3, 0.2,0.3, 0.2,0.3, 0.003,0.5, 0.003,0.5, 0.02,0.3, 0.003,0.5, 0.2,0.3, 0.2,0.3, 0.2,0.3, 0.2,0.3 --conf-file-option motor_temperature_limit: 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0 --conf-file-option alarm_ratio: 0.75 --conf-file-option # for CollisionDetector --conf-file-option collision_pair: RLEG_JOINT2:LLEG_JOINT2 RLEG_JOINT2:LLEG_JOINT3 RLEG_JOINT2:LLEG_JOINT5 RLEG_JOINT2:LLEG_JOINT6 RLEG_JOINT2:RARM_JOINT3 RLEG_JOINT2:RARM_JOINT4 RLEG_JOINT2:RARM_JOINT5 RLEG_JOINT2:RARM_JOINT6 RLEG_JOINT2:LARM_JOINT3 RLEG_JOINT2:LARM_JOINT4 RLEG_JOINT2:LARM_JOINT5 RLEG_JOINT2:LARM_JOINT6 RLEG_JOINT3:LLEG_JOINT2 RLEG_JOINT3:LLEG_JOINT3 RLEG_JOINT3:LLEG_JOINT5 RLEG_JOINT3:LLEG_JOINT6 RLEG_JOINT3:RARM_JOINT3 RLEG_JOINT3:RARM_JOINT4 RLEG_JOINT3:RARM_JOINT5 RLEG_JOINT3:RARM_JOINT6 RLEG_JOINT3:LARM_JOINT3 RLEG_JOINT3:LARM_JOINT4 RLEG_JOINT3:LARM_JOINT5 RLEG_JOINT3:LARM_JOINT6 RLEG_JOINT5:LLEG_JOINT2 RLEG_JOINT5:LLEG_JOINT3 RLEG_JOINT5:LLEG_JOINT5 RLEG_JOINT5:LLEG_JOINT6 RLEG_JOINT5:RARM_JOINT3 RLEG_JOINT5:RARM_JOINT4 RLEG_JOINT5:RARM_JOINT5 RLEG_JOINT5:RARM_JOINT6 RLEG_JOINT5:LARM_JOINT3 RLEG_JOINT5:LARM_JOINT4 RLEG_JOINT5:LARM_JOINT5 RLEG_JOINT5:LARM_JOINT6 RLEG_JOINT6:LLEG_JOINT2 RLEG_JOINT6:LLEG_JOINT3 RLEG_JOINT6:LLEG_JOINT5 RLEG_JOINT6:LLEG_JOINT6 RLEG_JOINT6:CHEST_JOINT1 RLEG_JOINT6:RARM_JOINT3 RLEG_JOINT6:RARM_JOINT4 RLEG_JOINT6:RARM_JOINT5 RLEG_JOINT6:RARM_JOINT6 RLEG_JOINT6:LARM_JOINT3 RLEG_JOINT6:LARM_JOINT4 RLEG_JOINT6:LARM_JOINT5 RLEG_JOINT6:LARM_JOINT6 RLEG_JOINT6:WAIST LLEG_JOINT2:RARM_JOINT3 LLEG_JOINT2:RARM_JOINT4 LLEG_JOINT2:RARM_JOINT5 LLEG_JOINT2:RARM_JOINT6 LLEG_JOINT2:LARM_JOINT3 LLEG_JOINT2:LARM_JOINT4 LLEG_JOINT2:LARM_JOINT5 LLEG_JOINT2:LARM_JOINT6 LLEG_JOINT3:RARM_JOINT3 LLEG_JOINT3:RARM_JOINT4 LLEG_JOINT3:RARM_JOINT5 LLEG_JOINT3:RARM_JOINT6 LLEG_JOINT3:LARM_JOINT3 LLEG_JOINT3:LARM_JOINT4 LLEG_JOINT3:LARM_JOINT5 LLEG_JOINT3:LARM_JOINT6 LLEG_JOINT5:RARM_JOINT3 LLEG_JOINT5:RARM_JOINT4 LLEG_JOINT5:RARM_JOINT5 LLEG_JOINT5:RARM_JOINT6 LLEG_JOINT5:LARM_JOINT3 LLEG_JOINT5:LARM_JOINT4 LLEG_JOINT5:LARM_JOINT5 LLEG_JOINT5:LARM_JOINT6 LLEG_JOINT6:CHEST_JOINT1 LLEG_JOINT6:RARM_JOINT3 LLEG_JOINT6:RARM_JOINT4 LLEG_JOINT6:RARM_JOINT5 LLEG_JOINT6:RARM_JOINT6 LLEG_JOINT6:LARM_JOINT3 LLEG_JOINT6:LARM_JOINT4 LLEG_JOINT6:LARM_JOINT5 LLEG_JOINT6:LARM_JOINT6 LLEG_JOINT6:WAIST CHEST_JOINT1:RARM_JOINT2 CHEST_JOINT1:RARM_JOINT3 CHEST_JOINT1:RARM_JOINT4 CHEST_JOINT1:RARM_JOINT5 CHEST_JOINT1:RARM_JOINT6 CHEST_JOINT1:LARM_JOINT2 CHEST_JOINT1:LARM_JOINT3 CHEST_JOINT1:LARM_JOINT4 CHEST_JOINT1:LARM_JOINT5 CHEST_JOINT1:LARM_JOINT6 HEAD_JOINT1:RARM_JOINT3 HEAD_JOINT1:RARM_JOINT4 HEAD_JOINT1:RARM_JOINT5 HEAD_JOINT1:RARM_JOINT6 HEAD_JOINT1:LARM_JOINT3 HEAD_JOINT1:LARM_JOINT4 HEAD_JOINT1:LARM_JOINT5 HEAD_JOINT1:LARM_JOINT6 RARM_JOINT0:LARM_JOINT4 RARM_JOINT0:LARM_JOINT5 RARM_JOINT0:LARM_JOINT6 RARM_JOINT2:LARM_JOINT4 RARM_JOINT2:LARM_JOINT5 RARM_JOINT2:LARM_JOINT6 RARM_JOINT2:WAIST RARM_JOINT3:LARM_JOINT3 RARM_JOINT3:LARM_JOINT4 RARM_JOINT3:LARM_JOINT5 RARM_JOINT3:LARM_JOINT6 RARM_JOINT3:WAIST RARM_JOINT4:LARM_JOINT0 RARM_JOINT4:LARM_JOINT2 RARM_JOINT4:LARM_JOINT3 RARM_JOINT4:LARM_JOINT4 RARM_JOINT4:LARM_JOINT5 RARM_JOINT4:LARM_JOINT6 RARM_JOINT4:WAIST RARM_JOINT5:LARM_JOINT0 RARM_JOINT5:LARM_JOINT2 RARM_JOINT5:LARM_JOINT3 RARM_JOINT5:LARM_JOINT4 RARM_JOINT5:LARM_JOINT5 RARM_JOINT5:LARM_JOINT6 RARM_JOINT5:WAIST RARM_JOINT6:LARM_JOINT0 RARM_JOINT6:LARM_JOINT2 RARM_JOINT6:LARM_JOINT3 RARM_JOINT6:LARM_JOINT4 RARM_JOINT6:LARM_JOINT5 RARM_JOINT6:LARM_JOINT6 RARM_JOINT6:WAIST LARM_JOINT2:WAIST LARM_JOINT3:WAIST LARM_JOINT4:WAIST LARM_JOINT5:WAIST LARM_JOINT6:WAIST --conf-file-option collision_model: convex hull --robothardware-conf-file-option pdgains.file_name: /home/travis/ros/ws_rtmros_hrp2/src/rtmros_tutorials/hrpsys_ros_bridge_tutorials/models/PDgains.sav --dt 0.004 --timestep 0.004 --gtest_output=xml:/home/travis/ros/ws_rtmros_hrp2/build/hrpsys_ros_bridge_tutorials/test_results/hrpsys_tools/rosunit-projectgenerator.xml --text __name:=projectgenerator __log:=/home/travis/.ros/log/8248c5d8-e26e-11e4-8b4f-33d75b5d9e9b\n", "catkin clean -a", "rm -fr $(find build | grep rtmros) $(find devel | grep rtmros).\n", "rm -fr $(find build | grep hrpsys_ros_bridge)  $(find devel | grep hrpsys_ros_bridge)\n", "roscd hrpsys_ros_bridge && catkin bt --start-with-this -i -v\n", "roscd hrpsys_ros_bridge_tutorials && catkin bt --start-with-this -i -v\n", "rtmros_hrp2", "hrpsys_ros_bridge_tutorials", "clean", "git clean -xfd", "rm -fr $(find build | grep hrpsys_ros_bridge)  $(find devel | grep hrpsys_ros_bridge)", "ocs11", "ocs12", "ocs11", "ocs12", "roscd hrpsys_ros_bridge && rm models/*.xml && catkin bt --start-with-this -v -i --force-cmake", "[hrpsys_ros_bridge] [ROSTEST]Running test [projectgenerator]                                                                                                                                                                             \n[hrpsys_ros_bridge] auto-starting new master                                                                                                                                                                                             \n[hrpsys_ros_bridge] process[master]: started with pid [16854]                                                                                                                                                                            \n[hrpsys_ros_bridge] ROS_MASTER_URI=http://192.168.97.13:22422/                                                                                                                                                                           \n[hrpsys_ros_bridge] setting /run_id to 90f82ef4-e37f-11e4-a1d6-5c514ff5a2c6                                                                                                                                                              \n[hrpsys_ros_bridge] process[rosout-1]: started with pid [16959]                                                                                                                                                                          \n[hrpsys_ros_bridge] started core service [/rosout]                                                                                                                                                                                       \n[hrpsys_ros_bridge] process[modelloader-2]: started with pid [16981]                                                                                                                                                                     \n[hrpsys_ros_bridge] [ROSTEST]running test projectgenerator                                                                                                                                                                               \n[hrpsys_ros_bridge] IDL:omg.org/CORBA/TRANSIENT:1.0                                                                                                                                                                                      \n[hrpsys_ros_bridge] [modelloader-2] process has finished cleanly                                                                                                                                                                         \n[hrpsys_ros_bridge] log file: /home/nozawa/.ros/log/90f82ef4-e37f-11e4-a1d6-5c514ff5a2c6/modelloader-2*.log                                                                                                                              \n[hrpsys_ros_bridge] respawning...                                                                                                                                                                                                        \n[hrpsys_ros_bridge] [modelloader-2] restarting process                                                                                                                                                                                   \n[hrpsys_ros_bridge] process[modelloader-2]: started with pid [16996]                                                                                                                                                                     \n[hrpsys_ros_bridge] IDL:omg.org/CORBA/TRANSIENT:1.0                                                                                                                                                                                      \n[hrpsys_ros_bridge] process[projectgenerator-3]: started with pid [17023]                                                                                                                                                                \n[hrpsys_ros_bridge] terminate called after throwing an instance of 'std::bad_alloc'                                                                                                                                                      \n[hrpsys_ros_bridge]   what():  std::bad_alloc                                                                                                                                                                                            \n[hrpsys_ros_bridge] [modelloader-2] process has finished cleanly                                                                                                                                                                         \n[hrpsys_ros_bridge] log file: /home/nozawa/.ros/log/90f82ef4-e37f-11e4-a1d6-5c514ff5a2c6/modelloader-2*.log                                                                                                                              \n[hrpsys_ros_bridge] respawning...                                                                                                                                                                                                        \n[hrpsys_ros_bridge] [modelloader-2] restarting process                                                                                                                                                                                   \n[hrpsys_ros_bridge] process[modelloader-2]: started with pid [17040]                                                                                                                                                                     \n[hrpsys_ros_bridge] IDL:omg.org/CORBA/TRANSIENT:1.0                                                                                                                                                                                      \n[hrpsys_ros_bridge] [modelloader-2] process has finished cleanly                                                                                                                                                                         \n[hrpsys_ros_bridge] log file: /home/nozawa/.ros/log/90f82ef4-e37f-11e4-a1d6-5c514ff5a2c6/modelloader-2*.log                                                                                                                              \n[hrpsys_ros_bridge] respawning...                                                                                                                                                                                                        \n[hrpsys_ros_bridge] [projectgenerator-3] process has died [pid 17023, exit code -6, cmd /home/nozawa/ros/hydro_parent/devel/lib/hrpsys/ProjectGenerator -o corba.nameservers:localhost:2940 /home/nozawa/ros/hydro_parent/devel/share/OpenHRP-3.1/idl/../sample/model/PA10/pa10.main.wrl /home/nozawa/ros/hydro_parent/devel/share/OpenHRP-3.1/sample/model/longfloor.wrl,0,0,0,0,0,1,0 --integrate false --output /home/nozawa/ros/hydro/src/rtm-ros-robotics/rtmros_common/hrpsys_ros_bridge/models/pa10_nosim.xml --gtest_output=xml:/home/nozawa/ros/hydro/build/hrpsys_ros_bridge/test_results/hrpsys_tools/rosunit-projectgenerator.xml --text __name:=projectgenerator __log:=/home/nozawa/.ros/log/90f82ef4-e37f-11e4-a1d6-5c514ff5a2c6/projectgenerator-3.log]. \n[hrpsys_ros_bridge] log file: /home/nozawa/.ros/log/90f82ef4-e37f-11e4-a1d6-5c514ff5a2c6/projectgenerator-3*.log                                                                                                                         \n[hrpsys_ros_bridge] [modelloader-2] restarting process                                                                                                                                                                                   \n[hrpsys_ros_bridge] process[modelloader-2]: started with pid [17068]                                                                                                                                                                     \n[hrpsys_ros_bridge] IDL:omg.org/CORBA/TRANSIENT:1.0                                                                                                                                                                                      \n[hrpsys_ros_bridge] [ROSTEST]test [projectgenerator] finished                                                                                                                                                                            \n[hrpsys_ros_bridge] [ROSTEST][ROSTEST] test [projectgenerator] done                                                                                                                                                                      \n[hrpsys_ros_bridge] [ROSTEST]tearDown[/home/nozawa/ros/hydro/src/rtm-ros-robotics/rtmros_common/hrpsys_tools/launch/_gen_project.launch]                                                                                                 \n[hrpsys_ros_bridge] shutting down processing monitor...                                                                                                                                                                                  \n[hrpsys_ros_bridge] [modelloader-2] killing on exit                                                                                                                                                                                      \n[hrpsys_ros_bridge] [rosout-1] killing on exit                                                                                                                                                                                           \n[hrpsys_ros_bridge] [master] killing on exit                                                                                                                                                                                             \n[hrpsys_ros_bridge] ... shutting down processing monitor complete   \n", "0", "hrpsys_ros_bridge", "hrpsys_ros_bridge_tutorials", "rtmros_hrp2", "rm *.xml", "git clean -xfd", "rm -fr $(find build | grep hrpsys_ros_bridge) $(find devel | grep hrpsys_ros_bridge)", "ProjectGenerator", "export-collada", "ModelLoader", "rostest", "ProjectGenerator", "export-collada"], "pr_quotes": ["Because the test did not passed with this line, only for travis.", "The reason rtmros_hrp2 did not pass may different reason. I'm afraid we have consumed free trial for that. Travis on private repo is not free .", "I cleaned hrpsys_ros_bridge_tutorials directory by git clean -xfd", "\u2014", "\nReply to this email directly or view it on GitHub", "\n", "\n.", "I think tihs error message is not essential(?).", "Applying this PR commit, some dependency seem to be broken.", "\nFor example, if error occurs, cmake stops (loop?).", "\u2014", "\nReply to this email directly or view it on GitHub", "\n", "\n.", "Thanks, I tried", "rm -fr $(find build | grep hrpsys_ros_bridge)  $(find devel | grep hrpsys_ros_bridge)", "and then I checked", "roscd hrpsys_ros_bridge && catkin bt --start-with-this -i -v", "and", "roscd hrpsys_ros_bridge_tutorials && catkin bt --start-with-this -i -v", "Same error occurred in hrpsys_ros_bridge_tutorials.", "Moreover, rtmros_hrp2 travis errors is occurring.", "\nI think travis test starts from clean status.", "\u2014", "\nReply to this email directly or view it on GitHub", "\n", "\n.", "? i have succeeded to compile on 3gokan PC this noon.", "\u25c9 Kei Okada", "On Wed, Apr 15, 2015 at 10:21 PM, Shunichi Nozawa <", "\n", "> wrote:", "I asked ", " to tell ", " about this.", "I heard that.", "\nThen I tried git clean -xfd and rm -fr $(find build | grep hrpsys_ros_bridge) $(find devel | grep hrpsys_ros_bridge) on my PC, catkin bt failed.", "After that, I checked 3gokan PC which you tested.", "\nI confirmed that catkin bt on ocs11 and ocs12 still failed.", "\n(ocs11 and ocs12 are maybe PCs which you tested.)", "For example, when i executed the following command,", "\nroscd hrpsys_ros_bridge && rm models/*.xml && catkin bt --start-with-this -v -i --force-cmake", "ProjectGenerator error occurs for all local PCs.", "[hrpsys_ros_bridge] [ROSTEST]Running test [projectgenerator]", "\n[hrpsys_ros_bridge] auto-starting new master", "\n[hrpsys_ros_bridge] process[master]: started with pid [16854]", "\n[hrpsys_ros_bridge] ROS_MASTER_URI=", "\n[hrpsys_ros_bridge] setting /run_id to 90f82ef4-e37f-11e4-a1d6-5c514ff5a2c6", "\n[hrpsys_ros_bridge] process[rosout-1]: started with pid [16959]", "\n[hrpsys_ros_bridge] started core service [/rosout]", "\n[hrpsys_ros_bridge] process[modelloader-2]: started with pid [16981]", "\n[hrpsys_ros_bridge] [ROSTEST]running test projectgenerator", "\n[hrpsys_ros_bridge] IDL:omg.org/CORBA/TRANSIENT:1.0", "\n[hrpsys_ros_bridge] [modelloader-2] process has finished cleanly", "\n[hrpsys_ros_bridge] log file: /home/nozawa/.ros/log/90f82ef4-e37f-11e4-a1d6-5c514ff5a2c6/modelloader-2_.log", "\n[hrpsys_ros_bridge] respawning...", "\n[hrpsys_ros_bridge] [modelloader-2] restarting process", "\n[hrpsys_ros_bridge] process[modelloader-2]: started with pid [16996]", "\n[hrpsys_ros_bridge] IDL:omg.org/CORBA/TRANSIENT:1.0", "\n[hrpsys_ros_bridge] process[projectgenerator-3]: started with pid [17023]", "\n[hrpsys_ros_bridge] terminate called after throwing an instance of 'std::bad_alloc'", "\n[hrpsys_ros_bridge]   what():  std::bad_alloc", "\n[hrpsys_ros_bridge] [modelloader-2] process has finished cleanly", "\n[hrpsys_ros_bridge] log file: /home/nozawa/.ros/log/90f82ef4-e37f-11e4-a1d6-5c514ff5a2c6/modelloader-2_.log", "\n[hrpsys_ros_bridge] respawning...", "\n[hrpsys_ros_bridge] [modelloader-2] restarting process", "\n[hrpsys_ros_bridge] process[modelloader-2]: started with pid [17040]", "\n[hrpsys_ros_bridge] IDL:omg.org/CORBA/TRANSIENT:1.0", "\n[hrpsys_ros_bridge] [modelloader-2] process has finished cleanly", "\n[hrpsys_ros_bridge] log file: /home/nozawa/.ros/log/90f82ef4-e37f-11e4-a1d6-5c514ff5a2c6/modelloader-2_.log", "\n[hrpsys_ros_bridge] respawning...", "\n[hrpsys_ros_bridge] [projectgenerator-3] process has died [pid 17023, exit code -6, cmd /home/nozawa/ros/hydro_parent/devel/lib/hrpsys/ProjectGenerator -o corba.nameservers:localhost:2940 /home/nozawa/ros/hydro_parent/devel/share/OpenHRP-3.1/idl/../sample/model/PA10/pa10.main.wrl /home/nozawa/ros/hydro_parent/devel/share/OpenHRP-3.1/sample/model/longfloor.wrl,0,0,0,0,0,1,0 --integrate false --output /home/nozawa/ros/hydro/src/rtm-ros-robotics/rtmros_common/hrpsys_ros_bridge/models/pa10_nosim.xml --gtest_output=xml:/home/nozawa/ros/hydro/build/hrpsys_ros_bridge/test_results/hrpsys_tools/rosunit-projectgenerator.xml --text __name:=projectgenerator _", ".log", "\n[hrpsys_ros_bridge] [modelloader-2] restarting process", "\n[hrpsys_ros_bridge] process[modelloader-2]: started with pid [17068]", "\n[hrpsys_ros_bridge] IDL:omg.org/CORBA/TRANSIENT:1.0", "\n[hrpsys_ros_bridge] [ROSTEST]test [projectgenerator] finished", "\n[hrpsys_ros_bridge] [ROSTEST][ROSTEST] test [projectgenerator] done", "\n[hrpsys_ros_bridge] [ROSTEST]tearDown[/home/nozawa/ros/hydro/src/rtm-ros-robotics/rtmros_common/hrpsys_tools/launch/_gen_project.launch]", "\n[hrpsys_ros_bridge] shutting down processing monitor...", "\n[hrpsys_ros_bridge] [modelloader-2] killing on exit", "\n[hrpsys_ros_bridge] [rosout-1] killing on exit", "\n[hrpsys_ros_bridge] [master] killing on exit", "\n[hrpsys_ros_bridge] ... shutting down processing monitor complete", "\nCuriously, return codes are all 0, but ProjectGenerator seems to fail.", "By the way, regardless of local PCs, travis test on hrpsys_ros_bridge downstream packages such as hrpsys_ros_bridge_tutorials and rtmros_hrp2 still fails.", "\u2014", "\nReply to this email directly or view it on GitHub.", "but are you saying that Reverting ", " fix the behavior of ProjectGenerator?", "I think removing only xml is not a good idea", "but are you saying that Reverting ", "\n", " fix the behavior of", "\nProjectGenerator?", "Yes, on my PC, reverting ", "\n", " seem to resolve", "\nthis problem.", "\nIt is worth to try reverting to pass travis for downstream package.", "I think removing only xml is not a good idea", "Sorry, after that, in addition to rm *.xml,", "\nI also tried git clean -xfd and rm -fr $(find build | grep", "\nhrpsys_ros_bridge) $(find devel | grep hrpsys_ros_bridge) and catkin", "\nbuild failed.", "Howerver, why removing only xml file is not so good?", "\nBefore ", " ", ",", "\nremoving only xml files and execute catkin build succeeded.", "\nIf cmake's build target dependencies are correctly defined, removing only", "\nxml file seem to be natural and catkin build after removing should work.", "\nOtherwise, cmake's build target dependencies have problem.", "\u2014", "\nReply to this email directly or view it on GitHub", "\n", "\n."], "pr_details_more": ["[compile_robot_model.cmake] compile_robtos should be list of all generated lisp file, not targets"]},
{"url": "https://github.com/start-jsk/rtmros_common/pull/883", "pr_title": "Workaround for update .travis", "username": "garaemon", "username_url": "/garaemon", "issue_status": "Closed", "posted_on": "Dec 19, 2015", "pr_contents": ["Leave decision to ", " ", " Do you know how to fix the issue?", "I don't know, but found ", " .", "\nmaybe ", " knows about this .", "Run hydro test on jenkins.jsk", "As far as I'm concerned (i.e. rtmros_hironx/NEXTAGE), we're no longer active on maintaining Hydro version. So I have no opinion about this.", "I'm afraid latest catkin may not work with hydro, is it correct?", "\u25c9 Kei Okada", "On Sat, Dec 19, 2015 at 7:18 PM, Ryohei Ueda ", "\nwrote:", " ", " Do you know how to fix the issue?", "\u2014", "\nReply to this email directly or view it on GitHub", "\n", "\n.", "If you look at a few month from now", "Instability and time consumption of the hironx/nextage test is", "\nfrustrating hrpsys and rtmros_common users, so please look into this,", "\n", "As far as I'm concerned (i.e. rtmros_hironx/NEXTAGE), we're no longer active on maintaining Hydro version. So I have no opinion about this.", "Current big problem is we do not have indigo test for rtmros_common", "\nand we're not sure if  any commits on rtmros_common may break", "\nhironx/nextage or not and", "\nif we remove hironx/nextage test from rtmros_common, we'll realize", "\nthat breaks hironx/nextage after it is released. I'm afraid we can", "\nhandle this situation.", "\nSo having indigo test is essential and keeping  hydro test (from", "\u25c9 Kei Okada", "On Mon, Dec 21, 2015 at 10:44 AM, Kei Okada ", " wrote:", "I'm afraid latest catkin may not work with hydro, is it correct?", "\u25c9 Kei Okada", "On Sat, Dec 19, 2015 at 7:18 PM, Ryohei Ueda ", "\nwrote:", " Do you know how to fix the issue?", "\u2014", "\nReply to this email directly or view it on GitHub.", "please upgrade jsk_travis.", "I'm afraid I might not understand something here, but sounds like we agreed for this PR?", "Instability and time consumption of the hironx/nextage test is frustrating hrpsys and rtmros_common users, so please look into this, ", "I apologize if packages I maintain might have been causing headache, which I honestly did not know. Next time it happens please ping me so that I look at it.", " supports jade / indigo test"], "pr_code": ["15:57:09 ImportError: \"from catkin_pkg.topological_order import topological_order\" failed: No module named tool_detection \n15:57:09 Make sure that you have installed \"catkin_pkg\", it is up to date and on the PYTHONPATH. \n15:57:09 ++ exit 1                                                                       \n15:57:09 terminate called after throwing an instance of 'CORBA::COMM_FAILURE'            \n15:57:09 testtest_compile_idl_sh ... FAILURE!                                            \n15:57:09 FAILURE: test [test_compile_idl_sh] did not generate test results               \n15:57:09   File \"/usr/lib/python2.7/unittest/case.py\", line 327, in run                  \n15:57:09     testMethod()                                                                \n15:57:09   File \"/opt/ros/hydro/lib/python2.7/dist-packages/rostest/runner.py\", line 162, in fn \n15:57:09     self.assert_(os.path.isfile(test_file), \"test [%s] did not generate test results\"%test_name) \n15:57:09   File \"/usr/lib/python2.7/unittest/case.py\", line 420, in assertTrue           \n15:57:09     raise self.failureException(msg)                                            \n15:57:09 -------------------------------------------------------------------------------- \n15:57:09 [ROSTEST]----------------------------------------------------------------------- \n15:57:09                                                                                 \n15:57:09 [testtest_compile_idl_sh][failed]                                               \n15:57:09                                                                                 \n15:57:09 SUMMARY                                                                         \n15:57:09  * RESULT: FAIL                                                                 \n15:57:09  * TESTS: 0                                                                     \n15:57:09  * ERRORS: 0                                                                    \n15:57:09  * FAILURES: 1                                                                  \n15:57:09                                                                                 \n"], "pr_quotes": ["Run hydro test on jenkins.jsk", " ", " Do you know how to fix the issue?", "\u2014", "\nReply to this email directly or view it on GitHub", "\n", "\n.", "As far as I'm concerned (i.e. rtmros_hironx/NEXTAGE), we're no longer active on maintaining Hydro version. So I have no opinion about this.", "I'm afraid latest catkin may not work with hydro, is it correct?", "\u25c9 Kei Okada", "On Sat, Dec 19, 2015 at 7:18 PM, Ryohei Ueda ", "\nwrote:", "Instability and time consumption of the hironx/nextage test is frustrating hrpsys and rtmros_common users, so please look into this, "], "pr_details_more": ["Pros:\n", "\n", "Cons:\n", "\n", "we'll no longer uses hydro, (only if ", " passed the defence ;-)", "The reason we start using jenkins@jsk is for indigo test, and now", "\ntravis support indigo platform so we can move most of job back to the", "\ntravis."]},
{"url": "https://github.com/ros-planning/navigation2/pull/993", "pr_title": "Tf based positioning", "username": "SteveMacenski", "username_url": "/SteveMacenski", "issue_status": "Closed", "posted_on": "Aug 8, 2019", "pr_contents": ["TF positioning, removing less-ideal topic based positioning", "Option to change reference and base frame, but set to logical defaults", "Fix dependency issues", "remove extraneous utilities", "Cleanup timeout consumption in costmaps 2d", "removed the is localized condition check, as it uses information from the position data that no longer exists. More over this is something that should probably not belong as a node but as a utility for another node to look at.", "still needs testing", "I'd like to request maintainer:  to review this PR.", "Review in progress...", "The collision checker test appears to be failing in CI. Also looks like there are some lint/uncrustify failures.", "Mostly style suggestions on my side, mainly thinking about how we pass the tf buffer and if we could hide that behind some class.", "Bunch of great thoughts, thanks. I'll get back to this tomorrow with changes, I still need to test it, I've been fighting to get everything squared up to test in simulation.", "I'd like to get this in quickly since it is the blocker to a whole fire hose of PRs in the works", " for thanks the comments on the shared_ptr, I'm moving them all to references, update incoming.", " ", " Given the current status of the stack, this PR works to the best of my knowledge and ability to test. Can I get approved or re-reviewed?", "(also going to squash this PR, tons of commits trying to fix issues that I later found weren't my doing)", "Tests that lead me to believe this is fine (although can't fully test due to other stack/rviz issues)", "ei", "in several processes and frames. All seem to make sense.", "While I can't fully integration test because other things are failing, we have real valued poses in multiple processes with the changes that make sense", "There's some CI tests I'm trying to fix up, but the functional code is all good.", " Could you fix the uncrustify issues and also fix merge conflicts?", " I keep seeing complaints from ", " but I touched the file to fix an uncrustify issue that was identified locally, and when I run locally it runs fine, but makes CI unhappy. When CI is happy, locally its unhappy, I'm not exactly sure what's up with that one.", "I assumed it was some weird issue with CI that will be resolved on merge (or my computer)", "I'll take another look this afternoon though and see if I can figure it out now", "Edit: what merge conflicts?", " can't tell you why they look different on my local machine and in CI, but I resolved the crusty code issues at least in CI.", "Ah, with ", " merged, there's the merge conflicts ;) I'll take care of it tomorrow morning", "Now just waiting on 1+ CI to pass tests", "Squashing this PR because... well this doesn't need 22 commits."], "pr_code": ["  geometry_msgs::msg::PoseStamped pose;\n  getRobotPose(pose);\n  RCLCPP_INFO(get_logger(), \"STEVE: Pose: %f %f in frame %s\", pose.pose.position.x, pose.pose.position.y, global_frame_.c_str());\n\n", "nav2_util.uncrustify src/map/map_cspace.cpp"], "pr_details": ["TF positioning, removing less-ideal topic based positioning", "Option to change reference and base frame, but set to logical defaults", "Fix dependency issues", "remove extraneous utilities", "Cleanup timeout consumption in costmaps 2d", "removed the is localized condition check, as it uses information from the position data that no longer exists. More over this is something that should probably not belong as a node but as a utility for another node to look at.", "still needs testing"], "pr_details_more": ["\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "When printing transforms outputs in logs both frames using the same utility give me meaningful non-zero values in the 2 separate costmap processes"]},
{"url": "https://github.com/jsk-ros-pkg/jsk_common/pull/357", "pr_title": "Nodelet throttle", "username": "garaemon", "username_url": "/garaemon", "issue_status": "Closed", "posted_on": "Apr 4, 2014", "pr_contents": ["nodelet version of throttle"], "pr_details_more": ["do not need to specify input type (it's different from nodelet_topic_tools' throttle!)", "subscription queue is set to 1 and block the callback thread according to the ~update_rate. Thanks to", "\nthis blocking, it does not consumes CPU so much.", "include test code"]},
{"url": "https://github.com/ros-planning/navigation2/pull/1343", "pr_title": "Reduce the number of tests run in Travis to just a single system test.", "username": "crdelsey", "username_url": "/crdelsey", "issue_status": "Closed", "posted_on": "Nov 11, 2019", "pr_contents": [" at this point, wouldn't it make sense just to run none of the integration tests?", "at this point, wouldn't it make sense just to run none of the integration tests?", "What's the point of Travis now? I'd say it's purpose is to provide a second opinion if Circle CI is failing mysteriously. By keeping both a build and a test run in Travis, we get a second opinion on both those kinds of failures in Circle.", "I can't remember though if we've had a pass in Travis but failures in Circle in a while though. I'm just trying to keep Travis going so long as it's easy, to give it a chance to prove it still has worth. :-)", "We have had travis success on Circle failures before, yes. Usually when the caching is broken or the nightly build is broken", "Closing this PR. I'll add it to ", " instead."], "pr_quotes": ["at this point, wouldn't it make sense just to run none of the integration tests?"], "pr_details_more": ["Travis is frequently timing out due to the number of tests that have been added. This PR turns them all off except for Dynamic Obstacle. That test should cover the vast majority of the functionality that the others cover without being overly time consuming."]},
{"url": "https://github.com/ros/actionlib/pull/86", "pr_title": "Clang tidy fixes", "username": "mikaelarguedas", "username_url": "/mikaelarguedas", "issue_status": "Closed", "posted_on": "Jul 27, 2017", "pr_contents": ["This PR fixes some issues that clang-tidy detected.", "That's weird, the lunar job failed, but the other ones pass. ", " is that expected or should I look into it? Thanks!", " This test is ", " so the failure is not due to this PR.", "Thanks for the contribution!", " thanks for the prompt response! ", " has some other suggestions, but they might involve C++11. Given that Kinetic requires a C++11-capable compiler, would you be ok if I submitted those contributions for review? They don't change the API in any way and keeps it C++03, they are just fixes/improvements to some internal stuff, but it'd mean creating a new ", " branch to avoid introducing C++11 in Indigo.", "lgtm, thanks ", ", will merge this once other PRs are merged and will resolve conflicts on this one.", " no problem, let me know if I can help somehow (resolving conflicts or otherwise) and if I should submit any ", " fixes that use C++11 after all the other PRs are merged", " thanks for the prompt response! clang-tidy has some other suggestions, but they might involve C++11. Given that Kinetic requires a C++11-capable compiler, would you be ok if I submitted those contributions for review?", "I'm considering branching out actionlib for lunar to be able to do some code cleanup and some changes that may change behavior (while being mostly style + bug fixes). I could extend this to kinetic if it make sense for such improvements.", "A few things to consider given that I don't know how spread your changes can be:"], "pr_code": ["clang-tidy", "kinetic-devel", "clang-tidy", "-std=c++11"], "pr_quotes": [" thanks for the prompt response! clang-tidy has some other suggestions, but they might involve C++11. Given that Kinetic requires a C++11-capable compiler, would you be ok if I submitted those contributions for review?"], "pr_details_more": ["according to where the changes lie, using c++11 may require downstream packages to pass the ", " flag. I think that's something we'd like to avoid in general so that every package consuming this one doesn't have to change it's cmake. Given your remark \"They don't change the API in any way and keeps it C++03\", I think we should be safe on that front.", "I opened a ", " some time ago to fix mostly style and that I was thinking of integrating to the to be created dev branch. Once merged it may conflict with the changes you will submit."]},
{"url": "https://github.com/ros/geometry2/pull/363", "pr_title": "use .pyd instead of .so on Windows and export symbols", "username": "tfoote", "username_url": "/tfoote", "issue_status": "Closed", "posted_on": "Feb 28, 2019", "pr_code": [".pyd", ".so", ".pyd", ".dll", "RUNTIME_OUTPUT_DIRECTORY", "init_tf2()", "tf2_py.cpp"], "pr_details_more": ["use ", " extension instead of the Linux-specific ", " extension", " is just like ", " (shared library), needs to add ", " so it gets exported", " in ", " needs to be exported in the shared library so it could consumed by other modules"]},
{"url": "https://github.com/ANYbotics/elevation_mapping/pull/108", "pr_title": "Add optional voxelgrid filter and new service to request raw sub map", "username": "anybotics-sync-runner", "username_url": "/anybotics-sync-runner", "issue_status": "Closed", "posted_on": "Jul 12, 2019", "pr_contents": ["This PR updates PR ", " with the necessary changes discussed with ", " and ", ".", "This PR replaces ", " and ", " by incorporating all comments from both PR's.", "Important note: The name for the already existing service stays the same, such that it does not break locomotion. The underlying callback functions are named appropriately.", "Summary:", " and ", " can you verify that this fits your needs."], "pr_details_more": ["Service to get raw submap (updated function names as requested in ", ").", "Reduction of repeating code in the point cloud clean function.", "Addition of sensor specific clean functions, at the moment empty.", "Addition of voxel grid filter in point cloud clean function with the goal to reduce CPU consumption."]},
