{"title": "Slightly off-topic: two tools for making Fanuc development a little easier", "thread_contents": ["For some time now I\u2019ve worked on two tools that may make development of Karel programs for Fanuc controllers a little easier. As there might be developers here who work with Fanuc robots \u2013 outside of ROS(-Industrial) \u2013 and may be interested in this, I thought I\u2019d post a link to them in this Discourse category.", "The first is ", ". It\u2019s a wrapper around the regular ", " (the Karel compiler). The wrapper is not a compiler itself, but adds some functionality which I found missing from ", ":", "and some other minor conveniences.", "It does not integrate with Roboguide, but is intended to be used from the command line.", "Manual command line invocation gets tedious pretty quickly, so the second tool tries to provide a solution for that: ", ". This is a CMake like \u201cmakefile generator\u201d that supports a workspace-style workflow. It introduces a package based approach where packages have manifests, export include files (headers) and buildable targets which ", " consumes and generates a single top-level ", " file for. Building an entire workspace requires only ", " to be invoked. Dependency tracking and build ordering (for generated code fi) is built-in.", "Together with ", ", this enables a more modern Karel development workflow where reusable libraries can be created and some form of redistributable package management can be integrated.", "An example workspace may be found here: ", ".", "Right now only Karel is supported, but a member of the community is looking into adding TP support (ie: ", ") to ", ".", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["preprocessor support (based on GPP): include guards, macros, defines, conditional compilation and inclusion, etc", "gcc style dependency tracking (ie: ", " support)", "support for multiple include directories"], "url": "https://discourse.ros.org/t/slightly-off-topic-two-tools-for-making-fanuc-development-a-little-easier/10717"},
{"title": "PICA: Drone Made to Learn ROS with MCU and FPGA", "thread_contents": ["If you are a new learner of ROS and want to own your R&D drone? Do you want to learn ROS along with MCU and FPGA? PICA would be the choice for you to experience science, research and education all together on one plate form. PICA is specially designed for Research and development and it would give you a thorough insight of ROS. In a very short period of time you can be skillful in the field of ROS Robotics. PICA is a highly capable platform for Unmanned Aerial Vehicles. PICA is packed with serious processing and computing power, deploying an advanced FPGA, MCU and on-board computation module. The Education Package would give you full access to a learning environment. It has tutorials and instructions inside, and could help you to leap a quick start towards robo-science.", "Gaitech Robotics have also a perk for the customers, to support the consumer, there are learning courses available, which includes not only the hardware training but also software drills will be available.", "PICA is now available on ", " !", "Hello,", "Nice to see a new drone open source! Is your autopilot new or based on PX4 or ArduPilot ?", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/pica-drone-made-to-learn-ros-with-mcu-and-fpga/2542"},
{"title": "World ROS-I Day - July 11", "thread_contents": ["The ROS-I global community is going to be putting together the first World ROS-I Day, in the spirit of World MoveIt! day, but focusing on the repositories relevant to ROS-Industrial. We have 3-4 sites already signed up to host, as well as participating in virtual collaboration rooms, with continued participation from Asia, handing off to the EU, then finally to the Americas.", "We hope we can find some folks to jump in to do some clean up with us on the various repositories and packages, working on a predefined list of issues. Where hardware is needed for access we may seek particular collaboration partners, or have to table certain issues, though we are open to creative ideas.", "We will keep info up to date here as we work out the details, but we look forward to hosting this inaugural event and learn what we can do when we coordinate our efforts!", "Thanks in advance!", "Matt R.", "\nSwRI", "\nROS-I Consortium Americas Program Manager", "As a follow up to the above, ROS-I development leaders have started working up a list of repositories that will be the focus of the inaugural World ROS-Industrial Day on July 11th (WRID18). This will help with making for a manageable scope and allow for tracking of progress throughout the day.", "The repositories that are being included for WRID18 at this time are:", "On the ", " organisation:", "Regarding the ", " repository: this edition of World ROS-Industrial Day we will not be addressing anything related to drivers, pending engagement with Universal Robots. While we are aware of the fact that the current situation is far from ideal, the good news is that recent engagement with Universal Robots will enable improved driver performance in the future. As such, we will focus on the ", " packages in ", ", such as the robot support, kinematics, MoveIt and Gazebo packages. if there are members of the community that seek to improve current drivers and their performance, they are welcome to do so, but please contact the WRID18 organisers to discuss this.", "Outside of ", ", over in ", ":", "The maintainers of each of these repositories are in the process, and still in the process of being invited, to review issues within these repositories and label them as candidates for this event.", "Candidate issues are labelled with ", ", and later with a label to indicate the \u201clevel of effort\u201d that would be needed to address the issue so participants can choose tasks to work on based on this.", "Finally, all open tasks will be aggregated on a Github organisation-level project board which will be updated live during WRID18 to clearly show progress during the day.", "Obviously, if there are other issues you feel are worth considering, or repositories to be included, feel free to add to this thread!", "Thanks and looking forward to a great day on July 11th!", "We also have event info over at: ", ".", "Regards,", "Matt R.", "ROS-I Americas", "The ROS-I global community is going to be putting together the first World ROS-I Day, in the spirit of World MoveIt! day, but focusing on the repositories relevant to ROS-Industrial. We have 3-4 sites already signed up to host, as well as participating in virtual collaboration rooms, with continued participation from Asia, handing off to the EU, then finally to the Americas.", "Update!", "For those in the South Central Texas region, the Southwest Research Institute ROS-I Development team will be hosting an in-person World ROS-I Event from 8AM till 5PM at LiftOff located at 2014 S. Hackberry St, San Antonio, Texas 78210. Come and interact with local/regional developers, and work issues to improve the ROS-I repositories and continue to foster collaboration around industrial use-cases. We will have refreshments, lunch, and some souvenirs at the event.", "Thanks!", "Matt R.", "\nROS-I Americas Program Manager", "Another update!", "Issue board is coming together nicely!", "GitHub is where people build software. More than 28 million people use GitHub to discover, fork, and contribute to over 85 million projects.", "Streaming and Chat Services for Global participating in support of World ROS-I Day will be at:", "Streaming - ", "Live Chat Room (IRC): ", "Subject to change pending load testing.", "Hi, I organise ", " in Delhi, India. I was hoping to hold a meetup for ROS-I day. I already have a venue and logistics handled. Please let me know how to proceed?", "That is great to hear! Just jump in the virtual room and the IRC chat, you can also consult the GitHub issue board. Our friends in Singapore, that hub ROS-I AP, will be kicking things off. They should already be up and running, and moderating the chat over on IRC as well. ", " may be able to give more guidance to how they will be moderating the issue board during this time! Thanks for your interest and support of open-source robotics for industry!", "We would like to both welcome and thank Open Robotics for agreeing to host those in the Mountain View area looking to contribute to World ROS-I Day in a \u201cface to face\u201d fashion. We have added their location over at ", ", you can reply here, or tweet at Open Robotics for specifics as to when their doors are open! Thanks again ", " and the Open Robotics team for their continued support of ROS-I and open-source robotics for Industry!", " hi, could you please help with how will the issue board be managed? I have created an ", ". Also, I looked at some issues and shortlisted a few that I believe our community here can handle.", "Hi ", ", please log into the IRC chat / stream tomorrow. From there, we can begin assigning tasks from the issue board to your attendees that they wish to address. Looking forwards to it!", "Thanks, ", ", for the great initiative.", "We had a blast in Stuttgart, killed some candies and hopefully some bugs as well:", "\n", "\n", "Thilo", "Thanks to everyone who contributed to World ROS-I Day! We are doing a lot of \u201cpost-processing\u201d to be able to present what went down. We look forward to working the PR\u2019s and continuing to engage around the world!", "Please feel free to reply to this thread with ideas to improve this event and how we can make it more accessible/efficient to get work done!", "Thanks again!", "Matt R.", "\nROS-I Americas", "\nSwRI", "Great pic! And great working with the IPA team of course! ", " ", "Hey Sorry I wasn\u2019t able to reply, I was on leave, but looks like you managed to join which was amazing!", "Thanks for your good work!", "Cheers,", "\nMin Ling", "Hi!  I just have a question about the bar graphs found on ", ".  Are these statistics for July 13th and July 16th only? Or are they for a period of time?  Is there any reason those dates were chosen?  Thanks!", "The intent was to make sure we caught the activity on the 11th, and then try to get a sense if the activity sustained, since issues were assigned and still in process, so we wanted a snapshot for sustained activity. At least that was the goal for that particular write up.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", " (except driver infrastructure)"], "url": "https://discourse.ros.org/t/world-ros-i-day-july-11/5087"},
{"title": "Using NUC with Kobuki", "thread_contents": ["Hi,", "It seems to becoming harder to find netbook size laptops to use with the Kobuki base and so I\u2019m looking into using the Intel NUC (e.g. NUC6i5SYH). I want fully autonomous operation where the Kobuki can dock and charge its batteries and the PC, so I wondered if anyone was aware of a power solution e.g. external battery that can connect to the Kobuki 19v output AND will allow the NUC to get a reading of the battery level e.g. via USB. Alternatively, is it possible to use a dc-dc converter with one of the other Kobuki power outputs (e.g. 12v 5A) to power the NUC?", "Or if anyone knows of a good choice of small laptop to use then that might be preferable.", "Thanks,", "\nLee.", "Hi,", "Have a look at the ", ", it\u2019s a DC-DC converter as well as UPS (6-30V input, 6-24V output). It supports multiple battery chemistries (e.g. Li-Po, SLA) and has an adjustable DC output.", "It has a USB interface, and Linux drivers, supporting ", ".", "I\u2019ve been using this device on my robot, I wrote a very simple Python ROS interface for this, which just publishes the charging state and individual Li-Po cell voltages. I\u2019ll upload this script and link it on this thread when I get the chance (I\u2019m currently away from my robot).", "Alex", "Thanks for the response. After posting I did end up looking at that and it looks like a good solution. Good to know that you have it up and running and that the Linux drivers work etc.", "I\u2019m thinking of using 6 of these batteries:", "\n", "7926", "\n", "\nwhich based on my very quick calculations should drive a NUC for about 6 hours (assuming NUC consumes 15W)?", "I asked the OpenUPS company if they could recommend any enclosures - did you find one that works well?", "Hi,", "we have a NUCi7 on our Turtlebot. We ordered an i5 but got an i7 due to", "\nsome issue while ordering. The i5 had a notebook powerbank with it which", "\nis not powerful enough for an i7 (it lasts about 30 minutes). Thus we", "\nare now testing a custom LiIon battery. It seems to be able to run the", "\ni7 for about 4-5 hours now but we are still working on a battery status", "\nintegration. Additionally, we need about 4-6A for charging the robot", "\nnow. From the internal wiring, this should not be a problem, but the", "\nwall charger only gives us 3.2A. So we also still need to get a powerful", "\nwall charger (right now using adjustable lab power supplies).", "Once the battery runs well, I can send you our setup. The OpenUPS looks", "\nvery nice as well, especially the already integrated battery status and", "\ncharging state. If you deploy it to your Turtlebot, could you give", "\nfeedback about it?", "Best,", "\nLasse", "Hi!", "We are also using Turtlebot (version 1) with an i7 NUC which actually requires 19V / 65 W. So far, we didn\u2019t use any DC/DC converters or something similar, but instead, we powered the NUC directly from the 12V / 5A output port on the Kobuki.", "This is certainly not ideal, and we experienced the NUC shutting down because of a \u201cprocessor thermal trip\u201d after some time (sometimes only 30 mins when the Kobuki battery would still last for long). First we thought it\u2019s a problem with the NUC (old thermal paste or something), but later we realized that the output voltage from the Kobuki is monotonically decreasing and will be too low at some point. This seems to have caused the overheating problems then.", "Either ", " or ", " seem like good solutions for this problem, but I\u2019m not very experienced with DC-DC converters or UPS and I\u2019m glad for any advice.", "Can anyone tell me if this would be a good buy for more reliable mobile NUC operation?", "We had a similar problem and solved it by purchasing a power bank. It charges from the kobuki base, provides 19V to the NUC and does not kill the Kobuki battery. We use one of the 19V connectors on the back of the Kobuki and make an adapter to charge the powerbank when the robot is on the charger.", "This is the one we used: ", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/using-nuc-with-kobuki/489"},
{"title": "Upgrading Turtlebot3 with better LIDAR", "thread_contents": ["Hello all,", "LDS-01 LIDAR that comes with turtlebot3 is good for small indoor places. But when I try to use it autonomously in larger indoor places it starts to behave unreliable.", "\nSeems like LDS-01 range is not good enough. My plan is to upgrade my Turtlebot with better LIDAR.", "What LIDAR would you suggest me for price up to $350?", "consider adding video.  Landmark navigation works well for longer distances and outdoor environments.  After all this is what humans do when driving a car.  They look out the window and see that big green building and know that is where to make the left hand turn.     I think vision is best for a certain scale and lidar best for getting through a doorway without hitting the jambs.", "There is another class of vision-based navigation that is different, this is where they convert a stereo 3D image to simulated LIDAR data.   I am ", " talking about that.   I mean that you recognize the landmarks and enter them into a list.   Then when the landmark is re-recognized the list is consulted.    This can be robust if multiple landmarks are in sight and location is determined by triangulation.", "The same camera data can be used by other algorithms for \u201cvisual odometry\u201d possibly using optical flow", "Then as the robot approaches a wall or door the lidar data becomes useful again.", "That said, a lidar upgrad is conceptually simpler", "Hi Chris,", "\nthanks for replay ", "I also plan to use Intel R200 in combination with LIDAR. But I plan to convert its 3D data into 2D laser scan.  With LIDAR I also have issues when robot cannot recognize obstacles that are higher than LIDAR can detect.", "\nBy adding R200 I hope it will detect these obstacles more reliably.", "\nDo you have more information about using 3D camera as you described above?", "I still think that my LDS-01 is bottleneck of my robot. ", " looks like very good LIDAR for its price.", "\nRange is 3.5x better, sample rate is 4.5x better and accuracy also looks better.", "\nWhat do you think, is there any better LIDAR with similar price?", "Yes, that is a common \u201ctrick\u201d, you convert 3D camera data so that it looks like LIDAR data then you don\u2019t have to change the SLAM software.   But the ONLY advantage is not having to change the SLAM software.", "There is another use of the vision camera where the most simple explanation goes like this:   The robot rolls into a kitchen and vision based software recognizes the front of a stove.  Then the SLAM system says \u201cin am in front of the stove\u201d.   There is no point cloud in this method.", "If you clapse the 3D image to 2D then you are also tosing out most of the information", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/upgrading-turtlebot3-with-better-lidar/6603"},
{"title": "[URDF-NG] ROS2 URDF2 discussion", "thread_contents": ["What does the next version of URDF look like?", "There was", " around URDF and SDF in 2.0.", "Later a ", ". Summary ", ".", "The discussion so for seems to be leaning towards harmonizing URDF and SDF (using SDF as a foundation).", "What are the next steps? What are the important details?", "My bold position is that ROS could adopt SDF wholesale. Most, if not all, of the wishlist items for URDF2 are already captured in SDF. It would be a shame to reinvent the wheel.", "I have a feeling this idea is somewhat controversial. If so, would someone be willing to speak to potential issues associated with ROS using SDF?", "It would be a shame to reinvent the wheel.", "Didn\u2019t SDF do that, given that people were trying different ways to extend URDF already (mimic tags, srdf, etc.)? ", "Jokes aside, I think SDF\u2019s ability to have frames with multiple parents in the kinematic chains is a distinct and fundamental advantage over URDF, which happens to also be a requirement of sorts when working with physic engines. However, I do think it shows that there are appropriate situations in which yet another standard makes sense.", "If so, would someone be willing to speak to potential issues associated with ROS using SDF?", "In order to use SDF in ROS, there needs to be a way to do tf with graph (rather than tree) based kinematics, i.e. how to handle multi-parent reference frames with tf. This is brought up every time this is suggested and though some ideas have been discussed in person, there\u2019s never been a well formed proposal on how to deal with that.", "Specifically ", " and I have talked at length about spanning trees for the SDF graph and how they could be used to address this. Maybe ", " can speak to that point.", "There may be other issues, but that\u2019s the fundamental one that comes to mind for me.", "Wheels are strange beasts, and like to be reinvented. Gazebo did have an XML format for describing robots and worlds before ROS existed. In fact, URDF looks surprisingly like Gazebo\u2019s original format\u2026", "The graph issue is a good point. Adding something to SDF to break a graph into a tree sounds like a reasonable approach.", "An impopular position perhaps, but personally I would really like to see ROS2 use an established scene/robot description format if possible.", "SDF is a good improvement over URDF already, but it\u2019s still a custom format, with almost no uptake outside the ROS-Gazebo universe. I know of one (export only?) plugin for a (commercial) 3D modelling tool. Newer Gazebo versions have the model editor, but that is still limited.", "With ROS2 using an established and industry grade middleware as the foundation to build its communication abstraction on top of, it would be great to see if we can do something similar for some other key parts, the robot description format being one of them.", "So I have just consumed most, if not all, of the discussion so far (hurray for lazy Fridays) including the recording of the meeting. Here are a few observations:", "All the formats seem to have arisen from fire-fighting small problems in small problem domains rather than intentional design. Everyone participating in the last year of discussions is representing their stakeholders and their requirements; but the conversations seems to be \u201cHow can we make the current robot description techniques less broken?\u201d rather than \u201cWhat set of stakeholders and requirements will give us the best foundation for the future?\u201d", "Given the number of people volunteering to do anything, moving to and incrementing on SDF seems like the best bet.", "At the heart of a robot description, the most important thing is that the mental model, and any given element of that model, is documented in enough detail so that you, and I, and everyone else understand the context and agree on what the element is. After that we need a defined data representation, with a common, easy to implement format being nice to have.", "I\u2019m seeing a general confusion between configuration (robot A has a gripper and robot B does not) and the dynamic state of things (robot A picks up an object and we add a rigid constraint between the pose of the EE and object to represent that). There is nothing wrong with bootstrapping any dynamic models with the robot description, but they are a different thing.", "There was some discussion about moving the robot_description parameter to a latching topic. Fine idea. Outside the scope of a robot description format.", "The robot description is a storage/wire format. There is a point in time when all data retrieval and parsing is finished at which point there is a robot model in memory. What happens after that point is application specific. Declaring which end effectors are available is part of the robot description. Signaling the switching of tools or the mounting of a tool at t=0 is not part of a robot description.", "There has been some discussion on compose-ability, extensibility,  and whether a core description (or well defined sub-descriptions) should be used. Dependency hell issues were raised with regards to plugins, URI\u2019s and the like.", "I don\u2019t have anything new to add to that discussion. The core description thing seems to be an artificial issue created by assumptions about the responsibility of the tools using the description to their downstream users. The robot description should not care about those third party consumers. Any parseable and coherent subset of the robot description should be fine.", "Dependency hell is not a reason to disallow dependencies. If managing external connectivity or packaging of multiple elements is beyond your project, then you should keep everything in one file.", "There was discussion about xacro, template engines, and GUI editors. I think these are outside the scope of the robot description, beyond indicating a format that has good libraries available.", "One final observation is that while it appears that SDF is the easiest path, the SDF creators have a mental frame that constrains their thinking. Nothing wrong with that, but it\u2019s worth taking a careful survey of others using rigid body robot models. People deploying robots in experiments or the field. People transferring CAD or optimizer designs. I think most types of users have been participating in the discussions so that\u2019s good.", "In order to use SDF in ROS, there needs to be a way to do tf with graph (rather than tree) based kinematics, i.e. how to handle multi-parent reference frames with tf. This is brought up every time this is suggested and though some ideas have been discussed in person, there\u2019s never been a well formed proposal on how to deal with that.", "Specifically ", " and I have talked at length about spanning trees for the SDF graph and how they could be used to address this. Maybe ", " can speak to that point.", "I\u2019m really hitting a mental wall with why a graph topology is a problem. Which frames have multiple parents (or rather, how is it possible for a frame to have multiple parents)? Can you elaborate the problem?", "Since it\u2019s a rigid body model it seems like any spanning tree would give you a valid results. The default spanning tree via the order joints are in the file would be fine no?", "(EDITED to clarify the question)", "I\u2019m really hitting a mental wall here. Which frames have multiple parents? Can you elaborate the problem?", "Since it\u2019s a rigid body model it seems like any spanning tree would give you a valid results. The default spanning tree via the parent-child relationships would be fine no?", "I\u2019m guessing ", " is thinking of kinematic structures with cycles in them, like grippers with parallel / coupled links, delta robots, etc.", "An impopular position perhaps, but personally I would really like to see ROS2 use an established scene/robot description format if possible.", "What formats do you have in mind?", "SDF is a good improvement over URDF already, but it\u2019s still a custom format, with almost no uptake outside the ROS-Gazebo universe.", "Open source projects are difficult to track. Based on word of mouth and interactions with other people I can say that simulators, such as Moby and Drake, use SDF. Organizations like FIRST, Robocup, and NASA use SDF. There is also a solidworks to SDF exporter, and AutoCAD has expressed interest in developing their own exporter. None of this means SDF is good, but are people who rely upon SDF.", "Can you clarify what you mean by \u201ccustom format\u201d and \u201cestablished format\u201d. To me it seems that a format created for a particular project (let\u2019s say SDF and URDF) can become an established format through general acceptance. This acceptance is an indicator that a format is worth using, or improving upon. Whereas a format created by an organizing body (let\u2019s say Collada) does not make the format good.", "Newer Gazebo versions have the model editor, but that is still limited.", "Yes, it is limited. The approach has bee to develop and release incremental improvements, rather than wait until a feature complete version is ready. We\u2019d love to have help with the model editor.", "All the formats seem to have arisen from fire-fighting small problems in small problem domains rather than intentional design.", "Just to clarify, both SDF and URDF have been carefully crafted by groups of people. It\u2019s difficult to foresee all potential use cases and problems. What may seem like fire-fighting is the normal processes of incremental improvements.", "I\u2019m guessing ", " is thinking of kinematic structures with cycles in them, like grippers with parallel / coupled links, delta robots, etc.", "Yes, tf requires a tree representation, but many robot configurations can have cycles. It\u2019s also jsut a good idea to support representation of a graph as a tree.", "I would say the only other one we should consider is collada.  This is because it is an industry 4.0 standard.", "If SDF is it then we need push to get it as an industry 4.0 standard as well", "industry 4.0 standard", "What is involved in becoming an industry 4.0 standard?", "I have not looked into it.", "Paul Hvass or Shaun Edwards might know more about this.", "Gjis?", "I\u2019m guessing ", " is thinking of kinematic structures with cycles in them, like grippers with parallel / coupled links, delta robots, etc.", "Yes.", "Since it\u2019s a rigid body model it seems like any spanning tree would give you a valid results. The default spanning tree via the order joints are in the file would be fine no?", "One strategy would be to pick an arbitrary spanning tree (first in order, last in order, random, etc.). However, you could also let the user specify the spanning tree, something that ", " was pretty interested in doing. Also, when you are dealing with a distributed tf system you can easily get into a situation where two spanning trees can disagree. This isn\u2019t an issue when the description is being used in a simulation because the simulation ensures that the spanning trees agree (or at least it should) and it\u2019s able to do so because it is not distributed and it has a \u201cperfect\u201d model.", "So allowing the user to pick, with a reasonable default if they don\u2019t care, seems best. But there are a lot of details about how to represent this and communicate it in the ROS graph and in the API.", "There was some discussion about moving the robot_description parameter to a latching topic. Fine idea. Outside the scope of a robot description format.", "Both of the previous two points, by the way, are examples of why I have to disagree with your general sentiment that how the description is transmitted and used in context is out of scope. The description isn\u2019t used in a vacuum and I don\u2019t think it should be designed in one either. I do understand the desire for the format to be portable to different frameworks and therefore it\u2019s design shouldn\u2019t be unduly influenced by just one of those possible frameworks, but I think you can accomplish that while considering how it will be used if you\u2019re conscious of that fact.", "One strategy would be to pick an arbitrary spanning tree (first in order, last in order, random, etc.). However, you could also let the user specify the spanning tree, something that ", " was pretty interested in doing. Also, when you are dealing with a distributed tf system you can easily get into a situation where two spanning trees can disagree. This isn\u2019t an issue when the description is being used in a simulation because the simulation ensures that the spanning trees agree (or at least it should) and it\u2019s able to do so because it is not distributed and it has a \u201cperfect\u201d model.", "A spanning tree export is certainly possible, and something that I think we should explore. But a naive spanning tree computation will lead to significantly degraded performance of tools like tf. As mentioned, it needs to be consistent between all participants. For good performace the tree needs to be both deterministic and also consistent over time. If the tree changes topology you loose the ability to interpolate between time updates. There\u2019s also value in having the tree be similar in topology to the physical linkages since traversing fewer joints to compute a transform will result in less error accumulation.", "My opinion on what should be done in the short term has changed over the past few months. While I still find it annoying that Gazebo and ROS do not have a common format, I don\u2019t believe that switching to SDF for all ROS applications (or vice versa) makes sense, because:", "On top of these technical issues, there is the higher level decision of who decides what goes in the spec, and what the process is for that. One reason we have so many different robot description formats is that many of the interested parties prefer to have the flexibility to decide on their own what goes into a format. For TF/moveit/rviz/etc to share the same description format with gazebo (for example) people from all of those groups would need to have input into the spec. ", " would you be ok with changes to sdformat being chosen by a committee, where gazebo was only one of several participants?", "Longer term, I do think that defining a format (or set of formats) that are broadly used in the robotics community is extremely important, but I\u2019ll post some thoughts about that separately in ", "EDIT: Removed reference to \u201clong term section\u201d - I\u2019m going to post those thoughts on the next gen robot description thread.", "Switching to SDF doesn\u2019t provide most of the things that I want out of a robot data exchange format", "Do you mean the action of switching, or that there are a bunch of features/characteristics missing? If features, what\u2019s missing in SDF?", "I believe switching to any new format would require significant effort.", "\nlibsdformat has conversion from URDF to SDF, and the reverse is partially", "\ncomplete. This would make a transition less onerous.", "What are the items that SDF is missing?", "SDF elements are already chosen by committee. That committee happens to be", "\ngazebo developers. Interested parties are welcome to propose changes, and", "\ncomment on pull requests. Are you talking about a more formal committee?", " i mean the act of switching", " yes - switching to any new format would require significant effort, which is why I\u2019m suggesting not switching.", "I do mean that I the committee would have to be not just gazebo people. Yes, anyone can propose changes and offer input, but for something so crucial as a robot description format, I think that the make up of the committee that has actual decision making power should reflect the people who use it, and so if URDF switch to SDF, then i would expect the committee with decision making power for sdf to include people from developers for the various tools that now use URDF, as well as the developers for gazebo.", "To be clear I\u2019m not asking for that - I\u2019m bringing it up as an example of why I don\u2019t think we should switch from URDF to SDF.   I think that SDF is an excellent format created by engineers who know their stuff and  who have a clear application in mind that guides their decisions.", "I\u2019m still really struggling to see how the graph causes issues. Does anyone have any example cases? This feels like it\u2019s straightforward and a non-issue to me and given the people here I must be missing something.", "Here\u2019s my assumptions:", "\nLoading a graph into a tree with a hand written parser can be done with a brute force loop detection with just a few lines of code, and given the typical number of loops there is no performance problem. So no penalty for the little guy.", "\nIf one is working with a large graph structure that would cause a performance impact, then they have probably have the ability to write more elegant loop detection.", "\nAll spanning trees are equivalent and it never matters which one is given to TF.", "Where am I going wrong?", "A spanning tree export is certainly possible, and something that I think we should explore. But a naive spanning tree computation will lead to significantly degraded performance of tools like tf.", "How does the computation for breaking the loops in the graph interact with TF and change TF\u2019s performance?", "As mentioned, it needs to be consistent between all participants. For good performace the tree needs to be both deterministic and also consistent over time. If the tree changes topology you loose the ability to interpolate between time updates.", "What naive algorithms for breaking a graph into a spanning tree are not deterministic and not constant in time? Can you come up with some code that gives non-deterministic results when applied successively to the same graph or any expected evolution of that graph? Is this just a theoretical problem? (I understand a tree topology change causes a real problem).", "There\u2019s also value in having the tree be similar in topology to the physical linkages since traversing fewer joints to compute a transform will result in less error accumulation.", "How much error are you really going to accumulate (or save) on any robots in current (or in URDF2\u2019s future) use with TF, with a non-optimum spanning tree?", "I think that the rigid body assumption (or the mathematical nature of a frame) means that there is no spanning tree that is better than any other from a topological view.", "From a problem solving view there is a benefit if I can get the upstream tools to use the same spanning tree as my tools (maybe this is what you meant about matching topology to physical linkages?) and we have a solution for that in annotated graphs. I didn\u2019t see any proposals, but I would expect that a \u2018loop\u2019 element, or something similar would close the loop and all tools reading \u2018joint\u2019 elements would just naturally see the spanning tree that is the \u2018best\u2019 from the users view.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Switching existing tools that use URDF over to SDF would require a large effort. Tons of tools/libraries/etc use URDF, and switching would be non-trivial.", "Switching to SDF doesn\u2019t provide most of the things that I want out of a robot data exchange format", "As ", " and ", " have pointed out, TF and associated tools need to have a tree in order to work. There are solutions (provide a way to specify a root node for the tree, or to specify the entire tree), but my feeling is that this is only the first of many edge cases that would be run into.", "The existing tools for taking a robot described by a URDF, converting it to SDF, and spawning it in gazebo work \u201cwell enough\u201d for me.", "This isn\u2019t just a question of urdf/sdf. On top of those I have an SRDF for moveit, yaml files for describing other robot-specific formats that aren\u2019t in any spec yet, etc."], "url": "https://discourse.ros.org/t/urdf-ng-ros2-urdf2-discussion/511"},
{"title": "Support the PLY geometry format in URDF?", "thread_contents": ["Hello! I posted over ", ", but this place seems to be a bit more active.", "At the moment, the URDF spec only seems to mention Collada / DAE and STL file formats for the mesh node. STL, however, doesn\u2019t support a very robust set of data and Collada is pretty inefficient in terms of file size and pretty complicated to export. What are peoples thoughts on including something like the PLY format as an option for a mesh node file format?", "Thoughts? Thanks!", "\nGarrett", "Without being familiar with 3D modle formats, I\u2019d say someone would need to give the point of view from the libraries that use these files. I\u2019m thinking of:", "If they already have support for it, sounds great! If they don\u2019t, a newer version of URDF should at the same time support these big players I guess.", "Sounds reasonable. I\u2019m less familiar with the ROS codebase, myself, but I\u2019ve noticed some references to ", " around the ROS repos, and ", " (in the bullet physics repo?) has discussions around gazebo using assimp to load models, as well.", "If that\u2019s true, then this may be as simple as extending the spec to include another model format. I\u2019d almost suggest just allowing anything that assimp can load (if it\u2019s actually that easy), but I actually like the constrained list of formats because that makes it easier to consume the format on other platforms (we\u2019re visualizing these models using THREE.js and javascript, as well). To me, all that\u2019s missing is a simple to export, terse, binary geometry format.", "Thanks!", "\nGarrett", "It will not help to improve the state-of-the-art wrt supported features, but in some testing I did a few months ago it turned out that you can use just about anything that Assimp supports for meshes in urdfs. In the end it all gets converted to vertices & faces anyway, so as long as Assimp can load your mesh it should work.", "IIRC I even used ", " at some point.", "Note that this is really just about meshes, so none of the \u2018advanced\u2019 features formats like Collada and FBX support are used (bones, skins, kinematics, simulation properties, etc).", "I did not include Gazebo in these tests, so that may be different.", "Collada is pretty inefficient in terms of file size", "Collada has a variant where the whole file is compressed using gzip, the extension changes to ", " and it typically results in 90% reduction in file size. It supports all of the things you mentioned, but it is definitely not meant to be human readable and is not straightforward to export to without a library doing it for you.", "in some testing I did a few months ago it turned out that you can use just about anything that Assimp supports for meshes in urdfs", "Great! That\u2019s more or less what I was expecting. So it sounds like this is more a matter of documentation than anything else. Unless there\u2019s a serious reason not to expand the documented mesh formats, this could be as simple as just adding an extension to the list on the URDF wiki page!", "Collada has a variant where the whole file is compressed using gzip, the extension changes to .zae and it typically results in 90% reduction in file size.", "I\u2019d heard of ", " before, but it also wasn\u2019t listed on the URDF wiki as a suitable format. I\u2019d say it\u2019s worth adding that, as well, if it\u2019s considered a valid format. In a quick test, it looks like PLY is able to get down a bit lower than the zipped collada file, but I understand what you\u2019re getting at.", "The reason I\u2019m asking for documentation updates is because, like I said, we\u2019re looking into generating URDF models and visualizing them in the browser and other platforms outside of ROS because it\u2019s a nice, documented, and standard format that\u2019s easy to parse and export. I feel that the density, robustness, and simplicity of use of the PLY format scratches that last itch that isn\u2019t afforded by the other two mesh formats. I\u2019m open to other format suggestions that scratch that, too, though!", "Overall I\u2019m pretty happy with URDF \u2013 I\u2019m just trying to help the standard grow in a couple ways that accomodate my use cases! Especially if there\u2019s not a lot of work investment to make it happen.", "Thanks for your feedback!", "\nGarrett", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Supports a binary format type, which enables to smaller file sizes.", "Optionally supports texture coordinates so the ", " tag can be used for a surface texture.", "Optionally supports normals and vertex colors (and any other custom vertex attribute) for other color and shading.", "Extremely simple to write an importer / exporter for.", "\n", ". Haven\u2019t found much.", "\n", ". Their tutorial just talks about exporting to .dae/", "Collision computation libraries like ", " which I believe is used in MoveIt."], "url": "https://discourse.ros.org/t/support-the-ply-geometry-format-in-urdf/4325"},
{"title": "Add attribute to indicate if a mesh is a convex hull?", "thread_contents": ["Would the maintainer be open to adding an an attribute to the mesh tag indicating if the mesh is a convex hull? The default would be false.", "The use-case here is to utilize this information in planners / collision checkers that can enable certain optimizations when the meshes they are passed are convex. One example would be FCL, which has optimized implementations for convex-convex algorithms. (Comment on GitHub by gavanderhoorn)", "Not a URDF maintainer here, just interested by-stander.", "Wouldn\u2019t the elegant approach be to extend any collision checker that supports such optimized checks with a checking function that evaluates whether a given mesh is convex? Like that, the checker could decide whether or not to run the algorithms optimized for convex meshes upon loading of the meshes.", "Wouldn\u2019t the elegant approach be to extend any collision checker that supports such optimized checks with a checking function that evaluates whether a given mesh is convex? Like that, the checker could decide whether or not to run the algorithms optimized for convex meshes upon loading of the meshes.", "That would be expensive to check. It only has to be done while loading the URDF of course, so that might not be a huge problem.", "However, isn\u2019t the issue tracker a better place discuss this? This thread here has to risk of splitting the discussion between there and here.", "However, isn\u2019t the issue tracker a better place discuss this? This thread here has to risk of splitting the discussion between there and here.", "I think enhancements might get better discussion on this discourse category, so I\u2019ve been recommending people post here. If not here, then I\u2019m not sure which issue tracker would be best. There are several with code that might need to be updated.", "I think enhancements might get better discussion on this discourse category, so I\u2019ve been recommending people post here. If not here, then I\u2019m not sure which issue tracker would be best. There are several with code that might need to be updated.", "Fair enough. Added a link in your issue pointing here.", "You could perform this check but you may have issues depending on how the data is saved. If the data is saved with floating point precision and you check it with double precision you could get a false positives. Also I don\u2019t think in the case of collision checking you what the software to make this decision. I think it is better if it is explicitly defined by the user.", "Thanks for the detailed response. I was not aware of issues caused by the encoding of the meshes. Interesting.", "Regarding your original request, I ", " think that this is an application-specific detail and would model it through ROS parameters. This strikes me as the \u201cmost KISS\u201d approach.", "However, you only add information that relates to the robot model. So, a case can also be made that the URDF is the most specific (and hence suitable) place to put.", "I\u2019d like to point out that then you can get into issues of keeping the information consistent: There can be concave meshes that are marked as convex --what does the software do? But maybe that is a case of \u2018garbage in, garbage out\u2019.", "In conclusion, I wouldn\u2019t do it, but I see where you are coming from. ", "Regarding your original request, I personally think that this is an application-specific detail and would model it through ROS parameters. This strikes me as the \u201cmost KISS\u201d approach.", "It might be good to keep non-ROS consumers of URDF in mind as well. Ideally they would have access to this \u2018meta\u2019 information too. Encoding it as an attribute makes that straightforward. ROS parameters do not.", "It would also avoid fragmenting the necessary information to successfully parse a URDF. Fragmentation like that is common in other areas of ROS already (MoveIt fi: joint limits from urdf, but also from config yaml, can be overridden with parameters and there\u2019s some dynamic reconfigure parts as well).", "Note that other formats already support explicitly marking meshes as convex, or that capsules should be used for collision detection/physics, and they use similar approaches (attributes or a different tag/element/entity).", "Thanks for the detailed answer! I was not aware that other formats already support such a tag. Good to know.", "I would prefer to encode the collision information in the urdf even if it is a new tag. Given that it provides a section for collision geometry I would assume it would be good to support a variety of collision geometry types. A detailed mesh is usually not the ideal geometry for a collision geometry. It would be nice to expand this to not only support convex hull type but Multi-Sphere, Octomap, Point Cloud, Signed Distance Field, etc which are more suitable for collision checking. I am hoping for an answer soon as I have a deadline. If this is not something of interest to be added to this repository I will need to proceed with creating my own variant to be released with a new motion planning package.", "This seems reasonable as long as the default behavior  (when the tag isn\u2019t available) remains the same as it is today. This seems like it would be true, but has anyone verified this to be the case?", "I propose adding a few more tags.", "convex_hull - This would accept mesh formats along with pcd", "mulit_sphere -  This would except pcd that incodes the radius at each point", "octomap", "sdf", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/add-attribute-to-indicate-if-a-mesh-is-a-convex-hull/4479"},
{"title": "Don't miss EU funding for ROS developments via ROSIN FTPs - Next cut-off dates: June 14 & Sept 13, 2019", "thread_contents": ["The EU H2020 ", " has the goal to advance open-source robot software for industry and the robotics community as a whole. One of the main activities of the project is a grant program with a total amount of ", " for Focused Technical Projects (FTPs) on ROS software development.", "Sofar, we have funded almost 40 FTP projects. Many (intermediate) results can be found here:", "\n", " Do you have a good idea for a ROS/ROS-Industrial related project and want to work on ROS(-I) software components, documentation, standardisation or a related topic?", " Are you or your company located within the European Union (or any of the ", ")?", " Then submit an FTP proposal and apply for a ROSIN grant by following the steps outlined in the ", ".", "FTP proposals may be submitted all year long but are evaluated 3-4 times a year.", "The next cut-off date are: ", " .", "Proposals are short (a few pages) and concise. Applicants are guided through the process by an application wizard and a guide is provided.", "To submit your FTP, please visit ", ".", "If you have any questions about the process, whether your idea or project would qualify, send me or one of my colleagues a message either through ROS Discourse or by email (see the ", " on the site for addresses).", " Too much text and no video?", "\n", " Watch our project coordinator explaining ROSIN project and it\u2019s funding opportunities at last year\u2019s ROSCon in less than 200 seconds", "\n          ", "\n", "or follow the 30 minutes presentation from ROS Industrial Conference (followed by four 15 minutes presentations of FTPs already funded by ROSIN):", "\n            ", "\n", "As a result of discussions at ROSCon2018, ROS-Industrial Conference 2018 and exchange of ideas in early 2019, we would like to solicit \u201c", "\u201d (or pre-baked FTPs) for upcoming ROSIN FTP calls in June and September. These suggestions shall give a focus on the topics we fund with our EU funding, but is not meant to not limit the scale and scope of future FTPs. Please check (upcoming) ", " from more than 38 ROSIN FTPs, to see what projects are in the pipeline or have been finished.", "\nWhich manipulator is suitable for a specific task? What is the ideal location of an object (e.g. to be polished) within a workcell for a given manipulator? Compare different solutions (in terms of computation time, energy consumption) for a specified task. Currently within MoveIt! it is possible to benchmark OMPL planners only ", "\nCurrently, mobile bases are approximated with floating joints within MoveIt! and it is not possible to execute these trajectories. Only other possibility is to plan for the arm (MoveIt!) and the mobile platform (navigation stack) separately. ", "\nAlthough FTP in similar direction has been approved (Move-RT): ", "\n(MoveIt!'s transition to ROS 2.0)", "\nMake MoveIt\u2019s interfaces more generic which will simplify integration of standalone components (kinematics and collision checking). and also external planners (Descartes) and optimizers (TrajOpt).", "\nKinematicsBase API", "\n", "\n", "\nCollision checking API", "\n", "\nAllow for \u201cpartial\u201d SRDF definitions to use arms with a combination of end-effectors / mount objects (tables, mobile base), similar to XACROs? Have a unified robot description (URDF, SDF, SRDF, COLLADA). Multiple formats introduces repetition of link names, etc.", "\nTiming and memory analysis tools for ROS nodes.", "\nAlthough some tools have been mentioned in the link: ", " ,", "\nit may not be the best solution for multi threaded, multiprocess applications", "\nEspecially, (most commonly used) Valgrind seems to be mainly for single-threaded applications and runs on VM, which distorts the actual results.", "\nA tool by OSRF (", ") has not been updated since 2014.", "\nHardware-in-the-loop / model-in-the-loop testing", "\nPackage versioning (possibly a REP)", "Kind reminder for the European ROS Community.", "\nOur next cut-off date is approaching.", "\nWe will be happy to evaluate all FTP proposals that are submitted before ", " end-of-day.", "\nNext cut-off is then on September 13, 2019 .", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/dont-miss-eu-funding-for-ros-developments-via-rosin-ftps-next-cut-off-dates-june-14-sept-13-2019/8999"},
{"title": "Superflore & Open Embedded", "thread_contents": ["Hey!", "I\u2019ve been working on getting ", " to generate bitbake recipes for OpenEmbedded.", "This will allow for automated installer generations for an entire ROS distribution (given that the dependencies exist).", "Currently, you can see the experimental ", " generation on my fork of ", ".", "There\u2019s a few issues at the moment, however. I can\u2019t seem to get the ", " directories to install in the image, nor can I get the ", " folder from ROS root to be present in the image.", "I\u2019m sure this is just a variable I failed to set, but all input is welcome!", "Another question I\u2019d like some feedback for is the location of different distributions. My current opinion is to put each ROS distro on its own branch, so as to avoid collision of recipes. If anybody has any other suggestions here, please let me know!", "I\u2019ll post back with a ", "-importable repos file so you can try and replicate the image I\u2019ve been working on easily.", "Hi,", "thank you for that contribution.", "First, some general remarks to your superflore tool:", "You should have a look at these three scripts that already can generate recipes:", "I actually never tried to use these scripts to generate recipe files, but from my review, I believe they generally work but with certain limiting assumptions of the repository structure, and probably do a good job if you are willing to tweak the generated recipes a bit more with some manual effort.", "Furthermore, the pull request ", " is providing a script for updating recipes. In the future, once the pull request is merged, we will continue to use and extend that script for the maintenance activities.", "Your remark \u201cgiven that the dependencies exist\u201d actually points out the current blocker for most recipe generation: Certain (non-ROS packaged) dependencies have no recipes yet, and they are sometimes quite difficult to write. Here just two examples:", "From my experience maintaining meta-ros for five years by now, creating the recipe files for meta-ros might be some manual (repetitive) work and it seems to be an issue at first, but in the long perspective, creating the recipe is just a simple one-time effort anyway whereas often the time-consuming activities are to find when recipes break due to upstream changes in meta-oe and meta-openembedded. For that, you just need to dig into the issue, no tool can help you there.", "Of course, I still hope that superflore helps us to include more recipes in the layer and can be useful for the maintenance of recipe version updates when the distribution is sync-ed once a month.", "Now, second to your specific questions:", "The ros.bbclass (", "), lines 30 to 60, state what is packaged from the build/install in which package, e.g., the main package, the dev package etc. It might be that you need to adjust the paths after you modified the catkin tool. To have the cmake and include folder in the image, you probably need to include the dev package in the image recipe.", "I also believe it is best to have one branch for each ROS distro in meta-ros. I would like to first merge the currently open pull requests, especially the update-script and the sdk support and then we can split it into three branches, indigo, kinetic, lunar, if we get all the recipes work in these branches.", "Lukas", "You should have a look at these three scripts that already can generate recipes:", "I actually used these scripts when I wrote the ", ".", "Certain (non-ROS packaged) dependencies have no recipes yet, and they are sometimes quite difficult to write.", "It would also be nice to get ", " keys to resolve these dependencies. As for dependencies that don\u2019t already exist, I run into them from time to time with Gentoo (though most ", " exist in the gentoo repository).", " I\u2019ve had some real progress here with respect to catkin.", "At the moment, I think the main issue is some sort of python pack linkage.", "I don\u2019t quite have the Open Embedded experience to debug this yet. Do you have any idea as to what could be wrong here?", "Hi ", ",", "I am sorry but I don\u2019t think I can really help you there. A wild guess from the log is that a catkin-native dependencies is missing somewhere, but I think the problem is more difficult than just that.", "If you look at the git history of the catkin.bbclass (", "), you will notice that although I am the maintainer of meta-ros, I actually contributed only very few changes (and more general refactoring) to the catkin.bbclass. The currently best expert for the catkin.bbclass would actually be Dmitry.", " Can you possibly help here?", "Lukas", "Hi,", "IIRC the real catkin code comes from the ", " recipe which ", " depends on. The original ", " adds ", " as a dependency. The ", " from the lunar branch seems to miss it.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["I never got openni-camera2 to cross-compile (", "), and", "some other users were discussing to add rtabmap, but they ran into issues with the dependencies as well (", ").", "\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/superflore-open-embedded/3579"},
{"title": "Compressed PointCloud2?", "thread_contents": ["Hi,", "I had a thought that I had on the back of my mind for a while and I would like to share it with the community.", "We know that PointClouds messages can be quite large.", "\nThe image transport allow us to send compressed images. This has great benefits when we are connecting remotely to a robot over Wifi or when recording with a rosbag.", "But we miss a similar functionality iwith even large messages, i.e. poit clouds.", "I wonder if anyone has addressed this issue already or if we can propose to have an \u201cofficial\u201d solution to this problem.", "In my mind, a potential simplistic solution would be to:", "I would personally use a very fast compression algorithm such as LZ4 (we don\u2019t want to add too much latency).", "What do you think?", "Davide", "Do you have any data on the compression efficiency for point clouds?", "\nConsidering that they are usually highly unstructured data, I\u2019m not sure if off the shelf compression algorithms perform well.", "\nI haven\u2019t tried it, though.", "In general, I think compressing point clouds is a good idea.", "\nMaybe even with a lossy option for tasks that do not need accurate data such as visualization.", "This might be worth checking out:", "\n", "Draco is a library for compressing and decompressing 3D geometric meshes and point clouds. It is intended to improve the storage and transmission of 3D graphics. - google/draco", "\n", "Pointcloud compression is an active field of research, and there are quite a few algorithms available (at least in papers). PCL already supports some aspects: ", ".", "In ROS contexts the topic has come up earlier: ", " on ROS Answers for instance, and ", "  on the ", " tracker itself.", "Up till Groovy the ", " stack even contained a ", " package: ", ".", "The ROS Answers Q&A has a comment that links to ", " which seems to be a package that implements a nr of the things you suggest ", ". Might be worth a look.", "I am thinking about lossless compression ONLY.", "I hacked a solution one year ago and my experience is that LZ4 is so fast that the time wasted to do compression and decompression is by FAR lower than the time wasted to transmit a large message over Wifi.", "Rephrasing, not only we reduced the bandwidth used, but the latency was actually better.", "We also made a solution for this last year.", "\nAlthough it\u2019s not entirely lossless, one can change voxel size to individual needs. In our lab, we run the solution on six jetson TX2 nodes that map a space of 10x10x4m in 4cm voxels ", ". We get 40.5 in compression ratio and use the point-count per voxel to calculate an intensity value.", "\nYou can read about it here: ", " (free) and try the ROS-package here: ", "Atle", "Just to mention a ", " solution to this issue we came up with a few years ago.", "While developing communication solutions for the NASA Space Robotics Challenge and its limited bandwidth (team Olympus), we investigated the possibility to convert point clouds to range images and back-- PCL <----> OpenCV. The point cloud transport would then take the shape of a usual image. If I recall correctly, this image could be further compressed as a sensor_msgs/CompressedImage.", "Given that we were converting sparse point clouds from sensor reading -as opposed to dense object mesh- this solution worked really great in terms of compression ratio and reconstruction accuracy (not so great in term of CPU consumption ^^)", "The package is not in good shape but one might be able to scavenge some code from it: ", ".", "Maybe ", " could provide some more info, possibly numbers?", "I\u2019d also suggest working on the base of ", ". This package has been written by a student of Czech Technical University a few months ago and the goal was exactly to mimick the behavior of image_transport. It implements the very same plugin behavior.", "What is already implemented is the lossy compression with draco library.", "If you want some lossless solution, it should be pretty easy to implement it as a plugin into this framework.", "As for support in RViz - there is none yet, but you can launch a node similar to image republisher (also implemented in the package) which converts the compressed pointclouds to raw PointCloud2.", "I don\u2019t have the exact numbers of the original pointcloud size. But by transporting a 26KB depth image and a 85KB rgb image we were able to reconstruct the original pointcloud.", "As a matter of fact, I wrote something similar that can turn a PCL into a depth image. Its original purpose was to merge depth images from different perspectives into one as it would be seen from an arbitrary perspective around the point cloud. Worked pretty well, albeit rather slow and costly wrt. calculation time.", "If you\u2019re interested in the code, it can be found there: ", "This seems like the most elegant solution. Nice!", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Define a new Message type, let\u2019s call it ", "   ", ".", "Add this message to drivers, such as the Velodyne or RealSense-ROS ones. Compression and publication can be skipped in no one subscribe to the compressed topic.", "Create an official C++ and Python library to convert the compressed type to a PointCloud2 message or, better, a pcl::PointCloud.", "Add this new compressed cloud to RViz"], "url": "https://discourse.ros.org/t/compressed-pointcloud2/10616"},
{"title": "Submit an abstract today for Springer Book on ROS (Volume 4)", "thread_contents": ["SPRINGER BOOK", "\nROBOT OPERATING SYSTEM (ROS)", "\nTHE COMPLETE REFERENCE (VOLUME 4)", "Website: ", " 13", "Please follow the Guidelines for Editing the Book Chapter. Get the whole (ZIP Package)", "\nOBJECTIVES", "\nAfter the success of the Springer Book on ROS (Volume 1) with 27 chapters, Springer Book on ROS (Volume 2) with 19 chapters, and Springer Book on ROS (Volume 3), this is a fourth call for chapters for a Springer book on Robot Operating System (ROS) (Volume 4). The objective of the fourth volume is to provide the reader with comprehensive references on the Robot Operating System (ROS), which is currently considered as the main development framework for robotics applications.", "ROS (Robot Operating System) has been developed by Willow Garage and Stanford University as a part of STAIR project as a free and open-source robotic middleware for the large-scale development of complex robotic systems. ROS acts as a meta-operating system for robots as it provides hardware abstraction, low-level device control, inter-processes message-passing and package management. It also provides tools and libraries for obtaining, building, writing, and running code across multiple computers.", "The main advantage of ROS is that it allows manipulating sensor data of the robot as a labeled abstract data stream, called topic, without having to deal with hardware drivers. This book intends to fill the gap and to provide ROS users (academia and industry) with a comprehensive coverage on Robot Operating System concepts and applications. It will cover several topics ranging from basics and foundation to advanced research papers. Tutorial, survey and original research papers will be sought. The book will cover several areas related to robot development using ROS including but not limited to robot navigation, UAVs, arm manipulation, multi-robot communication protocols, Web and mobile interfaces using ROS, integration of new robotic platform to ROS, computer vision applications, development of service robots using ROS, development of new libraries and packages for ROS, using ROS in education, etc. Every book chapter should be accompanied with a working code to be put later in a common repository for the readers.", "EDITOR", "\nEditor:Anis Koubaa, Professor, PhD", "\nAffiliation:Prince Sultan University (Saudi Arabia)/CISTER Research Center (Portugal)/Gaitech Robotics (China)", "\nContact:akoubaa@psu.edu.sa", "\nBio:Anis Koubaa is a Professor in Computer Science in Prince Sultan University (Saudi Arabia), a Research Associate in CISTER Research Unit (Portugal), and consultant at Gaitech Robotics (China). He has been leading several research projects on robotics and Internet of Things, and in particular integartion of ROS into the IoT. He is the director of the Robotics and Internet of Things Unit (RIOTU) at Prince Sultan University. He is the chair of the ACM Chapter in Saudi Arabia amd a Senior Fellow of the Higher Education Academy (SF-HEA) from the United Kingdom. Prof. Anis is the editor of several books, and author and co-author of more than 160 publications. He is the Editor-in-Chief of the Robotics Software Engineering topic of the International Journal of Advanced Robotics Systems (IJARS). Prof. Anis contributed with the design and development of the first cloud-based system for controlling and monitoring of drones over the Internet, called Dronemap Planner. His h-index is 31.", "\nPUBLISHER AND INDEXING", "\nThis book is expected to be published by January of 2019 by Springer. It will appear under the Studies in Computational Intelligence series. For additional information and guidelines regarding the publisher, please visit ", "Regarding Indexing, the book will be indexed by Scopus and will be submitted for indexing to ISI Books, and DBLP.", "DUE DATES", "\nAbstract Submission: April 15, 2018", "\nFull Chapters Due: July 01, 2018", "\nChapter Acceptance Notification: September 01, 2018", "\nRevised Version Due Date: September 21, 2018", "\nRevised Chapter Acceptance Notification: November 01, 2018", "\nEstimated Publication Date: Januaray 2019", "\nTOPICS OF INTEREST", "\nAny contribution that provides an added value to Robot Operating System (ROS) is of interest for the book. The topics of interest include \u2013 but not limited to- the following:", "\nROS 2.0 Tutorials", "\nDeep Learning with ROS", "\nArtificial Intelligence with ROS", "\nROS Basics and Foundations", "\nRobot Control and Navigation", "\nSelf-driving cars using ROS", "\nArm Manipulation", "\nRobot Perception", "\nSecurity of ROS", "\nRobot Safety with ROS", "\nROS Integration to Web and Mobile apps", "\nReal-World Application Deployment using ROS", "\nUsing ROS in Higher Education", "\nContributed ROS Packages", "\nUnmanned Aerial Vehicles Control and Navigation", "\nSoftware Archiectures using ROS", "\nROS-enabled Robot Design", "\nThis volume welcome chapters about the upcoming version ROS 2.0, including tutorials, comparisong with ROS 1.0, new features in ROS 2.0.", "Also, papers related to using ROS for umanned aerial vehicles are particularly welcome.", "CHAPTERS CATEGORIES", "\nThe book will accept three categories of chapters:", "\nTutorial chapter: it focuses on a particular ROS concept or contributed package and provides a step-by-step tutorial that explains the fundamental of the concepts/packages and presents detailed guidelines on how to use the contributed code. It must specify the ROS versions that are compatible with the tutorial code, and must provide illustration with figures and code interpretations. The code must be available to public in a share repository (to be announced later). Accompanying Video tutorials are highly recommended.", "\nResearch chapter: it presents a research technical contribution in the robotics area where ROS was used to validate the findings. The chapter must presents a sufficient material on the technical contribution in addition to necessary theoretical background, but a major focus should be made to ROS implementation and experimentation. The implementation and experimentation must be sufficiently detailed for a reader be able to reproduce the experiments. It must specify the ROS versions that are compatible with the tutorial code, and must provide illustration with figures and code interpretations. The code must be available to public in a share repository (to be announced later). Accompanying Video tutorials are highly recommended.", "\nCase study chapter: a case study chapter should present a real-world experimentation with ROS on particular robotics platform. It should present a detailed description of observations made during experiments, and what are the challenges encountered during development and experimentation. The chapter should also highlight the best practices that would facilitate deployment and the lessons learnt.", "\nThis volume welcome chapters about the upcoming version ROS 2.0, including tutorials, comparisong with ROS 1.0, new features in ROS 2.0. Also, hot topics papers related to using ROS for umanned aerial vehicles and self-driving cars are particularly welcome.", "SUBMISSION PROCEDURE", "\nResearchers and practitioners are invited to submit a 1-3 page chapter proposal clearly explaining the mission and concerns of the proposed chapter. This helps as a registration of the chapter for the final submission. Submission of abstracts must be done through EasyChair system Authors of accepted proposals will be notified about the status of their proposals and sent chapter guidelines. Full chapters must be submitted by July 01, 2018 through EasyChair system. The Chapter should not exceed 50 pages with respect to Springer format. All submitted chapters will be reviewed on a single-blind review basis. Contributors may also be requested to serve as reviewers for this project.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/submit-an-abstract-today-for-springer-book-on-ros-volume-4/4468"},
{"title": "ROS2 Embedded SIG meeting #1", "thread_contents": ["Following the current interest on a ROS 2 targeting microcontrollers we have scheduled an online community meeting for next Monday, 5th of November at 16:00-18:00 UTC.", "The meeting will take place on hangouts meet: ", "\n", "The main point of this meeting would be to get some consensus on design and joint efforts on the development.", "Currently, there is an in-progress PR with a draft of a design:", "\n", "\n", "I was unable to make this meeting, are there any plans to post minutes?", "Here you can find the meeting notes.", "\nIf any of the attendees want his names/companies removed from them I can do it.", "05 NOVEMBER 2018 17:00 PM, Hangouts Meet.", "Quick presentations on each of the attendees.", "\nBy turns, each of the attendees introduces themselves. Check Attendees section for the list.", "Summary of the current status of the design.", "\nPR on ROS2 Design:", "\n", "\n", "\nOriginal design doc from OFERA/microROS:", " What kind of devices we are targeting?", " Possible two targets:", "\nBigger devices using the current stack.", "\nSmaller devices using something more like rosserial.", " We are not very far from small devices on OFERA project we are squeezing the sizes with pretty good results (XRCE-DDS client is taking ~4k RAM)", " We are looking at TurtleBot. We don\u2019t think we need a smaller implementation.", "\nThey have one implementation targeting Arduino, extending TurtleBot that is already integrated on Arduino platform.", " May OSRF can help with some optimisations and modularisation on RCL and RMW.", "Ingo & Geoffrey Biggs:", "\nOne of the most significant issues is the statically concept in RCL and RMW.", " We should engage OSRF for ensuring the success of this work. Some layers will need to be modified in future.", "List and review of currently available approaches.", " The current release of OFERA/micro-ROS:", "\n", "\n", "\nProject\u2019s GitHub page:", "\n", "micro-ROS has 21 repositories available. Follow their code on GitHub.", "\n", "\n", "\n", "A ROS Client Library targeted at microcontrollers that will connect to the ROS network using DDS-XRCE. - awslabs/aws-ros-client-library-microcontrollers", "\n", "\nVery thin wrapper over Micro XRCE-DDS with pretty simple basic ROS 2 concepts.", "\nDon\u2019t need to touch ROS 2 core.", "\nHaving a lot of rosserial users, It looks a good idea to have a migration path to ROS 2.", " Is the use case people bringing ROS 2 nodes to microcontrollers or just implementing specific nodes?", " People worrying about minimal impact will do their custom implementation.", "\nPeople on ROS 2 community side, may want the full stack approach.", "\nIf we can get RCL/RMW really small would be the ideal approach.", " H-ROS is other interesting approach using microprocessors. But how small they are targeting?.", " H-ROS uses H-RIM to set a standard information model to be able to plug and play components.", "\nH-ROS would like to integrate microcontrollers.", " We plan to benchmark the memory usage of the provided solutions.", "\nWe think that the messages buffers are probably the biggest consumers.", " Will be Lovely to have measures on current consumption of RMW and RCL", " RTOS is the biggest consumer on the system. In our POC FreeRTOS uses more ram than Micro XRCE-DDS implementation. TCP/IP stack included.", "\nLink to the source code?", " You can select the protocol you want to use under micro XRCE-DDS: TCP, UDP, Serial even personalise yours.", " We use FreeRTOS on XDK, see ", "Organisation and further actions of a joint effort towards embedded ROS 2.", " Trying to get further information on the RCL and RMW implementation.", "\nMaybe engage in a discussion on the size of the layers once we have some data.", "\nRTOS implementation for later.", "\nProvide POC code.", "Provide some demos for memory usage measures.", "\n", " Alternate time approach for setting meeting times.", "\n", " Meets to be set for every two weeks.", "Here is the memory usage of Renesas RX65N implementation. The memory size I discussed at the SIG meeting includes AWS and Mbed TLS which are the big memory consumers. If we don\u2019t have to support the use-case, the memory usage becomes quite small (Use case 1 and 2). Please see the table below. Please note this memory usage could get changed during the course of development.", "For RX65N FreeRTOS code, please see ", "Please see ", " for DDS-XRCE PoC code running on the Renesas RX65N MCU.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["eProsima: Jaime Martin, Borja Outerelo", "Bosch: Ingo L\u00fctkebohle", "Acutronic Robotics: I\u00f1igo Muguruza", "eSOL: Akihiko Tsukuda, Shoji Morita (supporting Renesas, ", ")", "Amazon: Nick Burek", "Renesas: Osamu \u201cMax\u201d Matshushima", "AIST: Geoffrey Biggs"], "url": "https://discourse.ros.org/t/ros2-embedded-sig-meeting-1/6645"},
{"title": "Webviz: ROS data visualization in the browser", "thread_contents": ["Hi everyone,", "I work on the visualization tools team at ", ", a self-driving car company in San Francisco. For over a year we\u2019ve been building an internal web-based tool, called Webviz, for robotics data visualization. We recently split apart our internal code to release an open source version of Webviz, which currently includes panels functionally similar to RViz, ", ", ", ", ", ", ", ", and ", ". We\u2019re excited to share this with the ROS community and we\u2019d love for you to try it out:", "Visualizing robotics data in the browser", "Our hope is that folks in the community can use Webviz to make immediate improvements to their development & debugging workflows. Some key features:", "You can drag ", " files directly into Webviz in your browser; no installation required. All the data is processed and visualized locally, not sent to any server. (Note: we\u2019re mostly supporting the latest version of Google Chrome right now \u2014 use other browsers at your own risk ", ")", "Multiple tools and views on the same data can be arranged in one window. The configuration can be exported as JSON and shared with other users.", "Supports visualizing markers, TF frames, occupancy grids, point clouds, camera images (with ImageMarkers), console logs, and raw message data.", " ", " ", "Webviz is under active internal development, and we\u2019re regularly pushing updates out to the open source repo. We\u2019d also welcome feedback and pull requests from the community ", ". There\u2019s a lot of potential for future improvements, including:", "Connecting to a live ROS master via WebSocket (we have an internal implementation of this, but the server is heavily dependent on our build system \u2014 we\u2019d like to explore compatibility with rosbridge_suite, whose protocol is quite similar to ours, aside from some special behavior related to datatypes).", "Pre-loading all data from a bag file into charts and other visualizations as fast as possible, rather than playing through them in realtime.", "Performance and usability improvements throughout the application.", "If you want to read more about Webviz and our motivations for building it, check out our recent blog post:", "How Cruise visualizes autonomous vehicle data in the browser", "\n    ", "Looking forward to your feedback!", "\n", "Thank you very much, that will be very useful. Already sent it to a student who is working with ROS experiment data on a non-ROS system but needs to inspect the bag file sometimes.", "Copy-pasting the layout is a brilliant touch. If it was possible to embed it into the link, or worked without user input, that would be even better. I found the empty start screen with somewhat unintuitive. Will post it on the Github.", "The pre-loading function sounds extremely attractive. We often record bags with a <1fps camera to be able to flip through the progress in rqt. Would be great if it worked in this as well.", "Once again, great contribution. Thanks a lot.", "How add panel view LaserScan?", "The 3D panel supports visualizing LaserScans as points in space. The topic should be present in the top-left menu. Here\u2019s an example using data from ", ":", "For future questions about how to use Webviz, please leave them as ", " where it will be easier for us to track them!", "Great job on this tool. Do you have a sense when and if the feature to connect to a live ROS master via WebSocket would be available?", "We don\u2019t have an exact timeline on this, but great to know you\u2019re interested. If you\u2019d like to follow along or add your thoughts, there\u2019s some discussion of the technical requirements here:", "Are there any plans to get this to work with rosbag2 (ROS2 version of rosbag)? I\u2019m not sure what the current state of the ROS 2 implementation of rosbag is and if there are many differences with the ROS 1 version. I was just wondering if you had any remarks on possible ROS2 support.", "I haven\u2019t been closely following the ROS2 efforts either, but rosbag2 support would certainly be on the table if the format/spec were stable enough; that said we don\u2019t have any concrete plans to work on this. We\u2019ll see if it becomes a common user request.", "Webviz uses rosbag.js for reading bags, so likely most of the changes would need to go into the rosbag.js repo to add compatibility for new bag formats. (Or if it\u2019s sufficiently different, maybe a separate package.)", "ROS bag file reader for JavaScript \ud83d\udc5c. Contribute to cruise-automation/rosbag.js development by creating an account on GitHub.", "This will be very helpful with the general consumer of our OpenR2 robotics project. Thank you very much!", "Does 3D panel support plotting /tf natively ? Seems like it doesn\u2019t recognize the topic unless you have a marker topic in the bag file", "Do you mean plotting the TF tree like this: ", "We did implement this, but due to a minor oversight it\u2019s not enabled in the open source version. Hopefully a simple fix though; I\u2019ll ask the team if we can do it soon.", "Correct - I mean how you can visualize a robot position/orientation like axes in tf.", "Currently without the fix how would you visualize the robot position ?", "Thanks,", "\n-Phu", "Yes, other than this tree visualization, you will need some pose or marker topic.", "We have a new feature called Node Playground (in active development) which you can try using to produce a pose or marker topic by writing code directly in webviz: ", "Thanks. Looks like you guys added tf in the demo ? ", "For costmap do you need it to have a certain topic name (/map) ?", "My bag files have a different topic name for /map and /map/keepout and it doesn\u2019t seem to render these topics.", "Thanks,", "\n-Phu", "Yes, TF has now been added back to webviz! You can enable it alongside topics in the 3D panel:", "\n", "We support any message with the OccupancyGrid datatype. For cost maps, are you talking about ", "? That hasn\u2019t been implemented but support could probably be added by anyone who\u2019s willing to make a PR. Most of the currently supported datatypes are listed ", ".", "Update: Webviz now supports connecting to live ROS master via WebSocket! See ", " for more details.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/webviz-ros-data-visualization-in-the-browser/9783"},
{"title": "Re: Indigo on Raspberry PI 3", "thread_contents": ["Hi,", "Continuing this thread: ", "The RPI3 is 32bit.  Is there going to be a 32bit version of Kinetic for ARM?", "There are Xenial armhf builds. I\u2019m kind of disappointed to hear that it seems that the Raspberry Pi community has not started supporting aarch64 images. Why have the armv8 chip and not use it.", "yes, the Kinetic buildfarm does armhf and arm64 builds for both Jessie and Xenial. It\u2019s a lower priority to support Debian and ARM builds in the initial release, but we do encourage maintainers to fix platform-specific problems that the build farm finds.", "Unfortunately we have only demonstrated the ability to build armhf and arm64 for Xenial and Jessie both. However we\u2019ve tried to pick a covering set by turning on Jessie arm64 and Xenial armhf.", "We can consider changing the supported architectures, however we need to trade off the costs of running the buildfarm. Note that the armhf and arm64 builds take close to an order of magnitude more server time.", "As far as I understand it, Raspbian doesn\u2019t have any builds that target an architecture above armv6 with hard float. (The original Raspberry Pi). They didn\u2019t want to support multiple arch builds, and they don\u2019t want to confuse beginners.", "Other than not wanting to confuse people, the RPI has some reasons to not run 64bit software.", "The Pi 3 only has 1GB of ram, so going to 64bit will consume more of that memory storing pointers.", "The speedup of the clock is enough to justify going to the newer chip, even if the newer 64 bit stuff isn\u2019t used. Just like Pi1->Pi2.", "  does this mean that only 64bit Jessie for the time being?", " for the moment yes.", "Though if what ", " says is right about all the images being armv6 + hard float, the armhf builds are not necessarily raspbian compatible either. Though the Pi 2 can run standard debian armhf binaries according to this: ", "There is a Debian wiki page on this here: ", " with more info on the Raspberry Pi 2 here: ", "RPI3 is different so I hope that they will updated it.", "\nAnyway it works with Ubuntu 14.04 in chroot on indigo.", "We are planning on using an ARM A53 based solution for our products and RPI3 or DB410C are great platforms to use.", "\nhopefully Kinetic will be supported on the RPI3 somehow", "(old thread but some additional background)", "The RPi 3 CPU core was picked because it\u2019s a great 32 bit processor (and  happens to also work in 64bit mode). That said, the 1GB of RAM and the rate at which the hardware is being iterated, there has not been much movement in the Linux community to put effort into an arm64 build.", "I understand the interesting in ROS on Raspbian. That said, we do have a workaround now that Ubuntu Xenial (with and without GUI) is available and supports the RPi3 hardware well.", "It does leave limited options for RPi-like hardware which has focused on Raspbian Jessie as their prefered OS.", "Just adding on, as you mentioned Xenial images, Here is a link to a bunch of Ubuntu 16.04 Pi2/3 images, offering a variety of desktop and non desktop variants.", "We have done what we can to optimise the builds for the Raspberry Pi 2\nand Raspberry Pi 3 but microSDHC I/O throughput is a bottleneck so we\nhighly recommend that you use a Class 6 or Class 10 microSD", "Yes. I\u2019ve responded to a couple ROS Answers posts, suggesting those images. I suggest we continue to them as the starting pion to most. It would reduce the frustration level for many.", "While those images are not perfect for everyone, they are likely the best option for most users on RPi hardware.", "Aside: the RPi3 w/ onboard wifi support is the basis for the LoCoRo (low cost robot) project.", "We got raspberry pi3  running on ubuntu16.04(MATE) with ROS kinetic, but it\u2019s 32bit.", "\nHere\u2019s is the image if anyone need.", "\n", "duckietown-bunny === ![](https://i.imgur.com/Lwgsi3c.png)   ---   a fork from MIT autonomy open-sour", "\n", "\nIt\u2019s original for  project \u201cduckietown\u201d and \"duckietown-bunny\"", "\n", "  Enjoy ", "Do you know if the RPI Camera works?  I am about to try mate 16.04 using your image.", "The Pi cam works on Ubuntu Mate 16.04.", "There is a ros node for it here:", "\n", "raspicam_node - ROS node for camera module of Raspberry Pi", "\n", "The documentation is a touch out of date, but we are working on it.", "Yes with normal raspberry pi CSI interface camera or fisheye camera", "\nHere is how you start it", "\n", "Camera test === Hey Bunny! Wake up! ![](https://i.imgur.com/FuMKr2G.jpg)  #### TODO *\tstart camera n", "\n", "\nThe original project is base on RPI2 see here ", "\nIf have further questions, leave me messages ", "Thank.  I will try it out.", "The RPi 3 CPU core was picked because it\u2019s a great 32 bit processor (and  happens to also work in 64bit mode). That said, the 1GB of RAM and the rate at which the hardware is being iterated, there has not been much movement in the Linux community to put effort into an arm64 build", "So I\u2019ve got my pi 3 running in 64 bit mode with Gentoo. I\u2019m slowly updating ROS  ebuilds to work on arm64, but have not done them all yet or tested ROS compilation on the architecture (because I don\u2019t want to mess up my portage tree, as getting 64 bit mode was quite a hassle).", "That said, I might attempt a 64 bit ROS Gentoo image, and could upload it for everyone if there is demand for it.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/re-indigo-on-raspberry-pi-3/141"},
{"title": "New packages and patch release for ROS 2 Eloquent Elusor 2020-01-24", "thread_contents": ["The new release of ROS 2 Eloquent Elusor is ", ".", "This release brings a number of new packages as well as some updates to ROS 2 core packages.", "For information on what was included in this patch release, consult the ", "\nTo propose backports for the next patch release, please consult the ", "Thanks to all ROS maintainers who make packages available to the ROS community. The above list of packages was made possible by the work of the following maintainers:", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["ros-eloquent-ament-cmake-virtualenv: 0.0.5-6", "ros-eloquent-ament-virtualenv: 0.0.5-6", "\n", ": 3.0.3-1", "\n", ": 3.0.3-1", "\n", ": 3.0.3-1", "ros-eloquent-costmap-queue: 0.3.2-1", "ros-eloquent-cross-compile: 0.2.0-1", "ros-eloquent-dolly: 0.2.0-1", "ros-eloquent-dolly-follow: 0.2.0-1", "ros-eloquent-dolly-gazebo: 0.2.0-1", "ros-eloquent-dwb-core: 0.3.2-1", "ros-eloquent-dwb-critics: 0.3.2-1", "ros-eloquent-dwb-msgs: 0.3.2-1", "ros-eloquent-dwb-plugins: 0.3.2-1", "\n", ": 1.0.0-1", "\n", ": 1.0.0-1", "\n", ": 1.0.0-1", "\n", ": 1.0.0-1", "\n", ": 1.0.0-2", "\n", ": 1.0.0-1", "ros-eloquent-nav-2d-msgs: 0.3.2-1", "ros-eloquent-nav-2d-utils: 0.3.2-1", "ros-eloquent-nav2-amcl: 0.3.2-1", "ros-eloquent-nav2-behavior-tree: 0.3.2-1", "ros-eloquent-nav2-bringup: 0.3.2-1", "ros-eloquent-nav2-bt-navigator: 0.3.2-1", "ros-eloquent-nav2-common: 0.3.2-1", "ros-eloquent-nav2-controller: 0.3.2-1", "ros-eloquent-nav2-core: 0.3.2-1", "ros-eloquent-nav2-costmap-2d: 0.3.2-1", "ros-eloquent-nav2-dwb-controller: 0.3.2-1", "ros-eloquent-nav2-gazebo-spawner: 0.3.2-1", "ros-eloquent-nav2-lifecycle-manager: 0.3.2-1", "ros-eloquent-nav2-map-server: 0.3.2-1", "ros-eloquent-nav2-msgs: 0.3.2-1", "ros-eloquent-nav2-navfn-planner: 0.3.2-1", "ros-eloquent-nav2-planner: 0.3.2-1", "ros-eloquent-nav2-recoveries: 0.3.2-1", "ros-eloquent-nav2-rviz-plugins: 0.3.2-1", "ros-eloquent-nav2-util: 0.3.2-1", "ros-eloquent-nav2-voxel-grid: 0.3.2-1", "ros-eloquent-nav2-waypoint-follower: 0.3.2-1", "ros-eloquent-navigation2: 0.3.2-1", "\n", ": 2.1.0-2", "\n", ": 2.0.1-1", "ros-eloquent-ouster-msgs: 0.1.0-1", "ros-eloquent-plansys2-bringup: 0.0.5-1", "ros-eloquent-plansys2-domain-expert: 0.0.5-1", "ros-eloquent-plansys2-executor: 0.0.5-1", "ros-eloquent-plansys2-lifecycle-manager: 0.0.5-1", "ros-eloquent-plansys2-msgs: 0.0.5-1", "ros-eloquent-plansys2-multidomain-example: 0.0.5-1", "ros-eloquent-plansys2-patrol-navigation-example: 0.0.5-1", "ros-eloquent-plansys2-pddl-parser: 0.0.5-1", "ros-eloquent-plansys2-planner: 0.0.5-1", "ros-eloquent-plansys2-problem-expert: 0.0.5-1", "ros-eloquent-plansys2-simple-example: 0.0.5-1", "ros-eloquent-plansys2-terminal: 0.0.5-1", "ros-eloquent-popf: 0.0.11-1", "\n", ": 2.0.0-2", "ros-eloquent-ros2-ouster: 0.1.0-1", "ros-eloquent-spatio-temporal-voxel-layer: 2.1.2-2", "ros-eloquent-v4l2-camera: 0.1.1-1", "\n", ": 1.12.1-1 -> 1.12.2-1", "\n", ": 1.4.0-1 -> 1.4.1-1", "\n", ": 2.1.3-1 -> 2.1.4-1", "\n", ": 1.9.2-1 -> 1.9.3-1", "\n", ": 1.0.4-1 -> 1.0.6-1", "\n", ": 1.0.4-1 -> 1.0.6-1", "\n", ": 1.0.3-1 -> 1.0.5-1", "\n", ": 1.0.3-1 -> 1.0.5-1", "\n", ": 1.0.4-1 -> 1.0.6-1", "\n", ": 1.0.4-1 -> 1.0.6-1", "\n", ": 1.0.3-1 -> 1.0.5-1", "\n", ": 1.0.4-1 -> 1.0.6-1", "\n", ": 1.0.4-1 -> 1.0.6-1", "\n", ": 1.0.4-1 -> 1.0.6-1", "\n", ": 1.0.4-1 -> 1.0.6-1", "\n", ": 1.0.3-1 -> 1.0.5-1", "\n", ": 1.0.4-1 -> 1.0.6-1", "\n", ": 1.0.4-1 -> 1.0.6-1", "\n", ": 1.0.4-1 -> 1.0.6-1", "\n", ": 1.0.4-1 -> 1.0.6-1", "\n", ": 1.0.3-1 -> 1.0.5-1", "\n", ": 1.0.4-1 -> 1.0.6-1", "\n", ": 1.0.4-1 -> 1.0.6-1", "\n", ": 1.0.3-1 -> 1.0.5-1", "\n", ": 1.0.4-1 -> 1.0.6-1", "\n", ": 1.0.4-1 -> 1.0.6-1", "\n", ": 1.0.4-1 -> 1.0.6-1", "\n", ": 1.0.4-1 -> 1.0.6-1", "\n", ": 1.0.4-1 -> 1.0.6-1", "\n", ": 1.0.3-1 -> 1.0.5-1", "\n", ": 1.0.4-1 -> 1.0.6-1", "\n", ": 1.0.4-1 -> 1.0.6-1", "\n", ": 1.0.4-1 -> 1.0.6-1", "\n", ": 1.0.4-1 -> 1.0.6-1", "\n", ": 1.0.3-1 -> 1.0.5-1", "\n", ": 1.0.4-1 -> 1.0.6-1", "\n", ": 1.0.4-1 -> 1.0.6-1", "ros-eloquent-examples-tf2-py: 0.12.4-1 -> 0.12.5-1", "\n", ": 0.12.4-1 -> 0.12.5-1", "\n", ": 2.1.3-1 -> 2.1.4-1", "ros-eloquent-launch: 0.9.5-1 -> 0.9.6-1", "ros-eloquent-launch-ros: 0.9.4-1 -> 0.9.5-1", "ros-eloquent-launch-testing: 0.9.5-1 -> 0.9.6-1", "ros-eloquent-launch-testing-ament-cmake: 0.9.5-1 -> 0.9.6-1", "ros-eloquent-launch-testing-ros: 0.9.4-1 -> 0.9.5-1", "ros-eloquent-launch-xml: 0.9.5-1 -> 0.9.6-1", "ros-eloquent-launch-yaml: 0.9.5-1 -> 0.9.6-1", "\n", ": 1.9.2-1 -> 1.9.3-1", "\n", ": 1.9.2-1 -> 1.9.3-1", "\n", ": 2.0.4-1 -> 2.0.6-1", "\n", ": 0.5.1-1 -> 0.6.1-1", "\n", ": 2.0.1-1 -> 2.0.4-1", "\n", ": 2.0.0-1 -> 2.0.2-1", "\n", ": 2.0.0-1 -> 2.0.1-1", "\n", ": 0.1.4-1 -> 0.2.2-1", "ros-eloquent-rcl: 0.8.3-1 -> 0.8.4-1", "ros-eloquent-rcl-action: 0.8.3-1 -> 0.8.4-1", "ros-eloquent-rcl-lifecycle: 0.8.3-1 -> 0.8.4-1", "ros-eloquent-rcl-yaml-param-parser: 0.8.3-1 -> 0.8.4-1", "ros-eloquent-rclcpp: 0.8.3-1 -> 0.8.4-1", "ros-eloquent-rclcpp-action: 0.8.3-1 -> 0.8.4-1", "ros-eloquent-rclcpp-components: 0.8.3-1 -> 0.8.4-1", "ros-eloquent-rclcpp-lifecycle: 0.8.3-1 -> 0.8.4-1", "ros-eloquent-rclpy: 0.8.3-1 -> 0.8.4-1", "ros-eloquent-ros1-bridge: 0.8.1-4 -> 0.8.2-1", "ros-eloquent-ros1-rosbag-storage-vendor: 0.0.7-1 -> 0.0.7-4", "ros-eloquent-ros2action: 0.8.6-1 -> 0.8.7-1", "ros-eloquent-ros2cli: 0.8.6-1 -> 0.8.7-1", "ros-eloquent-ros2component: 0.8.6-1 -> 0.8.7-1", "ros-eloquent-ros2doctor: 0.8.6-1 -> 0.8.7-1", "ros-eloquent-ros2interface: 0.8.6-1 -> 0.8.7-1", "ros-eloquent-ros2launch: 0.9.4-1 -> 0.9.5-1", "ros-eloquent-ros2lifecycle: 0.8.6-1 -> 0.8.7-1", "ros-eloquent-ros2lifecycle-test-fixtures: 0.8.6-1 -> 0.8.7-1", "ros-eloquent-ros2msg: 0.8.6-1 -> 0.8.7-1", "ros-eloquent-ros2multicast: 0.8.6-1 -> 0.8.7-1", "ros-eloquent-ros2node: 0.8.6-1 -> 0.8.7-1", "ros-eloquent-ros2param: 0.8.6-1 -> 0.8.7-1", "ros-eloquent-ros2pkg: 0.8.6-1 -> 0.8.7-1", "ros-eloquent-ros2run: 0.8.6-1 -> 0.8.7-1", "ros-eloquent-ros2service: 0.8.6-1 -> 0.8.7-1", "ros-eloquent-ros2srv: 0.8.6-1 -> 0.8.7-1", "ros-eloquent-ros2topic: 0.8.6-1 -> 0.8.7-1", "ros-eloquent-rosbag2-bag-v2-plugins: 0.0.7-1 -> 0.0.7-4", "ros-eloquent-rosidl-adapter: 0.8.1-1 -> 0.8.2-1", "ros-eloquent-rosidl-cmake: 0.8.1-1 -> 0.8.2-1", "ros-eloquent-rosidl-generator-c: 0.8.1-1 -> 0.8.2-1", "ros-eloquent-rosidl-generator-cpp: 0.8.1-1 -> 0.8.2-1", "ros-eloquent-rosidl-parser: 0.8.1-1 -> 0.8.2-1", "ros-eloquent-rosidl-typesupport-interface: 0.8.1-1 -> 0.8.2-1", "ros-eloquent-rosidl-typesupport-introspection-c: 0.8.1-1 -> 0.8.2-1", "ros-eloquent-rosidl-typesupport-introspection-cpp: 0.8.1-1 -> 0.8.2-1", "\n", ": 1.1.0-1 -> 1.1.1-1", "\n", ": 1.0.3-1 -> 1.0.4-1", "\n", ": 1.0.3-1 -> 1.0.4-1", "\n", ": 1.0.0-1 -> 1.0.1-1", "\n", ": 7.0.3-1 -> 7.0.4-1", "\n", ": 7.0.3-1 -> 7.0.4-1", "\n", ": 7.0.3-1 -> 7.0.4-1", "\n", ": 7.0.3-1 -> 7.0.4-1", "\n", ": 7.0.3-1 -> 7.0.4-1", "ros-eloquent-rviz-rendering-tests: 7.0.3-1 -> 7.0.4-1", "\n", ": 7.0.3-1 -> 7.0.4-1", "\n", ": 7.0.3-1 -> 7.0.4-1", "\n", ": 0.12.4-1 -> 0.12.5-1", "ros-eloquent-tf2-eigen: 0.12.4-1 -> 0.12.5-1", "\n", ": 0.12.4-1 -> 0.12.5-1", "\n", ": 0.12.4-1 -> 0.12.5-1", "\n", ": 0.12.4-1 -> 0.12.5-1", "\n", ": 0.12.4-1 -> 0.12.5-1", "\n", ": 0.12.4-1 -> 0.12.5-1", "\n", ": 0.12.4-1 -> 0.12.5-1", "\n", ": 2.1.3-1 -> 2.1.4-1", "Anup Pemmaiah", "Armin Hornung", "AutonomouStuff Software Development Team", "Bence Magyar", "Brian Wilcox", "Carl Delsey", "Carlos Orduno", "Christoph Sprunk", "Claire Wang", "Daniel Stonier", "David V. Lu!!", "Dirk Thomas", "Ethan Gao", "Francisco Martin", "Francisco Martin Rico", "Isaac I.Y. Saito", "Ivan Paunovic", "Jacob Perron", "Karsten Knese", "Louise Poubel", "Max Krichenbauer", "Michael Carroll", "Michael Jeronimo", "Michel Hidalgo", "Mikael Arguedas", "Mohammad Haghighipanah", "Pete Baughman", "ROS Tooling Working Group", "Sander G. van Dijk", "Scott K Logan", "Steve Macenski", "Steven Macenski", "Steven! Ragnar\u00f6k", "Tully Foote", "Vincent Rabaud", "Vladimir Ermakov", "William Woodall", "lkumarbe"], "url": "https://discourse.ros.org/t/new-packages-and-patch-release-for-ros-2-eloquent-elusor-2020-01-24/12482"},
{"title": "Migrating ROS/ROS2 off of catkin/colcon (towards pure CMake)", "thread_contents": ["One of the biggest difficulties I had when I started working with ROS and ROS2 this year was learning how to deal with catkin and colcon. The documentation for these tools is absolutely terrible*, they make bizarre choices for options (colcon\u2019s idea of \u201c\u2013verbose\u201d is \u201c\u2013event-handlers=console_cohesion+\u201d. The prosecution rests), and I\u2019ve found that they really get in the way of managing a large codebase. For example, if I want all my code to build with warnings as errors, I need to set -Werror in each package\u2019s CMakeLists.txt, and if a new package is added I need to make sure to set it there as well. Compare this with a project defined with CMake at the top level, I just need to set CMAKE_C_FLAGS in the root CMakeLists.txt and that\u2019s it.", "When I finally understood how catkin/colcon look through the folder hierarchy for package.xml files and use those to build a dependency tree and then parallelize builds I started to appreciate that. I guess that this package based architecture is also supposed to be useful to multi-language builds? I haven\u2019t tried that myself, but I\u2019m guessing it still needs to go through CMake?", "What I\u2019d really like to see is support from OSRF for building ROS code in a pure CMake way, in addition to the catkin/colcon package.xml way. I tried to do this and got pretty close, but ran into some roadblocks. For a ROS1 project, I managed to get everything to build the standard CMake way (mkdir build, cd build, cmake \u2026, make) but it took 1-2 minutes for CMake itself to run (this was for a couple dozen packages). It was mostly really sluggish on various catkin macros. For ROS2, I tried to clone the demos repo (", ") and build the pendulum_msgs package with CMake. It didn\u2019t produce the setup.bash file. Running make install produced a local_setup.bash file, but not the setup.bash file. Apparently that\u2019s done through a colcon extension.", "So to reiterate the question, would OSRF be interested in supporting a pure CMake build of ROS or ROS2? I think it could really benefit the ROS community to at least have this option alongside the catkin/colcon build system. It gives a better onramp experience for those familiar with those tools, and gives more debugging options for those who already use catkin/colcon.", "* If you look up catkin documentation, you\u2019ll probably land on this page ", " which describes catkin as \u201cLow-level build system macros and infrastructure for ROS.\u201d. This tells me virtually nothing about what it is or what it does. The page proceeds to jump into how to install catkin and points the user to another documentation page for a user guide, which just jumps into the package format without explaining what it is. The conceptual overview page is not much better, it is similarly too vague and high level to be useful (\u201ccatkin was designed to be more conventional than rosbuild\u201d <- what\u2019s rosbuild? why is it unconventional?)", "The documentation for these tools is absolutely terrible", "These?", "They look pretty good to me.", "When I finally understood how catkin/colcon look through the folder hierarchy for package.xml files and use those to build a dependency tree and then parallelize builds I started to appreciate that.", "I\u2019m not a build system expert, but how would you achieve this with pure CMake? ROS systems are very modular/package-oriented. Seems like this is a pretty good argument in favour of catkin & colcon.", "For example, if I want all my code to build with warnings as errors, I need to set -Werror in each package\u2019s CMakeLists.txt, and if a new package is added I need to make sure to set it there as well. Compare this with a project defined with CMake at the top level, I just need to set CMAKE_C_FLAGS in the root CMakeLists.txt and that\u2019s it.", "You ", " pass CMake arguments through catkin & colcon (", ", see the documentation above). With colcon you can even move that to a ", " file so that you don\u2019t need to include it in your command every time (see documentation).", "Again, I\u2019m not an expert, so I\u2019ll let other people chime in, but I kind of fail to see the point.", "Please, also note that there is \u201ccatkin\u201d (which provides \u201ccatkin_make\u201d and \u201ccatkin_make_isolated\u201d binaries), and then there are \u201ccatkin_tools\u201d (which provide the \u201ccatkin\u201d binary). These are two distinct tools which both utilize the python/CMake Catkin library inside, but expose a different CLI. The docs referenced by ", " refer to \u201ccatkin\u201d package and the CMake library (and these really are a bit messy), whereas ", " refers to \u201ccatkin_tools\u201d (whose docs are great).", "One more question to make this thread more focused - are you interested in building the whole ROS system from scratch with pure CMake, or is it enough for you to build a few packages that depend on system-installed ROS packages? I think it makes a big difference whether you want the core packages to be buildable by plain CMake or not\u2026", "Also note that there might (should) be other tools involved in the build process. E.g. rosdep for installing dependencies. Would you like to get rid of that, too? It seems like a step back to me\u2026", " I hadn\u2019t seen those links. They echo my existing complaints about the documentation, which is essentially that it\u2019s written for audience that already knows how the tool works. For example, the docs don\u2019t mention that you need a directory called ", " in the same directory in which you invoke catkin, or that it\u2019s making a separate CMake project for each package.xml it finds. But the documentation is more of an annoyance rather than my main point.", " Thanks for your points. I think your discussion about catkin helps to paint just how confusing it is, but again I digress ", "I think it would be really cool to be able to build the whole ROS system from scratch with CMake, but to start out with it probably makes more sense to start with individual packages, like I mentioned in the example I gave with ros2 demos pendulum_msgs, and then move on to larger groups of packages, like the whole ros2 demos repo.", "Imagine a model like python, where there\u2019s lot of packages, but there\u2019s freedom as to whether you want to package your code or not. With ROS, if you just want to use the C/C++ libraries and headers, you can, but you have to sort of bend over backwards to do it (I tried).", "The whole reason ROS is package oriented is because the build tools won\u2019t allow you to create ROS code any other way. Again going back to the python example, there\u2019s some tooling to help you make a package, but it\u2019s entirely optional.", "As with the python example, they have pip and so I think tools like rosdep would remain necessary, although I haven\u2019t used rosdep very heavily myself so I\u2019m not sure if pip is a good analogy?", "And could you describe your idea of the toplevel CMakeLists.txt? Would you order the packages to satisfy dependencies in your head and then \u201cadd_subdirectory\u201d each of them?", "Single packages can be built using plain CMake pretty well. I do it all the time within CLion. Dependencies and inclusion of 3rd-party libs not installed in the system is where it gets tough.", "Otherwise, the analogy between rosdep and pip is quite good ", "Sorry you didn\u2019t find what you were looking for right off the bat, but maybe my answers can help clear some things up for you.", "I think it would be really cool to be able to build the whole ROS system from scratch with CMake", "There are a lot of reasons this will be difficult. I\u2019ll comment on that below.", "but to start out with it probably makes more sense to start with individual packages, like I mentioned in the example I gave with ros2 demos pendulum_msgs", "For ROS 1, if you want to build individual packages with cmake, you can. Just do the normal ", ". The catch is that you need to make sure that all of the dependencies of that package are installed and on the ", " and that any other necessary environment variables are set, e.g. ", " or ", ". This is part of what the ", " does. This should work for any ROS 1 package, as they are all catkin and based on CMake or even are pure CMake.", "If you want to build a library or executable with C++ and do not want to use ", " or ", ", you can do that too, with some exceptions. ", " made examples of this a long time ago:", "Contribute to gerkey/ros1_external_use development by creating an account on GitHub.", "Notably, you cannot generate messages with just CMake, as we need a bunch of functionality provided by CMake macros in ", " to make that work easily. It would be possible to make that easier to do from \u201cpure\u201d CMake, but no one has had the need.", "For ROS 2, you can still build any individual package without ", " or any special tools. Some of the packages are CMake but use ", " (equivalent to ", " from ROS 1) CMake macros, some are pure CMake, but others are something else, e.g. pure Python packages which use ", " or pure Java packages that don\u2019t use CMake at all. For the first two cases you can again use ", ", so long as the dependencies are installed and all the environment variables are setup.", "Again, if you want to make executables or libraries using C++ that depend on ROS, you can do that with pure CMake if you want using the ", " branch on ", "\u2019s repository:", "Contribute to gerkey/ros1_external_use development by creating an account on GitHub.", "As for why we don\u2019t build multiple packages at once in a single CMake invocation\u2026 there are a lot of reasons, but first I\u2019ll say you can do this in ROS 1.", "We started out with ", " which does exactly this, it adds a group of packages you have locally to a single cmake project using ", ". In ROS 2, with ", ", we explicitly decided to no longer do that. See:", "One common technical hurdle, just to give one example, is that if two packages define the same target name, e.g. ", ", then adding them to the same CMake context will cause a failure during configuration.", "For the core ROS 1 packages we made sure this wasn\u2019t an issue (we regularly built everything with ", " all at once and fixed any issues), but we found that for users it didn\u2019t scale. Because they would take packages which were developed separately, and try to add them together where before that never happened, then they\u2019d run into issues, an error if they\u2019re lucky or cross-talk from global state in CMake if they\u2019re not lucky\u2026", "Also, since in ROS 2 we don\u2019t have all CMake based packages (we have pure Python and others like Java or Rust), it\u2019s not always convenient to include them into a CMake project. We could use ", " or ", ", but we feel that this is much more difficult to implement and maintain than doing the same thing essentially except in Python as an extension to ", " or ", ".", "Now for some random comments.", "colcon\u2019s idea of \u201c\u2013verbose\u201d is \u201c\u2013event-handlers=console_cohesion+\u201d. The prosecution rests", "I don\u2019t think that\u2019s ergonomic either\u2026", "I\u2019ve found that they really get in the way of managing a large codebase", "These tools are for handling highly federated packages, it doesn\u2019t impact large code bases in my opinion. You may have a single package for yourself which contains as much as you want, in a single CMake project, modularized how ever you like\u2026", "How does it get in the way?", "For example, if I want all my code to build with warnings as errors, I need to set -Werror in each package\u2019s CMakeLists.txt, and if a new package is added I need to make sure to set it there as well. Compare this with a project defined with CMake at the top level, I just need to set CMAKE_C_FLAGS in the root CMakeLists.txt and that\u2019s it.", "If you just do ", " it will have the same effect\u2026 I use it all the time. You shouldn\u2019t need to edit other peoples code in order to turn on warnings or configure them as errors. I personally use ", " so I don\u2019t have to specify it each time.", "In the case that you set the ", " in the \u201croot\u201d ", ", what happens if one of the sub projects (that you didn\u2019t write) also sets it and wasn\u2019t expecting it to be set already?", "When I finally understood how catkin/colcon look through the folder hierarchy for package.xml files and use those to build a dependency tree and then parallelize builds I started to appreciate that. I guess that this package based architecture is also supposed to be useful to multi-language builds?", "Yes, sorry if I reiterated that above without acknowledging it until now.", "I haven\u2019t tried that myself, but I\u2019m guessing it still needs to go through CMake?", "For ROS 1, everything is CMake based, so yes. But for ROS 2 and with ", ", no, something things do not use CMake at all.", "So to reiterate the question, would OSRF be interested in supporting a pure CMake build of ROS or ROS2? I think it could really benefit the ROS community to at least have this option alongside the catkin/colcon build system. It gives a better onramp experience for those familiar with those tools, and gives more debugging options for those who already use catkin/colcon.", "If you mean, \u201cbuilding more than one package at a time in a single CMake invocation\u201d, then I\u2019d say not really. In ROS 1 you can do this for many packages, this is exactly what ", " does. In ROS 2, it may or may not work, but since there\u2019s non-CMake stuff in the dependency tree then I\u2019d say it\u2019s unlikely to be easy.", "The whole reason ROS is package oriented is because the build tools won\u2019t allow you to create ROS code any other way.", "I don\u2019t think that\u2019s right. The reason it\u2019s package based (federated) is that otherwise anyone wanting to contribute something to the ecosystem would need to get us to accept the change.", "Take OpenCV as a counter example, they have a single CMake project, so if you want to add a new feature, it either has to be a separate CMake project (in a different repository) or you have to get a merge request through their process. Now, the former is fine at first, your README will be like \u201cinstall or build OpenCV, then cmake/make my project\u201d. But at scale this falls apart, it becomes, \u201cinstall or build OpenCV, some other persons addition, and then some other addition that uses that, and \u2026, then my project\u201d. For robotics it becomes even more complicated as instead of chains you end up with graphs of dependencies due to there being multiple sources of information and separate systems working in parallel.", "As with the python example, they have pip and so I think tools like rosdep would remain necessary, although I haven\u2019t used rosdep very heavily myself so I\u2019m not sure if pip is a good analogy?", " performs many similar functions, but importantly it only works for Python, if you mix languages, as we do, then you need tools that are broader. Our pure Python packages in ROS 2 use ", " (which is what ", " uses) and ", " will call ", " to install dependencies for you. So we\u2019re not reinventing the wheel in that case.", "These are two distinct tools which both utilize the python/CMake Catkin library inside, but expose a different CLI.", "True! Honestly I thought everything (e.g. tutorials and all) had moved to ", ".", "I hadn\u2019t seen those links. They echo my existing complaints about the documentation, which is essentially that it\u2019s written for audience that already knows how the tool works.", "Fair point. Perhaps that could be revisited.", "I like the pip vs. single package analogy as well. However, like ", " mentions there\u2019s a few other things/layers to consider!", " Thank you for the detailed reply!", "These tools are for handling highly federated packages, it doesn\u2019t impact large code bases in my opinion. You may have a single package for yourself which contains as much as you want, in a single CMake project, modularized how ever you like\u2026", "How does it get in the way?", "I think I gave a bad example. Here\u2019s another one: Let\u2019s say I want to run something before my build, maybe a script to install dependencies or create a timestamp file or something. With CMake I could add an ", " in the toplevel CMakeLists.txt, but with colcon I can\u2019t do anything of the sort. I could wrap the command I want to run alongside the colcon call in a build script and make that my build command, but I don\u2019t like the path this goes down. Custom build scripts have a tendency towards becoming dumping grounds, and it\u2019s hard to keep the documentation up to date with the functionality. I really value having an easy onramp experience for a project, so the idea of being able to use the standard ", " is really appealing.", "Here\u2019s another one: I wanted to add static analysis to my project, but the tool I was using, cppcheck, expects one project. I ended up exporting compile_commands.json for each package and calling cppcheck for each one individually.", "Here\u2019s another one: CLion is designed to work with a single CMake project, so I can\u2019t use it for my overall project, or rather I can, but I have to give up some features of its CMake integration.", "The point is, if I could structure my project with a toplevel CMake build, it would make certain tools and integrations much easier, not to mention onboarding.", "I don\u2019t think that\u2019s right. The reason it\u2019s package based (federated) is that otherwise anyone wanting to contribute something to the ecosystem would need to get us to accept the change.", "Take OpenCV as a counter example, they have a single CMake project, so if you want to add a new feature, it either has to be a separate CMake project (in a different repository) or you have to get a merge request through their process. Now, the former is fine at first, your README will be like \u201cinstall or build OpenCV, then cmake/make my project\u201d. But at scale this falls apart, it becomes, \u201cinstall or build OpenCV, some other persons addition, and then some other addition that uses that, and \u2026, then my project\u201d. For robotics it becomes even more complicated as instead of chains you end up with graphs of dependencies due to there being multiple sources of information and separate systems working in parallel.", "No, definitely not. There\u2019s definitely not a need to require all contributions to the ecosystem to be approved by OSRF. I think we\u2019re conflating package management with building here, and again pip provides a good model with requirements.txt. Of course, as you point out, a pip package only needs to specify compatibility with a limited set python versions, whereas system managing Python/C/C++/Rust/Java packages needs to keep track of Python version, gcc version, architecture, rustc version, javac version, etc.", "The current model is clearly working, as there is a large and thriving ecosystem around ROS, but I think there are ways to improve while keeping the aspects of it that work. Some concrete suggestions:", "To your point about how a single-context build leads to issues like name collision on targets, you\u2019re right. I would argue that the end-user should choose whether or not they want to deal with those issues and accept the tradeoff in order to have a single context build that can more easily integrate with various tools. Right now the user is effectively being blocked from doing so. I doubt this was intentional, but with the number of things that are needlessly coupled with the build system in an undocumented fashion (see the rosmsg example), this is effectively the result. While for ROS1, and even ROS2 to some degree, one can claim that it\u2019s possible to build without catkin/colcon, this is true only in a very technical and academic sense and I think it would be great if this were more of a first class feature of ROS.", "The OP of ", " brought up some interesting points, but the later comments seem to go more into the direction of \u201cwe need better documentation\u201d and \u201cmy use-case/preferred use of a build tool isn\u2019t sufficiently being covered by catkin_make/catkin_tools/colcon\u201d. Those are valid concerns, but the thread started with \u201chow about doing all of this with pure CMake?\u201d and I\u2019d like to hear more about that part specifically.", "Over the years there have been quite a few comments about \u201cwhy a custom build system/tool?\u201d. I expect ", " may have some comments on the rationale for Colcon fi, but as ", " mentioned, some of it has to do with managing sets of packages with (inter)dependencies (and their dependencies, and their dependencies, and so on).", "When I finally understood how catkin/colcon look through the folder hierarchy for package.xml files and use those to build a dependency tree and then parallelize builds I started to appreciate that.", "I\u2019m not a build system expert, but how would you achieve this with pure CMake? ROS systems are very modular/package-oriented. Seems like this is a pretty good argument in favour of catkin & colcon.", ": could you comment on how you\u2019d approach this with pure CMake projects? Especially also with multiple different types of projects and many of which may not use CMake or a language that needs to be compiled or needs special setup of the (build) environment for other projects to be able to find them?", "The whole reason ROS is package oriented is because the build tools won\u2019t allow you to create ROS code any other way.", "This is a strong statement which I doubt is true (Python nodes don\u2019t need to be Catkin / ROS packages at all fi). The most you could say (and based on my understanding) is that the build tools we have work in a certain way because ROS uses a package based approach to distribution of code. Not the other way around.", "I would argue that the end-user should choose whether or not they want to deal with those issues and accept the tradeoff in order to have a single context build that can more easily integrate with various tools. Right now the user is effectively being blocked from doing so. I doubt this was intentional, but with the number of things that are needlessly coupled with the build system in an undocumented fashion (see the rosmsg example), this is effectively the result.", "I\u2019m not sure it was completely intentional, but freedom-", "-choice is a very valuable thing for many users. Especially those not up-to-speed on how build tools work but \u201cjust want their packages built\u201d.", "This invariably means that more advanced (or involved) use-cases are going to be slightly less supported (or somewhat more involved to get working), but it doesn\u2019t mean that everything is horrible. Just that different choices were made.", "Being able to \u201cchoose whether or not they want to deal with those issues and accept the tradeoff in order to have a single context build that can more easily integrate with various tools\u201d is valuable, but it would also mean the (average?) user would have to know ", " to make that choice, which is not apparent and would make it even harder to get started.", "I would also add that you have to remember that quite a bit of what you might see as duplication or unnecessary has only become unnecessary because modern CMake started doing many of the same things over the past few years (exporting target dependencies, interface only libraries, transitive dependency resolution, federated builds, etc).", "Take OpenCV as a counter example, they have a single CMake project, so if you want to add a new feature, it either has to be a separate CMake project (in a different repository) or you have to get a merge request through their process. Now, the former is fine at first, your README will be like \u201cinstall or build OpenCV, then cmake/make my project\u201d. ", "Admittedly I\u2019m very familiar with the way Catkin & Colcon work (so I\u2019m biased), but really, this (ie: the emphasised part) is one of the things I like about the tools we use. It\u2019s very, ", " frustrating to deal with projects that don\u2019t use something similar and require me to follow 18+ steps in a readme with every step running ", ", ", ", ", " or other tools manually (and 18+ points at which I could make a mistake, something doesn\u2019t work, or I used an incorrect or unexpected way of specifying flags, build options or other configuration).", "The point is, if I could structure my project with a toplevel CMake build, it would make certain tools and integrations much easier", "True, but it would also complicate quite a few other use-cases (if not done carefully), many of which are part of the core development workflow of many of us, such as building packages from others without having to deal with their dependencies, not having to care about which package(s) to build first, etc. Granted, this is not all perfect, but I would not like to start doing that manually again.", "[\u2026] not to mention onboarding.", "This reads as if you have a particular target audience in mind for which this would be true. Could you elaborate?", "Personally, for a few of my target audiences (students fi), it\u2019s been a blessing to be able to summarise the entire build process as:", "First, run ", " and then run ", " in the root of the workspace and wait for it to finish", "instead of:", "For every project, please ", ", then ", ", then ", ". Do not run this in the ", " directory (or wherever the project stores its source files). Solve any problems it notifies you of, then run ", " and then ", ". Be sure to specify a suitable ", " and/or other way of specifying where the installable artefacts should go, and please make sure to not try and run ", ". Also please do not do any of this for non-CMake projects (which don\u2019t have ", "). Use the regular ", " for Python (add ", " for a non-system-wide install, you should know when you\u2019d want that). If you are trying to build a Java based package, then do whatever you\u2019d do with those. For other languages / build systems: please follow the readme, but make sure to maintain a sane build environment at all times.", "And above all, please make sure you figure out the proper build order across all packages (both your own ", " those you downloaded earlier from others), and make sure to have all dependencies installed first.", "This is of course exaggerated but helps get the point across.", "The current model is clearly working, as there is a large and thriving ecosystem around ROS, but I think there are ways to improve while keeping the aspects of it that work. Some concrete suggestions", "In my experience, one of the best ways of seeing these suggestions implemented would be to show that they work. Show an example CMake-only build of a workspace with a representative set of packages (ie: containing ", ", ", " (or ROS 2 ", "), multiple different languages, specific environment setup hooks, etc). Show how you\u2019d deal with dependency management and how you\u2019d support the federated workflow.", "I\u2019m not saying \u201cyou get something for free so you cannot complain\u201d, but with the community as it is right now, code is king and is how you get things changed.", "code is king and is how you get things changed.", "If I wanted to make a PR I\u2019d do it. In fact I\u2019ve made several PRs against ROS2 documentation. However the issue I\u2019m trying to bring to light is not one that\u2019s solvable in a single PR, or even a couple. And any change I make could easily be reversed by a future PR that perpetuates the existing model in which \u2018catkin/colcon is king\u2019.", "That\u2019s why I\u2019m raising this in a thread, because I want to see if there\u2019s any sympathy or currency to these ideas and if so, to try to gather some resources to move things in a direction in which catkin/colcon is not the only game in town.", "freedom- ", " -choice is a very valuable thing for many users", "I agree, but freedom-of-choice and freedom-from-choice do not have to be in opposition. The way to structure a system to have both is to build it on simpler underlying ideas that can be combined in multiple ways, and provide a canonical implementation(s) that combine those ideas in a particular way. The first part gives freedom-of-choice, the second provides a freedom-from-choice.", "To give an example, consider the organization of code in C/C++. Most of the time it is organized in header and source files, but this is not strictly necessary. ", " is simply copy paste, so if you want to ", " a source file, you can. I think I did that once in order to test a static function in a source file (I suppose maybe I could\u2019ve used a prototype but I digress).", "To give a bad example, consider CMake. Currently it\u2019s possible to use both old-style and Modern CMake in the same project, and I would say there isn\u2019t enough reference documentation using Modern CMake to make it clear which version one should use. Slowly, more and more Stack Overflow answers are getting comments like \u201cprefer target_include_directories over include_directories\u201d, but overall I\u2019d agree with you that the multitude of options provided by CMake is confusing and makes it a difficult tool to pick up for both students and professionals alike.", "To return to the main point, I think the ROS ecosystem would benefit a lot from this approach of having a canonical way of doing things, but providing enough support and documentation for those who want to try something on their own to be able to do so. Right now it\u2019s either catkin\u2019s way or the highway.", "To help motivate the discussion, I\u2019ve modified the geometry2 package to build with pure CMake ", ". This is meant for discussion purposes as opposed to an actual proposal against geometry2, so please don\u2019t bash it too much, but if you clone the repo at that commit you\u2019ll be able to ", ". You\u2019ll notice that the CMake step takes 10 seconds. Normally I\u2019m not one to complain about 10 seconds, but you\u2019ll notice this scales with the number of packages (try commenting out the last 5 ", " commands and time it again. Hint: ", " in front of a command will time it, i.e. ", "). For a project with 60 packages, this means 60 seconds for every change in a cmake file, even just a comment change. The extra time is coming from the catkin_package call. In order to make it practical for people to use plain CMake in their projects, I think this has to be addressed, does that seem reasonable? Obviously catkin projects would benefit as well, but with the distributed nature of the catkin build I think it would be less noticeable.", "Of course, the overall trajectory I\u2019m proposing would require many more steps beyond optimizing ", ", in particular colcon might have to take a few steps back as it relies on a non-CMake extension to generate setup.bash, but how do people feel about moving towards a model where BYO-Tool is supported, but there\u2019s a canonical path for those just want to use ROS and don\u2019t want to be bothered with getting up to speed on build tools?", "It\u2019s not a complete solution, but I do builds through a single top-level CMakeLists to play nice with a CMake-based IDE (CLion).", "Here\u2019s my top-level CMakeLists.txt file, which uses Colcon to gather packages and build them. It can\u2019t successfully build the ", " ROS2 C++ stack for various reasons:", "Still, it\u2019s good enough to do multi-package development on C++ stacks. It could probably also be extended by using ", " commands instead of ", ".", "\n", " +1 for CLion. Have you discovered setting up remote build/run/debugging using ssh yet? ", "  I just got it working so I can build and debug ROS2 modules on my RPI from my desktop computer.", "I am a big fan of cmake and the more we can lean on cmake vs colcon I am in favor of. There are some weaknesses in cmake where colcon fits in, so I am not sure it can completely go away.", "To add a note about the geometry2 example above, the overall goal would be to get it to compile without the catkin_package macro, instead using cmake\u2019s target_add_dependency. As it is in the commit I linked, it relies on catkin_package generating the cmake files used by find_package, and the order of the add_subdirectory commands reflects the dependency tree. Other steps that would be required to achieve this would be modifying generate_messages to produce a target, and either documenting rosmsg/roslaunch well enough that anyone could add what\u2019s necessary to their project in order to use those tools, or making some new CMake macros that can automatically add what\u2019s necessary to use those tools (or both). I think it would also be necessary to add documentation/macros for setup.bash. Hopefully this helps clear up the picture of what I\u2019m talking about for those who were asking what a pure CMake build would look like.", ": could you comment on how you\u2019d approach this with pure CMake projects? Especially also with multiple different types of projects and many of which may not use CMake or a language that needs to be compiled or needs special setup of the (build) environment for other projects to be able to find them?", "I can\u2019t speak to handling dependencies for languages other than C/C++ here, but in all of my ROS/ROS2/DDS projects, I have used Conan for both build tool dependencies and library dependencies with fairly great success. Conan has come a long way and I\u2019ve used it in production for a couple of projects, one of which had support for multi-arch builds as well. It has excellent integration support with CMake and overall helps to create highly reproducible builds. This matters a LOT in production environments. I really hate to rely on system dependencies in any of my production software, as you can very easily end up with non-reproducible builds if you don\u2019t take a ton of precautions to lock system dependencies down, which can often be complicated by things like automatic upgrades of packages, optional dependencies, etc. Conan does have support for system dependencies if you absolutely must rely on them (generally because some dependency has not been packaged for Conan yet). Additionally, many of the most popular C/C++ libraries are available as Conan packages already.", "I\u2019ve fantasized about the ability to simply include ROS2 and the various components as a Conan dependency, and target_link_libraries( ros2:: ) in my CMakeLists.txt, and just \u2018cmake \u2026 && make\u2019 without the need to install anything as a system dependency or go through the colcon workflow. Additionally, the IDL generation tools can be included as a build dependency, much the same way you might use <build_depends> in package.xml.", "I\u2019ve gone through most of this workflow for pure DDS systems (RTI and FastRTPS) but haven\u2019t dug nearly deep enough into all of the various components and tools necessary to achieve this for ROS2. If there is interest in this, I\u2019d be happy to help in the effort and provide support on the Conan packaging front.", ", thanks for raising this important topic! We\u2019re always open to suggestions on how to improve the user and developer experience.", " and others already covered much of what I would have said, so I\u2019ll just add a few thoughts:", "What I\u2019d really like to see is support from OSRF for building ROS code in a pure CMake way", "I don\u2019t see this goal as an end in itself, but rather an approach to addressing some underlying shortcomings in the current workflow.", "If I\u2019m a user of a project, then so long as I have a reliable way to install it and then a well-documented way to use it in a manner that\u2019s familiar to me, then I\u2019m satisfied and I don\u2019t worry about how the developers of the project make the sausage. If I want to start contributing to the project as a developer, then I expect that I\u2019ll have to adopt the conventions (code style, file organization) and workflows (CI, code review, test running, build procedures) that the project uses. Eventually, once I\u2019ve established myself among that developer community, I might propose changes to those conventions and workflows, but I\u2019ll assume that the status quo is likely to be preferred so long as it\u2019s working well for the project.", "So, rather than saying that ROS should be built using pure CMake, can we figure out what the underlying problems are? I\u2019ve seen two issues raised here so far:", "I\u2019ll address each in turn below:", "build it on simpler underlying ideas that can be combined in multiple ways, and provide a canonical implementation(s) that combine those ideas in a particular way.", "That\u2019s a clear, concise, and desirable design goal. To my knowledge, we are achieving it, albeit with areas for improvement.", "In creating the ", " of using ROS 1 packages without ", " or other ROS-specific tools, I repeatedly experienced two alternating feelings:", "This back-and-forth is perhaps best embodied by the ", " of doing ROS 1 message-generation directly from ", " and ", ". I\u2019m happy that it works, but it was hard to figure out and the resulting workflow is not especially pretty.", "Personally, I\u2019d be happy to see improved support for these \u201cexternal\u201d use cases. When they\u2019re difficult, it\u2019s not because we intend them to be or because we want to force ROS users to use the workflows we use when developing ROS. It\u2019s just that we don\u2019t regularly exercise those external use cases and as a result they suffer. I\u2019d welcome PRs (to code and docs) that make the underlying tools easier to invoke directly.", "We build ROS from source in a package-by-package process. As others have noted, there are important advantages to this approach, including inter-package isolation of CMake targets and variables, and support for non-CMake packages.", "But as many of us have experienced, a big cost to this approach is that it\u2019s slow. The constant overhead of invoking ", " (or ", ", or another tool) once per package adds up quickly. There\u2019s clearly a lot of redundant work happening over repeated builds and it costs time to developers and CI systems.", "I don\u2019t have a particular solution to suggest here. It would be great to see proposals for how to improve the speed of a ROS build without sacrificing the established advantages of the per-package build approach.", "Finally: others have pointed it out, but I want to emphasize that there\u2019s a distinction between two things:", "A library of CMake macros such as ", " or ", ". In my experience, every substantial project that uses CMake ends up having a library of CMake macros that are reused throughout the project. We\u2019ve just been more explicit than most projects by externalizing that library into a separately named entity. And while we find those macros to be useful and convenient, we don\u2019t force anyone else to use them. In any case, using macros like we do is still, in my opinion, ", ".", "An executable tool used to build a bunch of packages, such as ", " (packaged with the ", " CMake macros), ", " (distributed separately in ", "), or ", ". (You\u2019d be forgiven for confusion over the naming for the ", "-related software. That confusion is one reason that ", " and ", " are named differently.) This one is potentially more controversial, as we\u2019re recommending that you run ", " to build (potentially) ", ". It should always be possible (and ideally easy) to build your code using whatever tool you prefer. Wherever that\u2019s not the case, we should fix it!", ": I would be glad if you could share your insights and experiences with ROS2 and conan.", "Ease of use of ROS software from outside ROS", "This is exactly a use case I\u2019m dealing with: a rather simple (from build perspective) single executable, which interacts with ROS/Ignition simulation. I don\u2019t care about how ROS itself is built, but I do care how my simple application is built.", "Here are the problems I\u2019ve run into. Firstly, I\u2019m a beginner ROS user and on top of that, I was just thrown from Windows to Linux, Visual Studio to VS Code with CMake, naked executable to Docker image, etc. In general, I\u2019m dealing with completely new development environment and a lot of confusion. Understandably, confusion minimization is my goal, at least in initial stages. My project requires a single executable, but ", " forces me into a workspace configured for potentially multiple packages. Visual Studio Code has multiple CMake extensions and a ROS extension, each with somewhat different ideas about project configuration. It took me a while sifting through documentation to find out relationships between catkin workspace, ", ", ", ", VS Code autoconfigure mess, ROS packages, ", ", ", ", etc. Part of it is a necessary learning curve, but a lot of it was not needed for my simple ", " scenario. Sorry for ranting, but I thought a new user experience may add some value to this discussion.", " Would it have helped if you\u2019d encountered a tutorial that shows you how to use plain CMake to build your roscpp application, without any mention of ", "? That would be easy to do (or promote more heavily, if it already exists somewhere).", "The ", " workflow is important if you\u2019re developing multiple ROS packages that need to depend on each other, and/or you want others to be able to easily consume your ROS package(s). But if you\u2019re just building a leaf application that uses ROS, and you\u2019ve installed ROS from binaries (e.g., on Linux via ", "), you shouldn\u2019t need to know about ", ".", " Thanks for the reply. I\u2019m glad to see this topic generating some interesting discussion ", "If I\u2019m a user of a project, then so long as I have a reliable way to install it and then a well-documented way to use it in a manner that\u2019s familiar to me, then I\u2019m satisfied and I don\u2019t worry about how the developers of the project make the sausage. If I want to start contributing to the project as a developer, then I expect that I\u2019ll have to adopt the conventions (code style, file organization) and workflows (CI, code review, test running, build procedures) that the project uses.", "That\u2019s fair, but it\u2019s very possible for a project to have conventions that are, well, conventional, as opposed to internal only. Take Linux or git for example. They can be built with just ", ".", "That\u2019s a clear, concise, and desirable design goal. To my knowledge, we are achieving it, albeit with areas for improvement.", "From a robotics perspective, perhaps, but from a programming perspective I disagree. There is only one way to build software, and this is to go through catkin/cmake. Trying to cut through that complexity and just get to the headers and libraries is an exercise in frustration, as you pointed out shortly after that quote.", "Overall you\u2019re right to point out that building with pure CMake isn\u2019t the right goal, I think the goal is better support for non-catkin/colcon (or even non-cmake) workflows. And I think it\u2019s achieved by the development process of ROS being more conscious of this as a goal. Otherwise, what ends up happening is that some documentation is created, never advertised properly, and effectively lost (i.e your example repo, which I duplicated at one point because I was unaware of it).", "One other thing I\u2019d like to point out re:documentation, because I think better documentation is a big part of this, OSRF is much better positioned to consolidate and create effective documentation than a contributor. There are 4 separate pages that claim to be documentation for catkin. As a user, I have no access to user stats to see which of those sites is getting visited, and from where. And if I want to contribute to documentation, am I supposed to do it in 4 places? f that, seriously. There are good models to follow here, i.e. Eigen, CMake (they could have more examples, but at least it\u2019s all in one place). Also, there are certain undocumented decisions that inhibit the kind of development we\u2019re talking about. It\u2019s one thing to build an executable that can use ROS message bus, but it\u2019s another to build one that can take advantage of rosrun/roslaunch/rosmsg, mostly because catkin is taking care of the installation step for you and hiding all the details. I\u2019m totally fine with abstracting away details in a friendly interface, but I\u2019d love it much more if I could look up documentation about that interface and get some information as to what\u2019s going on.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["catkin: ", "\n", "colcon: ", "\n", "Performance: It takes about a second for the ", " macro to run. For a couple packages this is fine, but for our ROS1 system we had about 60+ packages, which meant every call to ", " takes 60+ seconds when we configured it to use a toplevel CMakeLists.txt. A single character changed in a single CMakeLists.txt meant 60 seconds of reconfiguring. When I did some profiling it looked like a lot of time was going to regenerating files from templates using ", "\n", "One of: Documentation/CMake macros/consolidation of requirements, in the context of being able to use ROS CLI tools like rosmsg/rosrun/roslaunch with non-catkin packages. For example, for ", " to work, the environment variable ROS_PACKAGE_PATH needs to contain a directory that has a ", " folder with the messages and a package.xml with a valid ", " tag. Having that documented somewhere, or having the ", " macro look for a valid package.xml and warn the user if it\u2019s not found (and what the consequences are) would help with decoupling ROS functionality from the build system. Arguably the package name could be taken from ROS_PACKAGE_PATH. I can provide additional notes on roslaunch/rosrun if you like. Edit: I see that gerkey\u2019s repo has the info for roslaunch/rosrun, about having a valid package.xml, having a .catkin file and having the path appear in CMAKE_PREFIX_PATHS.", "For the ROS2 side, similar documentation for the CLI tools would be great. Overall ROS documentation tends to be too high level and abstract (and spread out) to be useful. More details that are grounded in how things really work would be helpful, for example \u201ccatkin crawls your ", " directory for package.xml files, and reads them in order to create a directed acyclic graph of package dependencies, and then builds each package as a separate CMake project starting with the leaves of the tree and working upwards\u201d", "Unlike variables, functions have global scope, so two packages declaring the same function name can interfere in weird ways.", "Some packages declare the same target name (e.g. the way osrf testing tools pulls in GTest causes build problems for me).", "As a ROS user I want to build my ROS-dependent code without using ROS-specific tools.", "As a {ROS developer ", " ROS user who frequently builds ROS from source}, I want my builds of ROS to go faster.", "Hey, we really can do everything build-related outside of our usual workflow. That\u2019s great!", "Holy cow, making that work was not intuitive. We should improve our documentation and maybe also modify how some of the underlying tools work!", "\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/migrating-ros-ros2-off-of-catkin-colcon-towards-pure-cmake/12104"},
{"title": "authority concerns on trade issues about US EAR", "thread_contents": ["We are concerned about the authority of ROS as recently arised trade issues between US and the rest of the world (especially China). We are looking forward to get your official answers for the questions below:", "Just to clarify this is the ", " mentioned. The TL;DR is that this is a new regulation imposing ITAR restrictions on software related to the automated processing of geospatial data using deep learning.", "I am in a unique position in that I used to work on this type of software at a previous employer. I do not believe this law applies or is intended for the ROS community. It seems to be narrowly scoped to be applied to deep learning for satellite geospatial imagery. Having said that, I am not a attorney, and this is just my personal opinion. If you are concerned about this issue you should consult with an attorney.", "Could this be something OR could make sure of for at least something like ", " and the other official variants (REP-142, REP-150)?", "That would help avoid confusion and uncertainty (and perhaps a lot of work for lawyers, but ", " ", ").", " Where in ROS core do you see these specific tasks? The order it is very narrowly scoped to impact a specific set of vendors that provide products for that particular workflow.", "In my experience it doesn\u2019t really matter what I believe or how I see things, especially in contexts that are sensitive to these kinds of topics (ie larger corporations looking to make use of externally developed components), as I\u2019m not a lawyer.", "Seeing as much (most?) of ", " and related packages is essentially under OR\u2019s control, it would be beneficial to have a statement that says something like you just wrote.", "True enough, but you can\u2019t have a lawyer check ", " ECCN. What makes this ECCN special? Given the part that ", " quoted, I don\u2019t see how anything in ", " (or even ", ") could possibly fall under the scope.", "True enough, but you can\u2019t have a lawyer check ", " ECCN. What makes this ECCN special?", "Not every one, no. But this one has gotten a bit of attention.", "And the questions don\u2019t come from engineers who know what is going on or what they\u2019re using.", "Given the part that ", " quoted, I don\u2019t see how anything in ", " (or even ", " ) could possibly fall under the scope.", "Again, it doesn\u2019t matter what I (or you) see or imagine.", "I\u2019ll withdraw the request though: let\u2019s see what happens and how many questions we get about this (both on and off-line).", "Not every one, no. But this one has gotten a bit of attention.", "And the questions don\u2019t come from engineers who know what is going on or what they\u2019re using.", "Ok, that partly answers my question \u201cwhat makes this ECCN special\u201d: you seem to have gotten questions before about this, whereas for me this thread is the first I heard of it. If this specific ECCN is something that many (potential) ROS users care about, we should consider an official statement. I think it hasn\u2019t gotten to that point yet, or have I missed something completely? (honest question)", "Again, it doesn\u2019t matter what I (or you) see or imagine.", "I think the point where we agree is that if you have doubts whether a given legal document applies or not, you should hire a lawyer instead of doing your own guesswork. I think the point where we disagree is that you seem to have those doubts, whereas I don\u2019t.", "I could of course provide absurd examples of ECCNs where we would both agree that they have nothing to do with ROS or even with software in general, so what you and me \u201csee or imagine\u201d clearly does matter to an extent.", "and perhaps a lot of work for lawyers", "The ol\u2019 shuffling lawyers fees to the other folks trick, very clever ", ".", "But more seriously, I think this starts a bad precedence making it OR\u2019s problem to tell people if they are allowed to use [ROS and related stuff] according to [some treaty, international restriction, etc]. That would be a never ending battle at great legal expense to OR for a company\u2019s individual concerns.", "And as a personal, non-legal opinion, that restriction has nothing to do with their field of robotics or ROS. I don\u2019t think it should be a concern unless you\u2019re using ROS for a geospatial application, but in that case its still not ROS\u2019s fault that you\u2019re using that technology in that way.", "Are there other ECCNs that may be relevant to the core parts of ROS?  Surely some UAVs and components must be covered?  Especially the large, long-duration stuff.", "Given how long these documents are, it seems unlikely there is only one ECCN relevant to mobile robotics.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Is the ROS project subject to U.S. Export Administration Regulations (EAR) and classified under ECCN 0D521? Or such AI software is subject to EAR, but not classified under ECCN 0D521?", "Is U\u2026S. Bureau of Industry and Security license required for exporting this project to China\uff1f"], "url": "https://discourse.ros.org/t/authority-concerns-on-trade-issues-about-us-ear/12446"},
{"title": "wolfSSL and wolfCrypt for ROS", "thread_contents": ["Hi!", "We\u2019re thinking about porting the wolfSSL suite of security tools over to ROS, and would like some feedback.", "We think that the order of priority is:  1.  wolfCrypt Cryptography library, 2.  wolfBoot secure boot, 3.  wolfSSL TLS.", "We think the wolfSSL products are a pretty good fit for ROS because we support some useful things for the industry verticals that ROS supports.  For example, we support FIPS 140 crypto for government use, MISRA-C for automotive, DO-178 DAL A for things that fly.", "We also support a lot of the hardware cryptography and secure elements that we think should and will  be used in deployments.  Hardware cryptography is especially important for real time performance requirements.", "Those are our thoughts, but we\u2019re not experts on ROS!  As such, we could use your help as we prioritize what parts of our product line we bring over to your environment.  Please let us know what you think!", "LS", "Where do you see this work fitting in with the existing SROS/SROS2 stuff?", "Do you have any usage with DDS Security?", "Hi!  I don\u2019t have a good enough handle on SROS/SROS2 to answer that with specificity.  That said, we expect wolfCrypt could be consumed by SROS/SROS2 as needed, especially where FIPS, MISRA, or DO-178 are required.  The same is true with DDS Security.  I understand that RTI\u2019s implementation of DDS Security is currently consuming OpenSSL cryptographic primitives, but it can consume ours as well.", "The alternative to DDS Security for data in motion that we\u2019ve implemented and released in the market is DTLS or TLS over DDS, as we are transport agnostic.  We\u2019ve also implemented a key server for DTLS over DDS that has a fair bit of fault tolerance built in.", "LS", "Hey there ", ", welcome to the community! It\u2019ll take a little while to get a handle on the interplay between DDS and ROS 2\u2019s security features, we\u2019ve all been there ", "  . ", " should help to bootstrap you somewhat.", "The challenge I see in this with regards to ROS 2\u2019s security features is that the DDS features we\u2019re relying on right now are the built-in plugins from DDS-Security. As such they\u2019re a bit prescriptive in the cryptography department (see section 9.5 of the ", "), for example:", "DDS:Crypto:AES-GCM-GMAC provides authenticated encryption using Advanced Encryption Standard (AES) in Galois Counter Mode ( AES-GCM). It supports two AES key sizes:  128 bitsand 256 bits. It may also provide additional reader-specific message authentication codes (MACs) using Galois MAC ( AES-GMAC).", "In order to do anything else, I think we\u2019ll need new plugins that don\u2019t follow the built-in spec, but still abide by the overall interface (section 8.5 of the DDS-Security spec). That\u2019s probably not an insignificant amount of work, particularly considering that this is on a per-DDS-implementation basis.", "Regarding just swapping wolfSSL for whatever library may or may not be used, that will again be down at the DDS implementation level. The ROS security features build on top of that.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/wolfssl-and-wolfcrypt-for-ros/12266"},
{"title": "ROSCon 2019 Macau: Videos are Live!", "thread_contents": ["ROSCon 2019 Macau videos are now live on ", " and the ", " along with slides! We apologize for the delay in getting the videos out. Please let us know what talks you found the most helpful as your feedback helps the ROSCon review committee make better selections next year.", "We would like to thank ", " for making it possible to share these videos with our global community.", "We also want to thank or ROSCon speakers, volunteers, and sponsors that make the event possible.", "\n", "Thank you, ", "! Been looking forward to these.", "Awesome! Thanks so much!", "Thanks a lot for posting them! I did not have the chance to attend any of the speeches and the agenda was impressive. Eager to start consuming them!", "Thank you~~! I 've been looking forward to these videos.", "Its great making these videos available soon. Very eager to experience this! Lets enjoy this weekend with these\u2026", "Hey, turns out if I didn\u2019t talk ", " fast wouldn\u2019t have fit in my time slot ", " Almost 20:00 on the dot.", "Dear ", ",", "there is a funny mistake. I did not do the lightning talk but I created the Awesome Robotic Tooling List:", "\n", "\n", "The talk is done by Florian Friesdorf, Co-Funder of ", "Thanks for the fame ", "\nTobias Augspurger", "Thank you for waiting for the publication of ROSCon2019 videos until after ROS-Industrial Conference 2019 at Fraunhofer IPA. ", "Enjoy Christmas holidays watching what happened in Macau.", "\nIn January we will then publish videos form our event in Germany. ", "The talk is done by Florian Friesdorf, Co-Funder of ", "Thanks for the fame ", "\nTobias Augspurger", "Thanks for the notice ", " we\u2019ve updated the listing.", "If you\u2019re like me, and never actually sit down to watch videos, but have lots of commute time to burn, I\u2019ve been ripping the audio and putting it in a ", ".", "The MPAA\u2019s gonna get you.", " you are brilliant and I might crib your idea. As of yesterday I have a master CSV of all 320 ROSCon talks and their associated metadata (we\u2019re in the process of giving all of them DOIs). Now that we have the data in one place it should be super straightforward to make a podcast for every ROSCon talk. Perhaps what I can do is generate a podcast for every talk then make a master list of ROSCon presentations that\u2019s easy to search.", "Do you happen to have an ffpeg configuration you like for podcasts? Getting ffmpeg params right is always half the battle.", "A csv of all the talks would have made this a bit easier. I didn\u2019t use any ffmpeg params, I just ripped the audio track from vimeo and then used pydub to add the intro/outro.", "Super, super weird question - a little off topic but wanted to bring it up.", "I\u2019m curious about the ownership of the talks. They\u2019re posted on the OSRF Vimeo - no issue - but then under a creative commons license. This basically says they have to credit \u201cyou\u201d but who is the \u201cyou\u201d \u2013 OSRF or the presenter?", "Redistribution of the talks as podcasts, with titles and metadata including the author, clearly meets the CC intended licenses either way. But this seems a little ambiguous to me having been on both sides of this and I don\u2019t recall signing or agreeing to anything in submission of presentations releasing IP rights to the presentations for OSRF to redistribute.", "(so, so not trying to make a problem, just looking for clarification since this topic kind of sparked my internal \u201copen source license review\u201d monologue)", "My understanding of the relevant copyright rules is that:", "Open Robotics, as the organization doing the recording, owns the videos. So the attribution required by the CC license should be to Open Robotics.", "The videos are themselves derivative works of the presenters\u2019 on-stage performances, which the presenters own. Before each ROSCon we notify presenters that their presentations will be video recorded and that we will distribute the resulting videos. Over the years we\u2019ve had one or two presenters not want to be recorded (e.g., because their employer doesn\u2019t allow it), and we\u2019ve been responsive to those opt-out requests.", "Thanks for raising the issue. We\u2019ll make the situation more explicit for presenters in future editions of the conference.", "That all makes sense to me. I think that closes the loop on most things. I think then the only topic that is open ended is the request to post slides on the ROSCon website.", "Memory serves its an email that comes along with a link to upload the slides. There may be some statement of rights to agree to when uploading the slides, off hand I do not recall. I think if the video itself is derivative and the slides provided as appropriately signed off, that makes things as iron clad as can be expected.", "I think then the only topic that is open ended is the request to post slides on the ROSCon website.", "As with the videos, we make it clear when requesting the slides that we\u2019re going to distribute them, and we abide by the wishes of those who opt out.", "Unlike the videos, we (Open Robotics) don\u2019t want any ownership of the presenters\u2019 slides. We just want the presenters\u2019 permission to distribute the slides. We don\u2019t declare any license regarding the rights of others to use or redistribute the slides that we post.", "As a result I believe that we\u2019re in the default situation for copyright of \u201call rights reserved\u201d, which is to say that individuals can download and view the slides but cannot, for example, redistribute them, perform them (i.e., give a presentation using those slides), or create derivative works from them (e.g., copy slides, images, or text from slides verbatim into other media) without permission of the presenter (and/or possibly the presenter\u2019s employer).", "Like with the videos, for future editions of the conference, we\u2019ll consider additional language in presenter interactions and on the website to make the situation more explicit.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/roscon-2019-macau-videos-are-live/11925"},
{"title": "Best ARM board for ROS", "thread_contents": ["I would like to get an opinion on what people think is the best ARM board for ROS.", "I have tried the dragonboard, raspberry PI3 and beaglebone black.  beaglebone does not have the horsepower to run ROS (moveit,etc).  I think that a quad core A53 might be the minimum required.", "Anyway comments welcome.", "Shawn", "HI ", ",", "I\u2019ve tried all those and my advice for new projects would be to have a look at the new NVIDIA Jetson TX1 module. IMO it\u2019s by far the best ARM embedded board where to run ROS and friends.", " how is the TX1 compared to the TK1?", "I have used the TK1 myself, and it has the capabilities to be extremely powerful, however all of nvidia images are given out with low power settings so you have to configure it all yourself (i also noticed that it had a issue with IRQ balancing, which till this day I dont believe got fixed)", "Hi,", "Yes,  the TX1 would be a great board (or the TK1).  I should have clarified and said best board under 120.", "\nI am considering Pine64 but I will have to wait and see about it.  I am a bit disappointed by the RPI3\u2019s OS and lack of 64bit support.", "Hi ", ",", "\nI jumped directly to the TX1 so I\u2019m afraid i can\u2019t comment on that.", "Has anyone used an old flagship phone as a \u201cARM target\u201d? I\u2019d like to use some old android phones that still have a good 2GB of RAM + 64-bit ARMv8 that include a swath of radios, sensors, self contained power supply. Buying one retail might be above your $120 mark, but if you have one siting around in a relatives junk droor or with a cracked screen off ebay\u2026", "I know there is ROS for android with ROSJava, but flashing phones with a more common flavor of Linux and treating as a traditional embedded target has always been appealing to me. I think mobile device hardware support is a bit fractured thanks to device manufactures, so I\u2019ve only seen posts with Nexus and Ubuntu Touch, nothing like an old Samsung I have.", "\nRelevant ROS Answers post: ", "I would like to get an opinion on what people think is the best ARM board for ROS.", "I have tried the dragonboard, raspberry PI3 and beaglebone black. beaglebone does not have the horsepower to run ROS (moveit,etc).", "I was hoping to use the BBB for a mobile robot doing things like SLAM, localization, and navigation (move_base). So no need for image/video processing, only spinning LiDAR. From my testing, it doesn\u2019t look adequate even for that, unfortunately.", "How do people feel about the Odroids? ", "ODROID XU-4 is pretty awesome. It has a USB3 host, and if you have a USB3 peripheral that you need to talk to, I don\u2019t think there are many (any?) similarly-sized and similarly-priced options at the moment.", "+1 for the XU-4. It can run a surprisingly serious ROS setup (motion planning, depth image processing). I\u2019ve just bought a C2 as well; haven\u2019t had a chance to try it out yet though.", "spmaniato", "You can use the BBB but for me using MoveIt it the CPU ran around 80-90 percent during planning.  Which is not good.  Using the DB410C or RPI3 it runs around 60-70 percent.", "I have not used an Odroid, but have used SolidRun cubox and Radxa rock and TK1.", "Since you mentioned depth image processing: did you try connecting an Asus Xtion to the XU-4? Does it work?", "Nice discussion with interesting answers.", "Just to mention my experience:", "I also used ROS in rpi2 rpi3, bbb and Odroid XU4 successfuly in several", "\nprojects.", "\nI did not used MoveIt but I can tell that it is enough to support some SLAM", "\nsystems if the algorithms parameters are well tuned for efficiency.", "\nSpecifically odroid is quite powerful and it is able to execute this kind", "\nof heavy applications fluently.", "Kind Regards.", "we have used xu4 with turtlebot with asus camera", "I also used ROS in rpi2 rpi3, bbb and Odroid XU4 successfuly in severalprojects.I did not used MoveIt but I can tell that it is enough to support some SLAMsystems if the algorithms parameters are well tuned for efficiency.", ", have you ever tried running the navigation stack (i.e., ", " + ", ") on a BBB by any chance? I\u2019ve found that, even with relaxed parameters, it cannot handle it. But I may be doing something wrong. (It can definitely handle ", " plus the laser scan publisher and other drivers. It\u2019s ", " that takes it over the edge in my experience.)", "I also like the ODROID XU-4 for using USB 3.0. On the one hand \u2018Intel\u00ae RealSense\u2122 Robotic Development Kit\u2019 is now available. It is fantastic for the user using RealSense or other USB 3.0 device (but a little bit expensive than other SBC). How about it?", "\n", "check our\n3d model\nHigh performance and low power consumption features of the latest tablet technology", "\n", "Yeah, we also used it with an asus xtion. We set the depth resolution very low (QVGA or QQVGA) mainly because we didn\u2019t need the extra pixels. Overall It worked quite well though.", "i tried Pine64+ and installed Ros from source on it ros indigo with ubuntu 16.04", "\nit is very good", "\nyou can download image from", "\n", "PINE64-_ROSINDIGO_Ubuntu16.04lts_image - image for pine64+ installed on it ROS package From source and Distro Ubuntu 16..04 lts", "\n", " It\u2019s great to know that it works for you with Indigo on the Pine64.", "Thanks for taking the effort to share however I have to not recommend people grab it. Binary images of unknown provenance are potential security risks.", "If you wouldn\u2019t mind it would be great if you could share your experience bringing up Indigo on the Pine64 with as much info as you can remember in a new thread in this category. Also did you try using the Debian Jessie builds with Kinetic from debian packages?", "i tried Ubuntu 16.04 LTS with indigo and i will make it for  Kinetic also", "\ni tried  Kinetic with it but i stopped to make meta-ros yocto core-image-minimal for raspberry pi 2 and it works now i will upload it soon also and i will build Kinetic with Ubuntu16.04 LTS", "I have Kinetic running on Pine64 under debian.  works great.  Kinetic is still missing some packages that should be synced in two weeks.", "All of the ARM A53 boards perform similarly to me.  I do like the 96Boards form factor the best", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Intel\u00ae Atom\u2122 x5-Z8350 Processor (2M Cache, 1.44 GHz up to 1.92 GHz) CPU with 64 bit architecture; Quad Core", "Intel\u00ae HD 400 Graphics", "1~4G DDR3L", "USB 2.0 and USB 3.0"], "url": "https://discourse.ros.org/t/best-arm-board-for-ros/152"},
{"title": "Requesting a \"Security\" Category", "thread_contents": ["The same way we have a ", ", would it be possible to get a Security category please?", "Ping ", ", ", ", ", ", ", " and other folks managing discourse.", "+1 - it\u2019d be great to get this going before ROSCon, so that we can reference it in our workshop!", "I agree that this would be useful.", "In general it\u2019s an important topic. However, I\u2019d like to understand what the scope of the category would be and who would be on it and what would happen here versus on any other category.", "Can you please propose a blurb to propose for the category\u2019s About page? So that everyone can make sure that we\u2019re on the same page and then once we have the scope and some people saying that they\u2019re interested in participating it we can then generate the category.", "I\u2019m suggesting that we follow the same approximate ", "  where we define the category and then demonstrate interest before creating it. In particular why would this be more valuable than the existing ", "?", "In general it\u2019s an important topic. However, I\u2019d like to understand what the scope of the category would be and who would be on it and what would happen here versus on any other category.", "IMHO, a Security category will very much help us organize and sub-classify topics within security. There\u2019re tons of items here that fall into different sub-categories. E.g. threat modeling, SROS2, security workshops, etc. We should be able to classify this either by having each one of these relevant topics with their own sub-category (similar to Local User groups) or using tags. Not very sure if tags would be very comfortable though.", "Can you please propose a blurb to propose for the category\u2019s About page? So that everyone can make sure that we\u2019re on the same page and then once we have the scope and some people saying that they\u2019re interested in participating it we can then generate the category.", "All right, here\u2019s my attempt:", "I like thew idea and the description.", "Cheers,", "\n-Joe", "In particular why would this be more valuable than the existing ", "I don\u2019t have particularly strong opinions regarding categories versus tags since one can subscribe to either, but I\u2019d say that the wg-security tag isn\u2019t enough as it\u2019s specific to ROS 2, and security is not. To that end:", "Security - a place for the community to discuss any security-related topic that concerns ROS and ROS 2. Refer to ", " for some security-related intuition and what the community is currently working on.", "If we do end up going with a category, I disagree with linking to the ROS 2 design here. We simply need a way to discuss security-related topics that concern both ROS 1 and 2. We do, however, already have a ", ".", "If we do end up going with a category, I disagree with linking to the ROS 2 design here. We simply need a way to discuss security-related topics that concern both ROS 1 and 2. We do, however, already have a ", ".", "That\u2019s a valid point, I was too centered in ROS 2. ROS(1)-related topics are of relevance as well for this category.", "That\u2019s a valid point, I was too centered in ROS 2. ROS(1)-related topics are of relevance as well for this category.", "This is why we need to have a clear definition of what the category is to discuss and validate. It\u2019s important that we have a description of what the category is that everyone agrees and understands.", "When we create a new category we\u2019re segmenting the audience. Every user will have to stop and think where should I post a new topic, in category X or category Y. And they need to be able to decide based on the categories description.", "Likewise when a new category is created users need to choose whether to subscribe to it or not.  There are many types of \u201csecurity\u201d channels, some are forums for vulnerability notification, some are discussion areas for best practices and when well deployed those are mutually exclusive due to the different audiences. The users will need to know what value they will get out of subscribing to the category.", "So to that end the category description should allow people to answer two questions. I have something to post is this the right place? And secondly is this category worth my time to subscribe to, what can I expect to get out of it?", "Good insight ", ". Security is interesting in that it\u2019s a topic that is typically referring to something else. Security in ROS 1. Security in ROS 2. Security in MoveIt!. Security in Ubuntu. To that end, I\u2019m now leaning toward saying that a \u201csecurity\u201d tag in combination with the relevant category (\u201cGeneral\u201d for ROS 1, \u201cNext gen ROS\u201d for ROS 2, etc.) makes the most sense. The one case that doesn\u2019t seem to cover is when the topic in question is more general, or relates to multiple projects. Do we just leave it uncategorized at that point? In Discourse that seems like a recipe for being undiscovered, but perhaps I\u2019m wrong. Maybe that\u2019s a reason to have a \u201cROS 1\u201d category so that \u201cgeneral\u201d can be a bit more\u2026 general.", "To that end, I\u2019m now leaning toward saying that a \u201csecurity\u201d tag in combination with the relevant category (\u201cGeneral\u201d for ROS 1, \u201cNext gen ROS\u201d for ROS 2, etc.) makes the most sense", "This is a step back. I disagree. You\u2019re relying on users tagging (with the ", " tag) things appropriately and that may or may not happen. Then, who\u2019s going to track things and re-tag them? That\u2019s a very time consuming effort. Having them categorized from the very beginning would be a much greater way to start.", ", I take from your comment above that we need to be more specific than  \u201c", "\u201d. The upcoming ROSCon i a great spot where to discuss this I guess.", "The one case that doesn\u2019t seem to cover is when the topic in question is more general, or relates to multiple projects. Do we just leave it uncategorized at that point? In Discourse that seems like a recipe for being undiscovered, but perhaps I\u2019m wrong. Maybe that\u2019s a reason to have a \u201cROS 1\u201d category so that \u201cgeneral\u201d can be a bit more\u2026 general.", "That\u2019s exactly the case for using General. Anything general like announcements and news should go to General. Both ROS 1 and ROS 2 release announcements go there and it\u2019s what we recommend all users subscribe to.", "The NextGen ROS category has been used as a category to segment off the ROS 2 development communication from the main announcements feed in General so that users can monitor the General channel and only those interested in more detailed communication about the development of ROS 2 will choose to subscribe to the ng-ros channel. It would probably be reasonable to propose to rename ng-ros to be something more like core development down the line.", "I take from your comment above that we need to be more specific than \u201c ", " \u201d. The upcoming ROSCon i a great spot where to discuss this I guess.", "Yeah definitely it would be good to learn about what people want to hear about there.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/requesting-a-security-category/11108"},
{"title": "Announcing MARV Robotics, a Powerful Data Management Platform", "thread_contents": ["Hi ROS folks,", "\nwe are pleased to announce MARV Robotics, a tool that will make management of gazillion of your bags nothing but joy. With MARV robotics no bags will get lost anymore. You can conveniently search, analyze, view, tag and comment bag files. MARV Robotics enables you to efficiently develop your algorithms and is a place where your continuous integration starts.", "Get jump started by:", "For documentation and support consult: ", ".", "MARV Robotics will also be presented at ROSCon 2016 on Sunday afternoon. Talk to Dejan for details.", "Dejan, Daniel, Marko, Florian", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["checking out the demo instance: ", ",", "installing it: ", "."], "url": "https://discourse.ros.org/t/announcing-marv-robotics-a-powerful-data-management-platform/609"},
{"title": "Some things to know as Python 2 approaches EOL", "thread_contents": ["Hey folks. We got an interesting question from a customer today, and I think ", " might be helpful to a wider audience.", "Python 2 will ", ". This shouldn\u2019t be news to anyone who hasn\u2019t been living under a rock, and ", " to use Python 3 in Noetic (whereas ROS 2 has always used Python 3). However, the question from our customer was this: ", " They are still using (and will continue to use) Python 2.", "The answer really depends on where you\u2019re getting Python 2. ", "Ubuntu\u2019s ", " are split into a number of components: main, restricted, universe, and multiverse. You can read that link to learn all about them, but let me briefly quote it so you can understand the difference between main and universe:", ":", "The main component contains applications that are free software, can be freely redistributed and are fully supported by the Ubuntu team. [\u2026] When you install software from the main component, you are assured that the software will come with security updates and that commercial technical support is available from Canonical.", ":", "The universe component is a snapshot of the free, open-source, and Linux world. [\u2026] Canonical does not provide a guarantee of regular security updates for software in the universe component, but will provide these where they are made available by the community.", "All Ubuntu releases prior to Eoan (19.10) included Python 2 in main. In Eoan it was demoted to universe. This means that for Xenial (16.04) and Bionic (18.04), Python 2 falls under the main guarantees quoted above. It will continue to be fully-supported and receive free security updates.", "In other words, as long as you\u2019re running Kinetic or Melodic against its recommended Ubuntu release targets, you should be golden.", "(hopefully this is the correct venue for this followup question)", "\nOne of our issues comes from the fact that we use rosdep to resolve dependencies and some times you need to use a pip dependency for a myriad of reasons. Since rosdep (to my knowledge) doesn\u2019t allow us freeze pip package versions we end up in a situation where it can end up installing a python 3 version of a package (or if the package maintainer is smart we end up with an install time / CI time crash).", "Our current approach is to fix package versions using ansible (and remove those packages from out package.xml which is really not ideal). Is there a recommended fix for that for Kinetic users?", "On Arch we already build all melodic packages against python3, works totally fine, you only always have to  pass ", " to as catkin cmake option. Most simply put this into an alias.", "hopefully this is the correct venue for this followup question", "Totally the right place; that\u2019s an excellent question. To be absolutely clear, anything not contained within the \u201cmain\u201d component of an Ubuntu repository does not receive that guarantee of support from Canonical, and this includes pip dependencies. I agree that you\u2019re in a bit of a sticky spot if you\u2019re using a pip dependency that ends up dropping support for Python 2 in its codebase, because you\u2019re right: as far as I know rosdep doesn\u2019t support a freeze or requirements.txt files like pip does.", "I know that ", " allows for version qualifiers, perhaps rosdep can grow support for that. However, I\u2019d also be concerned with ", ". Make sure you\u2019re installing pip from the Ubuntu repos as well, in that case.", "Our current approach is to fix package versions using ansible (and remove those packages from out package.xml which is really not ideal). Is there a recommended fix for that for Kinetic users?", "I agree, removing those from your ", " isn\u2019t ideal. Perhaps ", " can grow support for ", ".", "Worst case, I don\u2019t think it would be overly difficult to write your own dependency discovery tool using the catkin_pkg API (so you can extract the version qualifiers), use rosdep to resolve the keys into actual dependencies, and then do the installing/freezing logic yourself. You would of course need to deal with potential version clashes (e.g. package A depends on foo v1.1, package B requires at least foo v1.2).", " might have some insight to share on this as well.", "Our current approach is to fix package versions using ansible (and remove those packages from out package.xml which is really not ideal). Is there a recommended fix for that for Kinetic users?", "I can only sit in my armchair and daydream/brainstorm as I do not ship ROS on robots myself. Iterating on ", "\u2019s suggestion, if I had an ansible based deployment one thing I\u2019d be keen to try is using rosdep as part of an optional pre-run step that feeds dependency information into ansible rather than using it during deployment. rosdep has a lot of moving parts and I wouldn\u2019t want it running on every deploy. Invoking rosdep as a part of the pre-ansible pipeline also means you don\u2019t have to filter anything out of the package.xml. This would allow you to re-deploy independent of updating dependencies. If I were depending on packages from pip in a production environment I\u2019d also be very keen to keep a local mirror containing the pip packages I need. ", "Care to explain this part:", "Python 2 falls under the main guarantees quoted above. It will continue to be fully-supported and receive free security updates.", "The security updates for python 2 come from the python developers. They are not going to bother with securing python 2.", "And to quote Guido:", "Let\u2019s not play games with semantics. The way I see the situation for 2.7 is that EOL is January 1st, 2020, and there will be no updates, not even source-only security patches, after that date. Support (from the core devs, the PSF, and ", ") stops completely on that date. If you want support for 2.7 beyond that day you will have to pay a commercial vendor. Of course it\u2019s open source so people are also welcome to fork it. But the core devs have toiled long enough, and the 2020 EOL date (an extension from the originally annouced 2015 EOL!) was announced with sufficient lead time and fanfare that I don\u2019t feel bad about stopping to support it at all.", "The security updates for python 2 come from the python developers. They are not going to bother with securing python 2.", "You are of course, correct, assuming you\u2019re consuming python 2 straight from the python developers. However, if you\u2019re using the python from the Ubuntu archive, you\u2019re not: you\u2019re consuming it from Ubuntu. Going back to Guido\u2019s quote, I suppose you could call that a fork, but this is just how distros work. Ubuntu releases are supported long enough that it\u2019s not unusual for its archives to include software that upstream considers end-of-life, but we have teams dedicated to supporting them in Ubuntu. That\u2019s what makes an Ubuntu release supported.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/some-things-to-know-as-python-2-approaches-eol/11175"},
{"title": "Security issue on ROS build farm", "thread_contents": ["The machine hosting ", ", which is the build farm for ROS 1, was recently compromised. We took that machine offline and are in the process of deploying a new farm, with the known exploit patched.", "The compromise included local privilege escalation sufficient to access the GPG private key used for signing Debian packages and to push Debian packages into the public-facing repository. ", ", but at this point we are unable to rule it out.", "So, in an abundance of caution, we are using a newly generated GPG key pair for the new ", ". Because the same GPG key is used to build ROS 2 packages we also swapped the key on ", ".", "As a result of the farm redeployment and key change, users who are installing or updating ROS packages may encounter service disruptions.", "We are working diligently to get back to normal operation as quickly as possible and will provide more updates as we have them.", "Thanks for the heads up ", ". Given the inability to rule out malicious uploads, can we safely assume the new repo will only consist of newly-rebuilt packages? In which case I expect it\u2019ll be quite a while before everything is back up and running.", ", your supposition is correct. We\u2019re in the process of rebuilding the core of ROS 1 Kinetic and will fan out from there once we\u2019re sure that everything is working well. The newly built binaries are going into a new apt repo that will be made available when it\u2019s ready for public consumption.", "We took that machine offline and are in the process of deploying a new farm, with the known exploit patched.", "For those of us running private instances (but perhaps publicly accessible): could you provide a link to a CVE ID or other information about the specific exploit?", "The newly built binaries are going into a new apt repo that will be made available when it\u2019s ready for public consumption.", "Excellent. The new key is C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654, correct? Let us know if we can help update docs once the repo is ready.", "For those of us running private instances (but perhaps publicly accessible): could you provide a link to a CVE ID or other information about the specific exploit?", "We believe that the infiltration point was via this vulnerability in the Jenkins Groovy Plugin:", "All Jenkins users should update their Groovy Plugin to patch that exploit.", "Excellent. The new key is C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654, correct? Let us know if we can help update docs once the repo is ready.", "That\u2019s correct, and we\u2019ll definitely take you up on the kind offer for help! But I\u2019d advise against updating anything just yet while things are in flight.", "We are continuing to investigate the compromise of ", ", including working with independent third-party security experts. We\u2019ll report back here as we learn more from them. So far we have no indication that the intrusion was anything more than a commodity attack by a group looking to hijack CPU cycles. But we are unlikely to ever be able to completely rule out malicious interference in the ROS binary packaging pipeline. So in an abundance of caution we are (i) continuing to rebuild everything that we reasonably can and (ii) relocating the rest.", "These changes are coming Thursday or Friday (2019-06-06 or 2019-06-07) this week.", "We are currently working on full rebuilds of Indigo, Kinetic, Lunar, and Melodic across all architectures on their supported Ubuntu Long Term Support distributions. We expect to have these builds completed by Thursday and available on ", ".", "As we fill them in, ", ". The packages will comprise currently supported ROS distributions (plus Indigo) and only on their respective Ubuntu LTS platform. Debian Stretch packages for Lunar and Melodic will become available some time later.", "Packages for the unsupported ROS distributions will be moved to ", ". Those package indexes will be resigned with a GPG key used specifically for the ", " host (this was always a different key from the one used for ", "). But ", " Users should make their own risk assessments regarding whether to use those packages (including the risk of using unsupported software in the first place).", "We are currently hoping to make these packages available on ", " tomorrow or Wednesday (2019-06-04 or 2019-06-05) so that there is no time when they are completely unavailable but if we have to make a choice between making unsupported packages temporarily unavailable or delaying the deployment of the newly built ROS packages, we\u2019ll choose to deploy the newly built packages.", "While we\u2019re making these changes to our repository structure we\u2019re also taking the opportunity to rename the testing repository which has been carrying the name \u201cros-shadow-fixed\u201d to avoid breaking anyone using it. The new name will be \u201cros-testing\u201d to match the \u201cros2-testing\u201d repository already available.", "  Everyone who installs ROS packages from ", " You can do it right now!", " Exact time to be determined, but not later than Friday this week (2019-06-07)", "\nSet up the new repository key", " Everyone.", "  After the ROS repositories have been redeployed with the new signing key. Exact time to be determined, but not later than Friday this week (2019-06-07)", " You should remove it as soon as the ROS repositories are redeployed. Leaving the key trusted won\u2019t cause anything to break but we won\u2019t be using the key to sign anything new in the future so leaving it just leaves you open to possible misuse in the future.", "\nRemove the key from your apt keyring", " Anyone who needs to access ROS distributions other than Indigo, Kinetic, Lunar, and Melodic or the Debian Jessie packages for Kinetic", " I\u2019ll update everyone here when I\u2019ve created snapshots for all the old ROS releases. After that announcement you can switch to the snapshot repositories.", " After the ROS repositories have been redeployed with the new signing key. Exact time to be determined, but not later than Friday this week (2019-06-07)", "We\u2019re making some changes to the snapshots repository layouts to support this. I am waiting to add docs until I know they\u2019ll be accurate. In brief the steps will be", " Anyone who is currently using the ", " repository to test ROS packages before a sync.", " After the ROS repositories have been redeployed with the new signing key. Exact time to be determined, but not later than Friday this week (2019-06-07)", " Once the deployment is complete, the shadow-fixed repository will be purged of release contents and you\u2019ll see an error message when updating apt repositories until you update the repository url.", "Check your ", " and ", " for ", " and replace it with ", "Let us know if we can help update docs once the repo is ready.", "This is definitely help we\u2019ll need going into the weekend. I\u2019ve opened ", " to track documentation that will need updating after the changes above.", "Just adding this as I don\u2019t see it mentioned anywhere: anyone who is building custom Docker images (or using any other sort of containerisation technology) and does ", " start from any of the official ", " or ", " images will also have to update their ", "s (or whatever it is called for the tool you are using) to use / import the new keys.", "Also don\u2019t forget to update your ", " / ", " etc. files if they contain the string ", " or ", ".", "The Snapshots repository now has ", " snapshots of all unsupported ROS distributions and distributions with unsupported platforms (i.e. Kinetic on Jessie) with the exception of Indigo on Trusty which is being rebuilt and will therefore be on ", " for a while longer as well as having a final snapshot made when it\u2019s done.", "If you\u2019re using one of these unsupported rosdistros. I\u2019d recommend updating your repositories now so you can let us know if you run into any difficulties. We are still on track to sync the updated repositories this Friday (2019-06-07).", "Information on using the snapshot repository can be found on the ROS wiki ", "Wouldn\u2019t this be a great candidate to feature on the ", " also? There may be a great set of users from old times that may not be regularly checking the discourse threads\u2026", "Thank you for your hard work guys!", "We have rebuilt all debian packages for indigo, kinetic, lunar, and melodic. And the packages have been redeployed with the updated GPG key to ", " see the announcement: ", "We have rebuilt all debian packages for indigo, kinetic, lunar, and melodic.", "That is great news.", "I\u2019d like to take this chance to extend a ", " to my colleagues who moved heaven and earth over the past week and a half to respond to this security compromise and get our systems back into a healthy state for the entire community. In particular, ", ", ", ", and ", " put in many many hours over nights and through the weekend, so cheers to them!", "Also a big thanks to ", " and his colleagues at AWS who helped along the way with diagnosis and mitigation of the initial problem and planning for the redeployment, and also served as our early testers of the outputs from the new farm.", "And thank you to everyone in the community for your patience and support as we\u2019ve worked through an unfortunate incident.", "Here a jenkins security advice: ", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Signing key used for the primary ROS repositories will change.", "Packages for unsupported rosdistros will move to ", ".", "The testing repository is being relocated to ", " from ", ".", "Add the ROS Snapshots repository key (different from the key above)", "Add the snapshot repository for your target ROS distribution"], "url": "https://discourse.ros.org/t/security-issue-on-ros-build-farm/9342"},
{"title": "New Software Release - Py Trees", "thread_contents": [" and ", " were developed and used on robots at field tests around the world over the course of the last couple of years for Yujin Robot. I\u2019m happy to announce that they\u2019re now document complete with a great list of tutorials and ready to be consumed! A brief list of features:", "As you can probably infer, there was a focus on making sure we could easily debug problems, especially when they occurred at a remote test site without an engineer (the replay tool especially was very useful). On the other hand, a graphical designer frontend was not prioritised and never eventuated - scripting a python tree remained simple and flexible enough to suit our needs. We also had the trees pass a litmus test of being able to pass the work of building robot-specific behaviours and trees off to interns. It took three iterations of the core libraries to pass that point, but since then there has been negligible change in the core libraries.", "Additionally, the trees started being used beyond the scenarios they were originally designed for. The control engineers started shifting all non-reactive control logic to the trees - it was just easier to follow patterns already implemented and to make use of the bagging/visualisation/replay tools, e.g. implementing an entire subtree for initialisation from a composition of context switches (small dyn. reconfigure changes), enabling/disabling of sensors and simple motions instead of having a separate c++ or python node that would handle the entire process as a custom state machine inside an action. Also, as the logic accumulated in the trees, the data to support it also centralised there, and it eventually became the natural portal point between robot and server/web applications.", "All the py_trees packages (py_trees, py_trees_ros, py_trees_msgs, rqt_py_trees) are on the ros build farm and repository details on the ros wiki. You can also use the py_trees package itself directly from pip as a pure python module.", "Get started at the ", ". If you just want a quick glimpse of how they can be use in ROS, jump directly to the ", ".", "This is an awesome piece of software and I\u2019m looking forward to trying it.", "There are a couple of other implementations of behaviour trees floating around in ", ", one from ", " and one from ", ". Is there enough interest in trying to unify some of the messages and interfaces so these libraries (especially the tools) can be used together?", "Aye, there\u2019s a few floating around. Perhaps I can throw in a bit of a summary. Authors please feel free to embellish/correct me if I get something wrong!", "Pat Goebel had the closest thing to what we needed with his pi trees. He was using it for his textbook and while it was a nice start, it was not as comprehensive as we would have liked. I also wanted to build it around python generators, so had a chat with him and decided to take inspiration from what he had and move it forward with py_trees.", " was already starting work on his when we started, but there wasn\u2019t much in his repo yet, and was in c++ targeting robot control. A bit orthogonal to our needs.", " looks great, and honestly I never did try it. At the time I was caught in the whiplash of trying to use SMACH to control the entire robot (which it really isn\u2019t designed for) and was not keen to try another ", " framework. Behaviour trees have worked for games and it seemed prudent to give that a good run before using or reinventing yet another framework. We were more than pleased with the result.", "Alison from TRI also recently started a python behaviour trees framework (I am not sure if it is open yet). It doesn\u2019t yet have as many bells and whistles, but it was reassuring to find that she ended up making a few similar decisions along the way. That one might be worth integrating with if it is (or will be) open.", "I am glade to see that behavior trees are becoming popular.", "With my implementation (that I haven\u2019t officially released to the ROS community) I tried to put together the best of C++ and runtime configuration, rather than compile time hard-coding.", "\nAdditionally, I am trying to create a core implementation that has no ROS dependencies and a ROS wrapper around it.", "I was planning to propose a presentation for Roscon 2017, but I didn\u2019t make it; my fault for being late ", "This thread reminded me: is ", " related to anything here?", "I\u2019m not trying to hijack this thread (very nice release ", "), I\u2019m actually interested to see whether fi we could do something with the editor and multi-agent parts of behavior3.", "Apparently the editor serialises trees to a JSON format. I don\u2019t know if that is something that could be used to programmatically construct trees ", "?", "I have my own editor that is very similar to theirs, even if it is written in C++/Qt.", "\nIn terms of common format, their format has some data and metadata missing, IMHO.", "multi-agent parts of behavior3", "Gaming is really focused on this aspect of behaviour trees because they are trying to control hundreds, if not thousands of npc characters that all interact with each other. This leads to all kinds of wonderful multi-tree co-ordination techniques and parallelising optimisations to make sure that it remains manageable and latency stays low.", "If you\u2019re just looking to co-ordinate a single robot\u2019s behaviour though, this is a non-issue and greatly simplifies the behaviour tree implementation. There is just one agent and the complexity is typically only in the order of hundreds of behaviours. No parallelisation nor multi-agent co-ordination is required. If you\u2019re starting to consider thousands of behaviours, or looking for a higher level robot fleet co-ordinator with an extreme number of robots, then you might start thinking about behaviour trees ala professional gaming considerations. I mention this briefly ", ".", "If your use case is instead to handle a few or few tens of robots, I do not think anything special is required. Any behaviour trees implementation (incl. py_trees and ", ") could easily do so with a few simple mechanisms that fit whatever use case they have and the variety here is quite considerable. e.g. if behaviour3 has the implementation described in their ", " then it has a rather special means of decorating a synchronisation that fits their use case.", "My own two cents, I think people try to over-coordinate at this level - I much prefer keeping it very simple and adding as much autonomy to the robots themselves so they can engage and interact robustly without a hive mind instructing them every step of the way. Given that multiple robots are at the mercy of wireless communications this is an imperative consideration.", "Apparently the editor serialises trees to a JSON format. I don\u2019t know if that is something that could be used to programmatically construct trees ", "?", "The ", " format has string based key-value dictionary types that could be used to store esoteric information that the py_trees serialisations have. That means a converter or loader should be trivial. Having said that, it probably wouldn\u2019t be that useful since you\u2019d have to manually plug all of this information in (i.e. you lose the benefit of the gui) and can\u2019t properly visualise it. py_trees dot graph visualisations of a python ", " function are just as good (latex style workflow). The editor though might have ways of extending its functionality, or could probably be forked and hacked on directly as a good starting point. For us though, this starts to sound like a great deal of work with little benefit over the py_trees dot graph generator approach (which also happens to fit neatly into a CI workflow to generate graphs of your tree/subtree/behaviour library).", "I do like how behaviour3 has focused on a serialisable format and used that as a focus for multi-language implementation. I would like at some point to write a c++ version of py_trees, but I doubt it would be the right thing to do - a c++ version should have requirements that would enable it to meet \u2018gaming\u2019 considerations, especially that of low latency. Similar scripting implementations of py_trees would be a nice thing though.", "You are most probably right about the fact that a single robot doesn\u2019t need a low latency, low overhead implementation.", "\nI am happy to admit that I implemented my own version because I prefer C++ over Python.", "\nTo be fair, a lot of design tradeoff and complexity come from the fact that I want to create the tree at run-time, instead of compilation time, using a definition stored in a XML (could be JSON or whatever).", "\nThis would be a non-issue on Python.", "NEVERTHELESS:", "I am not trying to make a point here, simply to say that it feels easier for me to do everything in a single language.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["All the bells and whistles\u2019 you\u2019d expect from a comprehensive behaviour tree library", "Assemble trees in relatively simple and short python scripts", "Additional ROS behaviours for common ROS operations (subscriber, move_base, \u2026)", "A ROS behaviour tree manager with status publisher for connection to an rqt monitoring plugin", "Automatic bagging of the tree status when it changes", "Replay bags in the rqt monitoring program to identify problems", "Simple to mock with a robot layer for debugging, testing on CI and as a rapid simulation for use with web application development.", "I have strong feelings about having a BehaviorTree core library with NO ROS dependencies. NONE at all. ROS can be used seamlessly, though.", "Since all my Actions are written in C++, the only way to interact with Python would be through IPC, ROS services/topics, or Python/C++ wrappers. It feels more natural for ME to do everything in C++.", "The infamous BT blackboard would be harder to use in a Python/C++ mixed environment."], "url": "https://discourse.ros.org/t/new-software-release-py-trees/2046"},
{"title": "Call for Chapter Springer Book on ROS Volume 3 (Deadline 15 September 2017)", "thread_contents": ["Springer Book on Robot Operating System (ROS) Volume 1 [", "] is in the list of top 25% of most downloadable books on Springer according to their official statistics.", "New Submission Deadline of Full Chapter: 15 September 2017", "After the success of the Springer Book on ROS (Volume 1) with 27 chapters, and Springer Book on ROS (Volume 2) with 19 chapters, this is a third call for chapters for a Springer book on Robot Operating System (ROS). The objective of the third volume is to provide the reader with comprehensive references on the Robot Operating System (ROS), which is currently considered as the main development framework for robotics applications.", "ROS (Robot Operating System) has been developed by Willow Garage and Stanford University as a part of STAIR project as a free and open-source robotic middleware for the large-scale development of complex robotic systems. ROS acts as a meta-operating system for robots as it provides hardware abstraction, low-level device control, inter-processes message-passing and package management. It also provides tools and libraries for obtaining, building, writing, and running code across multiple computers.", "The main advantage of ROS is that it allows manipulating sensor data of the robot as a labeled abstract data stream, called topic, without having to deal with hardware drivers. This book intends to fill the gap and to provide ROS users (academia and industry) with a comprehensive coverage on Robot Operating System concepts and applications. It will cover several topics ranging from basics and foundation to advanced research papers. Tutorial, survey and original research papers will be sought. The book will cover several areas related to robot development using ROS including but not limited to robot navigation, UAVs, arm manipulation, multi-robot communication protocols, Web and mobile interfaces using ROS, integration of new robotic platform to ROS, computer vision applications, development of service robots using ROS, development of new libraries and packages for ROS, using ROS in education, etc. Every book chapter should be accompanied with a working code to be put later in a common repository for the readers.", "Editor:Anis Koubaa, Full Professor, PhD", "\nAffiliation:Prince Sultan University (Saudi Arabia)/CISTER Research Center (Portugal)/Gaitech Robotics (China)", "\n", "\nBio:Anis Koubaa is a Professor in Computer Science in Prince Sultan University (Saudi Arabia), a Research Associate in CISTER Research Unit (Portugal), and consultant at Gaitech Robotics (China). He has been leading several research projects on robotics and Internet of Things, and in particular integartion of ROS into the IoT. He is the director of the Robotics and Internet of Things Unit (RIOTU) at Prince Sultan University. He is the chair of the ACM Chapter in Saudi Arabia amd a Senior Fellow of the Higher Education Academy (SF-HEA) from the United Kingdom. Prof. Anis is the editor of several books, and author and co-author of more than 160 publications. He is the Editor-in-Chief of the Robotics Software Engineering topic of the International Journal of Advanced Robotics Systems (IJARS). Prof. Anis contributed with the design and development of the first cloud-based system for controlling and monitoring of drones over the Internet, called Dronemap Planner. His h-index is 30.", "This book is expected to be published by April of 2018 by Springer. It will appear under the Studies in Computational Intelligence series. For additional information and guidelines regarding the publisher, please visit ", "Regarding Indexing, the book will be indexed by Scopus and will be submitted for indexing to ISI Books, and DBLP.", " ", "\nChapter Acceptance Notification: ", "\nRevised Version Due Date: January 15, 2018", "\nRevised Chapter Acceptance Notification: February 15, 2018", "\nEstimated Publication Date: June 2018", "Any contribution that provides an added value to Robot Operating System (ROS) is of interest for the book. The topics of interest include \u2013 but not limited to- the following:", "\nROS 2.0 Tutorials", "\nROS Basics and Foundations", "\nRobot Control and Navigation", "\nSelf-driving cars using ROS", "\nArm Manipulation", "\nRobot Perception", "\nROS Integration to Web and Mobile apps", "\nReal-World Application Deployment using ROS", "\nUsing ROS in Higher Education", "\nContributed ROS Packages", "\nUnmanned Aerial Vehicles Control and Navigation", "\nSoftware Archiectures using ROS", "\nROS-enabled Robot Design", "\nThis volume welcome chapters about the upcoming version ROS 2.0, including tutorials, comparisong with ROS 1.0, new features in ROS 2.0.", "Also, papers related to using ROS for umanned aerial vehicles are particularly welcome.", "The book will accept three categories of chapters:", "Tutorial chapter: it focuses on a particular ROS concept or contributed package and provides a step-by-step tutorial that explains the fundamental of the concepts/packages and presents detailed guidelines on how to use the contributed code. It must specify the ROS versions that are compatible with the tutorial code, and must provide illustration with figures and code interpretations. The code must be available to public in a share repository (to be announced later). Accompanying Video tutorials are highly recommended.", "Research chapter: it presents a research technical contribution in the robotics area where ROS was used to validate the findings. The chapter must presents a sufficient material on the technical contribution in addition to necessary theoretical background, but a major focus should be made to ROS implementation and experimentation. The implementation and experimentation must be sufficiently detailed for a reader be able to reproduce the experiments. It must specify the ROS versions that are compatible with the tutorial code, and must provide illustration with figures and code interpretations. The code must be available to public in a share repository (to be announced later). Accompanying Video tutorials are highly recommended.", "Case study chapter: a case study chapter should present a real-world experimentation with ROS on particular robotics platform. It should present a detailed description of observations made during experiments, and what are the challenges encountered during development and experimentation. The chapter should also highlight the best practices that would facilitate deployment and the lessons learnt.", "\nThis volume welcome chapters about the upcoming version ROS 2.0, including tutorials, comparisong with ROS 1.0, new features in ROS 2.0. Also, hot topics papers related to using ROS for umanned aerial vehicles and self-driving cars are particularly welcome.", "Researchers and practitioners are invited to submit full chapters by September 15, 2017 through EasyChair system. The Chapter should not exceed 50 pages with respect to Springer format. All submitted chapters will be reviewed on a single-blind review basis. Contributors may also be requested to serve as reviewers for this project.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/call-for-chapter-springer-book-on-ros-volume-3-deadline-15-september-2017/2494"},
{"title": "[Reminder] 3 days left - Call for chapters: SPRINGER BOOK ROBOT OPERATING SYSTEM (ROS) THE COMPLETE REFERENCE (VOLUME 3)", "thread_contents": ["More details are in: ", "OBJECTIVES", "\nAfter the success of the Springer Book on ROS (Volume 1) with 27 chapters, and Springer Book on ROS (Volume 2) with 19 chapters, this is a third call for chapters for a Springer book on Robot Operating System (ROS). The objective of the third volume is to provide the reader with comprehensive references on the Robot Operating System (ROS), which is currently considered as the main development framework for robotics applications.", "ROS (Robot Operating System) has been developed by Willow Garage and Stanford University as a part of STAIR project as a free and open-source robotic middleware for the large-scale development of complex robotic systems. ROS acts as a meta-operating system for robots as it provides hardware abstraction, low-level device control, inter-processes message-passing and package management. It also provides tools and libraries for obtaining, building, writing, and running code across multiple computers.", "The main advantage of ROS is that it allows manipulating sensor data of the robot as a labeled abstract data stream, called topic, without having to deal with hardware drivers. This book intends to fill the gap and to provide ROS users (academia and industry) with a comprehensive coverage on Robot Operating System concepts and applications. It will cover several topics ranging from basics and foundation to advanced research papers. Tutorial, survey and original research papers will be sought. The book will cover several areas related to robot development using ROS including but not limited to robot navigation, UAVs, arm manipulation, multi-robot communication protocols, Web and mobile interfaces using ROS, integration of new robotic platform to ROS, computer vision applications, development of service robots using ROS, development of new libraries and packages for ROS, using ROS in education, etc. Every book chapter should be accompanied with a working code to be put later in a common repository for the readers.", "EDITOR", "\nEditor:Anis Koubaa, Full Professor, PhD", "\nAffiliation:Prince Sultan University (Saudi Arabia)/CISTER Research Center (Portugal)/Gaitech Robotics (China)", "\n", "\nBio:Anis Koubaa is a Professor in Computer Science in Prince Sultan University (Saudi Arabia), a Research Associate in CISTER Research Unit (Portugal), and consultant at Gaitech Robotics (China). He has been leading several research projects on robotics and Internet of Things, and in particular integartion of ROS into the IoT. He is the director of the Robotics and Internet of Things Unit (RIOTU) at Prince Sultan University. He is the chair of the ACM Chapter in Saudi Arabia amd a Senior Fellow of the Higher Education Academy (SF-HEA) from the United Kingdom. Prof. Anis is the editor of several books, and author and co-author of more than 160 publications. He is the Editor-in-Chief of the Robotics Software Engineering topic of the International Journal of Advanced Robotics Systems (IJARS). Prof. Anis contributed with the design and development of the first cloud-based system for controlling and monitoring of drones over the Internet, called Dronemap Planner. His h-index is 30.", "\nPUBLISHER AND INDEXING", "\nThis book is expected to be published by April of 2018 by Springer. It will appear under the Studies in Computational Intelligence series. For additional information and guidelines regarding the publisher, please visit ", "Regarding Indexing, the book will be indexed by Scopus and will be submitted for indexing to ISI Books, and DBLP.", "DUE DATES", "\nAbstract Submission: June 15, 2017", "\nFull Chapters Due: August 15, 2017", "\nChapter Acceptance Notification: October 15, 2017", "\nRevised Version Due Date: November 15, 2017", "\nRevised Chapter Acceptance Notification: December 15, 2017", "\nEstimated Publication Date: April 2018", "\nTOPICS OF INTEREST", "\nAny contribution that provides an added value to Robot Operating System (ROS) is of interest for the book. The topics of interest include \u2013 but not limited to- the following:", "\nROS 2.0 Tutorials", "\nROS Basics and Foundations", "\nRobot Control and Navigation", "\nSelf-driving cars using ROS", "\nArm Manipulation", "\nRobot Perception", "\nROS Integration to Web and Mobile apps", "\nReal-World Application Deployment using ROS", "\nUsing ROS in Higher Education", "\nContributed ROS Packages", "\nUnmanned Aerial Vehicles Control and Navigation", "\nSoftware Archiectures using ROS", "\nROS-enabled Robot Design", "\nThis volume welcome chapters about the upcoming version ROS 2.0, including tutorials, comparisong with ROS 1.0, new features in ROS 2.0.", "Also, papers related to using ROS for umanned aerial vehicles are particularly welcome.", "CHAPTERS CATEGORIES", "\nThe book will accept three categories of chapters:", "\nTutorial chapter: it focuses on a particular ROS concept or contributed package and provides a step-by-step tutorial that explains the fundamental of the concepts/packages and presents detailed guidelines on how to use the contributed code. It must specify the ROS versions that are compatible with the tutorial code, and must provide illustration with figures and code interpretations. The code must be available to public in a share repository (to be announced later). Accompanying Video tutorials are highly recommended.", "\nResearch chapter: it presents a research technical contribution in the robotics area where ROS was used to validate the findings. The chapter must presents a sufficient material on the technical contribution in addition to necessary theoretical background, but a major focus should be made to ROS implementation and experimentation. The implementation and experimentation must be sufficiently detailed for a reader be able to reproduce the experiments. It must specify the ROS versions that are compatible with the tutorial code, and must provide illustration with figures and code interpretations. The code must be available to public in a share repository (to be announced later). Accompanying Video tutorials are highly recommended.", "\nCase study chapter: a case study chapter should present a real-world experimentation with ROS on particular robotics platform. It should present a detailed description of observations made during experiments, and what are the challenges encountered during development and experimentation. The chapter should also highlight the best practices that would facilitate deployment and the lessons learnt.", "\nThis volume welcome chapters about the upcoming version ROS 2.0, including tutorials, comparisong with ROS 1.0, new features in ROS 2.0. Also, hot topics papers related to using ROS for umanned aerial vehicles and self-driving cars are particularly welcome.", "SUBMISSION PROCEDURE", "\nResearchers and practitioners are invited to submit a 1-3 page chapter proposal clearly explaining the mission and concerns of the proposed chapter. This helps as a registration of the chapter for the final submission. Submission of abstracts must be done through EasyChair system Authors of accepted proposals will be notified about the status of their proposals and sent chapter guidelines. Full chapters must be submitted by August 15, 2017 through EasyChair system. The Chapter should not exceed 50 pages with respect to Springer format. All submitted chapters will be reviewed on a single-blind review basis. Contributors may also be requested to serve as reviewers for this project.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/reminder-3-days-left-call-for-chapters-springer-book-robot-operating-system-ros-the-complete-reference-volume-3/1940"},
{"title": "Reminder: Call for Chapter Springer Book on ROS Volume 3 (Deadline 15 September 2017)", "thread_contents": ["Springer Book on Robot Operating System (ROS) Volume 1 [", "] is in the list of top 25% of most downloadable books on Springer according to their official statistics.", "New Submission Deadline of Full Chapter: 15 September 2017", "After the success of the Springer Book on ROS (Volume 1) with 27 chapters, and Springer Book on ROS (Volume 2) with 19 chapters, this is a third call for chapters for a Springer book on Robot Operating System (ROS). The objective of the third volume is to provide the reader with comprehensive references on the Robot Operating System (ROS), which is currently considered as the main development framework for robotics applications.", "ROS (Robot Operating System) has been developed by Willow Garage and Stanford University as a part of STAIR project as a free and open-source robotic middleware for the large-scale development of complex robotic systems. ROS acts as a meta-operating system for robots as it provides hardware abstraction, low-level device control, inter-processes message-passing and package management. It also provides tools and libraries for obtaining, building, writing, and running code across multiple computers.", "The main advantage of ROS is that it allows manipulating sensor data of the robot as a labeled abstract data stream, called topic, without having to deal with hardware drivers. This book intends to fill the gap and to provide ROS users (academia and industry) with a comprehensive coverage on Robot Operating System concepts and applications. It will cover several topics ranging from basics and foundation to advanced research papers. Tutorial, survey and original research papers will be sought. The book will cover several areas related to robot development using ROS including but not limited to robot navigation, UAVs, arm manipulation, multi-robot communication protocols, Web and mobile interfaces using ROS, integration of new robotic platform to ROS, computer vision applications, development of service robots using ROS, development of new libraries and packages for ROS, using ROS in education, etc. Every book chapter should be accompanied with a working code to be put later in a common repository for the readers.", "Editor:Anis Koubaa, Full Professor, PhD", "\nAffiliation:Prince Sultan University (Saudi Arabia)/CISTER Research Center (Portugal)/Gaitech Robotics (China)", "\n", "\nBio:Anis Koubaa is a Professor in Computer Science in Prince Sultan University (Saudi Arabia), a Research Associate in CISTER Research Unit (Portugal), and consultant at Gaitech Robotics (China). He has been leading several research projects on robotics and Internet of Things, and in particular integartion of ROS into the IoT. He is the director of the Robotics and Internet of Things Unit (RIOTU) at Prince Sultan University. He is the chair of the ACM Chapter in Saudi Arabia amd a Senior Fellow of the Higher Education Academy (SF-HEA) from the United Kingdom. Prof. Anis is the editor of several books, and author and co-author of more than 160 publications. He is the Editor-in-Chief of the Robotics Software Engineering topic of the International Journal of Advanced Robotics Systems (IJARS). Prof. Anis contributed with the design and development of the first cloud-based system for controlling and monitoring of drones over the Internet, called Dronemap Planner. His h-index is 30.", "This book is expected to be published by April of 2018 by Springer. It will appear under the Studies in Computational Intelligence series. For additional information and guidelines regarding the publisher, please visit ", "Regarding Indexing, the book will be indexed by Scopus and will be submitted for indexing to ISI Books, and DBLP.", " ", "\nChapter Acceptance Notification: ", "\nRevised Version Due Date: January 15, 2018", "\nRevised Chapter Acceptance Notification: February 15, 2018", "\nEstimated Publication Date: June 2018", "Any contribution that provides an added value to Robot Operating System (ROS) is of interest for the book. The topics of interest include \u2013 but not limited to- the following:", "\nROS 2.0 Tutorials", "\nROS Basics and Foundations", "\nRobot Control and Navigation", "\nSelf-driving cars using ROS", "\nArm Manipulation", "\nRobot Perception", "\nROS Integration to Web and Mobile apps", "\nReal-World Application Deployment using ROS", "\nUsing ROS in Higher Education", "\nContributed ROS Packages", "\nUnmanned Aerial Vehicles Control and Navigation", "\nSoftware Archiectures using ROS", "\nROS-enabled Robot Design", "\nThis volume welcome chapters about the upcoming version ROS 2.0, including tutorials, comparisong with ROS 1.0, new features in ROS 2.0.", "Also, papers related to using ROS for umanned aerial vehicles are particularly welcome.", "The book will accept three categories of chapters:", "Tutorial chapter: it focuses on a particular ROS concept or contributed package and provides a step-by-step tutorial that explains the fundamental of the concepts/packages and presents detailed guidelines on how to use the contributed code. It must specify the ROS versions that are compatible with the tutorial code, and must provide illustration with figures and code interpretations. The code must be available to public in a share repository (to be announced later). Accompanying Video tutorials are highly recommended.", "Research chapter: it presents a research technical contribution in the robotics area where ROS was used to validate the findings. The chapter must presents a sufficient material on the technical contribution in addition to necessary theoretical background, but a major focus should be made to ROS implementation and experimentation. The implementation and experimentation must be sufficiently detailed for a reader be able to reproduce the experiments. It must specify the ROS versions that are compatible with the tutorial code, and must provide illustration with figures and code interpretations. The code must be available to public in a share repository (to be announced later). Accompanying Video tutorials are highly recommended.", "Case study chapter: a case study chapter should present a real-world experimentation with ROS on particular robotics platform. It should present a detailed description of observations made during experiments, and what are the challenges encountered during development and experimentation. The chapter should also highlight the best practices that would facilitate deployment and the lessons learnt.", "\nThis volume welcome chapters about the upcoming version ROS 2.0, including tutorials, comparisong with ROS 1.0, new features in ROS 2.0. Also, hot topics papers related to using ROS for umanned aerial vehicles and self-driving cars are particularly welcome.", "Researchers and practitioners are invited to submit full chapters by September 15, 2017 through EasyChair system. The Chapter should not exceed 50 pages with respect to Springer format. All submitted chapters will be reviewed on a single-blind review basis. Contributors may also be requested to serve as reviewers for this project.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/reminder-call-for-chapter-springer-book-on-ros-volume-3-deadline-15-september-2017/2617"},
{"title": "Announcing imagezero_transport, a fast, lossless image transport plugin", "thread_contents": [" is a lossless, very fast compression algorithm for 24-bit color photographic images.  Its compression ratio is comparable to PNG, but it compresses over twenty times faster and decompresses almost twice as fast.", "I\u2019ve made a new ROS stack that makes it easy to use ImageZero as a transport mechanism for any ROS topics that are already using the ", " mechanism.  It\u2019s available on GitHub at ", ", and it has been successfully built in the ROS Shadow repository, so it should be available in the next releases of ROS Indigo, Jade, and Kinetic. The ", " stack provides three packages:", "For a little bit of backstory and a use case, I\u2019m working on a system that is doing image processing on 10 Hz video feeds coming from stereo cameras connected to one computer than is publishing the video across a network as ROS Image topics.  The uncompressed image data was 
ing over 400 Mbps of bandwidth by itself, which was enough to choke other services on the 1 Gbps network.  We looked at using the built-in JPG and PNG image transports, but JPG was unsuitable for our image processing algorithms because it\u2019s lossy and PNG was unusable because it is so CPU-intensive that the host computer\u2019s processor could not compress the image stream in real time.", "After searching around for a while for image compression algorithms, I found ImageZero, which suits our needs perfectly.  It\u2019s lossless, designed explicitly for 24-bit color natural photography, and fast enough that our processors can easily do it on a real-time video feed.  The bandwidth from our cameras is now down to about 150 Mbps.", "P. J. Reed, Senior Research Analyst", "\n(210) 522-6948", "\n", "\n", "Cool ", ".", "It might be worth adding a note on the ", " wiki page which points out there are other options for compression like this one:", "Feel free to add a pointer to your documentation.", "It might also make sense to add a tutorial on how to use your transport:", "It would probably fit in nicely with the tutorial about adding a new transport type.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", ": The original ImageZero algorithm built as a shared library using catkin", "\n", ": A shared library that provides convenience methods for converting between ", " and ", " messages using ImageZero", "\n", ": A plugin for the ROS ", " package which adds an ", " sub-topic to ImageTransport topics that can be used to transparently use ImageZero to compress your images"], "url": "https://discourse.ros.org/t/announcing-imagezero-transport-a-fast-lossless-image-transport-plugin/628"},
{"title": "[Reminder] Call for Chapter Spring Book on ROS (Volume 4)", "thread_contents": ["SPRINGER BOOK", "\nROBOT OPERATING SYSTEM (ROS)", "\nTHE COMPLETE REFERENCE (VOLUME 4)", "Website: ", "Please follow the Guidelines for Editing the Book Chapter. Get the whole (ZIP Package)", "\nOBJECTIVES", "\nAfter the success of the Springer Book on ROS (Volume 1) with 27 chapters, Springer Book on ROS (Volume 2) with 19 chapters, and Springer Book on ROS (Volume 3), this is a fourth call for chapters for a Springer book on Robot Operating System (ROS) (Volume 4). The objective of the fourth volume is to provide the reader with comprehensive references on the Robot Operating System (ROS), which is currently considered as the main development framework for robotics applications.", "ROS (Robot Operating System) has been developed by Willow Garage and Stanford University as a part of STAIR project as a free and open-source robotic middleware for the large-scale development of complex robotic systems. ROS acts as a meta-operating system for robots as it provides hardware abstraction, low-level device control, inter-processes message-passing and package management. It also provides tools and libraries for obtaining, building, writing, and running code across multiple computers.", "The main advantage of ROS is that it allows manipulating sensor data of the robot as a labeled abstract data stream, called topic, without having to deal with hardware drivers. This book intends to fill the gap and to provide ROS users (academia and industry) with a comprehensive coverage on Robot Operating System concepts and applications. It will cover several topics ranging from basics and foundation to advanced research papers. Tutorial, survey and original research papers will be sought. The book will cover several areas related to robot development using ROS including but not limited to robot navigation, UAVs, arm manipulation, multi-robot communication protocols, Web and mobile interfaces using ROS, integration of new robotic platform to ROS, computer vision applications, development of service robots using ROS, development of new libraries and packages for ROS, using ROS in education, etc. Every book chapter should be accompanied with a working code to be put later in a common repository for the readers.", "EDITOR", "\nEditor:Anis Koubaa, Professor, PhD", "\nAffiliation:Prince Sultan University (Saudi Arabia)/CISTER Research Center (Portugal)/Gaitech Robotics (China)", "\nContact:akoubaa@psu.edu.sa", "\nBio:Anis Koubaa is a Professor in Computer Science in Prince Sultan University (Saudi Arabia), a Research Associate in CISTER Research Unit (Portugal), and consultant at Gaitech Robotics (China). He has been leading several research projects on robotics and Internet of Things, and in particular integartion of ROS into the IoT. He is the director of the Robotics and Internet of Things Unit (RIOTU) at Prince Sultan University. He is the chair of the ACM Chapter in Saudi Arabia amd a Senior Fellow of the Higher Education Academy (SF-HEA) from the United Kingdom. Prof. Anis is the editor of several books, and author and co-author of more than 160 publications. He is the Editor-in-Chief of the Robotics Software Engineering topic of the International Journal of Advanced Robotics Systems (IJARS). Prof. Anis contributed with the design and development of the first cloud-based system for controlling and monitoring of drones over the Internet, called Dronemap Planner. His h-index is 31.", "\nPUBLISHER AND INDEXING", "\nThis book is expected to be published by January of 2019 by Springer. It will appear under the Studies in Computational Intelligence series. For additional information and guidelines regarding the publisher, please visit ", "Regarding Indexing, the book will be indexed by Scopus and will be submitted for indexing to ISI Books, and DBLP.", "DUE DATES", "\nAbstract Submission: April 15, 2018", "\nFull Chapters Due: July 01, 2018", "\nChapter Acceptance Notification: September 01, 2018", "\nRevised Version Due Date: September 21, 2018", "\nRevised Chapter Acceptance Notification: November 01, 2018", "\nEstimated Publication Date: Januaray 2019", "\nTOPICS OF INTEREST", "\nAny contribution that provides an added value to Robot Operating System (ROS) is of interest for the book. The topics of interest include \u2013 but not limited to- the following:", "\nROS 2.0 Tutorials", "\nDeep Learning with ROS", "\nArtificial Intelligence with ROS", "\nROS Basics and Foundations", "\nRobot Control and Navigation", "\nSelf-driving cars using ROS", "\nArm Manipulation", "\nRobot Perception", "\nSecurity of ROS", "\nRobot Safety with ROS", "\nROS Integration to Web and Mobile apps", "\nReal-World Application Deployment using ROS", "\nUsing ROS in Higher Education", "\nContributed ROS Packages", "\nUnmanned Aerial Vehicles Control and Navigation", "\nSoftware Archiectures using ROS", "\nROS-enabled Robot Design", "\nThis volume welcome chapters about the upcoming version ROS 2.0, including tutorials, comparisong with ROS 1.0, new features in ROS 2.0.", "Also, papers related to using ROS for umanned aerial vehicles are particularly welcome.", "CHAPTERS CATEGORIES", "\nThe book will accept three categories of chapters:", "\nTutorial chapter: it focuses on a particular ROS concept or contributed package and provides a step-by-step tutorial that explains the fundamental of the concepts/packages and presents detailed guidelines on how to use the contributed code. It must specify the ROS versions that are compatible with the tutorial code, and must provide illustration with figures and code interpretations. The code must be available to public in a share repository (to be announced later). Accompanying Video tutorials are highly recommended.", "\nResearch chapter: it presents a research technical contribution in the robotics area where ROS was used to validate the findings. The chapter must presents a sufficient material on the technical contribution in addition to necessary theoretical background, but a major focus should be made to ROS implementation and experimentation. The implementation and experimentation must be sufficiently detailed for a reader be able to reproduce the experiments. It must specify the ROS versions that are compatible with the tutorial code, and must provide illustration with figures and code interpretations. The code must be available to public in a share repository (to be announced later). Accompanying Video tutorials are highly recommended.", "\nCase study chapter: a case study chapter should present a real-world experimentation with ROS on particular robotics platform. It should present a detailed description of observations made during experiments, and what are the challenges encountered during development and experimentation. The chapter should also highlight the best practices that would facilitate deployment and the lessons learnt.", "\nThis volume welcome chapters about the upcoming version ROS 2.0, including tutorials, comparisong with ROS 1.0, new features in ROS 2.0. Also, hot topics papers related to using ROS for umanned aerial vehicles and self-driving cars are particularly welcome.", "SUBMISSION PROCEDURE", "\nResearchers and practitioners are invited to submit a 1-3 page chapter proposal clearly explaining the mission and concerns of the proposed chapter. This helps as a registration of the chapter for the final submission. Submission of abstracts must be done through EasyChair system Authors of accepted proposals will be notified about the status of their proposals and sent chapter guidelines. Full chapters must be submitted by July 01, 2018 through EasyChair system. The Chapter should not exceed 50 pages with respect to Springer format. All submitted chapters will be reviewed on a single-blind review basis. Contributors may also be requested to serve as reviewers for this project", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/reminder-call-for-chapter-spring-book-on-ros-volume-4/4373"},
{"title": "Journals for ROS contribution", "thread_contents": ["Hello everyone!", "\nduring this year I was working on optimizing the bandwidth consumption during a web-based remote manipulation in ROS with tf2_web_republisher. The internet connection is limited here in Algeria and we couldn\u2019t perform a smooth remote manipulation on a robot, so the idea was to reduce the amount of TF sent from the manipulation server (remote site) to web client. I was able o reduce over 70% of bandwidth consumption with the same effective result as by tf2_web_republisher. I experimented my algorithm on pioneer mobile robot P3-DX and on the 07Dof robot arm Cyton_gamma_300. Now I intend to publish my results on an international review, the problem is I can not find a journal that accepts these kind of work for reviews, it\u2019s either: \u201cthere\u2019s no reviewer for ROS development\u201d or \u201cmy work is not a general contribution in robotics\u201d or \u201ca contribution on an open source tool is not useful\u201d! I would like to find an internation jounral indexed on scopus (or ISI thomson) which is not Open access and has more than five years, I know this is nonsense, but these are the criteria of my faculty. Can anyone help me please. I\u2019ll be grateful to all of you, thank you in advance!", "I\u2019d first suggest you make them clarify the reason for avoiding open access.", "I suspect it is to keep costs low but probably they are not aware of the many free open access journals out there.", "According to the director of Post-graduation service, some OA journals may accept any work and any paper just  to gain money from OA fee\u2026 which is ridiculous, because there are thousands of prestigious reviews which offer open access service!!! ", "If an IEEE conference would be enough, you can try IROS.", "Thank you for your reply but I\u2019m afraid that it has to be a publication", "Would you advice me some free open access revues on ROS? Thank you", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/journals-for-ros-contribution/3559"},
{"title": "Proposed changes to the ROS releases", "thread_contents": ["Based on the results of our recent survey (", "), as well as the download statistics that were posted last year (", "), Open Robotics is proposing some changes to the ROS release schedule that should reduce the support burden on maintainers and on Open Robotics itself.  The proposals below are roughly ordered from having the least impact to the most impact:", "Please let us know what you think about each of these proposals.", "Your Friendly ROS team", "While discussing the option of dropping the non-LTS ROS releases, we came up with a number of different things we could do.  The following is a complete list of the options we discussed, with some details of the pros and cons we see on each approach.", "Have a rolling ROS distro targeting the latest Ubuntu release (this is the option we recommend).", "Have a rolling ROS distro, targeting the latest Ubuntu LTS only.", "Have a rolling ROS distro, targeting both the latest Ubuntu non-LTS and the latest Ubuntu LTS.", "Do nothing, keep the ROS non-LTS releases as is currently being done.", "Just do a ROS LTS release every two years, with no additional infrastructure provided in-between.", "Overall I think the new plan sounds great.", "I do think, though, that the full potential of the rolling release isn\u2019t being realised. It should be seen by package maintainers as a place to shake down their packages before they go into an LTS release. While at the start of a cycle this would probably involve lots of new features being introduced and APIs broken, over time the package would stabilise and bugs would be wrung out (while still providing room for new features if desired). The reason I think this is a benefit is that it gives users of the LTS release more confidence that the software has been well used before release rather than just being the head of the repository dropped in before the release goes out. If the  wringing out happens before release then a company has to do less wringing out of their own before using the release in a product.", "To do this, I think that the rolling release plan needs two changes:", "Clearly defined guidelines for the purpose of the rolling release (providing new features while aiming to stabilise the package for the next LTS),  for feature freezes (e.g. from six months prior to the planned LTS release, only patch version bumps are allowed for packages), and for allowing a new package or package version into the rolling release (it must compile and its dependencies must be available, for a start).", "Regularly automatically built binaries available from a repository. Otherwise no one will use it and it won\u2019t get the testing it needs.", "For ROS it would also require more trust in package maintainers to obey the rules, since ROS is more distributed than something like Debian.", "The ability to have the above ", " the latest and greatest and breakiest (while still being in a release and so finding incompatibilities) is why Debian has two rolling releases, one that is intended to become the next stable and one that will probably step on your cat. I think if ROS were to add an unstable release, it wouldn\u2019t need binaries built automatically.", "I\u2019m aware that many people don\u2019t consider this approach compatible with ROS, but I think it is and that it\u2019s worth pursuing, even with the extra infrastructure development it would require.", "I think the new plan sounds good too.", "Also, on the rolling release approach, I\u2019d like to point that there is an effort on having ROS on Gentoo, which is a rolling distro. There we find already things breaking by using the very latest. And it\u2019s not that bad! ", "Overall, I think the new plan is a step forward in the right direction.", "\nOne of the things that concerns is me is by removing non-LTS Ubuntu distributions and limiting support to only one Debian version, how much automated testing are you removing in the process? What are the downstream effects of this? How does it affect downstream projects like meta-ros?", "\nOne of the hardest things to do is support and encourage a large and diverse user base. Would it make sense to have a required support/testing for the Ubuntu and Debian LTS but then have recommend support/testing for non-LTS, RHEL/Fedora, Gentoo and perhaps even Yocto/open-embedded?", "\nIn the context of the non-LTS release, can it be replaced by a prolonged beta system of the next LTS release? Or perhaps something similar to the Debian \u201ctesting\u201d branch (or the Debian testing and unstable branches as ", " described). This could serve as way for people to get the cutting edge while reducing the work to maintain.", "\nAlso having binaries is a huge benefit of the non-LTS release so please do not abandon it.", "How\u2019d the fat binary archives get system/pip dependencies resolved? Would they contain one loooong ", " command? Or by running rosdep?", "Just do a ROS LTS release every two years, with no additional infrastructure provided in-between.", "\n", "And how will deprecations work with the rolling release strategy?", "This all sounds good to me, but I definitely hear the concerns raised above with respect to non-binary releases. Fortunately, I have some ideas to solve the lack of binary packaging problem.", " and I have been working on stabilizing the ROS Gentoo prefix installation, which, in case of the new release type,  seems like a good solution. The Gentoo prefix can install itself in any existing linux system, and it can be done outside of a root environment (though not all Gentoo packages support this method, ", " has been working hard to fix the incompatible packages that are relevant to ROS).", "One can actually create binary packages with Gentoo for installation. Moreover, it\u2019s possible to host a server for your binary packages built by portage (see ", ").", "So, with a Gentoo prefix installation, we can have a community based server to build packages for your favorite robot, then host them on a community server.", "The other advantage of this rolling release is that one can freeze a copy of the ROS-Overlay (the Gentoo install\u2019s repository) by forking it, or even creating your own repo using ", ". Superflore pulls changes from rosdistro and then creates the installers for a given ros release. This is a great use case for Superflore, actually, as it could actually create these binary packages (if we write the generator script for it) and push the packages to the package server.", "Hi, it seems like the right discussion to expose something that has always been on my mind. Not about the rolling release schedule, but how these releases are developed and maintained using ", ". I\u2019m not super expert on the matter, and not seeing anyone say anything about it makes me think I might be wrong or not seeing the obvious. But hey, you never know, so here are is my concern.", "I\u2019ve always found the ROS branching-per-devel, and accepting development on those branches, philosophy kind of poor regarding guarantee new features and bug fixes in new releases. Let me explain why.", "I myself (remember, not being a super expert), found a missing feature in releases ahead that was available in previous releases. Here is the issue: ", " If you follow the issue, there was timing issue between accepting a PR and creating a branch for a new release. In fact, you can see Dirk Thomas in the end adding commits manually in order to have the feature in subsequent releases. Which I don\u2019t know for you, but to me it seems kind of awkward, right? I mean, having to cherry-pick or merge features into future releases does not sound good to me in general (there might be rare situations though). Luckily it was a not-critical thing, but what if it were? Whence my concern.", "So I wonder: Why most of ROS development don\u2019t use a unique branch, say ", " or ", " or ", ", where you mostly accept PRs for new features and bug fixes, and then tag releases from there with any of the suggested rolling schedules proposed above, (or even branch from there, if you like a release-per-branch style to cherry-pick compatible bug fixes and features into previous releases)? This way, you guarantee all new features and bug fixes will be available in every new release since they are in a single development branch. At the same time, this is a bit of a push for people to update to new releases in order to get an improved and cleaner version of the software, as well as reducing efforts for maintainers in keeping track of new code being added for new releases IMHO.", "Anyone sharing the same concern or with any reason why this is not a good practice?", "Why most of ROS development don\u2019t use a unique branch, say ", " or ", " or ", " , where you mostly accept PRs for new features and bug fixes, and then tag releases from there with any of the suggested rolling schedules proposed above, (or even branch from there, if you like a release-per-branch style to cherry-pick compatible bug fixes and features into previous releases)? This way, you guarantee all new features and bug fixes will be available in every new release since they are in a single development branch.", "Depending on the requirements for your packages your suggestion has the problem of containing \u201ccontrary\u201d goals:", "The balance between these two is the same in any software development. If you think about Linux distributions it is the same there: released distros don\u2019t get new features but only important bug fixes. The same rational applies to ", ": stability is very important and \u201cweighted higher\u201d than the availability of the latest feature.", "For more \u201cleaf\u201d packages which are not that heavily relied on the weighting would be different. And I think that is what we see also in the branching style of ROS package. Packages further on the \u201clower\u201d level (in the dependency hierarchy) and heavily used often use distro specific branches and more \u201chigher\u201d level packages often use a single master / development branch spanning multiple ROS distros.", "Thanks for your reply. I understand the point of the requirements of each package.", "aim for stability since every code change has the potential to introduce regressions", "Precisely my point, why do you need to put efforts in regression of those changes? Unless you want to be stable in all distros, which can also be potentially hard to achieve anyway, right?", "Perhaps this scheme clarifies both my concern and my suggestion:", "Currently in most of ROS repositories (comm and leaves):", "For some reason, the bug fixed C3 was accepted in ", ", but then cherry-picked/merged into ", " manually, that is, into a future release. So ", " and ", " will have a bug fixed that was manually added. But, ", " will have it only if the branching took place after C3 on ", ", otherwise it needs to be added manually too.", "My suggestion would be (release-per-branch or tags, but keeping a single line of development):", "Where C3 is still a bug fixed, and add C6 if you want, merged into a ", " release, namely ", ". These fixes do not need to be manually added to either ", " and/or ", ", since they will have them by construction.", "Correct me if I\u2019m wrong, but wouldn\u2019t the later makes it easier and safer to maintain for both comm and leaf packages? And still comply with both goals, have new features for new releases and still able to deal with regression stability?", "Side note: Just interested in your points of view as a consumer of comm packages and developer of leaf ones.", "For some reason, the bug fixed C3 was accepted in ", " , but then cherry-picked/merged into ", " manually, that is, into a future release.", "I don\u2019t see this often tbh. It seems a bit forced.", "MoveIt is one example of the sort of setup I\u2019ve seen more: PRs target the newest supported ROS release and then when it makes sense, those fixes get backported.", "For some reason, the bug fixed C3 was accepted in ", " , but then cherry-picked/merged into ", " manually, that is, into a future release.", "That is certainly not the normal flow. I am not sure of that is a real-world example (can you provide a link to a PR?) or just illustrating.", "I can\u2019t speak for all ROS repos but in ", " any PRs are only merged into the ", " devel branch. The only very rare exception is if a patch is only necessary for an older distro but not the latest one.", "And then in a second step all changes on the latest devel branch are being considered for backport to the previous devel branch (and then from there to the second previous etc.). See ", " for an example of such a backport.", "So as far as I understand you proposal that is exactly what is happening in ", " with the only exception that the \u201csingle line of development\u201d is not named ", " but after the latest ROS distro.", "I would suggest to continue this specific conversation in a separate topic / thread since it gets a little bit away form the scope of the original topic.", "I don\u2019t see this often tbh. It seems a bit forced.", "Not seeing it often does not mean it can not happen, but certainly accountable.", "(can you provide a link to a PR?) or just illustrating.", "I already gave you one in my first post above. Not exactly a PR, but an issue finding commits in previous releases not available in future releases. That was the one that triggered me to question the current branching strategy. So just wanted to know your reasoning behind it.", "So as far as I understand you proposal that is exactly what is happening in ros_comm with the only exception that the \u201csingle line of development\u201d is not named master but after the latest ROS distro.", "Not exactly the same thing then, since a branch is created every release cycle to continue the development.", "I would suggest to continue this specific conversation in a separate topic / thread since it gets a little bit away form the scope of the original topic.", "Sure, I\u2019ll create it.", "I know I\u2019m a bit late to the party. In principle the idea of LTS release + rolling release makes a lot of sense to me. However, I have some questions about the proposed release process, test coverage and availability of debian packages. (You mentioned the fat tar of compiled packages for the latest Ubuntu version, but I wounder how much use that would actually be.)", "The justification sounds like a technical limitation of the tooling, rather than a desired limitation in the process. I know too little of the technical details of bloom to judge how and with how much effort it could be realized, but would it not be possible to update bloom to directly support this, meaning that a release in the rolling ROS distro would automatically be \u201ctransferred\u201d / \u201cmade available\u201d to the latest Ubuntu version, once that is added, such that the build farm could build binaries?", "Releasing a package to the rolling distro would probably mean blooming it. How exactly would packages be transferred from the rolling release to the new LTS and the rolling release after that? I.e. would maintainers every two years take the latest version of the package in the rolling release and explicitly release it for the LTS, or would that be automatic based on the current rolling release? Would the new rolling release be based on the now newly created LTS release (after some specific time?) or would the rolling release simply continue like before the LTS? In the latter case, what happens to old / abandoned packages? They would continue to be the rolling release even if they are no longer working / supported?", "As mentioned, most users are using Ubuntu LTS. In order to ensure test coverage of the rolling release, would it not make sense to support the last Ubuntu LTS at least for some time (> 6 months)? I guess the issue is that at some point packages once Ubuntu LTS+1 is out, some packages might want to switch to require newer system dependencies. Would it make sense to at least have the guideline that the core packages should try to continue to work on the latest LTS as long as possible, maybe for 12 or 18 months, before braking ties and switching to newer dependencies in preparation for the new Ubuntu / ROS LTS? If there was any way to make binary packages available at least for the compatible subset of packages for the rolling ROS release on the current Ubuntu LTS for as long as possible, that would probably help to increase test coverage as well. However, I understand that this might add quite a bit of complexity to processes and tools.", "The justification sounds like a technical limitation of the tooling, rather than a desired limitation in the process.", "I\u2019m a little concerned about this, too. I would prefer tools be made to fit the process rather than the other way around.", "Releasing a package to the rolling distro would probably mean blooming it. How exactly would packages be transferred from the rolling release to the new LTS and the rolling release after that?", "I think that these sorts of issues are why there need to be explicitly defined rules for how packages move between the rolling release and an LTS release, similar to how Debian has rules on things like how long a package must go without any critical bug reports to move into testing. I agree that this is harder to achieve in ROS due to the more distributed nature, but I think that the value in having well-defined criteria for allowing a package into the LTS makes it worth the effort.", "First, apologies for being so quiet on this after the initial post; I was busy getting Melodic out.  Now that that is done, I\u2019m going to try and address some of the comments all at once here.  Feel free to follow up.", "Overall I think the new plan sounds great.", "I do think, though, that the full potential of the rolling release isn\u2019t being realised. It should be seen by package maintainers as a place to shake down their packages before they go into an LTS release. While at the start of a cycle this would probably involve lots of new features being introduced and APIs broken, over time the package would stabilise and bugs would be wrung out (while still providing room for new features if desired). The reason I think this is a benefit is that it gives users of the LTS release more confidence that the software has been well used before release rather than just being the head of the repository dropped in before the release goes out. If the wringing out happens before release then a company has to do less wringing out of their own before using the release in a product.", "As you mention, this is closer to the Debian model, and has similar benefits along the testing/unstable/stable axis.  I do like the ability to get some additional testing on packages before they go out, though I will point out that ros-shadow-fixed does provide that capability today.  I will also point out that even if we don\u2019t decide to do that right away, it seems like a natural extension later on.", "To do this, I think that the rolling release plan needs two changes:", "Clearly defined guidelines for the purpose of the rolling release (providing new features while aiming to stabilise the package for the next LTS), for feature freezes (e.g. from six months prior to the planned LTS release, only patch version bumps are allowed for packages), and for allowing a new package or package version into the rolling release (it must compile and its dependencies must be available, for a start).", "Regularly automatically built binaries available from a repository. Otherwise no one will use it and it won\u2019t get the testing it needs.", "For ROS it would also require more trust in package maintainers to obey the rules, since ROS is more distributed than something like Debian.", "We can certainly have some guidelines, that makes sense (this proposal wasn\u2019t meant to be all of the details, just to get the initial conversation started and gauge community interest).  However, as you point out in several places, we don\u2019t really have mechanisms to enforce any of the guidelines, we just have to trust the maintainers to do the correct thing.", "Overall, I think the new plan is a step forward in the right direction.", "\nOne of the things that concerns is me is by removing non-LTS Ubuntu distributions and limiting support to only one Debian version, how much automated testing are you removing in the process? What are the downstream effects of this? How does it affect downstream projects like meta-ros?", "It is kind of tautological, but the removal of packages on non-LTS Ubuntu distributions removes testing on Ubuntu non-LTS, and doesn\u2019t really have much other impact on automated testing.  The rolling release is meant to fill in that gap.  As for how it affects things like meta-ros, I don\u2019t really know.", "One of the hardest things to do is support and encourage a large and diverse user base. Would it make sense to have a required support/testing for the Ubuntu and Debian LTS but then have recommend support/testing for non-LTS, RHEL/Fedora, Gentoo and perhaps even Yocto/open-embedded?", "We could go in that direction, but honestly, given the numbers we\u2019ve seen, there is just no reason to support the Ubuntu non-LTS versions.  So few people use them that the amount of testing we get there is negligible.", "In the context of the non-LTS release, can it be replaced by a prolonged beta system of the next LTS release? Or perhaps something similar to the Debian \u201ctesting\u201d branch (or the Debian testing and unstable branches as ", " described). This could serve as way for people to get the cutting edge while reducing the work to maintain.", "\nAlso having binaries is a huge benefit of the non-LTS release so please do not abandon it.", "Overall, I\u2019m not usually a huge fan of prolonged testing cycles.  My experience has been that you get a flurry of activity right at the beginning or right at the end (sometimes both), but the middle sees little use and thus you get little value out of it.  Since maintainers have the ability to update their packages after a release, I\u2019d rather see the release out there and then make improvements to it along the way.", "How\u2019d the fat binary archives get system/pip dependencies resolved? Would they contain one loooong ", " command? Or by running rosdep?", "Good question.  I think either could work, though if we are making users download a tarball and extract it anyway, I would lean towards using rosdep for this.", "And how will deprecations work with the rolling release strategy?", "There are a few different things we could do with deprecations.  If a package is marked as deprecated/orphaned, we could immediately remove it from the rolling release, which would be a clear signal to downstream consumers that it won\u2019t be available in the next LTS.  Or we could let it continue to build in the rolling distro until it starts failing, and only remove it then.  I\u2019m generally in favor of failing loud and early, so I\u2019d lean towards the former, but we haven\u2019t come up with any of those details yet.", "The justification sounds like a technical limitation of the tooling, rather than a desired limitation in the process. I know too little of the technical details of bloom to judge how and with how much effort it could be realized, but would it not be possible to update bloom to directly support this, meaning that a release in the rolling ROS distro would automatically be \u201ctransferred\u201d / \u201cmade available\u201d to the latest Ubuntu version, once that is added, such that the build farm could build binaries?", "I also don\u2019t know all of the details here, so I can\u2019t give a direct answer.  I agree that this seems like a limitation that could be overcome, but I don\u2019t know how much work that would be.", "Releasing a package to the rolling distro would probably mean blooming it. How exactly would packages be transferred from the rolling release to the new LTS and the rolling release after that? I.e. would maintainers every two years take the latest version of the package in the rolling release and explicitly release it for the LTS, or would that be automatic based on the current rolling release? Would the new rolling release be based on the now newly created LTS release (after some specific time?) or would the rolling release simply continue like before the LTS? In the latter case, what happens to old / abandoned packages? They would continue to be the rolling release even if they are no longer working / supported?", "The intent is that the packages will be taken from the last LTS into the new rolling distribution immediately after the LTS is released.  See my earlier answer about abandoned packages; there are a few different things we could do here.", "As mentioned, most users are using Ubuntu LTS. In order to ensure test coverage of the rolling release, would it not make sense to support the last Ubuntu LTS at least for some time (> 6 months)? I guess the issue is that at some point packages once Ubuntu LTS+1 is out, some packages might want to switch to require newer system dependencies. Would it make sense to at least have the guideline that the core packages should try to continue to work on the latest LTS as long as possible, maybe for 12 or 18 months, before braking ties and switching to newer dependencies in preparation for the new Ubuntu / ROS LTS? If there was any way to make binary packages available at least for the compatible subset of packages for the rolling ROS release on the current Ubuntu LTS for as long as possible, that would probably help to increase test coverage as well. However, I understand that this might add quite a bit of complexity to processes and tools.", "The initial proposal does call for using the latest Ubuntu LTS for at least 6 months (basically, until the next Ubuntu non-LTS is released).  The main driver for the rolling distribution is to give maintainers advanced notice of platform changes that are coming, so we would want to switch to the non-LTS as soon as it was available.  The last ROS LTS is still available, and can still get package updates, so users who need stability can still use that.  If we did something more like ", " testing/unstable/stable idea, that could potentially bridge that gap a bit more, though it is more work both to develop the infrastructure and for the maintainers long-term.  It is something we will have to consider.", "However, as you point out in several places, we don\u2019t really have mechanisms to enforce any of the guidelines, we just have to trust the maintainers to do the correct thing.", "I think that you can, in that you can control what gets accepted into the release. But it would be more effort on your part to verify that maintainers are actually meeting their obligations. I think that Debian\u2019s use of its own bug tracker for all its packages is an aide to this for them. They can easily check how many open tickets a package has and what type they are. It\u2019s possible that some of the work coming out of the current quality assurance effort might provide something that can be used here. For example, the CI badge functionality can be used to automatically check that a package has CI, and is passing that CI, before it gets accepted into the LTS release.", "But as you say, ultimately with the current nature of the ROS community, trusting the maintainers is necessary.", "Overall, I\u2019m not usually a huge fan of prolonged testing cycles. My experience has been that you get a flurry of activity right at the beginning or right at the end (sometimes both), but the middle sees little use and thus you get little value out of it.", "I don\u2019t think the purpose of Debian\u2019s testing branch existing for two years before it becomes stable is to have two years of testing a single version of the package. It provides enough time for users to work with software that isn\u2019t blowing up but provides up-to-date features with further updates possible and gives them time to update their own stuff to match.", "Since maintainers have the ability to update their packages after a release", "Maintainers upating their packages in an LTS release should have very very strict requirements on what is accepted (bug fixes only being an obvious one) to ensure that the LTS remains the same stable target it is at the start.", "I\u2019d rather see the release out there and then make improvements to it along the way.", "I think that this is in conflict with the goal of the LTS release being a stable platform on which products can be built. I think it\u2019s also part of why Debian has separate unstable and testing rolling releases: testing is considered usable for non-critical applications (I know many people who use testing for their daily-use computer, but only one probably insane person who uses unstable for daily use) so it gets the package out there as you want, without making the stable release risky.", "I\u2019m generally in favor of failing loud and early, so I\u2019d lean towards the former, but we haven\u2019t come up with any of those details yet.", "I strongly agree with failing early. Users of the next release need as much advance notice as possible that something they depend on is going to disappear so they can plan and enact changes in their own stuff.", "The intent is that the packages will be taken from the last LTS into the new rolling distribution immediately after the LTS is released.", "I would prefer the opposite approach: the rolling release should be on-going forever, and the LTS release should be a snapshot of it at a point in time. I do not see a benefit to restarting the rolling release every time a new LTS release is made. Is the intention here that testing for the LTS release is done separately from the rolling release and the rolling release becomes a new-features branch of the LTS release?", "I think that much of this discussion is being driven by an unstated assumption about what the LTS release is intended to be. I would like the OSRF to make that assumption clear so we know what the goal is. Is the LTS release intended to be a stable platform for products to be built on and for use in critical applications, or is it a snapshot of package versions at a point in time that may be updated as package maintainers feel like it?", "Put another way, does the OSRF see its position as like the Linux kernel developers, who release new kernels regularly but do not pay much attention to the testing necessary to ensure usability in critical applications and leave the production of releases for critical applications to others (the Debians and Red Hats), or does the OSRF see itself as like the Debian Foundation, providing a well-tested base on which applications can be built?", "I\u2019m not criticising either position because both are perfectly valid, it just needs to be clear. It will impact the release process requirements, how many resources the OSRF needs to invest, and what companies would then expect from a release provided by the OSRF. I hope to one day see a Red Hat emerge for ROS so if the OSRF does not want to be doing this work I do not think it is a disaster for ROS.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Conclusion: There is high use and demand for the ROS LTS releases.", "Proposal: Keep releasing the ROS LTS on a 2 year schedule, as is currently done.", "Conclusion: There is very low adoption of the non-LTS Ubuntu distributions by users.  The non-LTS Ubuntu versions are only supported for a short time after the ROS LTS release.", "Proposal: Stop targeting non-LTS Ubuntu distributions with ROS LTS releases.", "Consequences:\n", "No ROS LTS binaries for non-LTS Ubuntu releases.", "No need to support non-LTS Ubuntu releases for packages in ROS LTS.", "Instead of using non-LTS Ubuntu releases users can use the Ubuntu enablement stacks (HWE), e.g. 16.04.4.", "May be more difficult for users to build from source on non-LTS Ubuntu distributions since it is not tested in any automated way.", "\n", "Conclusion: Having a Debian release span two ROS LTS releases prevents us from using newer system dependencies.", "Proposal: Only support one version of Debian with one ROS LTS.", "Consequences:\n", "A Debian release would only be associated with the first ROS LTS released while the Debian release is also available.", "Some ROS LTS\u2019s may have no Debian version associated with it.", "\n", "Conclusion: There is very light usage of the ROS non-LTS releases.", "Proposal: Only release ROS LTS\u2019s, and create a rolling ROS distro based on the last ROS LTS to exist between ROS LTS\u2019s.  The goal is to reduce the workload on both maintainers and Open Robotics by removing a distribution which has only a few users.  To compensate for the large gap between releases, the rolling ROS distro will allow maintainers to depend on newer system dependencies and get advanced notice if the next Ubuntu release will have API breaking changes that packages need to deal with.\n", "As a starting point the rolling ROS distro would take package releases from the latest ROS LTS.", "Maintainers could optionally opt-in to specifying newer versions of their packages (newer than the version in the LTS) for the rolling ROS distro by providing additional information.", "The buildfarm (", ") will periodically attempt to build packages in the rolling ROS distro only on the latest released version of Ubuntu (in the first 6 month the Ubuntu LTS, later only the latest non-LTS Ubuntu), notifying maintainers on failure.", "(optional) The result of these periodic jobs could be made available as a monolithic archives, e.g. a ", " or ", " file, which would contain all the packages which built successfully. This avoids making users build all packages from source.", "\n", "Consequences:\n", "No future ROS non-LTS releases will be created.", "Users that want to use the latest code must build from source to do so, unless we elect to make \u201cfat archives\u201d of the periodic builds available.", "The buildfarm would ", " produce any Debian packages for the rolling ROS distro (in order to not require running bloom for future Ubuntu distros).", "\n", "\n", "\n", "Pros\n", "Ability to automatically detect changes in Ubuntu dependencies that may break ROS packages when updating to a newer Ubuntu release.", "(optional) Zip archive allows people to use binaries.", "Packages can use the new functionality from Ubuntu dependencies.", "\n", "Cons\n", "Could make ROS LTS less stable - maintainers may push more stuff into ROS LTS to get binary packages.", "Few users want to use non-LTS Ubuntu releases.", "\n", "\n", "\n", "\n", "Pros\n", "The base Ubuntu platform is used by many users.", "Ability to automatically detect changes in ROS dependencies that may break ROS packages.", "Maintainers can release an unstable version of their packages on a base Ubuntu platform used by many users.", "Easier for users to test the rolling ROS distro since it is the latest Ubuntu LTS.", "\n", "Cons\n", "No ability to automatically detect changes in Ubuntu dependencies that may break ROS packages when updating to a newer Ubuntu release.", "Users or packages can\u2019t easily use new functionality from new Ubuntu releases.", "\n", "\n", "\n", "\n", "Pros\n", "Packages tested against stable Ubuntu dependencies and against newest Ubuntu dependencies.", "\n", "Cons\n", "If users want to use newer versions of dependencies, their code needs to build for both the current Ubuntu LTS and the latest Ubuntu.", "Might be painful for maintainers to maintain code handling all Ubuntu versions as specified above.", "\n", "\n", "\n", "\n", "Pros\n", "Keeps the status quo.", "\n", "Cons\n", "Maintainers have to release/re-bloom their packages every year for a small userbase.", "Some maintainers do not release into the ROS non-LTS releases, so those releases are always less complete.", "Open Robotics needs to do work every year for very small userbase.", "\n", "\n", "\n", "\n", "Pros\n", "Package maintainers and Open Robotics only ", " to do work every 2 years.", "\n", "Cons\n", "Large Ubuntu platform delta between ROS releases, possibly leading to lots of API breaks due to Ubuntu platform dependencies changing.", "A full tick-tock cycle of API deprecation/removal would take 4 years (2 full ROS releases).", "\n", "\n", "\n", "\n", "\n", "\n", "A full tick-tock cycle of API deprecation/removal would take 4 years (2 full ROS releases).", "have new features available in every", "aim for stability since every code change has the potential to introduce regressions", "\n", "The buildfarm would ", " produce any Debian packages for the rolling ROS distro (in order to not require running bloom for future Ubuntu distros).", "\n", "\n", "\n", "\n", "\n", "\n", "The buildfarm would ", " produce any Debian packages for the rolling ROS distro (in order to not require running bloom for future Ubuntu distros).", "\n"], "url": "https://discourse.ros.org/t/proposed-changes-to-the-ros-releases/4736"},
{"title": "Pcl_ros with PCL 1.8 (ROS Lunar and newer) means linking to 139 VTK dynamic libraries", "thread_contents": ["Compiling ROS from source I\u2019ve noticed that PCL 1.8 (and thus pcl_ros) links to a newer version of the VTK library, which yields unbelievable 139 dynamic libraries to be linked to my programs. Crazy! According to ", " , there is some performance penalty for every dynamically linked library.", "Together with dependencies of the VTK libraries, we get to this number:", "And all of that just to be able to transform a pointcloud (no visualizations etc).", "I think pcl_ros should be refactored to two packages, one for \u201ccomputing\u201d and the other for visualizations. That could probably push the number of linked libraries much lower for computing-only uses of pcl_ros. Or it could be modularized even more\u2026 Not everybody needs surface reconstruction capabilities, for example.", "What\u2019s your opinion on this? Or is there some good reason to keep it all in one package?", "Just for comparison:", "Splitting the visualisation parts out of PCL is certainly worth doing, in my opinion. PCL itself could also be modularised even more, but whether the return on that investment makes it worth doing is an open question.", "PCL can be compiled without visualization, this removes the VTK dependency:", "\n", "\n", "I would interested in what it takes to split this out. Currently I\u2019ve been blocked compiling PCL from source, presumably from the large amount of dependencies. I\u2019ve tried doubling memory and swap space (and of course on a fixed machine (laptop) with only 8GB of ram, it seems like 15GB isn\u2019t even enough. Every time it runs out of memory, unfortunately that now means I have to change my workflow, and compile this on a much larger system, with substantially more RAM, when I have compiled quite large packages without much of an issue (i.e. opencv, kernels, etc.). I\u2019ll try out disabling VTK to see if that helps move the process along, before investing in recompiling everything and setting up a new build machine.", "I\u2019ve tried doubling memory and swap space (and of course on a fixed machine (laptop) with only 8GB of ram, it seems like 15GB isn\u2019t even enough. Every time it runs out of memory, [\u2026]", "Have you tried limiting the nr of concurrent jobs? The default is probably something like the nr of cpus/cores, which could easily lead to significant memory usage with C++ (templates, et al).", "Absolutely, it was trying to compile gstreamer, and a kernel originally, but just compiling pcl by itself, consumes all memory even with running a single thread.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["    include(\"${QT_USE_FILE}\")", "  endif (QT4_FOUND)", "elseif(\"${PCL_QT_VERSION}\" STREQUAL \"5\")", "  include(cmake/pcl_find_qt5.cmake)", "else()", "  message(SEND_ERROR \"PCL_QT_VERSION must be 4 or 5\")", "endif()", "endif(WITH_QT)", "\n", "# Find VTK", "option(WITH_VTK \"Build VTK-Visualizations\" TRUE)", "if(WITH_VTK AND NOT ANDROID)", "find_package(VTK)", "if(VTK_FOUND)", "  if(NOT DEFINED VTK_RENDERING_BACKEND)", "    # On old VTK versions this variable does not exist. In this case it is", "    # safe to assume OpenGL backend", "    set(VTK_RENDERING_BACKEND \"OpenGL\")", "  endif()", "  message(STATUS \"VTK_MAJOR_VERSION ${VTK_MAJOR_VERSION}, rendering backend: ${VTK_RENDERING_BACKEND}\")", "  if (PCL_SHARED_LIBS OR"], "url": "https://discourse.ros.org/t/pcl-ros-with-pcl-1-8-ros-lunar-and-newer-means-linking-to-139-vtk-dynamic-libraries/4433"},
{"title": "Call for chapters: SPRINGER BOOK ROBOT OPERATING SYSTEM (ROS) THE COMPLETE REFERENCE (VOLUME 3)", "thread_contents": ["OBJECTIVES", "\nAfter the success of the Springer Book on ROS (Volume 1) with 27 chapters, Springer Book on ROS (Volume 2) with 19 chapters, and Springer Book on ROS (Volume 3), this is a fourth call for chapters for a Springer book on Robot Operating System (ROS) (Volume 4). The objective of the fourth volume is to provide the reader with comprehensive references on the Robot Operating System (ROS), which is currently considered as the main development framework for robotics applications.", "ROS (Robot Operating System) has been developed by Willow Garage and Stanford University as a part of STAIR project as a free and open-source robotic middleware for the large-scale development of complex robotic systems. ROS acts as a meta-operating system for robots as it provides hardware abstraction, low-level device control, inter-processes message-passing and package management. It also provides tools and libraries for obtaining, building, writing, and running code across multiple computers.", "The main advantage of ROS is that it allows manipulating sensor data of the robot as a labeled abstract data stream, called topic, without having to deal with hardware drivers. This book intends to fill the gap and to provide ROS users (academia and industry) with a comprehensive coverage on Robot Operating System concepts and applications. It will cover several topics ranging from basics and foundation to advanced research papers. Tutorial, survey and original research papers will be sought. The book will cover several areas related to robot development using ROS including but not limited to robot navigation, UAVs, arm manipulation, multi-robot communication protocols, Web and mobile interfaces using ROS, integration of new robotic platform to ROS, computer vision applications, development of service robots using ROS, development of new libraries and packages for ROS, using ROS in education, etc. Every book chapter should be accompanied with a working code to be put later in a common repository for the readers.", "EDITOR", "\nEditor:Anis Koubaa, Professor, PhD", "\nAffiliation:Prince Sultan University (Saudi Arabia)/CISTER Research Center (Portugal)/Gaitech Robotics (China)", "\nContact:akoubaa@psu.edu.sa", "\nBio:Anis Koubaa is a Professor in Computer Science in Prince Sultan University (Saudi Arabia), a Research Associate in CISTER Research Unit (Portugal), and consultant at Gaitech Robotics (China). He has been leading several research projects on robotics and Internet of Things, and in particular integartion of ROS into the IoT. He is the director of the Robotics and Internet of Things Unit (RIOTU) at Prince Sultan University. He is the chair of the ACM Chapter in Saudi Arabia amd a Senior Fellow of the Higher Education Academy (SF-HEA) from the United Kingdom. Prof. Anis is the editor of several books, and author and co-author of more than 160 publications. He is the Editor-in-Chief of the Robotics Software Engineering topic of the International Journal of Advanced Robotics Systems (IJARS). Prof. Anis contributed with the design and development of the first cloud-based system for controlling and monitoring of drones over the Internet, called Dronemap Planner. His h-index is 31.", "\nPUBLISHER AND INDEXING", "\nThis book is expected to be published by January of 2019 by Springer. It will appear under the Studies in Computational Intelligence series. For additional information and guidelines regarding the publisher, please visit ", "Regarding Indexing, the book will be indexed by Scopus and will be submitted for indexing to ISI Books, and DBLP.", "DUE DATES", "\nAbstract Submission: April 15, 2018", "\nFull Chapters Due: July 01, 2018", "\nChapter Acceptance Notification: September 01, 2018", "\nRevised Version Due Date: September 21, 2018", "\nRevised Chapter Acceptance Notification: November 01, 2018", "\nEstimated Publication Date: Januaray 2019", "\nTOPICS OF INTEREST", "\nAny contribution that provides an added value to Robot Operating System (ROS) is of interest for the book. The topics of interest include \u2013 but not limited to- the following:", "\nROS 2.0 Tutorials", "\nDeep Learning with ROS", "\nArtificial Intelligence with ROS", "\nROS Basics and Foundations", "\nRobot Control and Navigation", "\nSelf-driving cars using ROS", "\nArm Manipulation", "\nRobot Perception", "\nSecurity of ROS", "\nRobot Safety with ROS", "\nROS Integration to Web and Mobile apps", "\nReal-World Application Deployment using ROS", "\nUsing ROS in Higher Education", "\nContributed ROS Packages", "\nUnmanned Aerial Vehicles Control and Navigation", "\nSoftware Archiectures using ROS", "\nROS-enabled Robot Design", "\nThis volume welcome chapters about the upcoming version ROS 2.0, including tutorials, comparisong with ROS 1.0, new features in ROS 2.0.", "Also, papers related to using ROS for umanned aerial vehicles are particularly welcome.", "CHAPTERS CATEGORIES", "\nThe book will accept three categories of chapters:", "\nTutorial chapter: it focuses on a particular ROS concept or contributed package and provides a step-by-step tutorial that explains the fundamental of the concepts/packages and presents detailed guidelines on how to use the contributed code. It must specify the ROS versions that are compatible with the tutorial code, and must provide illustration with figures and code interpretations. The code must be available to public in a share repository (to be announced later). Accompanying Video tutorials are highly recommended.", "\nResearch chapter: it presents a research technical contribution in the robotics area where ROS was used to validate the findings. The chapter must presents a sufficient material on the technical contribution in addition to necessary theoretical background, but a major focus should be made to ROS implementation and experimentation. The implementation and experimentation must be sufficiently detailed for a reader be able to reproduce the experiments. It must specify the ROS versions that are compatible with the tutorial code, and must provide illustration with figures and code interpretations. The code must be available to public in a share repository (to be announced later). Accompanying Video tutorials are highly recommended.", "\nCase study chapter: a case study chapter should present a real-world experimentation with ROS on particular robotics platform. It should present a detailed description of observations made during experiments, and what are the challenges encountered during development and experimentation. The chapter should also highlight the best practices that would facilitate deployment and the lessons learnt.", "\nThis volume welcome chapters about the upcoming version ROS 2.0, including tutorials, comparisong with ROS 1.0, new features in ROS 2.0. Also, hot topics papers related to using ROS for umanned aerial vehicles and self-driving cars are particularly welcome.", "SUBMISSION PROCEDURE", "\nResearchers and practitioners are invited to submit a 1-3 page chapter proposal clearly explaining the mission and concerns of the proposed chapter. This helps as a registration of the chapter for the final submission. Submission of abstracts must be done through EasyChair system Authors of accepted proposals will be notified about the status of their proposals and sent chapter guidelines. Full chapters must be submitted by July 01, 2018 through EasyChair system (", "). The Chapter should not exceed 50 pages with respect to Springer format. All submitted chapters will be reviewed on a single-blind review basis. Contributors may also be requested to serve as reviewers for this project.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/call-for-chapters-springer-book-robot-operating-system-ros-the-complete-reference-volume-3/4162"},
{"title": "New Packages for Indigo 2017-12-26", "thread_contents": ["We\u2019re happy to announce 21 new packages and 145 updated packages for Indigo. 8 packages have also been removed in this sync, 6 of which are due to the regression tracked ", ".", "As always thank you to all the maintainers and contributors who make these updates possible! Details are below.", "Thanks to all ROS maintainers who make packages available to the ROS community. The above list of packages was made possible by the work of the following maintainers:", "Planning for this sync was at: ", "Seems the update of ros-indigo-nodelet 1.9.10-0 -> 1.9.14-0 broke ABI compatibility and all nodelets that were compiled before (with 1.9.10) now segfault immediately.", "Was this an accidental oversight or should we not expect to be able to build our own internal debian packages with out the need to recompile them when there is a new distro sync?", "In general ABI compatibility is not guaranteed, but we do strive for it in the core packages. I\u2019d recommend letting the upstream package know of the ABI breakage (", " in this case?), though once it\u2019s released there\u2019s not much to be done about it other than break ABI again to go to the old state.", "Since ABI stability is not guaranteed, especially for non-core packages, I think it\u2019s best not to assume you can have deb\u2019s on top of ours that do not need to be rebuilt after a sync.", "Thanks ", " for reporting. We had the discussion on the ", " but I will summarize here for visibility:", "Was this an accidental oversight or should we not expect to be able to build our own internal debian packages with out the need to recompile them when there is a new distro sync?", "Yes it was an oversight and I apologize for the breakage and trouble it caused.", "\nWe try not to break ABI in low level packages as much as possible. As pointed out above there is not much that can be done now as the ABI breakage has been released (and that some distribution use this ABI for ", ".", "That being said all the ROS tools and infrastructure assume ABI incompatibility and every package is rebuilt if one of their dependency changes. So package consumer should not assume ABI compatibility, and assume they have to rebuild the debs on top of the released ones after a sync.", "A new ", " has been proposed to allow packages to provide \u201ccompatibility version\u201d information. We plan in the future to support that format in our tools and to provide infrastructure to check ABI and reject releases if a package is advertised as ABI compatible but is not. Note that this will be an opt-in choice and that package maintainers can choose to release ABI breaking changes anyway.", "What is the best way to automate a rebuild upon a sync? Is there some kind of API endpoint to poll?", "Right now I am manually re-triggering when I get the email, to ensure that there are no ABI problems. This is probably more than necessary, as this means that I am rebuilding even if none of the dependencies were touched, but it\u2019s better than breaking packages on user systems.", "We are not using ", " but a home-grown buildbot based solution, if that matters.", "What is the best way to automate a rebuild upon a sync? Is there some kind of API endpoint to poll?", "Right now I am manually re-triggering when I get the email, to ensure that there are no ABI problems. This is probably more than necessary, as this means that I am rebuilding even if none of the dependencies were touched, but it\u2019s better than breaking packages on user systems.", "There\u2019s not a recommended way to automatically trigger after a new sync because we recommend that if you\u2019re building on top you actually import the packages that you are building on top of into your repository. Reading the documentation for custom repositories,", "We don\u2019t call it out well, but there are instructions for setting up the import rule and how to generate the rosdep rules automatically for the imported files.", "Part of the reason that there\u2019s no standard way to do this sort of triggering is that for any different user there are different thresholds. If you\u2019re only using 10 packages those packages may never have changed. If you simply retrigger everything after a manually selected import you can make sure that nothing is incompatible. There is work ongoing to have better compatibility information available in the rosdistro in an update to ", ".", "But even with that I\u2019d generally recommend doing a snapshot import so that you know that you have full control of the packages.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["ros-indigo-bcap-core: 3.0.2-1", "ros-indigo-bcap-service: 3.0.2-1", "ros-indigo-bcap-service-test: 3.0.2-1", "ros-indigo-catkin-virtualenv: 0.1.4-0", "ros-indigo-denso-robot-bringup: 3.0.2-1", "ros-indigo-denso-robot-control: 3.0.2-1", "ros-indigo-denso-robot-core: 3.0.2-1", "ros-indigo-denso-robot-core-test: 3.0.2-1", "ros-indigo-denso-robot-descriptions: 3.0.2-1", "ros-indigo-denso-robot-gazebo: 3.0.2-1", "ros-indigo-denso-robot-moveit-config: 3.0.2-1", "ros-indigo-denso-robot-ros: 3.0.2-1", "ros-indigo-dynamic-transform-publisher: 1.0.1-1", "ros-indigo-grid-map-sdf: 1.6.0-0", "ros-indigo-handeye: 0.1.0-0", "ros-indigo-ros-speech-recognition: 2.1.6-0", "ros-indigo-sainsmart-relay-usb: 0.0.2-0", "ros-indigo-tango-ros-messages: 2.0.0-0", "ros-indigo-test-catkin-virtualenv: 0.1.3-0", "ros-indigo-test-catkin-virtualenv-py3: 0.1.3-0", "ros-indigo-tork-moveit-tutorial: 0.0.3-0", "ros-indigo-actionlib: 1.11.9-0 -> 1.11.12-0", "ros-indigo-amcl: 1.12.13-0 -> 1.12.14-0", "ros-indigo-assimp-devel: 2.1.4-0 -> 2.1.6-0", "ros-indigo-auv-msgs: 0.0.1-0 -> 0.1.0-0", "ros-indigo-base-local-planner: 1.12.13-0 -> 1.12.14-0", "ros-indigo-bayesian-belief-networks: 2.1.4-0 -> 2.1.6-0", "ros-indigo-bond: 1.7.19-0 -> 1.7.20-0", "ros-indigo-bond-core: 1.7.19-0 -> 1.7.20-0", "ros-indigo-bondcpp: 1.7.19-0 -> 1.7.20-0", "ros-indigo-bondpy: 1.7.19-0 -> 1.7.20-0", "ros-indigo-carrot-planner: 1.12.13-0 -> 1.12.14-0", "ros-indigo-checkerboard-detector: 1.2.2-0 -> 1.2.3-0", "ros-indigo-class-loader: 0.3.6-0 -> 0.3.8-0", "ros-indigo-clear-costmap-recovery: 1.12.13-0 -> 1.12.14-0", "ros-indigo-collada-urdf-jsk-patch: 2.1.4-0 -> 2.1.6-0", "ros-indigo-costmap-2d: 1.12.13-0 -> 1.12.14-0", "ros-indigo-downward: 2.1.4-0 -> 2.1.6-0", "ros-indigo-dwa-local-planner: 1.12.13-0 -> 1.12.14-0", "ros-indigo-fake-localization: 1.12.13-0 -> 1.12.14-0", "ros-indigo-ff: 2.1.4-0 -> 2.1.6-0", "ros-indigo-ffha: 2.1.4-0 -> 2.1.6-0", "ros-indigo-geometric-shapes: 0.4.5-0 -> 0.4.6-0", "ros-indigo-global-planner: 1.12.13-0 -> 1.12.14-0", "ros-indigo-grid-map: 1.5.2-0 -> 1.6.0-0", "ros-indigo-grid-map-core: 1.5.2-0 -> 1.6.0-0", "ros-indigo-grid-map-costmap-2d: 1.5.2-0 -> 1.6.0-0", "ros-indigo-grid-map-cv: 1.5.2-0 -> 1.6.0-0", "ros-indigo-grid-map-demos: 1.5.2-0 -> 1.6.0-0", "ros-indigo-grid-map-filters: 1.5.2-0 -> 1.6.0-0", "ros-indigo-grid-map-loader: 1.5.2-0 -> 1.6.0-0", "ros-indigo-grid-map-msgs: 1.5.2-0 -> 1.6.0-0", "ros-indigo-grid-map-octomap: 1.5.2-0 -> 1.6.0-0", "ros-indigo-grid-map-pcl: 1.5.2-0 -> 1.6.0-0", "ros-indigo-grid-map-ros: 1.5.2-0 -> 1.6.0-0", "ros-indigo-grid-map-rviz-plugin: 1.5.2-0 -> 1.6.0-0", "ros-indigo-grid-map-visualization: 1.5.2-0 -> 1.6.0-0", "ros-indigo-grpc: 0.0.5-0 -> 0.0.6-0", "ros-indigo-hrpsys-ros-bridge: 1.4.1-0 -> 1.4.2-0", "ros-indigo-hrpsys-tools: 1.4.1-0 -> 1.4.2-0", "ros-indigo-imagesift: 1.2.2-0 -> 1.2.3-0", "ros-indigo-jsk-3rdparty: 2.1.4-0 -> 2.1.6-0", "ros-indigo-jsk-pcl-ros: 1.2.2-0 -> 1.2.3-0", "ros-indigo-jsk-pcl-ros-utils: 1.2.2-0 -> 1.2.3-0", "ros-indigo-jsk-perception: 1.2.2-0 -> 1.2.3-0", "ros-indigo-jsk-recognition: 1.2.2-0 -> 1.2.3-0", "ros-indigo-jsk-recognition-msgs: 1.2.2-0 -> 1.2.3-0", "ros-indigo-jsk-recognition-utils: 1.2.2-0 -> 1.2.3-0", "ros-indigo-julius: 2.1.4-0 -> 2.1.6-0", "ros-indigo-julius-ros: 2.1.4-0 -> 2.1.6-0", "ros-indigo-laser-filters-jsk-patch: 2.1.4-0 -> 2.1.6-0", "ros-indigo-libcmt: 2.1.4-0 -> 2.1.6-0", "ros-indigo-libsiftfast: 2.1.4-0 -> 2.1.6-0", "ros-indigo-lpg-planner: 2.1.4-0 -> 2.1.6-0", "ros-indigo-map-server: 1.12.13-0 -> 1.12.14-0", "ros-indigo-marti-data-structures: 1.2.0-0 -> 2.0.0-0", "ros-indigo-mini-maxwell: 2.1.4-0 -> 2.1.6-0", "ros-indigo-move-base: 1.12.13-0 -> 1.12.14-0", "ros-indigo-move-base-msgs: 1.12.13-0 -> 1.12.14-0", "ros-indigo-move-slow-and-clear: 1.12.13-0 -> 1.12.14-0", "ros-indigo-moveit: 0.7.12-0 -> 0.7.13-0", "ros-indigo-moveit-commander: 0.7.12-0 -> 0.7.13-0", "ros-indigo-moveit-controller-manager-example: 0.7.12-0 -> 0.7.13-0", "ros-indigo-moveit-core: 0.7.12-0 -> 0.7.13-0", "ros-indigo-moveit-fake-controller-manager: 0.7.12-0 -> 0.7.13-0", "ros-indigo-moveit-full: 0.7.12-0 -> 0.7.13-0", "ros-indigo-moveit-full-pr2: 0.7.12-0 -> 0.7.13-0", "ros-indigo-moveit-kinematics: 0.7.12-0 -> 0.7.13-0", "ros-indigo-moveit-planners: 0.7.12-0 -> 0.7.13-0", "ros-indigo-moveit-planners-ompl: 0.7.12-0 -> 0.7.13-0", "ros-indigo-moveit-plugins: 0.7.12-0 -> 0.7.13-0", "ros-indigo-moveit-ros: 0.7.12-0 -> 0.7.13-0", "ros-indigo-moveit-ros-benchmarks: 0.7.12-0 -> 0.7.13-0", "ros-indigo-moveit-ros-benchmarks-gui: 0.7.12-0 -> 0.7.13-0", "ros-indigo-moveit-ros-control-interface: 0.7.12-0 -> 0.7.13-0", "ros-indigo-moveit-ros-manipulation: 0.7.12-0 -> 0.7.13-0", "ros-indigo-moveit-ros-move-group: 0.7.12-0 -> 0.7.13-0", "ros-indigo-moveit-ros-perception: 0.7.12-0 -> 0.7.13-0", "ros-indigo-moveit-ros-planning: 0.7.12-0 -> 0.7.13-0", "ros-indigo-moveit-ros-planning-interface: 0.7.12-0 -> 0.7.13-0", "ros-indigo-moveit-ros-robot-interaction: 0.7.12-0 -> 0.7.13-0", "ros-indigo-moveit-ros-visualization: 0.7.12-0 -> 0.7.13-0", "ros-indigo-moveit-ros-warehouse: 0.7.12-0 -> 0.7.13-0", "ros-indigo-moveit-runtime: 0.7.12-0 -> 0.7.13-0", "ros-indigo-moveit-setup-assistant: 0.7.12-0 -> 0.7.13-0", "ros-indigo-moveit-simple-controller-manager: 0.7.12-0 -> 0.7.13-0", "ros-indigo-nav-core: 1.12.13-0 -> 1.12.14-0", "ros-indigo-navfn: 1.12.13-0 -> 1.12.14-0", "ros-indigo-navigation: 1.12.13-0 -> 1.12.14-0", "ros-indigo-nextage-calibration: 0.7.16-0 -> 0.7.16-2", "ros-indigo-nextage-description: 0.7.16-0 -> 0.7.16-2", "ros-indigo-nextage-gazebo: 0.7.16-0 -> 0.7.16-2", "ros-indigo-nextage-ik-plugin: 0.7.16-0 -> 0.7.16-2", "ros-indigo-nextage-moveit-config: 0.7.16-0 -> 0.7.16-2", "ros-indigo-nextage-ros-bridge: 0.7.16-0 -> 0.7.16-2", "ros-indigo-nlopt: 2.1.4-0 -> 2.1.6-0", "ros-indigo-nmea-msgs: 0.1.1-0 -> 1.1.0-0", "ros-indigo-nodelet: 1.9.10-0 -> 1.9.14-0", "ros-indigo-nodelet-core: 1.9.10-0 -> 1.9.14-0", "ros-indigo-nodelet-topic-tools: 1.9.10-0 -> 1.9.14-0", "ros-indigo-openrtm-ros-bridge: 1.4.1-0 -> 1.4.2-0", "ros-indigo-openrtm-tools: 1.4.1-0 -> 1.4.2-0", "ros-indigo-opt-camera: 2.1.4-0 -> 2.1.6-0", "ros-indigo-parameter-pa: 1.1.0-0 -> 1.2.1-0", "ros-indigo-pgm-learner: 2.1.4-0 -> 2.1.6-0", "ros-indigo-pid: 0.0.20-0 -> 0.0.23-0", "ros-indigo-plotjuggler: 1.4.2-0 -> 1.5.0-0", "ros-indigo-pluginlib: 1.10.5-0 -> 1.10.6-0", "ros-indigo-rail-object-detector: 1.0.4-0 -> 2.0.1-0", "ros-indigo-realsense-camera: 1.8.0-0 -> 1.8.1-1", "ros-indigo-resized-image-transport: 1.2.2-0 -> 1.2.3-0", "ros-indigo-robot-localization: 2.3.2-0 -> 2.3.3-0", "ros-indigo-robot-pose-ekf: 1.12.13-0 -> 1.12.14-0", "ros-indigo-rosnode-rtc: 1.4.1-0 -> 1.4.2-0", "ros-indigo-rospatlite: 2.1.4-0 -> 2.1.6-0", "ros-indigo-rosping: 2.1.4-0 -> 2.1.6-0", "ros-indigo-rostwitter: 2.1.4-0 -> 2.1.6-0", "ros-indigo-rotate-recovery: 1.12.13-0 -> 1.12.14-0", "ros-indigo-rtmbuild: 1.4.1-0 -> 1.4.2-0", "ros-indigo-rtmros-common: 1.4.1-0 -> 1.4.2-0", "ros-indigo-rtmros-nextage: 0.7.16-0 -> 0.7.16-2", "ros-indigo-sick-tim: 0.0.10-0 -> 0.0.11-0", "ros-indigo-slic: 2.1.4-0 -> 2.1.6-0", "ros-indigo-smclib: 1.7.19-0 -> 1.7.20-0", "ros-indigo-swri-console-util: 1.2.0-0 -> 2.0.0-0", "ros-indigo-swri-geometry-util: 1.2.0-0 -> 2.0.0-0", "ros-indigo-swri-image-util: 1.2.0-0 -> 2.0.0-0", "ros-indigo-swri-math-util: 1.2.0-0 -> 2.0.0-0", "ros-indigo-swri-nodelet: 1.2.0-0 -> 2.0.0-0", "ros-indigo-swri-opencv-util: 1.2.0-0 -> 2.0.0-0", "ros-indigo-swri-prefix-tools: 1.2.0-0 -> 2.0.0-0", "ros-indigo-swri-roscpp: 1.2.0-0 -> 2.0.0-0", "ros-indigo-swri-rospy: 1.2.0-0 -> 2.0.0-0", "ros-indigo-swri-route-util: 1.2.0-0 -> 2.0.0-0", "ros-indigo-swri-serial-util: 1.2.0-0 -> 2.0.0-0", "ros-indigo-swri-string-util: 1.2.0-0 -> 2.0.0-0", "ros-indigo-swri-system-util: 1.2.0-0 -> 2.0.0-0", "ros-indigo-swri-transform-util: 1.2.0-0 -> 2.0.0-0", "ros-indigo-swri-yaml-util: 1.2.0-0 -> 2.0.0-0", "ros-indigo-trac-ik: 1.4.5-0 -> 1.4.7-0", "ros-indigo-trac-ik-examples: 1.4.5-0 -> 1.4.7-0", "ros-indigo-trac-ik-kinematics-plugin: 1.4.5-0 -> 1.4.7-0", "ros-indigo-trac-ik-lib: 1.4.5-0 -> 1.4.7-0", "ros-indigo-voice-text: 2.1.4-0 -> 2.1.6-0", "ros-indigo-voxel-grid: 1.12.13-0 -> 1.12.14-0", "ros-indigo-zbar-ros: 0.0.5-0 -> 0.1.0-0", "ros-indigo-cepton", "ros-indigo-cost-map", "ros-indigo-cost-map-core", "ros-indigo-cost-map-cv", "ros-indigo-cost-map-demos", "ros-indigo-cost-map-ros", "ros-indigo-cost-map-visualisations", "ros-indigo-schunk-sdhx", "Allison Thackston", "Andy Zelenak", "Bence Magyar", "DENSO WAVE INCORPORATED", "Dave Coleman", "David V. Lu!!", "Davide Faconti", "Ed Venator", "Elliot Johnson", "Francisco Suarez-Ruiz", "Hitoshi Kamada", "IK Fast Plugin Creater", "Ioan Sucan", "Isaac I. Y. Saito", "Jon Binney", "Kei Okada", "Kevin Hallenbeck", "Kris Kozak", "Marc Alban", "Martin G\u00fcnther", "Mathias L\u00fcdtke", "Michael Ferguson", "Michael G\u00f6rner", "Mikael Arguedas", "MoveIt Setup Assistant", "Noda Shintaro", "Patrick Beeson", "Paul Bovbel", "Peter Weissig", "P\u00e9ter Fankhauser", "Ruben Smits", "Ryohei Ueda", "Sergey Dorodnicov", "Shengye Wang", "Siddhartha Banerjee", "TORK", "Takuya Nakaoka", "Tom Moore", "Yohei Kakiuchi", "Youhei Kakiuchi", "Yuki Furuta", "Yuto Inagaki", "k-okada"], "url": "https://discourse.ros.org/t/new-packages-for-indigo-2017-12-26/3541"},
{"title": "ROS Melodic Morenia Beta has begun", "thread_contents": ["Dear ROS users,", "The beta for Melodic has begun!", "Thanks to all of our contributors and maintainers who made this possible.", "ros-melodic-desktop-full is available on Ubuntu Bionic (18.04), Ubuntu Artful (17.10), and Debian Stretch. So take a moment to be an upstanding member of the ROS community", "\nand:", "May 23rd, World Turtle Day, is still our official release date for ROS Melodic and we are on track to meet it! So mark it down into your calendar, and if you\u2019re a maintainer, plan to finish your releases before then to leave some breathing room.", "Known discrepancy amongst platforms:", "For a more comprehensive view of the current status of Melodic, including packages outside of desktop-full that are available in the beta, see the status pages on ", ":", "\n", "\n", "\n", "\n", "\n", "Cheers!", "Chris Lalancette", "\nMelodic ROS Boss", "I know there\u2019s only a week left before World Turtle Day, but what date are you planning to start holding to merge new releases for the official Melodic release?", "I know there\u2019s only a week left before World Turtle Day, but what date are you planning to start holding to merge new releases for the official Melodic release?", "For packages that are pretty core to the system, I\u2019m planning on holding after Monday (May 21st).  That\u2019s just to ensure that we don\u2019t get a full system rebuild and find some nasty surprise at the last moment.  For \u201cleaf\u201d packages (that don\u2019t have a lot of downstream consumers), I\u2019ll consider merging up until Tuesday (May 22nd).", "Should the migration guide be in any sort of order? I\u2019m about to start adding notes for the navigation stack, but it seems that the packages aren\u2019t in any reasonable order \u2013 should we make them alphabetical to aid users in reading that document?", "I just alphabetized it for you. Thanks for pointing it out. It looks like it was in alphabetical order until ", " and ", " were appended and then ", "'s changes were prepended.", "/shrug ", "Anyone else that edits that page, please try to keep it in order.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["sudo apt-get install ros-melodic-desktop-full", "Try testing out packages you regularly use that are available in the beta.", "Report any bugs you find on the issue tracker for the package (usually available on the packge for a package on ", ").", "Try out documentation, tutorials, and generated documentation and fix issues on the Wiki.", "If you are a package maintainer, continue releasing packages, fixing issues wherever possible, and checking your package documentation. The Melodic beta is the best time to change API or change the behavior of your code, but don\u2019t forget to update the Migration page if you do:", "\n", "\nTo know if your package can be released see the ", ".", "octovis is not available on armhf as in previous ROS Distributions", "\nEvery other package is available on all architectures/platforms targeted by ", "!"], "url": "https://discourse.ros.org/t/ros-melodic-morenia-beta-has-begun/4743"},
{"title": "Call for Chapters: SPRINGER BOOK ROBOT OPERATING SYSTEM (ROS) - (VOLUME 4)", "thread_contents": ["SPRINGER BOOK", "\nROBOT OPERATING SYSTEM (ROS)", "\nTHE COMPLETE REFERENCE (VOLUME 4)", "Website: ", "Please follow the Guidelines for Editing the Book Chapter. Get the whole (ZIP Package)", "\nOBJECTIVES", "\nAfter the success of the Springer Book on ROS (Volume 1) with 27 chapters, Springer Book on ROS (Volume 2) with 19 chapters, and Springer Book on ROS (Volume 3), this is a fourth call for chapters for a Springer book on Robot Operating System (ROS) (Volume 4). The objective of the fourth volume is to provide the reader with comprehensive references on the Robot Operating System (ROS), which is currently considered as the main development framework for robotics applications.", "ROS (Robot Operating System) has been developed by Willow Garage and Stanford University as a part of STAIR project as a free and open-source robotic middleware for the large-scale development of complex robotic systems. ROS acts as a meta-operating system for robots as it provides hardware abstraction, low-level device control, inter-processes message-passing and package management. It also provides tools and libraries for obtaining, building, writing, and running code across multiple computers.", "The main advantage of ROS is that it allows manipulating sensor data of the robot as a labeled abstract data stream, called topic, without having to deal with hardware drivers. This book intends to fill the gap and to provide ROS users (academia and industry) with a comprehensive coverage on Robot Operating System concepts and applications. It will cover several topics ranging from basics and foundation to advanced research papers. Tutorial, survey and original research papers will be sought. The book will cover several areas related to robot development using ROS including but not limited to robot navigation, UAVs, arm manipulation, multi-robot communication protocols, Web and mobile interfaces using ROS, integration of new robotic platform to ROS, computer vision applications, development of service robots using ROS, development of new libraries and packages for ROS, using ROS in education, etc. Every book chapter should be accompanied with a working code to be put later in a common repository for the readers.", "EDITOR", "\nEditor:Anis Koubaa, Professor, PhD", "\nAffiliation:Prince Sultan University (Saudi Arabia)/CISTER Research Center (Portugal)/Gaitech Robotics (China)", "\nContact:akoubaa@psu.edu.sa", "\nBio:Anis Koubaa is a Professor in Computer Science in Prince Sultan University (Saudi Arabia), a Research Associate in CISTER Research Unit (Portugal), and consultant at Gaitech Robotics (China). He has been leading several research projects on robotics and Internet of Things, and in particular integartion of ROS into the IoT. He is the director of the Robotics and Internet of Things Unit (RIOTU) at Prince Sultan University. He is the chair of the ACM Chapter in Saudi Arabia amd a Senior Fellow of the Higher Education Academy (SF-HEA) from the United Kingdom. Prof. Anis is the editor of several books, and author and co-author of more than 160 publications. He is the Editor-in-Chief of the Robotics Software Engineering topic of the International Journal of Advanced Robotics Systems (IJARS). Prof. Anis contributed with the design and development of the first cloud-based system for controlling and monitoring of drones over the Internet, called Dronemap Planner. His h-index is 31.", "\nPUBLISHER AND INDEXING", "\nThis book is expected to be published by January of 2019 by Springer. It will appear under the Studies in Computational Intelligence series. For additional information and guidelines regarding the publisher, please visit ", "Regarding Indexing, the book will be indexed by Scopus and will be submitted for indexing to ISI Books, and DBLP.", "DUE DATES", "\nAbstract Submission: April 15, 2018", "\nFull Chapters Due: July 01, 2018", "\nChapter Acceptance Notification: September 01, 2018", "\nRevised Version Due Date: September 21, 2018", "\nRevised Chapter Acceptance Notification: November 01, 2018", "\nEstimated Publication Date: Januaray 2019", "\nTOPICS OF INTEREST", "\nAny contribution that provides an added value to Robot Operating System (ROS) is of interest for the book. The topics of interest include \u2013 but not limited to- the following:", "\nROS 2.0 Tutorials", "\nDeep Learning with ROS", "\nArtificial Intelligence with ROS", "\nROS Basics and Foundations", "\nRobot Control and Navigation", "\nSelf-driving cars using ROS", "\nArm Manipulation", "\nRobot Perception", "\nSecurity of ROS", "\nRobot Safety with ROS", "\nROS Integration to Web and Mobile apps", "\nReal-World Application Deployment using ROS", "\nUsing ROS in Higher Education", "\nContributed ROS Packages", "\nUnmanned Aerial Vehicles Control and Navigation", "\nSoftware Archiectures using ROS", "\nROS-enabled Robot Design", "\nThis volume welcome chapters about the upcoming version ROS 2.0, including tutorials, comparisong with ROS 1.0, new features in ROS 2.0.", "Also, papers related to using ROS for umanned aerial vehicles are particularly welcome.", "CHAPTERS CATEGORIES", "\nThe book will accept three categories of chapters:", "\nTutorial chapter: it focuses on a particular ROS concept or contributed package and provides a step-by-step tutorial that explains the fundamental of the concepts/packages and presents detailed guidelines on how to use the contributed code. It must specify the ROS versions that are compatible with the tutorial code, and must provide illustration with figures and code interpretations. The code must be available to public in a share repository (to be announced later). Accompanying Video tutorials are highly recommended.", "\nResearch chapter: it presents a research technical contribution in the robotics area where ROS was used to validate the findings. The chapter must presents a sufficient material on the technical contribution in addition to necessary theoretical background, but a major focus should be made to ROS implementation and experimentation. The implementation and experimentation must be sufficiently detailed for a reader be able to reproduce the experiments. It must specify the ROS versions that are compatible with the tutorial code, and must provide illustration with figures and code interpretations. The code must be available to public in a share repository (to be announced later). Accompanying Video tutorials are highly recommended.", "\nCase study chapter: a case study chapter should present a real-world experimentation with ROS on particular robotics platform. It should present a detailed description of observations made during experiments, and what are the challenges encountered during development and experimentation. The chapter should also highlight the best practices that would facilitate deployment and the lessons learnt.", "\nThis volume welcome chapters about the upcoming version ROS 2.0, including tutorials, comparisong with ROS 1.0, new features in ROS 2.0. Also, hot topics papers related to using ROS for umanned aerial vehicles and self-driving cars are particularly welcome.", "SUBMISSION PROCEDURE", "\nResearchers and practitioners are invited to submit a 1-3 page chapter proposal clearly explaining the mission and concerns of the proposed chapter. This helps as a registration of the chapter for the final submission. Submission of abstracts must be done through EasyChair system Authors of accepted proposals will be notified about the status of their proposals and sent chapter guidelines. Full chapters must be submitted by July 01, 2018 through EasyChair system. The Chapter should not exceed 50 pages with respect to Springer format. All submitted chapters will be reviewed on a single-blind review basis. Contributors may also be requested to serve as reviewers for this project.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/call-for-chapters-springer-book-robot-operating-system-ros-volume-4/4224"},
{"title": "Hardware Robot Information Model (HRIM): Beriain release", "thread_contents": ["Dear ROS community,", "Our team at Acutronic Robotics is very excited to introduce the second release ", " of HRIM: ", ". HRIM is an ", " that focuses on hardware at the component level and aims to enable modularity and interoperability via \u201cstandardizing\u201d data I/O amongst said components.", "HRIM in itself can be separated in two concepts:", ": On one hand, we focus on developing communication models that encompass the components currently being used in the industry, categorized by their function. We need ", "-enough models that can adapt to the individualities of different manufacturers and specific products while maintaining a homogeneous structure. You can read further on our approach for this ", ", and the definition and description of our models ", ". Basically, and as a ", ", we define certain ", " we deem necessary across all components (like identification, communication status\u2026), ", " capabilities all components of that subtype should have (like all cameras publishing images), and ", " capabilities that each module may or may not have (like a motor providing a temperature reading).", ": On the other, we get into the composition of said models through what we refer to as the ", ". This is a way to take the existing model definitions as the building blocks for a specific module, with specific capabilities. The meta-model ", ".", " contains all the module models we\u2019ve developed so far in a platform independent representation through XML, and the tooling to \u201ccompile\u201d these representations into ROS 2.0\u2019s communication artifacts. That is the main difference from the previous release, ", ".", "The meta-model has not been added to the main branch yet, as we are still considering many approaches on how to implement it. One of these approaches is available at our ", " branch for anyone that wants to put their hands on it.", "Contributions and suggestions are very welcomed. We strongly believe our best bet to realise the potential of HRIM lies in receiving input from multiple types of profile and field, this is one of the main reasons why we decided on an open-source development. We don\u2019t aim to become ", " \u201cstandard\u201d, but to truly impact how roboticists develop new solutions and help them in the often tedious and time-consuming integration effort, plus some extras. And we know ", ". Anyone interested is more than welcome to initiate a discussion at ", ".", "Thanks a lot to ROS Industrial for believing in this project\u2019s value and providing funding for its development.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/hardware-robot-information-model-hrim-beriain-release/7458"},
{"title": "Local roscon benefit", "thread_contents": ["I found in ", " there will be an inaugural localized version of ROSCon this year, co-hosted by Open Robotics. While I\u2019m definitely happy to see such an expansion, I\u2019m curious what\u2019s the expectation out of it from a global community member\u2019s perspective.", "Looks like the presentation can be done in the local language for this particular event I referred to, which makes me a bit worried that technical and any information won\u2019t be easily shared in the global community, unlike all previous ROSCons done in English. I believe a part of the reason why ROS has been so successful, same as some other great OSS projects, is because of the global community, the amount of information stacked there and how amazingly well it\u2019s been organized. So I personally think ideally every member should gear even more toward the global community. But I know I\u2019m way too narrow-sighted, thus simply curious.", "Thank you in advance.", "\nIsaac", "P.S. I found there are some studies (", ", but I don\u2019t have an access) about local OSS community role.", "I can understand the desire to have a united global community. Interaction at the international level is one of the greatest things about open source software for me.", "Having said that, the concept of local events held in the local language is as old as open source itself. I have seen events held in Japan in Japanese for projects as large and diverse as HTML5, Firefox and Google\u2019s various projects. These sorts of events are important because not everyone can speak English with the level of confidence necessary to participant actively in the global community. Local events allow those who can to provide information of new projects and trends, and knowledge of using or contributing to a project, to those who can\u2019t get this information directly in English.", "The concept of local/local-language events is not new to ROS, either. Although ROSCon JP is the first to be officially licensed by the OSRF, there have been numerous events in the past. The biggest example I can think of is the ROS summer camp that has been held annually in China for several years now. They get several hundred participants and I don\u2019t think they are doing it in English. In Japan, we have had informal Japanese-language events for several years now.", "The reason we are working with the OSRF for ROSCon JP is to create a central event for the local community in the same way that the international ROSCon has become a central event for the global ROS community. It allows us to make the scale much bigger than an informal event can be. Being officially licensed by the OSRF helps us to attract sponsors, which in turn lets us do things that cost money but are important, like provide exhibition space, bring in valuable overseas speakers (with translators), get a high-quality logo by the same artist as the main ROSCon logo, provide food, record the talks and archive them online, etc. All these contribute to making the event memorable, which in turn makes it valuable as a means to motivate the local community to participate in a project that does not have that much information available in Japanese, as well as motivate the community to grow itself organically. As with ROSCon, ROSCon JP is a by-the-community-for-the-community event.", "Having the OSRF on board has meant that we are getting valuable organising support from the organisers of ROSCon, we get a set of rules and guidelines to guide us in planning an event that meets their standards (these have been much more useful than you might think), we get to use the ROSCon trademark, and additional things like use of the OSRF video archive site for the talk recordings (so we don\u2019t have to do that ourselves).", "I don\u2019t want to speak for the OSRF, but my understanding is that for them having a local event that is licensed means they can control how the ROS and ROSCon branding is used, ensuring that the event meets their standards. We are effectively their test case for them to figure out how to do this, and if we can make our event a success then I think you will see more OSRF-backed local events in non-English speaking countries in the future.", "I too want to ensure that ROS remains strong on international cooperation. I see this sort of local-language event as an important part of that, providing a local feeder to the wider community in order to attract people to it who ordinarily would not have a way to begin participating.", "Speaking as a ROSCon co-organizer/co-author of the local-language strategy\u2026What Geoff said ", "I think that is best if anyone can speak fluently English , after all English is the world language , instead of Japanese , or Chinese , French , even Deustch, so if you want to communicate with your guy in Japan , Japanese is enough ,", "\nbut ROSCon is world event , I insist we should or have to speak English fluently ,  so , learning English , guy", "I think having local ROSCon (affiliated with the Open Source Robotics Foundation to keep track of what is being shown/discussed for the benefit of all the community) is a very good thing. When I was in Barcelona, Spain we did for a short while a Robotics meeting (", ") where we talked a lot about ROS in Spanish (and Catalan!).", "This allowed people that are not that fluent (or not at all) in English to ask lots of questions that otherwise would get hardly answered. It builds up an even bigger community. Some translation efforts came from that too. Think of the younger generations that are still learning English as a second language, this is great for them.", "In the worst case scenario a local group grows so much in size and activity that they become very important/influential. At that point I\u2019m pretty sure we could find a way for everyone to benefit from that group\u2019s knowledge sharing. If the talks are recorded it\u2019s a matter of writing subtitles for them. If there are tutorial packages, well, some translation would need to be done if they are that interesting.", "Its Awesome , I want You done this project Successfully so that other can Organised also in there Home Country . I Know local language give more freedom to peoples so that they can put there enormous questions in-front of ROS community .", "I think the ROS community is being grown rapidly and we need to discuss the next step.", "\nThe official ", " described:", "ROSCon is a developers conference, in the model of PyCon and BoostCon.", "As you may know that PyCon has lots of ", " such as PyCon APAC (Asia Pacific) and PyCon JP (Japan).", "\nIt\u2019s time to consider holding regional / domestic ROSCons in cooperation with OSRF!", "Speaking for Open Robotics (and specifically for our non-profit parent organization OSRF, which is the owner of the ROSCon trademark and organizer of the main ROSCon event): I\u2019m really excited about this development. Over the years we\u2019ve had numerous inquiries about doing ROSCon events that are localized (by region and/or language) or customized (by region, institution, and/or application domain). When ", " came to us with a concrete proposal for doing ROSCon JP, we decided to give it a try.", "Working with ", " and the ROSCon Organizing Committee, we drafted a Rules of ROSCon document that explains the essential characteristics that make an event a ROSCon event and also the terms under which we may choose to license the ROSCon name for use with such an event.", "We\u2019re using ROSCon JP in September this year as the first trial of this new idea. If it goes well (I\u2019m confident that it will, but I\u2019ll be there myself to check ", "), then we\u2019ll refine and publish the Rule of ROSCon and set up a way for other would-be organizers to propose their own ROSCon events. So stay tuned for that. And if you want to start work on an event in the meantime, contact us directly and we\u2019ll discuss it with you.", "To be clear, we don\u2019t want to get in the middle of the various ROS-related events that happen around the world already, from local user group meetings to tutorials to summer schools. Those are great events that happen on their own without our involvement. We\u2019re looking after the ", " name, ensuring that people know what it means when they\u2019re attending an event that uses that name, and also providing guidance and advice to organizers of such events.", "I know we should be open\u2010minded in any opinion.", "I\u2019m Yuki Nakagawa, president and CEO of RT Corp. and trustee of ROSConJP.", "\nI watched ROS since 2009 and our company sell many TurtleBot series in Japan.", "I\u2019d like to talk about local activities in local language for ROS as OSS.", "Global community of OSS is being grown step by step such as local, global, local and global.", "\nI can say that from my experience that I watched \u201cthe rise and fall\u201d and joined so many global activities like RoboCup since 1997, google android developer community since 2008 and so on.", "Localization becomes a big problem when Global OSS activity spreads in each country, as you know.", "\nLocal community and activities help to solve these issues.", "\nWe, ROSConJP, hope to facilitate such community in Japan.", "Especially, almost Japanese engineers are not required to speak in English in their work.", "\n(Of course, depending on company or school.)", "\nMother tongue supports many engineers to understand deeply if they can touch new idea from global activities.", "If you favor to community \u201cmust use English only\u201d, you can imagine what happens.", "\nI mean that you will eliminate engineers and young engineers\u2019 eggs who can not understand English.", "I think it\u2019s time to step into new stage to bridge beyond language.", "I hope all of you to be \u201cOpen\u201d mind. ", "Thank you.", "Yuki Nakagawa", "\nRT Corp.", "Hello,", "I hope you don\u2019t mind my intruding\u2026", "My name is Hajime Saito. I used to be at General Robotix. I was at the first meeting at Willow Garage, which was hosted by Eric Berger. So I do have an interest in ROS, and have been following it\u2019s development over these years. Sadly, I\u2019ve not really been involved in the development side, much.", "I think what Isaac is trying to ask is, are the local RosCon events mainly for information dissemination, or will they be vehicles for active technical dialog? Do you expect local groups to pray at the altar or ROS, or does the communication go both ways?", "If you want the communication to go both ways, you\u2019ll need people to take up the dialog with RosCon(main) or with the OSRF. Having been on the receiving end during an international cooperation effort, the amount of work, at the beginning, is not trivial.", "Please tell me your thoughts on this, and whether you think I\u2019ve taken a few steps too far.", "Best regards,", "Hajime", "are the local RosCon events mainly for information dissemination, or will they be vehicles for active technical dialog?", "Both. It would be denigrating to Japanese users of ROS to assume that they are solely there to consume information, and have nothing to contribute themselves. Many of the submitted proposals are aiming to use ROSCon JP as a first-run for a talk at ROSCon.", "Both. It would be denigrating to Japanese users of ROS to assume that they are solely there to consume information, and have nothing to contribute themselves.", "+1", "I\u2019m excited to see the contributions from our community members in Japan.", "Perhaps we\u2019ll eventually have ubiquitous high-quality translation of all audio and text from and to any language. Until that happens, I\u2019ll happily muddle through with free access to the presentation content (ROSCon JP videos and slides will be archived at ", "), and more importantly, the underlying code, which we can all read and understand.", "On that note, I\u2019ll just namedrop ", " as a crowdsourcing tool for subtitle generation and translation that I\u2019ve used with satisfaction in the past.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/local-roscon-benefit/5064"},
{"title": "Announcing SolidWorks to URDF Exporter 1.5", "thread_contents": ["It is my pleasure to announce that we\u2019ve made a huge update to the SolidWorks URDF Exporter. A big thank you is due to ", " for inspiring and supporting the work and also to the team at ", ".", "From Verb Surgical:", "These new features identified by Verb are included in over 61 new merged Pull Requests. Some of the biggest:", "We\u2019ve also taken this opportunity to migrate from BitBucket to Github hosted under the ROS organization.", "SolidWorks to URDF Exporter. Contribute to ros/solidworks_urdf_exporter development by creating an account on GitHub.", "Please see the wiki for a download link and more information.", "Again, thank you to Verb Surgical and PickNik, but also thank you to the large number of users who continue to use this tool. I never could have imagined my Willow Garage intern project would be so widely used today!", "\nVerb Surgical, along with physicians and administrators, is creating the future of surgery. A future with improved patient outcomes, better information and greater hospital efficiency around the world. Our mission is to \u201cdemocratize surgery\u201d globally. Verbs are known to connect someone who does with something that needs doing. In the future, our actions will connect surgeons to an end-to-end platform for surgery, including pre-operative planning, intra-operative decision making and post-operative care.", "\nPickNik is supporting the worldwide open source robotics movement through community building, consulting expertise, and the development of highly-capable motion planning software. PickNik combines world-class robotics expertise and state of the art open source robotics frameworks to save you time and money.", "\nStephen Brawner is the original developer and current maintainer of the SolidWorks URDF Exporter. An experienced researcher in robotics and AI with code deployed on real-world robots, Stephen offers the know-how and insight to tackle a wide array of projects.", "Great work. This will  be very useful.", "I waited a long time for it! Great work!", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["All custom inputs you add to your URDF configuration are now saved internally. No longer will you have to re-input joint limits or other hand-entered items.", "Optionally export the URDF without creating meshes. Have some meshes that you already like? Now you can just quickly update the URDF with a handy new button!", "Import/Export from a CSV file: For some larger robot models, it\u2019s not practical to track all properties in the SolidWorks model. Now you can import specific properties, like existing meshes, mass/inertia properties or joint information from a CSV file.", "Unit and integration testing: New tests will help ensure that new code is validated against existing SW model examples.", "Tons of bug fixes!"], "url": "https://discourse.ros.org/t/announcing-solidworks-to-urdf-exporter-1-5/9242"},
{"title": "Announcing GazeSense_Bridge Package", "thread_contents": ["\n", " is an application developed by Eyeware Tech SA (", ") that provides 3D eye tracking by relying on consumer 3D sensors. GazeSense\u2122 allows to define virtual 3D objects with respect to the camera and world coordinate systems and measure the attention of people towards the objects.", "The bridge currently implements an example in which the attention sensing objects are defined in terms of 3D primitives (eg. planes, cylinders, points). The tracking parameters, like head pose, as well as the measurement of attention towards the virtual 3D objects, are then published as the topic  ", " . Other ROS nodes can subscribe receiving this feed information. Currently, the GazeSense\u2122 bridge does not yet support reading RGBD camera data from a ROS node. Should this feature be of help for you, reach out to us to let us know via an email to ", " or by simply submitting your request in our Trello Eyeware Products Board / Ideas & Requests (", "). Markers are also provided for visualization within rviz (", ").", ": ", "\n", ": ", "\n", " ", "  It offers a mechanism for perception, where GazeSense provides robotics researchers and developers with the real-time signals on attention towards objects. One would be able to tell if a person interacting with the robot is looking at either of the defined objects or not, or if looking at the robot itself. The attention label (\u2018what is the person looking at\u2019) is then published as a topic into the ROS framework.", "Sensing attention is particularly useful for people working in the human-robot interaction (HRI) as attention sensing is key for understanding engagement, intention and for building rapport.", "The first iteration of the GazeSense ROS plugin is focused towards a hard-coded version to allow a user to:", "Because creating truly robust and general-purpose robot software is hard, and no one can hope to do it alone. We are thus joining the world class, collaborative robotics software development platform and vibrant ROS community of roboticists, to help contribute producing robust solutions and build on each other\u2019s work.", "If you are looking for more features, like for example a more \u2018plug-n-play\u2019 object definition for the GazeSense ROS bridge, reach out to us to let us know via an email to ", " or by simply submitting your request in our ", ".", "Your feedback is most appreciated!", "Thanks,", "\nAlexandra Petrus", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["define objects and feed them into GazeSense;", "capture the GazeSense signals on attention towards objects and publish it into ROS."], "url": "https://discourse.ros.org/t/announcing-gazesense-bridge-package/9285"},
{"title": "ROS acceleration using Xilinx AI Edge computing", "thread_contents": ["Future Robots are smarter and capable of making decisions in real-time. Decision making requires the use of AI for performing classification and semantic segmentation. Such AI algorithms require the use of dedicated hardware for making decisions at the edge. This group is meant for discussing subjects related to the integration of the:", "The following slack workspace (", ") is available for online discussing.", "\nXilinx Edge AI framework,", "The Xilinx Edge AI Platform provides comprehensive tools and models which utilize unique deep compression and hardware-accelerated Deep Learning technology.", "The platform provides efficient, convenient and economical inference deployments for embedded-CPU-based FPGAs.", "The Xilinx AI team consists of renowned researchers and experienced professionals known for their pioneering work in the field of deep learning.", "I would tempted to encourage people start by looking at Ultra96.", "Thanks ", ". I have experience using the following boards:", "I would like to encourage you to share your experience using the Ultra96", "\nKind Regards", "\nPedro", "The Ultra96-V2 updates and refreshes the Ultra96 product that was released in 2018. Like Ultra96, the Ultra96-V2 is an Arm-based, Xilinx Zynq UltraScale+ \u2122 MPSoC development board based on the Linaro", "\n", "\n", "The Ultra96-V2 updates and refreshes the Ultra96 product that was released in 2018. Like Ultra96, the Ultra96-V2 is an Arm-based, Xilinx Zynq UltraScale+ \u2122 MPSoC development board based on the Linaro 96Boards Consumer Edition (CE) specification....", "\n", "\n", "Avnet has announced the new Ultra96 development board, compatible with the 96Boards Consumer Edition specification from Linaro. The Ultra96\u2026", "\n", "\n", "Ultra96\u2122 is an ARM-based, Xilinx Zynq UltraScale+\u2122 MPSoC development board based on the Linaro 96Boards specification. The 96Boards\u2019 specifications are open and define a standard board layout for development platforms that can be used by software...", "\n", "\n", "One of the best Edge AI platforms out there today following 96Boards specification.", "For full disclosure  - I am the author of 96Boards specification.", ",", "\nHave you come across any Ultra96 project where ROS is used? If so can you share it here?", "\u2026 I am also totally biased, as I created ", " platform.", "We wanted to use the EV version of the Zynq MPSoC to allow the \u201cEdge-AI\u201d to benefit from the integrated codecs, etc. + give more fabric and more memory. The VCS platform is also in Open Source, but has a much higher cost, intended for industrial application.", "Even Xilinx like Sundance\u2019s \u2018story\u2019 and efforts - see ", " - and", "The Ultra96 is a \u2018gift\u2019 from Farnell/Avnet to help R&D and I can only recommend buying one to learn about Xilinx Vitis and Edge-AI.", "i got some experience on ", ", including ROS1 to publish the sensor data.", "Hi ", ",", "\nCan I kindly ask you to share your experience here? Perhaps a simple tutorial.", "In my experience the xilinx workflow works really well, IF the model you are trying to deploy was built with the same version of caffe or tensorflow as your DECENT and DNNC. Trying to deploy pre-trained models you find online can be tricky and time-consuming (unless they come from the AI model zoo of course ", " then you are one step removed from a DPU kernel). Deploying your own models should be fine if you align your environments.", "I\u2019m also interested to see if and when pytorch support arrives. I\u2019m currently working with DNNDK on the ZCU102, maybe the newer VITIS AI (built on top of DNNDK) has support for more frameworks and easier integration of models built with/against different versions of tensorflow and caffe?", "Hi ", ",", "\nPlease join our growing community on slack ", ".", "\nLets make our life easier.", "\nBw,", "\nPedro", "we did internally put some login in PL for doing pre-process for imaging (not so much i can share), and the CPU receives that pre-processed data and publishes as ROS topic. this is long time ago, but if i remember correctly, i did use ROS kinetic.", "hope that helps you.", "Hi ", ",", "\nCan you please join our slack group ", "Hi ", ", thank you for the invite, however we got a ZCU102 loaner to do some testing for a project. We will be handing that back over soon. So I am not sure if Ill be handling any FPGAs for the foreseeable future. I am interested in the subject in general, but I dont think I\u2019ll be contributing much.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["ROS", "ROS2", "OpenCV4", "Librealsense2", "Xilinx DPU TRM"], "url": "https://discourse.ros.org/t/ros-acceleration-using-xilinx-ai-edge-computing/11995"},
{"title": "Technical Steering Committee (TSC) Meeting #11 Minutes", "thread_contents": [" Geoffrey Biggs", "Question for all TSC members: If the safety case example documents contain the following notice, are they still usable?", "By using this safety report (\u201cthe Report\u201d) produced by the Connected Places Catapult (\u201cCPC\u201d) you accept this disclaimer in full. The Report has been prepared in good faith on the basis of information, findings and analysis of our specific research activity entitled \u201cAutonomous Valet Parking\u201d. All information contained in the Report is provided \u201cas is\u201d and CPC does not guarantee or warrant the accuracy, reliability or completeness of the information in the Report or its usefulness in achieving any particular outcome or purpose.  CPC does not owe a duty of care to any third-party readers.", "\nYou are responsible for assessing the relevance and accuracy of the content of this publication. You must not rely on the Report as an alternative to seeking appropriate advice.  and nothing in the Report shall to any extent substitute for consultation with an appropriately qualified advisor.  You must obtain professional or specialist advice before taking, or refraining from, any action on the basis of the content of the Report.", "\nTo the fullest extent permitted by law, CPC excludes all conditions, warranties, representations or other terms which may apply to the Report or any content in it, whether express or implied. CPC will not be liable to any user for any loss or damage, whether in contract, tort (including negligence), breach of statutory duty, or otherwise, including without limitation loss of or damage to profits, sale business, revenue, use, production, anticipated savings, business opportunity, goodwill, reputation or any indirect or consequential loss or damage.  Nothing in the Report excludes or limits CPC\u2019s for any liability that cannot be excluded or limited by English law.", "\nAny entity seeking to conduct autonomous vehicle trials will need to develop and publish a safety case specific to their own trials (as specified by the government\u2019s Centre for Connected & Autonomous Vehicles (CCAV) Code of Practice for Automated Vehicle Trialling) and gain permission to do so.", "Held 2 Autoware Maps WG meetings", "\n26 September 2019: ", "\n10 October 2019: ", "As a WG, we\u2019ve made quite a lot of progress developing use cases for maps and creating requirements documents associated with those use cases.  There are 2 logical next steps:", "The architecture work seems to be more of the Autoware WG remit, so we\u2019ve proposed to join the Autoware WG and generate agreement there before implementing the solution.", " ", " ", " regarding the \" Notice in safety case example\" - I have no problems with it and would love to read it.", "I fully understand that CPC does not want to be liable. Other safety reports (e.g. the one from ", " also contain disclaimers.", "Just to be clear, we are talking about a safety case such as you might hand to TuV for certification, not a safety report, which is made as much for public consumption as anything else.", "The primary purpose of this documentation is to construct a safety plan to supply to a regulator (e.g. DfT in the UK) and which would be considered in court if there was serious incident during testing the automated vehicle. It\u2019s purpose is to show that the risks have been considered and mitigated where possible.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Alfredo Bencomo (Open Robotics)", "Geoffrey Biggs (AWF)", "Leo Fang (Hesai)", "Esteve Fernandez (Apex.AI)", "Kenji Funaoka (TierIV)", "Brian Holt (Parkopedia)", "Dan Isaacs (Xilinx)", "Shinpei Kato (AWF board)", "Seonman Kim (LGE)", "Taylor Lochrane (DOT)", "Angelo Mastroberardino (Parkopedia)", "Sathya Prasad Nanjundaiah (TCS)", "Tsutomu Otake (Macnica)", "Dejan Pangercic (Apex.AI)", "Brian Shin (LGE)", "Stephane Strahm (Kalray)", "Daisuke Tanaka (Tier IV)", "Akihiko Tsukuda (eSOL)", "Josh Whitley (AutonomouStuff)", "Opening remarks and new member introductions", "\n", " Confirmation of previous minutes", "\n", " Action items from previous meeting", "\n", " Autoware", "\n", " Map formats", "\n", " ECU/Platform", "\n", " Simulation", "Release the safety case example\n", "\n", "Review the notice proposed to be added to the safety case example documents\n", "All", "\n", "Create working group wiki pages\n", "\n", ", ", "\n", "\n", "Follow up on the use of the reference platform hardware in the AVP demo\n", "\n", "Provide a backup plan for the AVP demo\u2019s ECU\n", "\n", "Get a summary of the LGSVL license review conclusions and make it publically available\n", "\n", "List requirements for simulation and provide them to the TSC\n", "\n", " / Maps WG", "\n", "Taylor Lochrane, Federal Highway Administration of the DOT\n", "Government Member", "Developing their Carma programme and hoping to work with Autoware as they grow this across the US.", "\n", "Minutes approved.", "Release the safety case example\n", "\n", " Still can\u2019t release, but the documents are in much better state. Now licensed as CC-BY 4.0; currently under review by the legal department which still needs a little convincing.", "\n", "Create working group wiki pages\n", "\n", ", ", ", ", ", ", "\n", "\n", " Pages created for Reference Platform and Maps WGs. Still none for the simulators working group.", "\n", "Post the Autoware software architect recruitment notice to any useful forums\n", "AWF board", "\n", " None", "\n", "Provide HD Map for AutonomouStuff carpark\n", "\n", ", ", "\n", "\n", " Map has been made available and a new version is going up today that irons out many bugs. The map format is Lanelet2. Plan to release several more maps soon along with Carla simulation environments. The end-goal of the Maps WG is Carla simulated environments using OpenDrive maps. A common maps repository is needed. (", " to create one.)", "\n", "Merge Request registration deadline passed at the start of October.", "Over 100 MRs were merged prior to the deadline.", "60 MRs remained to be reviewed and merged after the cut-off.", "Making good progress towards getting all of them reviewed in time for the MR merge deadline at the start of November.", "Tier IV will be doing in-car testing over the next two days. Further testing will be done in November.", "AutonomouStuff will be doing in-car testing in November.", "Target release date (December 3rd) is still on track.", "IMU/GPS driver ready for merge after addressing Ito-san\u2019s feedback: ", "\n", "Request community involvement in reviewing MRs in Autoware Auto\n", "Pending MRs on ", " and ", " work:\n", "\n", "\n", "Pure pursuit:\n", "\n", " : ", "\n", "We are working on porting to Autoware.Auto ", "\n", "\n", "\n", " \u2013 planner and controller are functional, but features are being added in the coming months", "Planning the integration hackathon in Bay Area early 2020 should begin \u2013 shooting for end of March 2020", "London Autoware.Auto hackathon with Parkopedia", "Autoware Meetup mid-September 2019: meetup had very good attendance of about 45-50 people and everything went very smoothly.", "Autoware presented at the ROS Meetup in Munich: ", "\n", "Who is going to work on NDT mapping for Autoware.Auto?\n", "\n", "Rationalise the Use Cases and Requirements into a single coherent set", "Begin work on the architecture that will fulfil these requirements", "Apex.AI: Is the Maps WG looking for use-case specific requirements, or requirements from the whole stack in general?\n", "\n", " : The WG has plenty of use cases and requirements, the question now is, how do we fulfil these requirements?", "\n", "Apex.AI: We need a software architect who can do that stuff and who has lots of experience in autonomous driving. We don\u2019t have one, so we should focus on achieving the autonomous valet parking use case early next year, even if it is not the greatest architecture.", "\n", ": It feels like the Maps WG has done a lot of work and achieved much, but it is not clear what we can do next due to other aspects of Autoware.Auto not progressing.", "\n", ":  There are a few people who can at least provide feedback on an architecture, so get them involved.", "\n", ": The next Maps WG meeting will work on a candidate architecture that we can take to the Autoware WG meeting.", "Meeting every two weeks, with a two-meeting schedule (NA-friendly Asia-friendly)", "First meeting was held on the 15th/16th of October, and was an introductory call.\n", "12 participants, which is a good number for a first meeting.", "\n", "Have listed the initial list of requirements for the platform and for the working group to start getting feedback.", "Have described the initial reference platform which is intended as a starting point to kick-start discussion and work.", "Need to focus now on creating requirements, and on attracting people to work on the reference platform.", "What tool and process should we use for requirements management?", "The initial reference platform is being worked on at Autocore.", "The Reference Platform WG would like to have oversight of the ", " project.\n", "In particular the interfaces for sensors such as cameras and LiDARs, etc. need to be determined; these may be out of scope of the reference platform WG but they are part of ", ".", "\n", "\n", " Hardware/Software[Autoware] interfaces at the ROS level are the scope of the Autoware WG (because they are part of the Autoware architecture), but the reference platform WG needs to be heavily involved.", "\n", " Is it feasible to have the hardware reference platform available by March next year for the AVP demo?\n", "\n", " Yes, probably, but need to confirm with Autocore", "\n", " What is the backup plan if it is not ready? What we need is the Lexus vehicle equipped with sensors performing the AVP demo, and that vehicle needs a computer on which Autoware will run and the correct sensors.", "\n", " Will follow up offline after confirming with ", ".", "\n", "\n", " We need a backup plan using a standard computer and Linux, or something like that. But ideally we want to use the reference platform with an RTOS.", "\n", " eSOL is not yet working on Autocore\u2019s hardware for use with eMCOS, so we would like documentation on the hardware so we can look into beginning that work.", "\n", " Is Autocore\u2019s hardware currently the only available hardware for the reference platform? If it is a reference platform there should be more than one.\n", "\n", " Currently Autocore\u2019s is the only reference platform that has been proposed, and it is still being brought up.", "\n", "\n", " will follow up on if the Autocore hardware will be ready and the backup plan if not.", "\n", " will be looked after by the Reference Platform WG. Analogous to the Autoware working group looking after the Autoware.Auto project.", "Second WG meeting was held. Discussed the simulation facilities required for the AVP use case.", "Discussed features that a simulator should be judged on, including factors such as supporting a scenario format, being deterministic, and so on.\n", "Next WG meeting will begin reviewing simulators according to each of these requirements in order to identify suitable simulators for the AVP use case.", "\n", "Apex.AI has decided to use LGSVL to demonstrate its technology at ROSCon and at CES. The goal is to show Apex.AI\u2019s LiDAR data processing using a simulated environment. Setting up the demo was relatively easy and LGE provided good support. Apex.AI sees no reason not to use this simulator right away for the AVP use case. Can LGE volunteer to integrate the same demo based on Autoware.Auto (not the Apex.AI proprietry software)?\n", "\n", " We can look at it, but not yet clear what the integration work is that is required. There are several undecided points still, such as map format. Perhaps this is better work for the WG to do.", "\n", " Reviewing simulators provides valuable information, but doing this sort of practical contribution is probably more immediately useful to the Foundation.", "\n", "\n", " Is there interest in Uber\u2019s web-based visualisation tool?\n", "\n", " This particular tool may not meet our needs, but the ROS community in general is heading in this direction so in the medium term expect to have options available we can just use.", "\n", "\n", " Has the work to review the LGSVL license been completed and what was the outcome?\n", "\n", " We are using the simulator for demos where we can\u2019t bring a vehicle which fits within the license.", "\n", " The review did happen and the conclusion was that the license is legally not a problem but usability-wise not using a standard license makes it a bit annoying for users to be sure if the license is OK.", "\n", " The Unity license does not come into play unless you start acting as a Unity developer, i.e. you open a project and start making content to use with the simulator. Normal users targetted by LGSVL (using just the binary distributions) don\u2019t have to make a payment to Unity.", "\n", " to get the board to summarise their license review and make it available widely so that potential users of LGSVL can have peace of mind.", "\n", "The Maps WG seems to be targetting Carla, but the AWF in general is preferring LGSVL. We need to get a demo/product out and simulation is a key enabler, but we are still talking about two simulators and not even one is being properly used. We must agree on one well-integrated and used simulator rather than having two simulators, neither of which is used properly. Whether this is Carla or LGSVL is not the problem, what is needed is choosing one and all using it.", "\n", " The Maps WG has done all its work in the open, so there shouldn\u2019t be any surprise in the route chosen (using Carla and OpenDrive). Also Autoware is supposed to be open to any simulator. Carla was chosen because it has the best support for maps, especially OpenDrive, as well as the overall ASAM toolchain for autonomous vehicles (OpenScenario, etc.).", "The Simulation WG is aware of the need to support OpenDrive, OpenScenario, etc.", "LGSVL is currently finishing up support for importing OpenDrive maps. LGSVL plans to support ", " scenario format but is not currently working on OpenScenario.", "The Maps WG should inform the TSC and the next meeting what their requirements for simulation are."], "url": "https://discourse.ros.org/t/technical-steering-committee-tsc-meeting-11-minutes/11165"},
{"title": "ndt_mapping Method Types and parameters", "thread_contents": ["Is there documentation regarding the method types and other parameters for ndt_mapping? Most of the settings are straightforward, but some are opaque. There is no documentation regarding pcl_anh or pcl_anh_gpu or pcl_openmp as far as I can tell. Does \u201canh\u201d refer to the adaptive octree region-growing method devised by ", "? Extracting assumptions with which to justify node settings for map generation is challenging using the source code alone. A simple explanation (or README) would prove very helpful.", "Followup question - What are the trade-offs when comparing the use of pcl_generic vs pcl_anh?", "I guess \u201canh\u201d stands for the author\u2019s name of the implementation. pcl_generic uses PCL, while pcl_anh* uses its original implementation. pcl_generic uses radiusSearch, while pcl_anh* uses direct mapping from x,y,z for searching neighbor cells. pcl_anh* consumes a lot of memory compared to pcl_generic. I\u2019m not familiar with pcl_openmp.", "Like ", " stated ", " is the last name of the author. \u201cAnh Viet Nguyen\u201d a PhD student in Nagoya University, who specialized in GPU acceleration. I\u2019ll ask him to link here his research paper.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["<?xml version=\"1.0\"?>", "<package>", "    <name>ndt_gpu</name>", "    <version>1.11.0</version>", "    <description>The ndt_gpu package</description>", "    <maintainer email=\"yuki@ertl.jp\">Yuki Kitsukawa</maintainer>", "    <maintainer email=\"anh@ertl.jp\">Anh Viet Nguyen</maintainer>", "    <license>Apache 2</license>", "    <buildtool_depend>catkin</buildtool_depend>", "\n", "    <build_depend>libpcl-all-dev</build_depend>", "\n", "    <run_depend>libpcl-all</run_depend>", "\n", "</package>"], "url": "https://discourse.ros.org/t/ndt-mapping-method-types-and-parameters/8482"},
{"title": "C++11 std::shared_ptr in public API", "thread_contents": ["This is a follow-up from our ", " about public API and C++11. I would like to propose in ROS-M we remove the no std::shared_ptrs in the public API. Remove from REP-003:", "The API of the packages included in desktop-full will not use any C++11-specific feature", "This proposal is motivated by annoying shims that have been put in place to allow MoveIt! to use std::shared_ptrs but still hide them externally. Currently in Lunar we are having the ", " with urdf_model still ", " but urdfdom_headers ", ".", "I\u2019m not saying it is mandatory everyone switch to shared_ptrs, but it would be nice for authors/maintainers to have the option even if their package is in desktop-full. Thoughts?", "Been there, done that. Both with MoveIt and ros_control suffers/suffered (?) from this.", "The referred lines were", " precisely with the purpose of changing those macros.", "There were plenty of code using non-typedef-ed shared_ptr, the above two projects got through the trouble by adapting the macros, I have no knowledge of others.", " for finally brinding the urdf:: together.", "I think that C++11-compatible compilers are wide-spread enough now (at least on Linux) that using C++11 in the external API should not be a problem.", " the ", " you link to does not address boost vs std shared pointers, or C++11, but rather only splitting out the packages into separate repos.", "Yep, that\u2019s the main goal there. Getting changes through there hasn\u2019t been easy as there are many different things that share the release cycle and dependencies. urdf hasn\u2019t been moved yet, you could push the changes in now.", "The previous comment from ", " still applies: ", "Changing from ", " to ", " ", " in e.g. ROS-M would require all consumers of that API to update their code. Each package needs to make that decision on its own. But for many \u201ccore\u201d ROS packages that might simply not be feasible or desired. So this downside needs to be taken into account when considering such a change.", "That was a thorough comment ", " wrote and a good reminder of the rationale. I don\u2019t know if ROS-M will still target Ubuntu 16.04, but if not, gcc6 will be on all Ubuntu distros already (", ") so the possibility is there.", "Following the previous targeted platforms, ROS-Melodic will target ubuntu 17.10 (last LTS - 1) and ubuntu 18.04 (last LTS) so they will both have gcc >=6.3.0.", "\nThe compiler support is not going to be a blocker here. I think a discussion with the community on the next iteration of REP3 for ROS Melodic is required to find a good compromise between leveraging new features v.s. stability of the APIs for all downstream packages (as pointed out by ", " and ", ").", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/c-11-std-shared-ptr-in-public-api/1990"},
{"title": "New BNO055 I2C driver for ROS", "thread_contents": ["The Bosch BNO055 is an excellent IMU at its price point and extremely common among hobbyists and industry alike. Many are using it in Jetson TX1/TX2/Xavier boards over I2C, as well as other boards that have exposed I2C ports.", "I found a RS232 driver for ROS, as well as an I2C driver that depended on RTIMULib, but that project looks seemingly defunct and cumbersome as an install requirement.", "So for all of you BNO055 fans out there I wrote a ROS driver that doesn\u2019t depend on anything except libic2-dev. You might need to give permissions to the ROS user by adding it to the i2c group as well.", "BNO055 I2C driver for ROS. Contribute to dheera/ros-imu-bno055-i2c development by creating an account on GitHub.", "I\u2019ve tested this on a TX2. It should work out of the box on other Jetson boards. I haven\u2019t yet tested it on a Raspberry Pi but you\u2019ll need to slow down the I2C clock to use it with a BNO055 as the Pi doesn\u2019t support clock stretching.", "The calibration service isn\u2019t implemented yet. I welcome pull requests or contributions.", "NIce! do you think this will work natively with the Jetson Nano as well? Or will it has the same clock speed issues as a Raspberry Pi?", "Thanks!", "If you refer to the ", ", that is probably unique to the rpi.", "I can confirm that the Jetson Nano does ", " have the clock stretching bug.", "(I can also confirm that this driver works on a Raspberry Pi with ", " i2c, although it will consume the majority of one core doing so. If you don\u2019t need data at 100Hz, you can reduce that to cut down on CPU usage. This is not an issue with Jetsons or other platforms that support the full I2C spec including clock stretching.)", "Does the Raspberry Pi 4 suffer the same clock stretching bug? Or did they fix it in the new silicon?", "The rpi4 has another core so it ", ".", "But I guess ", " can better answer that question.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/new-bno055-i2c-driver-for-ros/7940"},
{"title": "MOCAP4ROS2: Motion Capture Systems in ROS2", "thread_contents": ["Dear ROS community,", " is a Focused Technical Project (FTP) funded by ", " and coordinated with ", ". The goal is to standardize the integration of different motion capture systems in ROS2.", "I want to open a discussion with the members of the ROS community and companies interested in motion capture systems. We want to receive feedback on the proposed design and open a  discussion about messages, formats, and processes. We are currently doing some experiments to decide the adequate QoS of the communication between nodes.", "We will support ", " and ", ", that will be used in Eurobench. Our design lets to replace any MOCAP system (for example, to use ", " instead of Vicon), or to incorporate new ones. The next figure shows the current design:", "We want that this project will be useful to the ROS community beyond the funding projects, and this is the reason why we would like to incorporate this discussion to everyone interested in using or contributing to this project.", "Best regards", "\nFrancisco", "To continue with the discussion, ", " are the messages that we are using:", "Markers.msg", "Marker.msg (currently it has more fields, but it is dependent on Vicon, so we are removing it)", "For ", ", we will use ", ", but in the Composer Layer, we have to provide a config file (.yaml) with the distance between sensors.", "Hi ", ", looks like a great initiative!", "As a point of reference, some time ago I put together ", ", which had a similar goal of bridging MOCAP into ROS in a vendor-neutral way.", "Being not particularly interested in writing vendor-specific clients, I used ", " as an interface - that project is not particularly active anymore, it may be useful. Certainly there are a lot of hoops to jump through to link against VICON SDK blobs in an otherwise open-source project. Kudos to VICON engineers for adding velocity and acceleration output to their VRPN server implementation on request.", "My other main take away was - consider your interfaces carefully. Some consumers may need /tf*, some may want to subscribe information regarding just one object and would prefer you didn\u2019t pollute the /tf tree of all connected nodes (since /tf can be quite chatty).", "Hello ", ", this is pretty cool work. Regarding ", ", it seems like some of the fields you removed as being specific for Vicon are not that uncommon for other mocap systems, like the Qualisys system we are using. Maybe it would be better to keep those fields (e.g. ", " and ", ") and just keep them blank for systems which do not support that specific feature? Probably we would need to use an integer as datatype for ", " as it should be nullable\u2026", "Also for our purposes it would be useful to include the marker id in the message.", "The Qualisys SDK also supports integrating force plates, which might be useful for some users.", "Thanks for the feedback", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", ": Nodes of this layer are dependent on each MOCAP System vendor. All vision-based nodes would publish messages in the same format. The same for IMU-based systems, or any other type of MOACP.", "\n", ": Nodes of this layer are independent of a particular MOCAP System. The output of these nodes are TFs, and maybe some metadata.", "\n", ": This layer contains applications that use the information from MOCAP Systems. In the case of Eurobench, there will be a skeleton composer and other performance measurement components."], "url": "https://discourse.ros.org/t/mocap4ros2-motion-capture-systems-in-ros2/12308"},
{"title": "\"Deterministic\" navigation in ROS", "thread_contents": ["We are working on a research project where we are investigating the ROS Navigation Stack in an industrial setting (", "). The partners in the project want autonomy to a certain level. For most areas in a plant, the behaviour of the robot must be predictable.", "We have been looking into commercial solutions such as Navitec and Bluebotics and they have graphical tools to guide the navigation behaviour. In certain areas, the robot is free to navigate. In other areas, the robot is only allowed to follow a virtual line. The tools are some sort of vector-drawing tools, where you can draw routes and areas on top of a map. The planners use this additional information to come up with appropriate paths.", "We are wondering if there are open source tools that can do these kind of things. We did not find them yet. If they are not there, it might be interesting to develop such a tool in the ROS ecosystem.", "It\u2019s very early days still, but we just opened up our in-progress \u201ctraffic editor\u201d for this type of thing. Documentation is currently non-existent, publicly-viewable examples are not there yet, etc., but it\u2019s coming along.", "You can specify a floorplan image, draw lanes on it, trace the walls if you want, and then export the path data to YAML and/or a simulation model for Gazebo. The GUI is built using QtWidgets in C++ and saves all the data to YAML. The exporters are Python scripts.", "Again, it\u2019s just a work-in-progress in a public repo, not a polished product. But I think this style of robot operations is becoming a common use case in many domains, so hopefully the editor can become useful.", "Contribute to osrf/traffic-editor development by creating an account on GitHub.", "This is just an editor for these paths; it doesn\u2019t touch the problem of actually following them with real robots.", "Cheers", "Thank you. Your description is close to what I was looking for, so I will definitely have a closer look at your repository. We want to plan our routes on top of the maps generated by Gmapping or Carthographer. But essentially, those are also just bitmaps. We want the following flow: the robot drives around and builds a map, then the operator draws routes/paths, restricted areas, and free-to-navigate areas, speed zones, etc. on top of that map, and finally, the robot uses that data as input to the planner.", "I think it is logical to separate the editor from the functionality of the planner. The interesting part is to have a common data format for the routes in YAML/XML/etc. Do you use a standard for storing the routes/paths? Currently, we have a group of students working on a planner that follows predefined paths.", "Ps. I tried to build your code, but I got some errors. I will have a look at it tomorrow.", "Currently the annotations are just stored in a YAML format of our own dreaming. There are Python \u201cgenerators\u201d in the repo which process that YAML into other \u201coutput formats\u201d such as Gazebo worlds (XML) or a \u201csimpler\u201d YAML format that is just the navigation data (lanes, etc.), intended to be consumed by nav stacks. We can create generators for any other formats or navstacks; I wasn\u2019t aware of standards for this, but if there are, we can certainly convert the data to whatever format is desired. It\u2019s just Python ", "I added a GitHub Action to the repo now which does an automatic build on Ubuntu 18.04 every code commit, so if the badge is green on the repo, it should build (at least on Ubuntu 18.04). Please create an issue ticket if you\u2019re seeing any build errors with details about your platform. Cheers!", "The build errors were my fault\u2026 I was first trying it out on an Ubuntu 16.04 machine. On 18.04, the project builds without problems.", "This application is really similar to what we have in mind. We are now playing around with it. The application really helps to discuss the requirements with colleagues and we are sharpening our user requirements. I will get in touch for next steps. I think it would be nice to join efforts to further develop the tool.", "Web-based GUI plz.", "Preferably as composable widgets.", "(It would make it easier to integrate the tool into application-specific UIs.)", "Yeah, maybe rev 2 ", "Currently we\u2019re running this tool \u201coffline\u201d to create map files and export various products (simulation models, navstack configs, etc.) in the local filesystem, so it would seem that a web-based approach would make things a fair bit more complex. But maybe that\u2019s just because I\u2019m a dinosaur.", "There is probably room for both \u201coffline\u201d and \u201conline\u201d editors in the ecosystem eventually.", "But maybe that\u2019s just because I\u2019m a dinosaur.", "You, like me, are a dinosaur.", "All the young mammals (including at my company) are running around building beautiful-looking UIs that run locally but are accessed through a web browser.", "I don\u2019t pretend to know how it works (OK, I do a little bit but just because I\u2019m curious), but I do know that they seem to whip up new UIs in a matter of hours using nothing but libraries with weird names they found on GitHub.", "I certainly agree that there is room for both. I\u2019m more interested in the (system) interfaces side\u2026 the data formats taken in and spat out, any online communication channels, etc.", "I am also ok with an off-line tool and personally I have most experience in that direction (Qt and Java). However, I agree that it would be nice to have web-based tools to edit the maps. I saw a demo of the MiR 100 robot and it looked like they already had a web-based UI for editing the map and for fleet management. However, when I look at their website I can\u2019t find anything about it.", "We also came up with two other features that might be interesting for this tool. One is support for .pgm files, because that is the format that ROS uses to store maps. The other is to support curves, because our robots need to have smooth trajectories and no sharp turns. This could also be solved at the planner level, but I think it is better to do that in the editor. I did some experiments in Java with curves and used 4 vertices to define bezier curves.", "Would it be interesting if I integrate the curves in your traffic-editor?", "I have written this very web-based application twice now for different companies, but both in proprietary formats.", "\nWhat you\u2019re looking for, if you don\u2019t want to write your own custom UI/system, is QGIS (", "). At its core, what you\u2019re looking to do is pretty standard GIS stuff. QGIS is designed for these kinds of spatial data workflows. It contains everything you need to digitize, manage, analyze, and ultimately serialize (eg. into GeoJSON) your robot \u201ctraffic plan\u201d.", "Also be aware of QGIS-ROS, which I wrote to help bridge QGIS into the ROS world (", ") ROSCon presentation linked in the readme.", "I strongly encourage trying to utilize available open source GIS tooling (that\u2019s been in development for decades) before deciding to make a ROS-specific flavouring of a subset of these tools.  These aren\u2019t novel spatial data authoring problems we\u2019re trying to solve.", "Thanks ", " ! Yes certainly, adding curves/splines would be great, since they are actually physically realizable by robots. We started off with straight-line segments just because they are super easy and because (in my limited experience) it seems that is what many/most companies are currently doing in their proprietary editors anyway.", "Thanks ", " for the feedback. Indeed, it seems that every robot company has their own internal proprietary editor. Thank you for the pointer to QGIS; it\u2019s an interesting idea to use a GIS system for this. I guess I had been stuck in a mental rut that \u201cGIS is for outdoor large-scale maps expressed in lat/lon,\u201d but I see the overlap with indoor mapping now. GIS seems particularly relevant for indoor+outdoor robot operations (deliveries to loading docks, etc.). I guess the purely-indoor, large-building domain still feels \u201ca bit different\u201d to me, in that multi-level buildings are so much more constrained than entire city maps, so an \u201cintentionally limited\u201d UI subset of something like QGIS might make the tool easier to use and the workflows more straightforward. The input (in my limited experience) is often a pile of PDF floorplans provided by the building operator, rather than satellite imagery or other traditional GIS data. But I\u2019ll definitely dive deeper into the GeoJSON RFC and QGIS to challenge those assumptions. Thanks for the pointers!", "Perhaps there is enough interest in this area to create a new ROS Discourse category called \u201cMulti-Robot Operations\u201d or something like that. It wouldn\u2019t necessarily be locked to a particular robot software platform (ROS1 / ROS2 / various other options) but instead about creating higher-level tools to deal with multiple robots sharing the same space, no matter what software is running on the robots themselves. I\u2019ll create a category proposal now and anyone interested can help evolve the definition and direction. Cheers!", "If you\u2019re going to consider GeoJSON as an option for interchange, just know that you can completely ignore long,lat in the spec and just pretend it\u2019s x,y. Been doing this for many projects well over a decade and can say it works fine, assuming you\u2019re utilizing tools that don\u2019t just assume a CRS like WGS84.  There\u2019s hundreds of geodata formats so pick what makes sense, but resist making your own. GeoJSON is great because of the countless tools and libraries already available for it.", "For QGIS all you need to do is set a custom CRS to a planar Cartesian system (just set everything to zeroes). Everything else just works including the extensive suite of raster and vector tools (see my ROSCon talk for examples of QGIS showing an indoor facility with robots in real-time).", "Orthorectified imagery or PDF floorplans are basically the same thing when you think about it. Set control points from known fiducials and begin drawing. Thinking all the way back to school, we\u2019d just rasterize the PDF and run it through QGIS akin to how one would an unrectified satellite/aerial image.Though often a SLAM map is used as the \u201cground reference\u201d and you draw on your vectors relative to it.", "Yes, there is a lot to be said about a limited UI, which is probably why I keep end up making them. Depends what your goals, timelines, etc. are.  QGIS may fill a gap shorter or longer term, and it\u2019s always a phenomenal analysis and data processing tool.", "Feel free to email me with any questions you\u2019ve got with getting started.", "Thanks! Ticket added: ", "The QGIS approach is definitely interesting. I think it is better to use existing tools if they are available. I will have a look at the software to see if it is possible to use in our projects.", "Currently, we are aiming at ", " as the fleet/traffic manager, because it is open source and one of our partners already has experience with it. However, OpenTCS manages on an very abstract level. It uses a graph of the environment and there is no direct connection between the information in OpenTCS and, for example, a planner in the ROS Navigation Stack.", "Our current approach is to have one data set with maps based on sensor data (from GMapping or Carthographer) with an overlay of the paths and areas where the robot can navigate. From that data set  we can export graph data to OpenTCS and use the whole structure in ROS Navigation.", "It\u2019s been over 8 years since I was involved in anything that used GIS, but I do recall that back then the GIS community was making a ", " big push into indoor GIS. A quick Google search turned up plenty of results so I\u2019m guessing the community didn\u2019t give up. I can\u2019t remember details, unfortunately, but there were open format specifications for buildings and built spaces and things like that.", "I dived into the QGIS software and it really has a steep learning curve. However, based on my experiences it definitely has the functionality to draw vectors on top of raster images. That was what I was looking for. I still have to look into the interoperability between QGIS projects and ROS. Thank you ", " for the pointer to QGIS-ROS.", "I have also been looking into standard map data formats. I encountered the IEEE Standard for Robot Map Data Representation for Navigation. Based on the name, it seems like the thing I was looking for. However, I am not sure whether to use such standards, because they are closed source and we work in an open source projects.", "I am still interested in your view on the last part of my previous post. We are looking into data exchange between different navigation systems. Specifically, we want to use OpenTCS with our our robots that are running ROS. The standard is really targetted at this topic. However, the standard is not open source and I can\u2019t find fleetmanagers implementing the standard.", "I found a question on this topic on answers: ", " They have a similar conclusion: not open source and no implementations.", "In our project we need functionality to exchange map data. So, we can implement it according to a standard or we can build our own custom solution. At the moment, I don\u2019t know the best solution yet.", "Word of warning, below is a textwall that may be interesting to some, but may not answer the posters question. Read at your own peril.", "I did some research as part off my Master thesis where I created a map using JOSM (java editor for OpenStreetMap) using indoor mapping plugins and then hosted the database (map nodes and relations) locally (could also be hosted online). A simple python node can then be used to query this database using overpass API. I put in information like different floors, hallways, door colours, which sensors could be used in which area. It was all kind of experimental, but technically possible. It gave me a multi-layered map containing the low level x-,y-, occupancy information, a low level topological map, high level topological map all the way up to a high-level semantic map. I never got to the point of actually using the map for navigation though ", " (the mapping effort was luckily enough to graduate on).", "The advantage of creating such a map is that the robot does not have to think a lot. All of the information about traffic rules and which methods of localization and navigation to use in which area are all embedded in the map. The obvious disadvantage is the insane mapping effort required to get such a map. Additionally there is no standard way to this that I am aware of. I came up with my own model, my own hierarchy and own key-value combinations. I just wanted to share my experience and point out that OSM can be used for indoor mapping as well and that OSM has a pretty big open source community so lots of tools and plugins are available.", "Another student from Germany was working on the same project at the time.", "\nThis could be an interesting read for you (summary of a couple of slides):", "\n", "I have also been looking into standard map data formats. I encountered the IEEE Standard for Robot Map Data Representation for Navigation. Based on the name, it seems like the thing I was looking for. However, I am not sure whether to use such standards, because they are closed source and we work in an open source projects.", "There\u2019s nothing to stop you using a closed standard to design open-source software, except in rare situations (such as the AUTOSAR specifications) where the license explicitly forbids it.", "The catch is that only people who have access to the standard will understand your design decisions.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/deterministic-navigation-in-ros/11442"},
{"title": "Maintainer best practices handling changes through ROS releases", "thread_contents": ["While I\u2019ve been working in the different pull requests in gazebo_ros_pkgs I come up with doubts about how would be the best policy to handle changes in the different branches that we host there for every ROS release. As of now gazebo_ros_pkgs currently support changes in: Indigo, Jade and Kinetic. All of them officially released and supported. Contributors are submitting pull requests against any of the released branches and we usually cherry-pick the changes to the rest of the branches but the whole process is arbitrary and not documented in any way.", "I can see that we have different kind of changes that will impact on users, at least:", "My main point is: in which ROS release would be reasonable to introduce a change that forces consumers of the ROS packages to have to react to adapt to the change having in mind that some of them would be not trivial to detect?", "Thanks", "Some of my ideas: try to define \u201cvirtual types of distributions\u201d that match stability vs new features. We could consider an \u201cstable release\u201d and \u201cdevelopment release\u201d and how these concepts fit into the ROS releases:", "At this moment I would say that ", " would fit perfectly in what we consider a stable release. I\u2019m not so sure about ", ". Probably ", " can fit well into what we can consider a development release. Obviously the upcoming ", " falls into this category.", "Reviewing the types of changes that I listed in my first post:", ": if they fix things clearly broken, stable and development.", ": clearly unacceptable for stable. If we consider ", " as a development release they probably are acceptable although they are have a large impact.", ": given the position of ROS in this topic, they should not represent a problem except for people relying on mixing packages and catkin builds. I would probably exclude stable of this.", ": in most the cases the impact could be really important, even worse than modifying the API since problems could not be directly visible.", ": this category or group is difficult to manage. Take ", " as a good example of how a clear bug fix needs to be handle with care. I would say that have a case by case analysis and decision is a good way but by default anything touching a behaviour in an stable release (even if clearly fix it in the right way) should not be accepted.", "There are other models if we define other \u201cvirtual types\u201d of distributions (for example having ", " as a ", " before changes landed into ", ") but I would like to keep the whole thing somehow simple.", " FYI I bumped this into the Release category as it\u2019s best targeted at maintainers.", "And there\u2019s details per distro here: ", " with LTS vs on-LTS. Note that Kinetic is also an LTS.", "Our original versioning policy was here: ", " but we\u2019ve relaxed this as it was too burdensome.", "As a general guideline I like to refer people to ", "I\u2019ll note that our convention is a little bit different that Semantic Versioning in that we typically use patch releases for bug fixes as well as added functionality, as long as it is backwards compatible. And iterate the MINOR version between ROS distros. This is something we might want to consider changing, and suggesting that we follow the slightly more strict guidelines developed since then in semantic versioning. And then we could recommend that only major version changes go into new distros for stable packages.", "One of the challenges is that we have a lot of packages in the greater ROS ecosystem and they are not all at the same level of maturity.", "At the core we work very hard to maintain full ABI compatibility within any ROS distro for the life of the distro. We also make sure that any API changes have a full deprecation cycle of at least one ROS distro before an API is removed.", "However, there are many users using ROS packages to collaborate fluidly on short term projects and need to have more flexibility. Binary builds are a very powerful tool for easy deployment and collaboration, and these faster moving projects cannot maintain the stability while still being productive. As such we do not mandate a specific policy for all packages. ", " We do have a few states in the rosdistro status field defined in ", " but it\u2019s not really adequate. Better communication of the maturity would be helpful. This was  discussed in the package.xml format discussions but could not reach consensus so was left out of the specification.", "We also try to manage expectations by only promoting packages to be inside the ", " and ", " if we consider them stable.", "As a rule of thumb the more dependencies any package has the more stable it\u2019s development process should be. As every incompatible change requires all dependent packages to update.", "Our buildfarm makes no assumptions about ABI stability for any given release, and can successfully rebuild everything if there\u2019s an ABI change. However, this may break a user who only does a partial system update. We have discussed explicitly versioning the ABI and in the future would like to be able to be  more explicit about it. But ABI versioning has many different approaches and we could not find a consensus during the discussions so deferred the decision.", "At this moment I would say that Indigo would fit perfectly in what we consider a stable release. I\u2019m not so sure about Jade. Probably Kinetic can fit well into what we can consider a development release. Obviously the upcoming Lunar falls into this category.", "+1. But there should also be a point where ", " joins the stable-LTS family. I don\u2019t know when and how that\u2019ll be happen though. Maybe when the number of users of Kinetic surpasses that of Indigo?", "Another concern in this subject I\u2019d like to raise, which ", " did not ", ", is about the new capabilities. While the addition could still cause regression even when AB/PI compatibility is carefully maintained, IMO it\u2019s natural for the most of developers/users to think that new features will become available to the older supported distros. I\u2019ve just seen some examples where new features added to kinetic branch were not backported to that of indigo. I guess the final decision may always be up to the package maintainers but it would be great if discussion/guidance at the core level (like on this forum) is available.", "Formerly, the rule was simple: introduce new features in a new distro, so existing users are not impacted.", "With Indigo LTS, I found myself wanting to support new hardware that was not available when Indigo was initially released. An example is the popular Velodyne VLP-16 LIDAR.", "Since I believe I can add that model with minimal disruption to existing users, I\u2019ve decided to make an exception to the old rule, which made more sense when there was a new ROS distro every six months.", "This discussion is added to ", ".", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Bugs (mainly things that are broken)", "Changes to the API", "Changes to the ABI (looking at catkin ws users)", "Changes that affect rostopic/roslaunch/rosparams/\u2026 names or arguments.", "Changes that affect behaviour (some of them are bug fixes)", "\n", " most of the users, any disruptive change should not be permitted only important bug fixes to be committed.", "\n", " brave users expecting fast new features and able to adapt quickly to changes.", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/maintainer-best-practices-handling-changes-through-ros-releases/771"},
{"title": "Source code layout revision", "thread_contents": ["As I said over in the ", ",", "related to splitting the repositories is reorganising the package structure", "This is the topic for discussing that.", "The current structure has several problems that make it hard to manage and maintain, let alone understand for new contributors, such as:", "We need to reorganise packages as part of splitting up the repositories. However we should also take the opportunity to reorganise the files as well. This includes cleaning up the structure of a package, moving files to other packages, splitting and/or merging packages, and so on.", " has been pushing a repository reorganisation that you can find ", " (188.9 KB). However, this preserves the problems stated above so I am not in favour if adopting it wholesale.", "I think that reorganising the packages and the code is something to be tackled over time during the 1.12 iteration, and possibly into 1.14 as well. It is not something to hurry. It is also something we should do a little at a time, not all at once. So I am not concerned with having a plan ready to go by the 14th of March for the 1.12 release startup period. However I do want us to start talking about it now and gradually work towards a consensus.", "In particular, I want a consensus on the guidelines for how to organise a repository and how to organised a package. A good starting point is the ROS 2 guidelines for ", " and ", ". Also worth consulting are large projects like ", " and ", ", although both are under active development so consider that their layouts may change.", "Based on the guides above and the fact that we want to transition to ROS 2, here are some principles I have come up with. I will edit these as the discussion continues to reflect the developing consensus.", "Repository guidelines:", "Package guidelines:", "Please add any additional guidelines or modifications to these ones in the comments below.", "Here is a rough estimate of the packages we have in Autoware. The first two columns are for deciding where to put them. I will fill them in as the discussion progresses.", "If the discussion in the ", " goes against splitting the repositories, then the second column should be read as \u201ctop level directory\u201d instead.", "autoware_packages\n\nAction\ne.g. \"move\",Repository,Sub-directory (if used),Package,Description,Original path\nas,The pacmod interface package,./ros/src/actuation/vehicles/packages/as\nymc,The ymc...", "(Done as a Google Sheet because Discourse does not like wide tables.)", "Quite a few features have been put up for 1.12 that will touch a lot of code, such as messages refactoring, amentifying packages and changing the architecture for localisation.", "Since touching a lot of code in a PR will be complicated if we are also moving that code around at the same time, I\u2019d like to rethink a little when we do package moving.", "I can think of three ways to do it:", "I\u2019m in favour of option 1 or 3, with no strong preference for either.", "Whichever we choose, I plan to move the messages as-is to their new repository in the next few days anyway.", "The lack of integration tests complicates this but I think we just have to accept that.", "Fortunately the move to using ", " means that most users should not notice any difference once that has been fully tested and documentation written.", "I will update the spreadsheet soon based on the comments given so far.", "Voting for ", "So PRs targetting 1.12 will be redirected to the correct repository.", "I can virtually help ", "Ya 1 might be best, just to pull the band-aid off as fast as possible ", "\nI have a list of small fixes and things that I want open PRs for, but I\u2019m waiting for the repo split to happen.", "\nProbably the sooner the better to get it over with.", "OK, there are a bunch of people at Tier IV who have not responded here, so I will do a quick poll of them on Monday. If none of them object then I will try and rush through a rough split by the end of the week. I\u2019ll probably need ", " to help out.", "I\u2019m in favor of 1, we certainly won\u2019t get it right on the first try, but at least it gets the ball rolling.", "2 would complicate testing as you say, plus other projects that depend on Autoware may need to have a provisional vision now of what the layout may end up looking.", "3 sounds good, but it\u2019d either require everyone to stop working on Autoware until the new layout is done or it\u2019d incur in more work later to reconcile all the conflicts with the merge.", "Regarding messages and the rest of the packages, since the plan is to get both Autoware.AI and Autoware.Auto under the same organization, we\u2019ll have to evaluate if we need to prefix all the repositories so they don\u2019t collide. Autoware.Auto uses a single repository now, though, so perhaps it\u2019s not that urgent.", "I\u2019ve updates the spreadsheet with a first run of moving packages. I had to make informed guesses for many packages.", "Many of the packages were commented as being unnecessary, due to things like forks of existing ROS packages that are no longer needed and old packages that are just no longer used. I haven\u2019t removed these yet, only moved them. We can deal with removing older packages next.", "The packages have been moved to their new repositories, but the PRs for removing them from the ", " repository have not yet been merged. We are going to try and get the new locations building independently first, or at least make sure Autoware as a whole works from the new repositories, before we remove the packages from the ", " repository. ", " has been working hard on setting up GitLab CI for the new repositories.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["It mixes several software projects in a single repository when they should be in separate repositories related by an organisation. For example, nodes for driving a car, and a tablet-based UI.", "You have to dig down a long way to get to the actual source code, e.g. five directories deep to get to the messages, and often several more to get to node source files.", "The layout in no way conforms to the ", ".", "If a repository is intended to contain a single package, that package should be at the top level directory, not in a subdirectory.\n", "I do not expect us to be in this situation, but for completeness I\u2019ve included it.", "\n", "In general, the repository should contain packages in a flat structure.", "If there is an argument for it, a repository may contain one level of subdirectories that divide up packages by some categorisation. However only one level is allowed and the subdirectories are purely for repository organisation.", "Follow the ", ".", "Package content is determined by relatedness, not by a rule such as \u201conly nodes in a package\u201d or \u201cthis package must only contain a library, the nodes go elsewhere.\u201d", "If a package contains a library that has no ROS dependencies, it should be a pure CMake package such that it could be built on its own using non-ROS, non-colcon tools.\n", "Packages like this are prime candidates for being their own repository and treated like any non-ROS software.", "\n", "Messages go in their own package, in keeping with ROS 2 best practices.", "URDF files and other hardware description-related stuff should go in its own package. For example, the URDF for a Velodyne should be its own package.", "Launch files not related solely to the nodes in one package (e.g. a launch file to bring up all of Autoware, or a particular perception pipeline) are candidates for having their own package.", "Move all packages to reasonable choices for their new home now as soon as possible, accepting we might move some packages again later, or delete or split them. At 131 packages, I think if two people sit together (virtually) down and spend a day on it we can get it done.", "Wait until after feature freeze, then move all packages during the bug fix period. I\u2019m not keen on this because it complicates testing.", "Prepare the move in a fork, then do it in one hit immediately after 1.12 is released."], "url": "https://discourse.ros.org/t/source-code-layout-revision/8191"},
{"title": "[WG RP] Autoware Reference Platform Definition Documentation", "thread_contents": ["This document is presenting the intents of the Autoware Foundation (AWF) Reference Platform Working Group (RP-WG). This is a live document, providing to reader a view of the purpose, plan and orientation of the Working Group. This document has to be reviewed by all participants to the RP-WG and will be submitted to the Technical Steering Committee on regular basis.", "Autoware Reference Platform Working Group  ", "Document Information  ", "Use Cases and Configurations  ", "Features  ", "Roadmap  ", "Reference Software Platform  ", "Reference Hardware Platform  ", "In July 2019, AWF TSC launched the creation of Working Groups in order to focus technical topics and oversight them (", "). The Reference Platform WG (RP-WG) has been announced at the same time (", ").", "Co-leaded by Autocore and Kalray representatives, it is calling for participants to contribute to the different activities to be covered:", "Define the initial Reference Platform: hardware and software-wise", "Work on roadmap for alignment of hardware and software with Autoware.AI and Autoware.Auto", "Establish and maintain a roadmap longer term", "Contribute for hardware and software integration", "The principles of the RP-WG can be summarized as being:", "Blockquote The ultimate goal for AWF is to be able to present to its users a system that he can acquire and use for creating prototype vehicles and reduce his time to market for production. It will contain best in class compute platform, including accelerator capabilities to run in an optimized way the latest Autoware.Auto release.", "Several intermediate steps prior achieving and maintaining this goal will be necessary. This is one of the purpose of this Working Group to define these steps and perform them.", "This is working document, regularly updates", "Some parts are are under investigation, under discussion by the Working Group.", "Draft:", "P1 provide CAN/UART capability device drivers (ROS/ROS2) and sensor data synchronize.", "P2 provide LVDS capability and CV/Fusion features for camera data.", "P3 running autoware.ai stack.", "P4 running autoware.auto stack.", "About deployment of P1-P4:", "Support different deployment strategy with different computer platform configuration.", "You can put P1-P4 together in one powerful computer.", "Can also deploy different features in different computer unit.", "Generally, P1 should compatible vehicle network including AutoSAR Stack", "If using multi boards solution, use ETH or TSN as network solution.", "CNN accelerator can be a part of P2/P3/P4 as algorithm needs.", "Opens:", "To be studied", "Will be aligned with Autoware.AI (first) and Autoware.Auto features as suppoted by Hardware.", "To be studied", "The AWF Reference Platform will use Autoware Software.", "Initial platform will rely on Autoware.AI  and support Autoware.auto from early stage.", "To be align roadmap SW/HW", "Demo/dev car configuration of our current autoware.auto development team(Apex)", " : Lexus 450 LH with the ", "DBW interface", " :", "4 ", "(or comparable sensors, e.g. VLP-32C)", "16 Sonar sensors", "4 ", "(180 degree FOV)", " :", "aarch64 computer", "rugged x86-64 desktop computer", "The Kalray MPPA (Massively Parallel Processors Array) is a Manycore architecture allowing to executing compute and acceleration algorithms in an optimized and low power consumption.", "The integration with Autoware.AI consists as of today in offloading the following algorithms onto the MPPA", "Apollo 5.0 sensor configuration:", "\n", "Hardware deployment:", "For clarification, the reference software is the responsibility of the Autoware working group. This working group\u2019s responsibility extends only as far as software drivers for ECU-specific hardware. For anything else, please coordinate with the Autoware working group.", "Fully agreed ", ", no confusion on this point.", "we proposal several different kinds of node (P1-P4) for below reasons:", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "Moving market to benefit from Autoware Eco-System\n", "From Experimentation to Reference Implementation to Production", "Autoware members have all bricks for Reference Implementation Step", "Experimentation Step is on-going", "Let\u2019s move to Reference Implementation Step", "Define it, plan it, make it", "All Autoware members have a brick", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "Sensors supported: need to discuss with community, need to know sensor configurations of different useage.", "Support boards: need to discuss with community.\n", "Current Autoware.auto support IPC and Xavier. It\u2019s nvidia GPU solution.", "Heterogeneous solution: 96boards automotive and standalone accelerator (Autocore and Kalray)*", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "Reference Accelerator Boards\n", "PCIe boards with MPPA\u00ae2 Generation, MPPA\u00ae3 upcoming", "Accelerator daughter board modules", "\n", "Reference Programming Software\n", "CNN Inference Optimizer", "CNN Inference Runtime Engine (additional algo support and growing)", "Computer Vision OpenCV", "OpenCL 1.2", "\n", "Hardware Integration\n", "Intel and ARM hosts", "\n", "Software Integration\n", "Additional Use Cases support (Companion, StandAlone)-to simplify System integration", "Linux and Autoware Member RTOS supported", "\n", "Image Detector\n", "CNN based object detection (car/person/\u2026)", "Autoware uses Darknet(YOLO networks)/SSD/RCNN project", "SSD and Yolo V3 CNN have been tested within Autoware, using Kalray inference engine solution on MPPA\u00ae", "Other CNN can also be used", "\n", "LiDAR Localization\n", "Based on \u201cNDT matching\u201d algorithm from PCL library", "Compute car coordinates by matching its LIDAR data to a precomputed map", "Fully implemented on MPPA\u00ae (both initialization and runtime functions)", "\n", "considering next gen E/E arch of vehicle.\n", "P1 could be a gateway device which support different connections and can support gerneral sensor message interface(driver).", "P2 could be a smart camera which are used in current ADAS system. most of them are based on vision purpose SoC.", "P3/P4 are general purpose computing unit.", "different unit target different ASIL level in plan.", "P1(Gateway) and P2(Smart Cam) target ASIL B.", "P3/P4 should support hardware redundancy (as request) and has ASIL D decision maker unit(MCU) inside.", "\n", "enhanced P1/P2 which can deploy some peception features will be benifical to HCP system\u2019s algorithm optimzation. can left the optimize work to device provider.\n", "for example, P1 can filter and fusion lidar data by dedicate hardware package accelerator.", "\n", "if user are using x86 IPC, everything should be working fine and no difference.", "Software requirements for Autoware WG:\n", "code organization (repo split should be better, I think)", "build standard message spec/definiation. it should be very useful for realization of special hardware/accelerator.", "\n"], "url": "https://discourse.ros.org/t/wg-rp-autoware-reference-platform-definition-documentation/9949"},
{"title": "New perception architecture: message types", "thread_contents": ["We have been discussing the architecture of the perception pipeline in ", ". However, the discussion stopped", "\nbefore it converged.", "The current perception architecture does not contain the information necessary for planning to", "\navoid obstacles or stop in front of an obstacle. These features were not considered when the architecture", "\nwas developed. Based on these needs and other requirements from the planning layer, we would like", "\nto propose the following message types for use in the perception pipeline.", "Perception architecture (Not including localization)", " have you seen ", " msgs by Autonomous Stuff? It looks like they cover what you are proposing", "We tried to be as broad as we could with the ", " and ", " types in ", " to cover as many possible sensor-specific inputs as we could with generic structures (like ", " and ", ") but we are always open to feedback if these don\u2019t cover a specific need.", " I second ", " 's opinion to try to analyse work that AS has done, that is messages from ", ", and rather improve those than to come up with a completely new definition of messages.", "To comment on ", ", in this issue we tried to come up with the better decomposition of nodes that would a) allow code reuse and b) fusion of sensor data on multiple levels (raw data, features, objects). This is the result of the last discussion that I, ", " and ", " arrived to  ", ".", "What would be our next step is what you did, which is the data modeling step.", "From a quick glance there is nothing in your proposal that is not already included in ", " so I suggest to include messages from AS.", "I third using the AutonomousStuff messages. They have what we need, and while I can see a couple of things I\u2019d consider making more exact I don\u2019t see any problems, not even small ones, in using them.", "I update the slides.", "\n", " is made to be able to cover various information, and a lot of information can be defined. This includes not only the requirements for planning but also the data specific to algorithms and sensors.", "\nThe current definition has some issues.", "This time, we defined the message type from the information required for dynamic object (Something that can move such as a pedestrian, car, truck, etc.).", "\nThe details are written ", ".", "\nAs for paths, it is still undefined and will be added as we discuss in the future.", "\n", "\n", "derived_object_msgs is made with the same idea as the current message type as ", "   said.", "\n", " Can you give a detailed comparison of what each of the three message types can store?", " ", "Please feel free to add some comments.", "*1:", "*2:", "*3:", "*4:", " - Please see ", " for a version which contains the PoseWithCovariance, TwistWithCovariance, and AccelWithCovariance. The uuid is definitely a useful addition that we had not considered and would be happy to add. This was the intent of the \u201cid\u201d field but it is somewhat limited as an int.", "for a version which contains the PoseWithCovariance, TwistWithCovariance, and AccelWithCovariance. The uuid is definitely a useful addition that we had not considered and would be happy to add. This was the intent of the \u201cid\u201d field but it is somewhat limited as an int.", "thank you ", ".", "\nAs a side note, I think that the label specific shape of AS msg is No. It can not switch between polygon and SolidPrimitive. It can switch only in SolidPrimitive (Cone, sphere, bounding box, cylinder). This is also important from the point of view of multi object tracking and path planning.", "\nWho uses detection label and classification age for what?", "\nIf we add items widely, when we modularize detection, tracking, and prediction, these modules will have to fill in these items. Some algorithms may not be filled. I think that it is better to define only what is really necessary in msg.", " - I think the field you\u2019re referencing is  \u201cdetection_level\u201d which is meant to indicate whether this object has been \u201cdetected\u201d or \u201ctracked.\u201d From the notes in ", ", here are the definitions:", " indicates the number of \u201cscans\u201d or \u201cdetections\u201d made of the object where the classification type is the same. When a sensor classifies an object, it usually tells you how many \u201cscans\u201d of that object have been sent since the object was classified as that type. This helps determine the certainty of the classification.", "According to your experience in robotics and autonomous vehicles. I would like to hear your opinions ", " ", " and ", " about this messsage definition not including sensor data (i.e. ImageROI, PointCloud)?", "\nDo you think it is necessary? Or do you think it\u2019s better to keep it like this to add an abstraction layer?", "\nThanks", " I think this is based on your intent for the message. If you intend to follow a \u201cdomain-specific-controller\u201d approach, then you are trusting that the individual sensor processing nodes know how to correctly filter the raw data and produce abstracted objects for the most part. The uncertainty is then encoded into the covariance matrix and the classification quality data.", "However, if you intend to do either data fusion before object segmentation or fusion and segmentation in the same node, you would need the raw data in the message as well. My understanding is that Autoware is shooting for the first approach so I would say we don\u2019t need the raw data.", "Agreed with ", " comment, I would expect the raw data to be processed on a separate step so that the filtered sensor data is in a usable stage. I think it also makes sense in a setup where you might have an edge device on the sensor that is pre-processing the raw data for consumption by higher level nodes.", "I think this work is being blocked by a lack of a shared understanding of what it is we want to achieve. What objects do we want to recognise, where do we want to recognise them, what sorts of data do we want to use, what data rates, should data be synchronised or can information be added on to a detection after the fact, do we or do we not use consecutive detections to strengthen an object\u2019s presence, how interchangeable/optional do we want different algorithms and detection types to be, and so on. There are a huge number of unanswered questions that need to be defined and then answered before we can even begin to think about the messages used.", "In other words, we need to define our requirements before we try to solve them. Otherwise we are solving an unknown or undefined problem.", "We also need to keep in mind that we are designing Autoware for all Autoware users, not just for Tier IV\u2019s favourite sensor set, or AutonomousStuff\u2019s specific demonstration. I\u2019m not saying that that is what is happening, but it is easy to forget.", "Additionally, I think it would be useful to draw up a list of:", "According to your experience in robotics and autonomous vehicles. I would like to hear your opinions ", " ", " and ", " about this messsage definition not including sensor data (i.e. ImageROI, PointCloud)?", " in my experience you need to decide between performance and synchronization. That is if you do not have many nodes and you have fast middleware, then you can use message types that also include raw data. If you have the opposite case then you should go with small messages.", "If you split your message types too much you will have to deal with the time synchronization once the messages received by the end node. That is both hard to do and computationally expensive.", "In any case I believe that we should finish the computational graph architecture first (how many nodes and composition) and then define the messages and not the other way around. I assume that AS has a solid computational graph architecture that let them define such messages.", "I listed the differences between ", " and ", ", and heard why ", " is constructed in such a way. I\u2019d like to clarify the differences and reasons, and like to make more common view in the whole community.", " Would you comment about the different information?", "PoseWithCovariance[] past_paths is removed from DynamicObject since planning is not interested in past information. Though prediction will require past information, it can be resolved inside prediction.", "Thank you for the summary. Do you have any opinions?", "I think the reasons of DynamicObject are reasonable since I created the table based on the hearing ", " My opinion is already reflected into the table, e.g. object_classified and past_paths are not necessary.", " Sorry to bother you again. Would you comment about the different information? I\u2019m not familiar with the background of ObjectWithCovariance.", " I\u2019m sorry it has taken so long to get back to you. Here are responses addressing your issues:", "The object does have a header field. However, it does not need to be populated and ", " also has a header.", "The types listed for \u201cclassification\u201d are not exhaustive nor definitive. As far as I know, the message type has not been extensively used so it is open to modification. We have only done tests with it internally and have not released any packages that use it. I agree with your assessments for the \u201cUNKNOWN_\u201d types. They were types provided by a sensor vendor so we included them.", "Not a problem to change the classification_certainty to a float (0-1).", "Many algorithms use a convex hull bounding area to define an object. This is why \u201cshape\u201d was included. There is also ", " in the message for defining a non-normal polygons.", "Regarding the rest of the comments: I think the overall concept is that our message structure for these is flexible. We can add or modify just about anything in the message, though I would prefer not to remove much (if any) of the fields.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Issue 1: A large number of algorithm-specific data makes it difficult to define interface and modularize perception. The interface I\u2019m talking about here is what information is filled in with detection and tracking and which information should be filled out", "Issue 2: Unstructured and redundant message type", "Issue 3: Missing information required for planning", "The different types of sensors we expect to be used. Not just ones we use now, but also ones a potential Autoware user might use.", "The different types of data we might process. Obviously this closely relates to the sensors used, but don\u2019t forget using post-processed data as an input to an algorithm, e.g. merged dense point clouds versus individual sparse point clouds, or point clouds with or without RGB data added from a camera.", "The object locating, object identifying, object tracking, object predicting, etc. algorithm types that we might use.", "Possible orderings of algorithms.", "geometry_msgs/PoseWithCovariance pose", "geometry_msgs/TwistWithCovariance twist", "geometry_msgs/AccelWithCovariance accel", "geometry_msgs/Polygon polygon and geometry_msgs/Polygon Shape::footprint", "uuid_msgs/UniqueID id is ", " by ", "\n"], "url": "https://discourse.ros.org/t/new-perception-architecture-message-types/8564"},
{"title": "Lanelet2 ROS Message Design", "thread_contents": ["Currently, there is no ROS message defined for Lanelet2. The official Lanelet2 seems to take some time to define them. ", "However, it is urgent to replace current vector map format with Lanelet2 since the closed format is slowing down the development of other modules (e.g. perception and planning). Therefore, I suggest we define ROS message with Autoware community and use it for the meantime. Perhaps we can create PR to official repository if it works well within Autoware.", "For Lanelet2 ROS message definition, I have considered three approach so far.", "I prefer the third approach since I never used ", " to track down the issue related to vector map in my experience. I have used to check if the topic is published or not, but I never used it to actually check the content of topic data.", "Any suggestions or feedback would be appreciated.", "Thanks for opening the discussion Mitsudome-san.", "I agree on your comments, working with the binary topic has been the most easy so far.", "For 2) there is also the need to project back into long/lat to write the xml file, and then on the subscriber to project into the lanelet map structure again. Not such a big problem, but for MGRS projection there was some issue with the MGRS base code sharing for reverse projection? Anyway, it introduces a layer of processing not needed by binary format.", "For 3) is it an option to publish the full map, and nodes that desire subsets of the map (either geometric or primitive subsets) could use a ROS service to ask for a defined subset - the map loader could then construct a purpose built lanelet map of the subset, and send in single topic format?", "Similarly for 1) rather than define individual message types and filling out all information, subset maps (containing for instance just point primitive layer) could be generated and published as subset lanelet maps and recombined if necessary at the subscriber. This would simplify the message structure and take advantage of the existing API to construct messages.", "Thank you for the detailed explanation,", "\nI agree with you, option 3 is good.", "\nalso lets consider that in the future map information will be updated regularly, such as dynamic maps , so we semantic based ROS topic.", "\ncurrently in OpenPlanner I use option one, although we can solve the multiple topics problem by making one message holding the whole map data (or part of the map) .", "\nthe processing cost here is only rebuilding the network to achieved faster search.", "\nexample of the functions needed for planning:", "it will be good if we can build the road network and send the map as ros topic, one problem with that is data size. but if we consider a map server who send small part of the map frequently then this is the best solution in my opinion.", "Please consider in your options:", "Please also state your assumptions, requirements, and detailed use cases that will drive the decision on what sort of messages to create.", "Thank you for your comment.", "\nHere are some of the information that I can think of", "Assumptions:", "Requirements:", "Detailed Use Case:", "I overall agree, but need to add a couple of things", "Assumptions:", "Detailed Use Case:", "Some thoughts on Geoff\u2019s suggestions.", "Regarding Structured vs Unstructured messages: I initially started implementing structured messages with each lanelet2 primitive having its own message type. The only problem at the time was that it was convoluted accessing the underlying data from the lanelet2 API to build each message, but now we have more experience with the API it should be relatively easy. As far as usage goes however, I don\u2019t know if it makes sense to structure the data in messages.", "Regarding an ideal structure for map messages oriented towards use, I conceptually agree, but in practice, how we use data is largely defined by the internal format. The messages being passed are being consumed through the internal format. If it makes sense to build a ideal message format, then why not build an ideal map format?", "I disagree that much code duplication would occur even if every node that utilized map data in an unstructured Lanelet2 format has to do some sort of decoding - this is the purpose of shared libraries. A single encode and a single decode function should exist (or be created) in a shared library which can be linked against by any nodes needing to handle Lanelet2 format data. The decode function would return a class structure holding the in-memory representation of the map (or subset of the map) which can be manipulated as-needed by the consuming node and the encode function would simply return the encoded, unstructured data which can be published. Minimal code duplication.", "On a related note, I agree with ", " - a structured representation of the data being passed around doesn\u2019t serve much practical purpose with the design of Lanelet2 having such a strong decoupling of the primitives from what a grouping of primitives represent. The overhead inherent in encoding/decoding them as structured messages and the additional bandwidth required for the metadata are also non-trivial. Given that network I/O is second only to disk I/O in order of the most expensive operations you can perform on a modern computer, I lean heavily toward unstructured transport. I also think the actual implementation of how we access the map or a subset of the map (making requests to a server, segmenting the map, etc.) are somewhat irrelevant to representation of the data at the transport layer. Whether we split this up into multiple nodes or have a single server handling the map, they are still passing around the same basic datum and, in the case of Lanelet2, those datum are not easily reconstructed into the objects they represent without the structure of the Lanelet2 class objects.", " Hi, I guess the idea of code duplication concern arose because of the suggestion that some nodes might not want to link to the lanelets shared library, and instead work directly on the message data. If a shared library is to be linked anyway, we may as well use lanelets, or might there be a need for a lighter encoder/decoder lib with less dependencies?", "Assumptions:", "If you do not know how the data will be used, you should not make this assumption.", "Message data must contain enough information to reconstruct LaneletMap data structure", "This places no requirement on the message data itself being in the Lanelets structure.", "Message should be flexible enough to be used in different use cases. e.g. message should be able to express custom tags without changing message definition", "Message should be scalable. e.g. It should be able to represent subset of a map.", "Detailed Use Case:", "These are not detailed. I recommend you follow a use case template. It will help you fill out the necessary detail. A good example is the ", ". Martin Fowler has also produced one, and I\u2019m sure there are thousands of other templates.", "Keep in mind that this is just the start. From your use cases, you will need to derive requirements.", "Thank you for your reply and sorry for my late response.", "You are right that we should not design message without defining use cases first. I have started writin use cases of map information with Cockburn\u2019s template(with some modifications).", "\n", "TEMPLATE Use case name: <the name should be the goal as a short active verb phrase> Context of use: <a longer statement of the goal, if needed, its normal occurence conditions> Level: <one of: summary, user-goal, subfunction> Primary Actor: <a role...", "\n", "\nI wrote them based on functions of current Autoware and functions that are likely implemented in the future, although it is not finished yet. We are planning to discuss about use cases and requirements in detail in the ", " so hopefully we can provide more sophisticated use cases in next few weeks. Then, we can continue our discussion on requirements and designs.", "Having said that, I would like to start Lanelet2 integration with unstructured(binary) message approach for v1.13, as it seems to be most supported message type so far. I believe fundamental purpose of replacing Aisan vector map implementation is to make Autoware\u2019s HD Map format public (both physical storage format and internal data), and having best message design is not crucial to the purpose as long as it transfers sufficient information. Current closed format is likely to discourage developers to create new features or even enter into discussions like this, and dropping Lanelet2 features from v1.13 could be a huge loss to the community. Therefore, I suggest to start implementation with binary message in order to hedge the risk. I am aware that the ", " is longer than last release, but I would like to submit merge requests in advance because there are many nodes that uses vector_map_info/* topics that needs to be replaced.", "I understand the importance of following engineering process, and we should continue designing best map message for Autoware in this thread as well as in Map WG. We will do our best to keep implementation of Lanelet2 nodes for v.1.13 to be independent from message structure so that we can replace it easily once we have the new message design.", "\nHow does this sound to you?", "Hi ", ",", "so, if we go for option (2) or option (3) we have something like that right ?", "So, because we are using the same library we don\u2019t need a big structure of ROS msg (it would duplicate the work), and just use lanelet to manage errors in read/write a msg.", ". should we have a way to send a ", " to the server in case the map delivered (XML or BIN) is good or bad ?", "Also \u2026 should the msg be a ", " or ", " ? in our case, for parking garage maps, request response is good enough (you ask for the map of a given area when you are getting closer to it). Is it similar to what you are doing ?", "So, because we are using the same library we don\u2019t need a big structure of ROS msg (it would duplicate the work), and just use lanelet to manage errors in read/write a msg.", "That was my idea.", " . should we have a way to send a ", " to the server in case the map delivered (XML or BIN) is good or bad ?", "I am not sure if we should have this feedback. If we are going to have one, then the server should do something when they get the error message, but I don\u2019t know if there is anything server can do about it. Maybe sending the topic again if it is pub/sub? Also, what do you mean by good or bad? Are you talking about corruption of data?", "Also \u2026 should the msg be a ", " or ", " ? in our case, for parking garage maps, request response is good enough (you ask for the map of a given area when you are getting closer to it). Is it similar to what you are doing?", "Our work on replacing current Aisan vector map implementation is done by pub/sub. This is just because current implementation is done that way. We should probably think about it again once we have all requirements listed up.", "I understand the importance of following engineering process, and we should continue designing best map message for Autoware in this thread as well as in Map WG. We will do our best to keep implementation of Lanelet2 nodes for v.1.13 to be independent from message structure so that we can replace it easily once we have the new message design.", "\nHow does this sound to you?", "If you want to do it that way for Autoware.AI, then I don\u2019t really mind. But remember two important things:", "ok, thanks for the explanation. It\u2019s clear.", "For the ", ", yes I mean the client could notify the server if it gets corrupted data (basically a map it cannot read).", "In that case, the server could", "\n(1) loop and resent the map until the client has a good map, or until it made N-failed-attempts,", "\n(2) notify another component, say ErrorHandler, or a human to log the error so that developers can investigate why in that area / to that client the map breaks.", "Maybe it\u2019s not necessary in this phase, but when the product is fully developed and used, it\u2019s a good tool for crisis management.", "Hello, excuse me for cutting in. Please let me write my idea.", "As for data corruption and feedback, what is the reason of data corruption?", "In my understanding, generally, if the sender sent correct data, the receiver will:  1. receive correct data,  or 2. not receive any data.", "\nIt won\u2019t receive corrupted data because it is detected in the transport layer.", "Or, if the map file itself is corrupted, it should be detected and fixed in the verification step, not in the runtime, and the sender should not send the data.", "So my opinion is,", "As for pub/sub or server, it depends on the target, Autoware.ai or Autoware.Auto.", "For Autoware.ai, since the map node sends whole map data, I think using Service is more natural than pub/sub.", "\nHowever, since the current implementation uses pub/sub, to keep using pub/sub might be better, considering the re-implementation cost.", "For Autoware.Auto, it should be drastically redesigned for more safety, including Lanelet2 library.", "\nI think sending structured data using pub/sub is best for now, but as we discussed at the last meeting, let\u2019s consider this using the AVP use case.", "By the way, I feel we need to have the same understanding of this WG\u2019s goals.", "\nSince map-related things have many aspects and the best solution depends on the target, we have to clarify what target we refer to.", "Therefore, please let me summarize the goal(for .AI/.Auto), current status, and milestones of this WG.", "\nI will write them maybe tomorrow in this thread: ", ".", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\nThis is similar approach with current vector_map_msgs. Map data is divided into multiple topics based on object types(point, line, lane, signal, traffic sign, etc.), and other nodes only subscribe to interested object. This keeps away from different nodes having all copy of map data which increases memory efficiency.", "\nIf we are going to use similar design for Lanelet2, we probably would divide topics into premitives: point, linestring, lanelet, and regulatory elements. (See here for lanelet2 primitives ", ") One of the concerns is that if we are going to use Lanelet2 library, then a node would need to subscribe all the topics anyway and have no merits of having separate topics.", "\n", "Merits:\n", "Memory efficient when there are many nodes subscribing to map data (but not likely with Lanelet2)", "Easy to look for specific object from ", "\n", "\n", "Demerits:\n", "Needs to synchronize the topics if there are any updates at run time", "Needs to subscribe many topics to obtain map data as a whole", "\n", "\n", "\nMap will be stored as xml data as string member of the message. Lanelet2 has functions to write maps into OSM(XML) format file, and we can write into ROS string message instead of writing into filestream. This way, we can convert the message back to LaneletMap(C++ class used in Lanelet2 library) just like loading map from a file. Developers can also check data with  ", "  and read the message data in XML format. I do have concern that output  ", "  do not process newline, and it just outputs the code itself(\u2019\\n\u2019). Therefore, although output of the command is in XML format, it is very hard to comprehend.  ", "\n", "merit:\n", "no need for synchronization (single topic)", "can reuse code from Lanelet2 writer/parser", "message data will be exactly same as loaded osm file", "\n", "demerit:\n", "data size would be relatively large since they are in text format", "\n", "\n", "\nThis approach would be same as the second approach, except that the data will be stored as binary instead of XML. Lanelet2 also has function to write maps in binary format(BinWriter class), so we can also reuse the code for this approach as well. Since the data will be binary, data size should be smaller, but output from ", " would be totally incomprehensible. However, I think this wouldn\u2019t be a problem if we have good visualization in RVIZ. (In fact, pointcloud data is using binary format for ROS Message and have been working so far).", "merit:\n", "no need for synchronization (single topic)", "can reuse code from Lanelet2 writer/parser", "data size will be smaller than XML data", "\n", "demerit:\n", "\n", " output would be incomprehensible", "\n", "Find road boundary around the vehicle.", "Find next traffic light position.", "Find next sign , stop line , \u2026", "Extract current lane information (center line waypoints,  direction, overtaking, left and right lanes, \u2026)", "Use of a map server with services to provide a subset of the map based on certain criteria (map in a specific area, lanes along a route, etc.), as well as a service that can provide the whole map.", "Whether you can send structured map data rather than wrapping an XML or binary chunk in a ROS message, because this would give more flexibility for other nodes to use the data even without the lanelets2 library, and would ease debugging for those who wish to debug at the topic level. This may require modifying the lanelets2 library but you should give this consideration.", "Whether using structured map data in ROS messages with that structure oriented towards use rather than source format would give more flexibility to support different map formats in the future. In other words, make your ideal map message(s) rather than lanelet2 messages.", "All nodes that access to map data should use Lanelet2 library. Although you mentioned about flexibility of using data without lanelet2 library, I think we should access to the map through the library if you don\u2019t have any critical reasons. This would keep us from having similar codes everywhere in Autoware.", "Message data must contain enough information to reconstruct LaneletMap data structure", "Message should be flexible enough to be used in different use cases. e.g. message should be able to express custom tags without changing message definition", "Message should be scalable. e.g. It should be able to represent subset of a map.", "retrieving traffic light related to current lane", "calculating route to goal from current position", "retrieving crosswalk area", "retrieving intersection information (yield, right of way)", "finding stop lines", "retrieve geometrical subset of map", "if we need to access the map via lanelet2 library, we need to keep the file into ", " instead of plain vanilla OSM", "retrive the nearest parking space available from the map, or a section of it", "The structure does not delineate any useful subsets of the data. The hierarchical nature of the format means that it hard to imagine requesting subsets of the map information that does not contain most information (i.e most requests will be at lanelet level, which requires points, linestrings and related reg.elems anyway). A lanelet message by itself does not have any spatial information, just attribute data. Conversely just sending points has little meaning either. I would argue using structured messages to send subsets of map (based on structure of format as opposed to geometry deffined subsets) would not be particularly useful. In a similar manner, nodes using the map data without lanelet2 library would have to reconstruct the lanelet data for it to be useful, leading to replication of code as Mitsudome-san mentioned. Perhaps excluding the lanelet2 library would be desirable for very lightweight nodes?", "The other consideration is that structured messages could be useful for topic level debugging. My initial reaction is that map data is only coherent viewed at higher levels, and that viewing the contents of individual primitives may not be so helpful for debugging. I it might be useful to verify that well formed data is being sent, or that a particular type of lane is being sent. Perhaps visualization tools would be more helpful in this regard? However, I certainly can appreciate that topic based debugging could be useful, and am open to including structured messages if others think in necessary", "We could support both? For certain cases it might make sense to debug using the structured messages, or that structured messages might encapsulation useful subsets of map data. In other cases binary data message is fast and easy.", "All nodes that access to map data should use Lanelet2 library. Although you mentioned about flexibility of using data without lanelet2 library, I think we should access to the map through the library if you don\u2019t have any critical reasons. This would keep us from having similar codes everywhere in Autoware.", "Define those use cases.", "Be very careful about allowing custom data in messages. You need to have a strategy in place for ensuring correct behaviour in the face of incorrect data.", "Although I agree with this, you need to define why it is necessary so you know exactly what a \u201csubset of a map\u201d means.", "retrieving traffic light related to current lane", "calculating route to goal from current position", "retrieving crosswalk area", "retrieving intersection information (yield, right of way)", "finding stop lines", "retrieve geometrical subset of map", "The Maps Working Group is for the Autoware Specification and its reference implementation, Autoware.Auto. You cannot ask the Maps WG to make decisions based on a need from Autoware.AI.", "If you make a hasty design decision now to get something out soon, you are encruing technical debt. This is an accepted software engineering practice, but in this case you will be paying back that debt by re-implementing all your Lanelet2-related stuff again later on.", "A simple resending feature is required because sometimes sending data might fail, but probably it can be done by ROS/ROS2 features.", "No excessive feature is not necessary."], "url": "https://discourse.ros.org/t/lanelet2-ros-message-design/9932"},
{"title": "Autoware Map Data and Formats working group: Call for participation", "thread_contents": ["Following on from ", ", the announcement of ", " and the ", ", I\u2019d like to announce the ", ".", "This working group will be led by myself, ", " and ", ". The purpose of the working group is to consider the various options for map formats and define the architecture within Autoware to consume the maps. The working group\u2019s remit will cover the following topics at least:", "We will begin by meeting every two weeks. The first meeting time is  Wednesday, July 17, 2019 2:00 PM Europe: London (see below for the meeting information). The meeting will last for 30 minutes.", "The regular time is to be decided based on who wants to participate in the working group, so if you are interested then speak up here even if you can\u2019t join the first meeting!", "Most of our coordination will be ", " and on discourse. The teleconferences will mainly be used to catch up on progress overviews and discuss tricky issues that are hard to do via text.", "We are open to all, no matter your affiliation or skill set and we welcome your views and contributions.", "Brian Holt is inviting you to a scheduled Zoom meeting.", "Topic: Autoware Map Data and Formats Working Group", "\nTime: Jul 17, 2019 02:00 PM London", "Join Zoom Meeting", "\n", "Zoom is the leader in modern enterprise video communications, with an easy, reliable cloud platform for video and audio conferencing, chat, and webinars across mobile, desktop, and room systems. Zoom Rooms is the original software-based conference...", "\n", "One tap mobile", "\n+493030806188,489169590# Germany", "\n+493056795800,489169590# Germany", "Dial by your location", "\n+49 30 3080 6188 Germany", "\n+49 30 5679 5800 Germany", "\n+49 69 7104 9922 Germany", "\n+1 408 638 0968 US (San Jose)", "\n+1 646 558 8656 US (New York)", "\n+81 3 4578 1488 Japan", "\n+81 524 564 439 Japan", "\n+61 2 8015 6011 Australia", "\n+61 8 7150 1149 Australia", "\n+43 670 309 0165 Austria", "\n+43 72 011 5988 Austria", "\n+32 2 290 9360 Belgium", "\n+32 2 588 4188 Belgium", "\n+33 1 7037 9729 France", "\n+33 7 5678 4048 France", "\n+972 3 978 6688 Israel", "\n+972 55 330 1762 Israel", "\n+64 4 886 0026 New Zealand", "\n+64 9 801 1188 New Zealand", "\n+44 203 481 5237 United Kingdom", "\n+44 203 966 3809 United Kingdom", "\n+44 131 460 1196 United Kingdom", "\n+44 203 051 2874 United Kingdom", "\nMeeting ID: 489 169 590", "\nFind your local number: ", "To begin with, I propose that interested parties read the following threads and resources prior to the meeting if possible:", " do you know where we can find links to", "I am sharing some analysis between OpenDRIVE and Lanelet2 ", "We at Ridecell-Auro use Lanelet2 in our stack as the vendor independent format and to support importing and exporting to different common map formats,  and are building support for OpenDrive and would love to share the outcome or work together with other contributors.", "Hello, I would like to join this working group, please include me in any future conversations.", "I would like to share the idea about custom tags that we have to define to use Lanelet2 in Autoware.", "\n", "Lanelet2 Format Extension for Autoware", "\n", "\nI created this after investigating how current vector map information is used in Autoware and looked for missing information in Lanelet2 format.", "I also want to discuss about the ROS message for lanelet2 data. This must be done in order to integrate Lanelet2 into Autoware.", "Hi everyone,", "Thank you to those who joined the meeting today.", "Here follows the meeting minutes:", "40km/h (need to consider surface characteristics, road camber etc.)", "Ideally we would have a single map format that would work for all the various use cases.", "Our first discussion was to list the various possible Physical Storage Formats (PSF) and consider the pros and cons of each according to the following criteria:", "This is the list of possible PSFs that we will consider for the next meeting:", "Our next meeting will be on Wednesday, July 17, 2019 10:00 AM Europe: London (see below for the meeting information). The meeting will last for 90 minutes.", "Brian Holt is inviting you to a scheduled Zoom meeting.", "Topic: Autoware Map Data and Formats Working Group", "\nTime: Jul 24, 2019 10:00 AM London", "Join Zoom Meeting", "\n", "Zoom is the leader in modern enterprise video communications, with an easy, reliable cloud platform for video and audio conferencing, chat, and webinars across mobile, desktop, and room systems. Zoom Rooms is the original software-based conference...", "\n", "One tap mobile", "\n+496971049922,130749793# Germany", "\n+493030806188,130749793# Germany", "Dial by your location", "\n+49 69 7104 9922 Germany", "\n+49 30 3080 6188 Germany", "\n+49 30 5679 5800 Germany", "\n+1 929 436 2866 US (New York)", "\n+1 669 900 6833 US (San Jose)", "\nMeeting ID: 130 749 793", "\nFind your local number: ", "Thank you for arranging the next meeting.", "\nFor the meeting time, is it possible to push it back an hour?", "\nI am occupied until 11AM(London time) on 24th.", "Hi Mitsudome-san,", "I\u2019m happy to move it back by an hour. Does anyone else have any views or comments on time?", "Regards", "\nBrian", "We would be happy if it is more convenient for PDT ", "Hi Jit,", "Thanks for your comments. As you will no doubt know, it\u2019s always challenging finding a suitable meeting time when working across USA/Europe/Asia.", "The current time slot was chosen because so far we\u2019ve only had interest from Europe and Japan, therefore it made sense to choose times that worked best for them.  With the request to include USA I suggest that start a rotation, much like what the Autoware TSC does.", " ", " do you have any thoughts or comments?", "Hi Brian,", "yes a rotation through the time zones sounds like a good compromise. Perhaps keep the scheduled time on this occasion and then give the USA participants preference for next meeting?", "For tomorrow, I am open to scheduling it later, but it seems pushing it back long enough to make a difference in PDT (8AM PDT \u30fc24:0\uff10Tokyo) would be difficult.", "Hello,", "I would like to participate in this working group. Is there anything I need to do beyond attending the next meeting?", "Thanks,", "\nMichael McConnell", "\nStarting a rotation sounds good to me as well.", "For tomorrow, I am available after 11AM London(7pm Japan). Perhaps we could change it to 2PM or 3PM London just like the first meeting. It\u2019s still early in the morning in PDT, but I think it is better than 11AM. If we are changing the meeting time, then I would like to know it before tomorrow noon in Tokyo.", "Hi Michael,", "Great to have you on board! There is nothing more required than turning up for the meeting.  The minutes will be posted afterwards for those who can\u2019t attend.", "Regards", "\nBrian", "Hi ", ",", "Let\u2019s keep it now at 11am UK time (7pm Japan time) because I fear that if we change it too many times people will get confused and we have have low turnout to the meeting.", "Regards", "\nBrian", "Thanks for the clarification. See you there!", "As our commitments are limited let\u2019s not change time to support us, I would still expect some more meeting notes so that we can collaborate", "Hello.", "I\u2019d like to summarize this WG\u2019s current status so that make discussions more beneficial.", "\nI didn\u2019t refer to mass production level HDMap like NDS because I think it\u2019s not the stage yet.", "Would you confirm the content and let me know if there are any points to be corrected?", "\nThank you.", "Lanelet2", "OpenDrive", "As for Lanelet2, since it is too extendable, we might need to restrict the format and define XSD-like document.", "As for OpenDrive <-> Lanelet2 conversions, Ridecell-Auro created a slide: ", "OpenDrive -> Lanelet2 is easy, but Lanelet2 -> OpenDrive is a bit difficult.", "As for other formats, since Lanelet2 is a simple format, any format can be supported if the users prepare a converter by themselves.", "We have to consider these aspects due to safety requirements in the future.", "This is strongly related to Internal Map Model.", "e.g. Full search is tolerable or indexing is necessary.", "I think this is not clear and should be determined.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["identify the physical storage format (map format) that Autoware should support considering factors such as\n", "ease of creation", "adoption of the format", "relationship to production systems", "expressiveness (features that can be encoded)", "\n", "consider the library(ies) to read and write to that format to supply relevant data (map-server) to\n", "the perception modules (e.g. traffic light detection, road markings etc)", "path planning modules (routing)", "localisation modules (for those localising using techniques other than NDT).", "\n", "propose an architecture to support these functions including message definitions", "\u2026", "Github thread on new maps in Autoware ", "\n", "OpenDRIVE reference documentation ", "\n", "Lanelet2 paper ", "\n", "CommonRoad ", " including the ", "\n", "Lanelet2 presentation by Parkopedia at Autoware@IV2019 workshop", "Lanelet2 presentation by Tier4 at Autoware@IV2019 workshop", "Carla + ROS + Autoware presentation at Autoware@IV2019 workshop", "We need to consider the various use cases for maps.  At minimum these are the use cases\n", "Autonomous Valet Parking (Autoware.Auto reference use case)", "On-street driving\n", "< 40km/h", "\n", "\n", "\n", "\n", "ease of map creation", "tooling for reading/writing/visualising/simulating", "adoption of the format", "relationship to production systems", "expressiveness (features that can be encoded)", "Interchangeability with other formats", "OpenDRIVE 1.5 (to be evaluated by ", " )", "OpenStreetMap XML (Lanelets variety) (to be evaluated by ", " )", "Navigation Data Standard 2.5.4 (to be evaluated by Punnu Phairatt )", "Aisan Vector Map (to be evaluated by ", " )", "Physical Storage Format", "Internal Map Model", "HDMap API", "Map Creation / Editor", "HDMap Conversion / Supporting Various HDMap Formats", "Integration with Simulators", "Computational Cost / Resource Usage", "Replacing AISAN with Lanelet2 in Autoware.AI v1.13", "HDMap API Compatibility between Autoware.AI and Autoware.Auto", "OpenDrive is the best format.\n", "But Map Creation is not considered.", "\n", "Lanelet2 is temporarily used and will be replaced with OpenDrive later.\n", "But since the original Lanelet2 doesn\u2019t meet Autoware\u2019s requirement, some extensions are required.", "\n", "Whether using pub/sub or service.", "Whether sending structured API or the whole map.", "These should be considered using AVP use case.", "Currently, Lanelet2 is the only solution.", "But we might need to improve/re-implement it so that it would be safer.", "\n", "\n", "JOSM", "Tier IV Vector Map Tool", "Other GIS Tools", "\n", "\n", "\n", "Trian3d", "RoadRunner", "VIRES Road Network Editor", "\n", "Since most simulators support OpenDrive, if we prepare OpenDrive Map then we can integrate.", "\n", "\n", "\n", "\n", "\n", "\n", "Sending the whole map using pub/sub is a least-cost solution, but it\u2019s probably not the best solution.", "Since the solution in v1.13 would be quite different from the ideal architecture of Autoware.Auto, we need to consider how to make them compatible."], "url": "https://discourse.ros.org/t/autoware-map-data-and-formats-working-group-call-for-participation/9820"},
{"title": "ROS2 bagging w.r.t. services and actions", "thread_contents": ["Hi, I was hoping to get a bit of clarity on something that\u2019s been in the back of my mind regarding a migration to ROS2. At one point long ago, I remember reading that there was some consideration for building services over DDS pub/sub, and I thought \u2018great, that means we\u2019ll probably get first-class support for service bagging\u2019. Lack of services is a huge pain point with using bags as a system logging mechanism in ROS1.", "At some point, the landscape shifted and ROS2 services were implemented via DDS-RPC instead of pub/sub, which I imagine precludes using a side-channel recording mechanism like bagging. Sadly, with ROS2 actions being (rightfully) implemented via services, this means neither services nor actions are baggable in ROS2. That\u2019s really a shame - I\u2019m sure I\u2019m not the only one who occasionally used ROS1 ", " in some capacity just because they were baggable.", "Understanding that ROS2 development is a sea of shifting priorities - is this something that would even be possible to resolve without fundamentally upending the design? Can it be \u2018solved\u2019 at the rmw implementation layer, or would it require more fundamental changes?", "I had never even thought about bagging services and actions. Now I also want this!", "At some point, the landscape shifted and ROS2 services were implemented via DDS-RPC instead of pub/sub,", "DDS-RPC uses topics to implement services.", "And other implementations, like OpenSplice, use our own version of this on based on topics.", "However, Services in ROS 2 do not have to implemented with Topics, as you pointed out. They are their own concept in the rmw API, this was done to allow for optimizations for Services if desired. Making them on top of Topics always would perhaps not be the most efficient thing to do.", "What\u2019s prevented us from recording them is having some rmw API for observing the exchanges between a client and server by a third party (like rosbag). We could add this API, though it may make it hard for future rmw\u2019s which don\u2019t use a one/many to many mechanism to implement services, which presumably would be where the efficiency gains would come from (by using a one to one comm pattern like gRPC/HTTP2 or something).", "One thought, that wouldn\u2019t require changes to ", ", is that we could simply republish requests and responses on a well known topic name. For example, if the service were called ", ", there might be a ", " and ", ", publish to by the client and service respectively. They could be activated selectively (to keep overhead low, activating this by default for all services would be expensive I think), and that would enable recording of the services.", "I think recording is the only thing that makes sense though. I don\u2019t see how replaying requests or responses directly makes sense.", "One thought, that wouldn\u2019t require changes to ", " , is that we could simply republish requests and responses on a well known topic name", "That\u2019s an interesting suggestion. I would potentially take that one step further and introduce a new generic topic similar to ", " or ", " that has all the service and action request, response, and feedback logged to it. I think that could actually have a variety of useful consequences.", "For example the topic may have the information like action/service name, type, timestamp, a string/serialized-version of the request/response/feedback and the caller (assuming that\u2019s available, which I think it is). The downside clearly is in trying to make a general message to go over that topic, the request/response/feedback wont be in their native types but as strings or serialized blobs. Though it could be conceivable that with the type and string/serialized a ", " tool could convert them into real types for playback/reading.", "there might be a  ", "  and  ", " , publish to by the client and service respectively. They could be activated selectively (to keep overhead low, activating this by default for all services would be expensive I think)", "That\u2019s a great approach! What would be the expensive part? I imagine if a bag recorder exists that whitelists ", " for recording, it could just subscribe to those topics. If no bag recorder exists, isn\u2019t it a performance no-op to create a topic with no subscribers?", "I think recording is the only thing that makes sense though. I don\u2019t see how replaying requests or responses directly makes sense.", "I imagine there\u2019s some esoteric cases where someone may want a bag playback to emit service calls to an external node, but I can\u2019t think of anytime I\u2019ve seen a practical application.", "new generic topic similar to  ", "  or  ", "This would probably not be as useful as the namespaced version proposed by ", ". A topic like that would be an all-or-nothing firehose, and potentially prohibitive to subscribe to from a large node\u2026 short of a DDS mechanism like keyed topics, which may not even be exposed in ROS2 (yet).", "I would personally just find it annoying to have to enumerate all the servers to bag up, ", ", ", ", ", " for ", " servers. I perfer the one-stop-shop firehouse that I can pare down on debug.", "If no bag recorder exists, isn\u2019t it a performance no-op to create a topic with no subscribers?", "There\u2019s always overhead to having more things, even if there\u2019s no actual match. There\u2019s discovery traffic and memory usage at least. And since every node will likely have a few services the impact is large even if the individual fixed cost is small.", "I would potentially take that one step further and introduce a new generic topic similar to ", " or ", " that has all the service and action request, response, and feedback logged to it. I think that could actually have a variety of useful consequences.", "How would you log them? As a string? You cannot have different types on the same topic (or you shouldn\u2019t). If you\u2019re logging them as a string, you could just use ", ".", "I would personally just find it annoying to have to enumerate all the servers to bag up, ", " , ", " , ", " for ", " servers. I perfer the one-stop-shop firehouse that I can pare down on debug.", "A parameter to rosbag could be used to toggle recording all topics matching ", " and ", ". It wouldn\u2019t require the user to manually enumerate all services to record.", "I guess action feedback can already be recorded since it is a topic.", "I had never even thought about bagging services and actions. Now I also want this!", "That\u2019s\u2026 surprising. ", "How about bagging-via-tracing?", "It\u2019s a bit of a wild idea, and make it feasible, we would need to support the Windows and MacOS tracing frameworks, in addition to Linux, and we would need to look at making this location transparent, but it ", " an existing, low overhead, tunable, configurable, data capture mechanism which can support any source.", "That\u2019s an intriguing idea, but I\u2019m curious about how low the overhead would really be? One of the advantages of capturing via subscription is that you don\u2019t directly impact the execution time of the sender (assuming you allow for enough computing resources, etc., of course). How much would capturing large data via tracing impact the execution time? Or is there zero impact?", "How about bagging-via-tracing?", "That honestly sounds like a great idea, although probably a completely separate discussion :). Between that or something like bagging-via-pcap, it would be great to have an option to record data without having to depend on the underlying connections to function reliably.", "It looks like the rosbag2 storage backend is pluggable, but unless I\u2019m missing something, transport is not.", "How much would capturing large data via tracing impact the execution time? Or is there zero impact?", "In general, I would expect it to have less impact than the current rosbag approach. Before going down that route, we should probably test this hypothesis, however.", "The way this works is as follows: The tracing frameworks I\u2019ve looked at make a copy of the data and store it in a lock-free ring-buffer inside the process for later retrieval by the capture process. That happens at the point where the tracepoint inserted, and it will block until the data has been copied.", "The later retrieval and disk storage by the capture process happens asynchronously, however, so \u2013 apart from consuming CPU and disk bandwidth \u2013 storage does not impact the traced process.", "Of course, the exact impact also depends on where you\u2019re putting the tracepoint. The easiest way would be trace messages when they are serialized. That way, you don\u2019t have to deal with the exact type, and just store a byte array. This would be the same pathway that also sends data to rosbag via subscription.", "Now, when you have an application that sends around images intra-process, they would not normally be serialized. Adding ", " kind of recording will change that, and thus impact the system. With tracing, you could, in principle, generate a message-type specific tracepoint, however, and avoid (DDS) serialization. That\u2019s advanced stuff, but it could be done.", "What I\u2019m not sure about is how this all compares, performance-wise, to the new shared-memory transports that are currently being introduced.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/ros2-bagging-w-r-t-services-and-actions/11618"},
{"title": "RFC: using C++14", "thread_contents": ["Hello friends@sig-ng,", "An excellent issue report and set of pull-requests was recently submitted:", "The issue report is in regards to the potential perils of including global custom C++11 literals, which we\u2019re using to simplify syntax when specifying durations using std::chrono. Fortunately, there are now standardized duration literals in C++14 that are supported on all compilers we are currently targeting. By moving to C++14, we can use those standardized literals for time/duration, rather than creating our own.", "So, we propose to target C++14 for the upcoming ROS 2 beta. There are a few other features that also seem quite nice in C++14 and could simplify/shorten the codebase over time, such as std::make_unique, return auto, and so on:", "C++14 is a version of the standard for the programming language C++. It is intended to be a small extension over C++11, featuring mainly bug fixes and small improvements. Its approval was announced on August 18, 2014. C++14 was released on December 15, 2014. Because earlier C++ standard revisions were noticeably late, the name \"C++1y\" was sometimes used instead until its approval, similarly to how the C++11 standard used to be termed \"C++0x\" with the expectation of its release before 2010 (althou...", "Because C++14 seems to be well-supported now by modern toolchains, we do not expect this to be disruptive to anyone [1]. However, please discuss on this thread if you feel otherwise, so we can better understand your use case. Conversely, if you\u2019re a big fan of C++14 for various reasons, please chime in!", "Cheers,", "\n-mq", "[1] the potential breakages described in this post seem relatively minor: ", "I can\u2019t think of any reason for not switching to C++14, besides compiler support. Support for C++14 in GCC and Clang is complete, but VS2015 seems to be lacking:", "In any case, VS2017 is around the corner. In the meantime, it\u2019d might be useful to enable C++14 in VS2015 and see if anything breaks, and then start introducing new features in ROS2 (e.g. std::make_unique):", "C++14 is pretty great. You can do stuff like this:", "auto my_function() {", "\nreturn SomethingWithAComplicatedReturnType();", "\n}", "auto crazy_generic_lambda = [](auto generic_parameter, int known_typed_parameter){", "\nreturn generic_parameter + known_typed_parameter;", "\n};", "If C++ is asymptotically approaching Python, then should we just give up now and do everything in Python? ", "Depends on how much you like strong typing and C backwards compatibility ", "Depends on how much you care about sane notions of scope\u2026 ", "As you mentioned: the only thing that restrains moving to C++14 is the compiler support.", "\nAs far as I know there were some efforts building ROS2 on arm microcontrollers. Perhaps it would be wise to check if the most common compilers for embedded platforms are supporting C++14.", "The arm-gcc-none-eabi compiler that is often used for STM32Fxxx series supports C++14. ( ", " )", "The toolchain supports it (except maybe the ARM stuff mentioned by ", "), and ROS2 isn\u2019t even in beta yet, so I\u2019m all for requiring C++14.", "This is only tangentially related to the question of \u201cshould we use C++14\u201d, but anyway this is an attempt to simplify the minimal examples using generic lambas:", "For example, this C++11 code:", "requires the message type to be listed twice: once for the create_subscription<> template, and once for the lambda parameter. It would be nice if we could do this:", "However, that code change explodes spectacularly into a few hundred lines of gcc errors.", "Does anybody know if that style of usage (mixing generic lambas with template instantiations) is just impossible in C++14 ? The overlap between lambdas and templates still seems a bit mysterious to me.", "The second example (the one with ", " in the lambda) is ambiguous, I think. What should the type of ", " be? ", " or ", " or something else? I don\u2019t think the compiler can implicitly infer which type you mean in this situation.", "What you\u2019re doing might work if you also supplied the ", " template argument to ", ".", "I\u2019ll play around with the example and see if I can simplify it. It should be possible, in principle, to do implicit template specialization on the ", " method, such that you can drop the ", " explicit template specialization. Then you\u2019d just need to explicitly type the ", " parameter to the lambda.", "I wrote a quick hack to remove the need to pass message type as a template argument in ", " and submitted it as a pull request in ", " and updated some of the examples in ", "I haven\u2019t tested this heavily, and unfortunately the changes fail to compile the allocator example ", "PS: when in doubt, ", ", that\u2019s my motto.", "It was a very silly bug, just fixed the order of the parameters in the template list and the allocator example compiles again:", "We were hoping to target ROS2 development on the IntegrityOS, since they\u2019ve recently updated their compiler to be C++11 compliant.", "\nPushing to C++14 will stop any hopes of deploying to a GreenHills IntegrityOS environment. ", "GreenHills seemed like a favorable target since most DDS vendors sell a compliant version for Integrity, and GreenHills is big in the Safety space (getting safety ratings like SIL2 or ASILC, etc). So for critical components of vehicle automation systems, it would have been really great to have your lower-level safety components running ROS2 and also your high-level stuff.", "Hi ", ", That\u2019s unfortuate to hear. Thank you for raising this issue.", "Has Green Hills provided a timetable for when their compiler will support C++14? Because the difference between C++14 and C++11 is ", " smaller than the difference between C++11 and C++0x, hopefully they will pick it up soon (?)", ", yours is an interesting use case for us. IntegrityOS is not one of our supported platforms, but if there\u2019s something that could be done to make life easier there, we\u2019re interested in discussing it. But first, as ", " said, we\u2019d like to learn more about what is and isn\u2019t supported from the C++ spec on IntegrityOS, as well as what their future plans are in that regard. We\u2019ve poked around a bit on the GreenHills site, but haven\u2019t found much public information.", "ROS 2 will be used for a long time after its release, probably a decade for new development and much longer in maintenance. Requiring users to work within the limits of C++ 11 for that period seems very restrictive. ROS 2 should support the latest version of C++ available for mainstream system when it is released. Let the end users push the vendors to provide the compiler support on systems that don\u2019t keep up.", "While I like to use the latest and greatest myself whenever i can, I think you have it a bit backwards. If the baseline for ROS2 development is C++11 or 14 or whatever, that should not prevent you from ", " it with more recent standards in your own code. The inverse however, is not true, so ROS 2 should continue to support the initialially chosen baseline dependencies for some period if time. I find that more often than not ROS is not the only dependency.", "Long term support with stable dependencies is important. I believe the distribution model of ROS 1 works quite well in that case.", "In any case I also agree that C++14 at this point makes sense for ROS2 beta.", "I will have to consult with some of my colleagues about what their support roadmap is.", "\nAlthough I wouldn\u2019t hesitate to say it\u2019ll be a slow transition.", "Even if ROS2 isn\u2019t supported on that platform, DDS is, and we can still interoperate. It would have just made things cleaner and simpler from a Platform/Ecosystem perspective if everything we create was on the same foundation.", "The issue with IntegrityOS supporting C++14 is not the difference in feature set, but the time and cost required to certify their compiler and tool chain again. Unfortunately, certification methods don\u2019t cope well with re-certifying modified software; you often have to treat it as a whole new system. If IntegrityOS has only recently got C++11 support certified then I don\u2019t have much hope that C++14 will be coming very soon, but maybe they have a well-oiled certification programme and we\u2019ll get lucky.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/rfc-using-c-14/921"},
{"title": "SROS2 - Securing certs and keys", "thread_contents": ["Hey guys,", "\nI was wondering if there was a technical document for SROS2. I\u2019m very much interested in what it offers and want to get to understand its inner workings. I also understand that the project currently is able to create signed certificates. How are the certificates and private keys getting saved? I was planning on using secure keystores to do that. Would something like that be valuable?", "Hello ", ",", "The current way the certificates are being constructed is quite basic: via subprocess commands to openssl\u2019s CLI. Once you exicute the ", " command via the SROS CLI, an ", " is triggered to bootstrap the openssl configuration files, then calls upon openssl command to generate the private keys, and singe the necessary public certificates.", "Later, should you decide to invoke access control, the ", " command will again use the keystore to sing governance and permission files consumed by the vendor specific middle ware to enable access control enforcement as defined in the ", " spec.", "I\u2019m working on refactoring this to use something like a modern python library such as ", " to more pragmatically control the key generation and signing of certificate authorities, like I did for SROS1. Last year I did spend a brief amount of time exploring more rigorous keystore solutions, such as open source projects like Vault:", "Centrally secure, store, and tightly control access to secrets across distributed infrastructure and applications.", "However, in the end I figured most end users would not enjoy installing and learning a host of other dependencies and frameworks, and would more likely impeded the ease of use and adoption of SROS. So I went with the simple method of optionally ciphering the private keys to disk. Most PKI frameworks support loading ciphered keys via secrets that can be supplied at runtime, as used in SROS1 ", ". End users can easily take additional steps from there to guard private keys via additional custom solutions if need be.", "What secure keystores methods where you looking at? It would still be nice if we could design SROS2 to interoperate easily with other 3rd party keystores methods.", ",", "In all honesty, I\u2019m still in the process of figuring it out. My idea was creating a package that would help users make use of a TPM to secure the certificates and keys. This work is meant to go towards my Master\u2019s research.", "\nOnce again, this is just an idea and hasn\u2019t fully taken shape yet.", " Good point, can you share more details regarding your enabling to TPM ? thank you . ", "I have another question for the SROS2, you know, the SROS supports AppArmor, why is it dropped from the SROS2 ? is it not necessary to protect from the system level now from your perspective ? thank you !", " Thanks for your interest in SROS and SROS2.", "SROS supports AppArmor, why is it dropped from the SROS2 ?", "The development of SROS2 has been focused on the communication security rather than the system security so far. I wouldn\u2019t say that system-security is \u201cdropped\u201d but rather \u201cnot implemented\u201d yet.", "\nAs you may know ROS2 targets a wider variety of platforms (non-Linux or non-posix) and applications than ROS1. Currently SROS2 has been geared towards providing secure communication at the lowest level of the ros client library (rcl) to allow users to leverage it regardless of the programming language, platform or implementation of the communication protocol. Currently we test on Ubuntu, MacOS and Windows, in C++ and Python, and with eProsima\u2019s FastRTPS and RTI\u2019s Connext.", "We haven\u2019t yet looked into the best way to interface system security tools to the current SROS2 implementation but we definitely want to do it in the future. Given that it is pretty orthogonal to the encryption of the communication it can be addressed separately. While Apparmor is awesome, it is Linux only and thus will target only one of our supported platforms. Ideally SROS2 will provide a way to define the permissions of your application in a platforms-agnostic manner and be extensible to implement generators that will provide \u201cconfiguration files\u201d or \u201cprofiles\u201d according to the tool or platform you want to use. And the tool on Linux can very well be AppArmor.", "As ", " well put it, AppArmor support has not necessarily been dropped from SROS2, but rather not yet implemented. My present focus has been integrating ROS2 with DDS Security, and have not yet had time to expand upon the apparmor profile to support ROS2. Another reason is that I haven\u2019t yet surveyed ROS2\u2019s installation structure yet, as the majority of the apparmor profile library for ROS1 helps users to author profiles of there own by abstracting the ROS1 file directory layout.", "However, as mentioned before, apparmor support is somewhat orthogonal to SROS2 interrogation with DDS Security, and so could be developed in parallel. I would certainly invite contributions and pull requests from the rest of the community to add support for ROS2, or help review what ", ".", "Contribute to apparmor_profiles development by creating an account on GitHub.", "Hmm\u2026 What literature have you found on the subject of Trusted Platform Module and robotics? I do like the idea of having the private credentials used for SROS2 isolated from the host OS, but that may require coding 3\u2019rd party plugin, as the default DDS crypto plugin must load the private key from a path on disk, or serialized PEM string.", "Funny you should mention TPM though, as last week or so when I was at the RoboCub 2017 Symposium, I met a PhD student, Sarah Haas from Graz University of Technology, who was presenting work on a similar topic:", "Secure Authentication for Industrial Mobile Robots using Biometric Data", "You may want to investigate the lab Sarah is from. I recall some of Sara\u2019s peers working on using TPM for the Diffie-Hellman key exchange and establish a symmetric session key without revealing the private key to the network host.", " ", " thanks for your infomation, let me have an basic gap/work evaluation to implement the AppArmor to SROS2 and I may try to enable that if no conflicts after evaluation ", "It seems that this solution focus more on external authentication to an IMR(Industrial Mobile Robot), you know, now the ROS nodes can employ the key/certificate produced using SROS2 to authenticate/encrypt/access control for the nodes/topics etc, but do you think it\u2019s necessary to provide the security to the key/certificate itself ? now they\u2019re placed on the disk without any protection, that means it\u2019s easy to be accessed or tampered.", "\nBTW, you know more details regarding the details of SROS2 implementation, so could u please help double confirm/clarify the following questions:", "Many thanks", "\nBRs", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Keystore: does it support key exchange between publisher / subscriber, etc? Can keystore be changed?", "Encryption of data AES-GCM-GMAC: used to have license issue on GCM, has its license model been changed?", "Tools to create keystore, certificates: are they out-of-band tool that user needs to use this tool to create keystore manually first then pass it to DDS? How does the whole solution work?", "Is there any access control for SROS2: tools, encryption, etc?"], "url": "https://discourse.ros.org/t/sros2-securing-certs-and-keys/2400"},
{"title": "SingleThreadedExecutor creates a high CPU overhead in ROS 2", "thread_contents": ["Hello,", "We are looking into the performance of ROS 2 on Embedded boards and we find out that ROS 2 consumes high CPU because of the overhead introduced by SingleThreadedExecutor. We did some tests to profile the CPU usage and we observed that if we run 20 publishers and 200 subscribers in one ROS node, 70% of the CPU is consumed by SingleThreadedExecutor and 20% of the CPU is consumed by DDS implementation.", "By running the same example in Fast RTPS directly, it consumes 3.5 times less CPU as compared to ROS 2. The tests that we have performed along with their results can be found in this link: ", ".", "Is anyone else is also looking into measuring the CPU usage of ROS 2? Please share your findings here and let us know if we are doing something wrong.", "Our current analysis suggests that the SingleThreadedExecutor needs to be optimized otherwise normal ROS 2 cannot work properly on \u2018ARM A-class\u2019 embedded boards. We are willing to look more into this problem and can help by performing more tests and providing feedback to improvements. Please let us know if there is any other way to contribute to this.", "Thank you,", "\nIshu Goel", " and myself are also currently looking at this, but I\u2019m going to give him some time to work more on it by replying in his stead ", " He has looked into this based on his tracing work, see ", " It uses LTTng to directly instrument rclcpp and rcl.", "First of all, many thanks for describing your results so openly and so early, particularly for providing the initial benchmark programs. This makes it much easier to compare and combine results.", "In general, what I\u2019ve heard from the OSRF and others is that people are somewhat aware of the inefficiencies in the executor, but nobody had exact numbers so far, and therefore this problem was so far not prioritized. I think this has now changed ", "Regarding your analysis, one thing I would caution is that \u201cperf record\u201d is a sampling approach. This means it can miss executions which are too short. I don\u2019t think this compromises your results, but since you were asking, I wanted to mention it.", "Therefore, in our work, we use LTTng, which integrates both perf event and userspace tracepoints. We have tried both instrumenting every function automatically (which has noticeable overhead), and manual instrumentation of just the most relevant functions. The latter is a bit more work, but also gives more precise results.", "About the single-threaded executor, one thing that I noticed is that it operates in the following way:", "Could the overhead of the executor be due to the fact that after every message it checks again all the entities? this can potentially be very expensive in cases like the one that you tested (200 subscriptions in the same executor)", "Moreover, the ", " function in ", " is marked as ", ".", "\n", " do you already have any idea on how it should be improved?", " Yes, that is a big part of the overhead.", "Since the wait_set only really needs to be update whenever there is a change to the entity list, it is likely that some of this effort could be avoided, or made less expensive. However, without having had a more serious look at the design, I cannot currently say what the best option would be. Maybe ", " or ", " have some ideas.", "I noticed it operates in the follow way (although I could have missed something):", "There is a list of nodes, a node has multiple callbackgroups, a group has multiple executables (eg timer, subscription, client, service, any). So basically a tree: node -> group -> executable", "The tree can be quite large, and is walked often. There seems to be room for improvement by walking/copying/searching the list of executables less (mainly step 5 & 6).", "It\u2019s all weak_ptr by design, but it must keep the memory valid (shared_ptr) as long as it\u2019s in rcl_wait, which is a bit conflicting. It\u2019s also the reason for lots of lookups in the original tree: the only way to see if something disappeared is to rebuild it.", "Is there some information on the design somewhere? Typically a executor works by just submitting executables/callables/callback to a thread(pool), where the executor just maintains a queue of work to do. This is a more complicated design that is implemented in three different layers (rclcpp/rcl/rmw).", "I also saw something on the roadmap about changing the relation between nodes/groups en refactoring the executor. Are there already more concrete ideas about this?", "Could the overhead of the executor be due to the fact that after every message it checks again all the entities?", "i had the same concern with quick code scan and tried the following patch if it affects cpu consumption,", "so far it DOES NOT reduce cpu consumption.", "my environment is", "\ndocker: 18.09.8 ros:dashing", "\nHost: Ubuntu 16.04.6 LTS / Intel\u00ae Core\u2122 i7-4790 CPU @ 3.60GHz", "Hi all,", "what do you think about this?", "already checked if i can reduce cpu consumption, it does some but not a big deal\u2026", "will dig deeper.", "Hi ", ",", "Thanks a lot for your efforts. We are also working on creating a static scheduler to see how much performance gain can be achieved. We will share our result as soon as we complete our work. Please keep sharing the results of your work.", "got it, thanks!", "\nwe will do the same!", "tomoya", "Sorry for the delay! Here are the results of the investigation done by ", " and me.", "We could replicate the earlier results, showing that the Executor consumes a lot of CPU. In that, we could distinguish two cases:", "Compared to earlier work with similar results, we took care to minimize overhead and only count time spent actually on the CPU. Therefore, we consider not just the qualitative result, but also the absolute numbers to be trustworthy.", "This has been non-trivial, because the executor calls very many, very short functions (mainly to do with ", "s). This causes problems both for traditional profiling (which adds lots of overhead) and for sampling-based profiling (which may not notice these). Just to give an idea, initialising the nodes took at least a good 10 seconds when using ", "! Without profiling, it takes ~100 ms.", "To achieve this, we use 1) explicit instrumentation of only the relevant high-level functions and 2) we capture scheduling events. This allows us to sum CPU time only when the thread is actually executing on the CPU.", "Specifically, we only looked at the main ", " functions:", "See our executor instrumentation ", ".", "As mentioned before, based on scheduling information, we only count CPU time when the thread is running on the CPU, not when it is blocked.", "We chose the ", " test case, since it has the highest CPU usage. We traced it for a few seconds. The thread itself has a CPU usage of 55.87% (this is less than the 70% overall CPU usage reported earlier, because it does not include time spent in the dedicated middleware threads).", "In our first analysis, we looked at ", " in some detail, because of the high overhead numbers reported earlier.", "As you can see, from the \u201cfunction\u201d bar, the core ", " function indeed only takes ~32% CPU, the rest is Executor overhead. However, as you can also see from the \u201cthread\u201d bar, the whole method only makes up ~18% of the CPU usage of overall thread. This means that other parts of the Executor are more important.", "Therefore, we took at step back and looked at the two high-level functions in ", ": ", " and ", ".", "The ON CPU time for each function is compared to the whole thread and to the parent function. In this case, 79.21% of the CPU time for the whole thread is spent in ", " vs. 8.22% for ", ". These numbers are similar to ", ".", "Since ", " is likely dominated by running user code, we took a closer look at the functions inside ", ": ", " and ", ".", "Here, ", " represents 67.02% of ", "'s CPU time, and 53.09% of ", " the actual CPU time for the thread!", "Looking at the code, ", " checks its lists of timers/subscriptions/services/clients/waitables and returns once it has found one that is ready to execute. As a side note, having to loop over all the lists would explain the large CPU usage difference between the ", " test case and the ", " test case, since the latter has only one node.", "If we look at the CPU usage for each function individually, we can see that ", " is indeed the most CPU-intensive function.", "The full data is below.", "In conclusion, the executor should be optimized. Figuring out if \u2013 and which \u2013 executable is ready seems to take ", " of CPU time.", "We used LTTng and the ", " & ", " packages. The Jupyter notebook which was used to get the results above can be found ", ". This post can also be found ", ", which also shows how profiling overhead can really mess with the results.", "Thank you Christophe, very nice results. Good to see that we came to the same conclusions, this makes our case even stronger. I\u2019m currently working on posting an issue on the rclcpp github where I will reference this discussion. I think your findings will be very helpful!", "Edit: The issue is now available here: ", "btw, for reference with respect to the changes ", " did: No single call is to blame. The main issue is that, for every single timer-invocation or message, the whole internal representation is traversed. In contrast, if you use the middleware directly, you can attach a listener directly to each communication objects. This avoids traversal ", ".", "However, the listener approach has the problem that we have very little control over when which message is being executed. That\u2019s precisely why ROS 2 adds executors, and can even have different ones.", "IMHO, it would help to look at the interface between rmw and the executor, to pass more information across and thus avoid traversal.", "The main issue is that, for every single timer-invocation or message, the whole internal representation is traversed. In contrast, if you use the middleware directly, you can attach a listener directly to each communication objects. This avoids traversal ", " .", "i need more time to dig deeper but i do agree on this.", "besides, since this is optimization, we might as well define reasonable goal to achieve.", "tomoya", "Just FYI,", "\ncreate \u201cexecute_any_executable_list\u201d and \u201cget_next_ready_executable_list\u201d to reap the executable event as much as possible in single iteration. (that is said if the multiple executables are ready to fire, number of iteration to reap the executables will be much less.)", "so far, we do not see much improvement.", ", and all", "could you take a look at the following PR?", "\n", "\n", "thanks,", "\nTomoya", "Hello everyone,", "Our first POC for a Static version of the Executor can be found here ", " . This version works with the latest stable release of dashing giving the following results:", "\n", "Our StaticExecutor has been added to rclcpp in such a way that the old functionality remains intact. To use our executor please follow the README. The package also contains dockerfiles to quickly inspect the CPU usage on your PC for different executors (the LET executor created by Bosch for micro-ROS is also included in this comparison).", "If you try out the docker example please share your results. It would be even better if you could use our executor with your own source code. This way it can be tested for more use-cases. If you run into bugs, please let us know! We did make some assumptions with respect to the source code, given that this is a POC (assumptions are mentioned in the README).", "We think this POC is a good first step to highlight possible performance gains. The final goal is to get an optimized Executor with proper scheduling mechanics in the core ros2 stack. We are currently working on a fork from ros2 master to create a proper PR for this version. We will keep you updated on the PR progress here.", "Rather than a fork, you could probably provide your new executor as a separate library.", "Great!!! we will look into that.", "Rather than a fork, you could probably provide your new executor as a separate library.", "+1 on this.", "thanks", "Hello everyone,", "For now we created this PR for rclcpp ", " . We are considering making the code a separate library. Having the static executor as an optional package would prevent the bloating of ROS2. However, the package would also require a maintainer. Since we are a relatively small team that plans on doing more work (creating more packages in the future), we have to consider if and what packages we want to maintain. The static executor is a relatively small package, so we could consider picking it up (this is an internal discussion we are yet to have).", "Please leave your comments and thoughts on the code under the PR. Even if the PR does not get approved, we hope to at least draw attention to the CPU overhead of the current implementation.", "Small update: We updated the dashing version of our static executor to be semi-dynamic. The node guard_conditions are used as event trigger to rebuild the wait-set and executable list. This means that when a subscriber, timer etc. is added during spin(), the executor will notice (by checking the guard_condition) and rebuild, making the use of the static executor less restrictive.", "This updated version can (still) be found here ", ".", "We will create a master (eloquent) version of this, but we first want to fix some Jenkins linter errors and do some clean up on our PR.", "If you try out our code please share your results here. Please report any bugs you find. Possible optimizations are best posted on the PR when we apply the changes there.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["a node starts spinning", "receives a message (awakening from spin)", "the executor calls ", " to retrieve the entity that has to handle the message", "the message is handled by the subscription", "the executor checks again all the registered entities", "if no entities have work to do, the executor goes to sleep again", "It populates a list of all executables by walking the mentioned tree into a memorystrategy. (promote weak to shared_ptr)", "The memory strategy is then converted into a wait-set (to call the rcl)", "The wait set is waited upon. Implementation is all the way down into the RMW layer. It differs per RMW implementation.", "After the wait, only ready executables are left in the waitset (not null).", "The memory strategy is updated with this list (remove all that are not ready, to allow weak_ptr to cease)", "For a ready executable, the group is retrieved from the original tree by searching the entire tree.", "Execute", "Go back to step 6, if more executables where ready, otherwise go to step 1", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "when there are few or no messages (e.g., for a timer-driven node), then the ", " method causes the majority of the overhead, with 70% of its time spent in ", " and only 30% (excluding waiting) spent in the RMW layer and below. We determined this using the \u201cnopub\u201d, pure timer benchmark.", "when there are many messages, the majority of the CPU usage \u2013 up to about ", " in our tests \u2013 is caused by the ", " function. This is pure ", ". We determined this using scg\u2019s \u201cros\u201d benchmark, which sends 10000 small messages per second.", "\n", "\n", "\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/singlethreadedexecutor-creates-a-high-cpu-overhead-in-ros-2/10077"},
{"title": "Add `visibility_control.h` to the API as standard usage", "thread_contents": ["The ", " is present in most of the projects. Why isn\u2019t it simply added to the RCL API to avoid replication?", "Is there a reason for this file to be copy-pasted in each project with renamed macros or is it bad practice because it was not present at first?", "Is there a reason for this file to be copy-pasted in each project with renamed macros", "that last bit would be why the file gets copied: those macros are project-specific.", "But these macros, apart from being renamed, are identical.", "The ", " library should probably be the one included as it defines:", "Yes, they are identical, except the name.", "As in some cases, you\u2019d need to be able to control how specific projects either import or export symbols.", "The ", " library should probably be the one included as it defines:", "Note how it says: \u201cfor ", "\u201d.", "I\u2019m not saying the situation cannot be improved. I just answered your question: why are these files copied?", "(we could consider creating another layer of macros that only takes a name and then specialises a template, another possibility could be to use CMake\u2019s ", " module (but there may be requirements/constraints that made this impossible/undesirable for the ROS2 codebase))", "Unfortunately, due to Windows linkage, it really does need to be per-project.", "When you build a library on Windows, all symbols are private (meaning nothing can call them).  For each symbol that you want public and callable by the outside world, you need to mark them with ", " during compile time of the library.  When you want a downstream consumer to use them, you need to mark them with ", " during compile time of the downstream consumer.  So far, this is all pretty clear from the macros.", "The trouble comes when you want library A to depend on library B.  In that case, you need to mark the symbols of library B as ", " (so library A can call them), but you need to mark the public symbols of library A as ", ".  So you can\u2019t just have one set of macros to accomplish this.  This is why there are per-project macros.", "(we could consider creating another layer of macros that only takes a name and then specialises a template, another possibility could be to use CMake\u2019s ", " module (but there may be requirements/constraints that made this impossible/undesirable for the ROS2 codebase))", "We\u2019ve traditionally shied away from using ", " because it locks you into using CMake as your build system, while separate visibility macros don\u2019t.  I honestly don\u2019t know if there is substantial interest in building ROS packages without CMake, so I can\u2019t comment on whether that is a good enough reason or not.  (There\u2019s also my personal bias that ", " is \u201cmagic\u201d, while the hand-coded macros are straightforward to read, but I can get over that).", "Unfortunately, due to Windows linkage, it really does need to be per-project.", "Exactly.", "I honestly don\u2019t know if there is substantial interest in building ROS packages without CMake,", "Probably (not). In any case, replacing an entire build system seems like it would be more involved than just worrying about some generated files.", "Wouldn\u2019t it be possible to create a template macro that wraps all the visibility macros and takes a single argument: an identifier (which would take values such as ", ", ", ", etc).", "Calling the macro results in the template being expanded which turns it into the classical content of a ", " header, but for a specific package.", "The macro could be shared among all packages, any language with a C-compatible preprocessor could use it (so no build system specific functionality required) and it would avoid the duplication ", " asks about.", "Wouldn\u2019t it be possible to create a template macro that wraps all the visibility macros and takes a single argument: an identifier (which would take values such as ", " , ", " , etc).", "Yeah, with token pasting I think this would work.  Assuming there are no other problems that others have with this scheme, I\u2019d be happy to review patches to the core to add this functionality.", "We\u2019ve traditionally shied away from using ", " because it locks you into using CMake as your build system, while separate visibility macros don\u2019t.", "The independence of the build system is that the driving factor why we are currently having separate headers.", "The reason we kept the header files in the source of each package is that IDEs as well as static analysis tools are able to find the header and know about these macros. When being generated by the build system that is commonly an issue since the header isn\u2019t present in the source space of the package.", "See ", " for a longer discussion around this topic.", " (and others) great explanation. I\u2019m not involved at all in this but just want to put in a vote for documentation: can this rationale be copied by someone (", "?)  as comments at the top of some/all of the ", " files to avoid revisiting this topic by others in the future?", "can this rationale be copied [\u2026] as comments at the top of some/all of the ", " files", "so you want to even further increase the amount of duplicated content? ", "I honestly don\u2019t know if there is substantial interest in building ROS packages without CMake,", "People build ROS 1 with bazel at least.", "Probably (not). In any case, replacing an entire build system seems like it would be more involved than just worrying about some generated files.", "That\u2019s probably also true.", "I have to admit that the current state is at least partially due to my preferences, because I prefer not to have to generate files if it can be avoided. As Dirk mentioned, it makes it easier to integrate into IDEs and state code analyzers, but the reality is that we generate code in other places anyways (though at the time that we added the visibility headers we didn\u2019t have any other generated code, aside from messages).", "Despite my preference to the contrary, if many others want it to be generated then that\u2019s fine by me, but it does seem like a sideways move to me.", "Half of this header is dealing with GCC/MSVC difference of syntax. We could at least extract that out and avoid duplicating this logic everywhere, by factoring it out in ", ".", "In ", ":", "Duplicated code in every other package (here ", "):", "Less duplicated code, still no generated header, and as this is a new header, this does not break existing code, people can refactor their package if they want later.", "I just went and sent a PR for this: ", "While your solution certainly works to deduplicate code, this brings another burden to the user. Now, every package has to depend on ", ". In order to use the macro, every package has to set the dependencies straight in their ", " and ", ".", "The current situation is not ideal right now, but it\u2019s essentially one search-and-replace command to get the visibility macros to compile with your package.", "EDIT: One thing to mention is that ", " ", " that visibility header for you. So there is actually no need to copy paste anything in the first place when starting a new project.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/add-visibility-control-h-to-the-api-as-standard-usage/11681"},
{"title": "Generate .idl files for Fast-RTPS from ros2 messages", "thread_contents": ["I read here(", ") that currently the default implementation of dds( Fast_RTPS) doesn.t consume .idl files, that\u2019s why it is not visible when we build ros2 packages.Will future ros2 releases include any tool which will generate .idl files for FastRTPS, from ros2 messages ?", "The package ", " already generates ", " files from ", " files which is being used for ", " and ", ".", "But ", " is different since it uses introspection rather than generated code specific to each message so for FastRTPS you don\u2019t have to generate ", " files.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/generate-idl-files-for-fast-rtps-from-ros2-messages/2964"},
{"title": "Definition of data recording feature for Autoware.Auto", "thread_contents": ["Hi,", "This post is to discuss the definition of data recording feature for Autoware.Auto, which comes from the ", " on the Gitlab.", "First of all, I want to figure out the purpose(what, when, what for) of the data recording feature.", "\nAfter that, we\u2019ll discuss \u201chow to\u201d and \u201cwhere to\u201d record the data.", "I have shortly studied the definition of the existing EDRs(Event Data Recorders), and EDR-AD(Event Data Recorder for Autonomous Driving) which has been proposed recently.", "\nFor example, the definition of EDRs by the US government is as below.", "The definition of EDR-AD by CLEPA is as below.", "\n", "I think the concept of EDR-AD is a good example for us to discuss the data recording feature in Autoware.Auto. So I am thinking to break down the required data elements and map them to data in Autoware.Auto. However, I just hit a basic question.", "Does anyone have an answer to it? Any other suggestions or feedback would be appreciated.", "The following links would be helpful for reference.", "This is a critical feature for any AV that will be certified for road use.  The UK perspective on this question is put forward in the ", ".", "I\u2019ve had some interactions with the Law Commission trying to work out the relationship between privacy and the requirement to store data, and also about the length of time that data needs to be stored. These are difficult questions.", "Thanks. I\u2019ll check the document you shared.", "As far as I studied in several documents including the one which ", " shared for me, we can say:", "However, I also find some difficulty to define the requirement for this data recording feature because:", "My current idea to overcome the above is:", "Will it work for our users? Any other opinions or feedback would be appreciated.", "Autonomous driving vehicles should record additional data related to AD systems so that any third party can determine the responsibility of the driver after infringements or incidents (including non-accident events).", "My understanding of the intent behind EDRs is to exactly this. Ideally the information stored should be sufficient to reconstruct the scenario in simulation and I would recommend that goal as a guide for this work.", "While basic telemetry (pose, velocity, acceleration, status of indicators, horn, lights, etc) do not consume much space, sensor data such as  LiDAR and camera is very space-heavy.  Obviously the system will not know when the incident is going to happen, and the requirement to collect -30s to +10s means that the system will need to be constantly recording.  This is probably best implemented using a circular buffer, and storing the contents of the buffer when an incident occurs.", "Thanks, ", ". I agree with your opinion.", "And at the last WG meeting, ", " gave me a suggestion that Autoware should assume an EDR is not present and record everything.", "After that, I refined the definition of this feature. I would be happy to hear any feedback.", "\nAutoware should provide an appropriate security function considering the following requirements.", " do you have any more thoughts on the topic?", "You\u2019ve raised many points here so I comment in several posts:", "\nI reply to \u201c-30sec to +10sec relative to the trigged event\u201d", "Sections 5.12 to 5.16, pages 19 and 20 of this UK document:", "\n", "669.01 KB", "\n", "Normal recording frequency minimum is 10Hz, but \u201cIn the event of an incident, an event data recorder should be able to capture a suggested minimum period of 30 seconds before the incident, and 15 seconds after. It is recommended that the minimum recording frequency is 50Hz\u201d", "\u201cThe stored audio and visual data should be treated under relevant privacy laws.\u201d", "\n", "On 6 August 2017, in advance of proposed legislation, the UK government published 8 \u2018Key Principles\u2019 regarding the cyber security of connected and autonomous vehicles. This is the last of a series of 4 blogs regarding those principles. Vehicles today...", "\n", "\nThis article implies extra precautions if the data is to be used for prosecutions.", "Some vehicle may not have the hardware installed to enable the recording of all the data suggested.   For example, an ordinary StreetDrone does not provide for the autonomous switching of lights or indicators, nor the recording of their state.   It is now provided as an option or an upgrade.", "Thanks, ", ". I appreciate your comment!", "Normal recording frequency minimum is 10Hz, but \u201cIn the event of an incident, an event data recorder should be able to capture a suggested minimum period of 30 seconds before the incident, and 15 seconds after. It is recommended that the minimum recording frequency is 50Hz\u201d", "I think this requirement means we should set the default recording rate at 50Hz in a buffer because we expect that this feature should be used in the post-incident analysis.", "This article implies extra precautions if the data is to be used for prosecutions.", "This article is interesting. It also says that the definition of \u201csensitive data\u201d that \u201cusers\" can delete is still ambiguous and should be clarified by the authorities in the future.", "\nSo I think we should let the distributors of Autoware.Auto to configure the specific set of data elements to record, based on the regulations they have to follow in their region.", "Some vehicle may not have the hardware installed to enable the recording of all the data suggested. For example, an ordinary StreetDrone does not provide for the autonomous switching of lights or indicators, nor the recording of their state. It is now provided as an option or an upgrade.", "Yes, I agree. So the distributors of Autoware.Auto should be able to configure the specific set of data elements to record, based on their hardware specifications, too.", "This point hasn\u2019t been mentioned yet but I think it should be to be clear.", "The data recording feature will be a part of Autoware, but that doesn\u2019t mean it should be based on ROS 2 nodes for its architecture. This feature is going to be quite important for safety and so it should be as simple as possible. I think that therefore we should have a data recorder architecture that has minimal dependencies, and that we can add a sub-component to responsible for managing the interaction with ROS 2 to get the ROS 2 data. This sub-component could well not even use ROS 2, instead directly using a DDS client library to get the data.", "\nThanks, I agree with your opinion. I\u2019ll keep it in my mind to design this feature as simple as we can so that this feature works correctly even if some critical errors happen in ROS 2 layers. The same design rule should be also applied in recording vehicle data and system logs.", "I was told that the ", " has been established under the WP29 this year. I will watch the activities in this working party because I expect the upcoming regulations in the participating countries will follow the outcome from it.", "According to ", " for their sessions, I can observe the following.", "As far as reading their documents, it seems like to me that people in the working party gave up to record space-heavy data in DSSAD due to storage capacity and privacy protection, and decided to focus on the very limited data.", "So, I want to ask you again whether we should expect to record space-heavy data such as LiDAR and camera in Autoware.auto. Recording such data should be obviously important for debugging but it may not be required by regal regulations in the near future.", "\n", ", ", ", ", "\nAny thoughts?", " . It is used to determine who took control of the car when the incident happened.", "Does this mean \u201call data for several months\u201d or \u201ccontinuously record, and remain operational for several months\u201d?", "Why is several months of data necessary to determine the immediate time around an accident? A vehicle is likely to start and stop dozens of times in several months. This seems like an odd requirement to me.", "I think that even if the data is not required by any legal regulations, we still are obligated to record all sensor, control and state data for the immediate time around an incident. Otherwise it would become impossible to investigate the cause of the incident and determine if Autoware was the cause, and if so what in Autoware needs to be fixed. This is a basic requirement of any safety-critical system.", "Does this mean \u201call data for several months\u201d or \u201ccontinuously record, and remain operational for several months\u201d?", "It means the former \u201call data for several months\u201d. However, \u201call data\u201d will be a small set of AD specific events.", "They expect that some kinds of accidents cannot be detected by the AD system itself but should be claimed by others afterward. For example, they assume accidents such as traffic offenses, collisions with very small impacts and unsafe maneuvers without collisions.", "So the document says DSSAD should store data with timestamps for a long period(in the last X-months) and be able to deliver them when requested by an authorized entity. I have to check how reliable the recorded data without exact time synchronization between other computing nodes would be.", "I think that even if the data is not required by any legal regulations, we still are obligated to record all sensor, control and state data for the immediate time around an incident. Otherwise it would become impossible to investigate the cause of the incident and determine if Autoware was the cause, and if so what in Autoware needs to be fixed. This is a basic requirement of any safety-critical system.", "OK. It makes sense. We can also add any data elements that Autoware processed for the immediate time around an incident as an EDR-like feature.", "They expect that some kinds of accidents cannot be detected by the AD system itself but should be claimed by others afterward. For example, they assume accidents such as traffic offenses, collisions with very small impacts and unsafe maneuvers without collisions.", "OK, that makes more sense now. That implies that our data logging feature needs to have levels of retention that can be set on a per-data-stream basis.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Some data related to vehicle dynamics(Delta\u2013V, Speed, Engine throttle, Service brake, Steering input, ABS activity, etc) and driver\u2019s safety status(Safety belt status, Frontal airbag deployment, etc)", "Roughly -5sec to +300ms relative to the crash impact", "Post-crash investigations and for analysis of safety equipment performance", "Generic events(Event type, Timestamp, Location) in AD system for driving log or testing", "The same data as EDRs for crash event", "Additional data related to rule violations(driving manoeuvers, Camera images, GPS time/ position, AD active state) for malfeasance event", "While AD system activated for driving log or testing", "Roughly -30sec to +10sec relative to the crash event", "When AD system detect any rule violations for malfeasance event", "Disculpation/Exoneration of the driver in case of infringements (including non-accident events)", "Accident situation: if AD system was activated", "Product liability, product monitoring obligation, quality assurance and product development for OEMs and suppliers.", "Supply of factual data for legal proof.", "Should we assume that a generic EDR is already equipped on the vehicle?", "\nIf yes, synchronization between the data recorded in the EDR the one in Autoware.Auto would be the key point.", "\nIf no, this feature should contain all features of EDR-AD(including generic EDR).", "\n", ".", "Black Block Recorder: Immutable Black Box Logging via rosbag2 and DLTs, Ruffin White and Gianluca Caiazza (will be presented on ROSCon2019)", "Autonomous driving vehicles should obviously implement EDR-like features the same as manned vehicles in case of a crash event.", "Autonomous driving vehicles should record additional data related to AD systems so that any third party can determine the responsibility of the driver after infringements or incidents (including non-accident events).", "The recorded data related to AD features can contain visual and audio data that should be handled with relevant data protection or privacy laws in each region.", "Requirements for data recording features for AD systems are not as clear as ones for EDRs.", "It is not clear for me if we should expect an existing EDR equipped on the vehicle or not.", "Appropriate handling visual and audio data will change depends on the laws in each region", "Define a typical use case and fundamental functions to record and store data in Autoware specification.", "The fundamental functions will contain:", "\n\u25cb receiving vehicle data in the legacy in-vehicle bus like CAN via vehicle interface", "\n\u25cb external interfaces to start and stop recording", "\n\u25cb time synchronization between vehicle data and AD system data (if needed)", "\n\u25cb configuring a set of data elements to record", "\n\u25cb configuring the persistency and durability for each data element", "\n\u25cb encryption of the recorded data", "Categorize data elements to record(e.g. we can roughly categorize them into 3 types of data as \u201cvehicle data\u201d, \u201cAD system data\u201d and \u201cprivacy data\u201d)", "Define a set of default persistency and durability for each data category", "Implement a minimum set of recording functions on Autoware.Auto as a reference implementation.", "Any CAN data available via the vehicle interface", "\n(the set of data elements to record should be configurable)", "Any ROS2 topic and parameters available via the standard ROS2 APIs", "\n(the set of data elements to record should be configurable)", "Typical system logs generated by the operating system outside of Autoware", "\n(e.g. date, ps, env, syslog, dmesg, netstat in Linux)", "Identification data of the running system", "\n(e.g. software release version, system mode, system status)", "-30sec to +10sec relative to the trigged event.", "\n(Autoware should record all of the data constantly in a buffer while activated and store the content in persistent storage when triggered.)", "Provide the appropriate evidence so that any third party can determine the responsibility of the AD system after infringements or incidents (including non-accident events). Ideally, it can reconstruct the scenario in the simulation with the stored data sufficiently.", "The stored data should not be changed by anyone after the incident.", "The stored audio and visual data should be treated under relevant privacy laws.", "The working party proposes the two type of equipment\n", "EDR(Event Data Recorder)", "DSSAD(Data Storage System for Automated Driving)", "\n", "EDR is the existing one, which records pre-crash and post-crash data when triggered by airbag deployment. It is only used for post-crash analysis.", "DSSAD is the new one, which is supposed to record the specific AD data set(e.g. significative interaction between the AD system and the human driver) ", ". It is used to determine who took control of the car when the incident happened."], "url": "https://discourse.ros.org/t/definition-of-data-recording-feature-for-autoware-auto/10495"},
{"title": "Reconsidering 1-to-1 mapping of ROS nodes to DDS participants", "thread_contents": ["Hello,", "We are working on running ROS 2 in an Embedded board and we find out that ROS 2 consumes high CPU because every ROS node is mapped to a DDS participant. We have performed some tests to investigate the issue and the tests and the results can be found at this link: ", ".", "The roadmap of ROS 2 development mentions \u201cReconsider 1-to-1 mapping of ROS nodes to DDS participants\u201d ", ". We would like to see this happen rather sooner than later. We already observe that this leads to problems in CPU usage and can constrain people in their freedom to design an architecture for a robotic system. The ROS2 middleware should allow for a setting where everything can be grouped into a single DDS participant for the people that want to use nodes for modularity at the top level, but don\u2019t want the code fragmented at the bottom level. Many use cases exist where one would like to create multiple nodes that all run on the same hardware. This is especially important since intra-process communication does not work effectively at the time of writing this post.", "Does anyone face this same kind of problem?", "\nWe would like to discuss the idea of reconsidering the 1-to-1 mapping of ROS nodes to DDS participants here and would like the current 1-to-1 mapping implementation to change and would be willing to contribute to changing this if possible.", "Thank you,", "\nIshu Goel", "Instead of introducing an option the current idea is to associate the DDS participant with the context created during ", ". That would imply that common applications using a single init / context will only use a single DDS participant - even if they are composed of multiple ROS nodes.", "Thanks for your reply ", ". When can we expect this functionality to become available? Is there anything we can do to help?", "When can we expect this functionality to become available?", "If it gets implemented in time it will be available in the next ROS 2 r release which is Eloquent in Nov 2019.", "Is there anything we can do to help?", "Any help is appreciated. It will likely start with a design article to discuss the side affects of the intended change. E.g. the ROS node name is currently being used for the DDS participant name. When that mapping goes away there needs to be a replacement mechanism to communicate the node name.", "we find out that ROS 2 consumes high CPU because every ROS node is mapped to a DDS participant.", "After the ", ", we\u2019ve also looked into this. In your answer, you mentioned that part of the CPU usage is caused by the executor itself. However, we found that this is really the ", " cause, rather than the DDS participant mapping. Therefore, if we want to lower the overhead (with relation to DDS), we should be looking at the executor as a whole.", "Also, as a caution, we should not overlook the overhead that profiling adds, and how much it can really skew the results!", "I\u2019m working on a more in-depth analysis of the CPU usage of different parts of the executor. I\u2019ll provide some results sometime next week.", "Hi ", ",", "As mentioned in our research, both the SingleThreadedExecutor and the 1-to-1 mapping of nodes to DDS participants appear to contribute to the large CPU overhead. We were planning to open a separate discourse discussion for the SingleThreadedExecutor optimization. This way the discussions don\u2019t mix and both \u201cproblems\u201d can be addressed. The link to the SingleThreadedExecutor discussion will appear on our github page soon.", "We look forward to reading your findings.", "Yeah I wanted to make sure we didn\u2019t forget about the executor! Glad to hear that you\u2019re planning on opening a separate discussion for it ", "It depends a bit on the usecase. Perf shows about a 50/50 cause with this test (10 nodes, 20 topics/publishers/timers and 200 subscribers). Changing these numbers will also change the usage numbers.", "\nAlso have a look at ", " which skips the entire dds for intraprocess communication ", "Hi, I\u2019m the author of the intra-process communication PR mentioned by ", ".", "First of all, thank you for the showing your results.", "Using 1 participant per process (or context) is definitely an interesting idea.", "\nEspecially with Fast-RTPS since it would also reduce the memory usage a lot.", "Fast-RTPS does not implement shared memory transportation yet, but it recognizes \u201clocal publications\u201d i.e. messages where the publisher and the subscription are in the same participant. In this case the message is not sent over the network, but directly passed to the subscription.", "I run your performance tests together with the new intra-process communication.", "This still does not reach the same results of Fast-RTPS alone for this particular example.", "\nNote that the new Intra-process implementation adds an additional entity to the waitset of the nodes for each subscription (possibly slowing down the SingleThreadedExecutor).", "Note that other RMW implementation allows to reduce CPU usage. For example CycloneDDS ", " where a sort of intra-process communication is already implemented.", "\nThe performance of the CycloneDDS are slightly worst than the ones of the rclcpp PR since in this case it is possible to easily skip serialization and to save some copies by knowing in advance all the subscriptions.", "Not trying to debate the performance gains of this approach, but I think it\u2019s worth pointing out that SROS 2 (and indeed DDS-Security in general) currently only supports security at the domain participant level. Using the same participant for multiple nodes will make security very difficult, as all nodes will have effectively the same identity and thus the same access control.", "Using the same participant for multiple nodes will make security very difficult", "good point, thanks for this comment.", "applications using a single init / context will only use a single DDS participant - even if they are composed of multiple ROS nodes.", "is that supposed to mean 1 process space : 1 participant always?", "thanks for bring up this issue, could you let us know once issue is registered?", "Hi ", ",", "\nThank you for your comment. Should I raise an issue for this on rwm github page: ", "? Or what is the common way of registering an issue? And in the issue can I link to our github or Discourse page?", "that works for me at least,", "and we are going to prepare Pi3 Model B+ with Ubuntu18.04/Dasing to make sure this problem on our side.", "thanks,", "\nTomoya", " I opened the issue here ", "thanks, we will share update via ", " .", "tomoya", "Just FYI,", "[Environment]", "\nPi3 Model B+ with Ubuntu18.04/Dasing", "Hi ", ",", "Thanks a lot for sharing your results.", "There\u2019s a design document with a proposal about this change: ", ".", "Hi ", ",", "Thanks a lot for your efforts. It is a nice document.", "Regards,", "\nIshu", " what is your expected timeline for these changes?", "\nFor someone who is new to this process (getting changes implemented into the core of ROS2) it is hard to judge how long implementing something like this could/would take.", "I\u2019m  also very interested in getting a high level description of the entire process if this is possible.", "\nThe developer guide  ", " is written more with \u201cnormal\u201d packages in mind. I don\u2019t think a major overhaul like this (or for instance other changes to rclcpp, rcl and rmw that can have far reaching impact), are simply handled by creating multiple disjointed pull requests.", "\nFrom watching from the sidelines what I\u2019ve seen so far is that:", "This leads me to the following questions that maybe you or another member of the community could answer:", "\nAfter writing the design document.", "\nHow are the next steps decided?", "\nWho does the actual implementation, how is this decided?", "\nHow does one keep track of all the activities in multiple layers between multiple people?", "Do multiple interested parties just respond to the issue/design document and figure something out from there? Is there a certain structure to this? Who is \u201cresponsible\u201d for the final outcome?", "Thanks in advance to anyone that can give me some clarity on the process.", "\nAlso thanks for all the hard work everyone has been putting in so far!", "Greetings,", "Martin", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["A discussion is started on discourse / an issue is raised on the github of the package", "A design document is written together with community members (and members of the TSC)", "The document is reviewed by (community members and) members of the TSC", "?"], "url": "https://discourse.ros.org/t/reconsidering-1-to-1-mapping-of-ros-nodes-to-dds-participants/10062"},
{"title": "All of parameter activity via \"parameter_events\" topic", "thread_contents": ["Hi All,", "we would like to hear some comments on this. any idea will do good, so let us hear what you guys are thinking about this. also any milestone for extension are planned or not.", "currently any parameter events such as changed or deleted parameter using ", " will be notified via \u201cparameter_events\u201d. this single topic will be used for all of parameter activities.", "it is really simple enough to use only single topic to notify parameter events, but from user perspective we like to receive the event that we are interested in only. we can filter the event from parameter_events topic but we must receive all of the events anyway. we do not actually want to receive the event if not necessary.", "there would be some options i guess,", "thanks,", "\ntomoya", "This would seem to be a similar situation as with TF: clients receive all broadcasts, but may only be interested in a subset. Clients are shielded from this by the listeners and buffers in TF, to which the filtering you mention is delegated (sort-of: the Buffer does store everything that comes in, but clients only query the buffer for information they are interested in when they have a need).", "there would be some options i guess,", "This reminds me of the bus vs channel communication patterns. Either you receive everything and filter yourself (bus), or you make connections with just those entities producing messages you are (certain you are) interested in. Both are limiting you, as you cannot easily switch.", "To avoid implementing something like the TF client library for parameter events, and looking just at DDS, perhaps content-based subscriptions could be used. They would allow you to express interest in only subsets of messages published on certain topics. Filtering would be delegated to DDS, and callbacks would only be called whenever the filter predicate matches.", "I think content-based filtering at the DDS level would be the most efficient way to handle this, but a nice API at the parameter/node level would make it more user-friendly and future-proof.", "\n", "thanks for the thoughts, i think that DDS contents filtered topic would work too.", "the question is any DDS implementation supports \u201ccontents filtered topic\u201d?", "\nas far as i know, contents filtered topic is one of the extension, so not sure what vendor supports that feature right now.", "and more information is welcome!", "thanks,", "\ntomoya", "the question is any DDS implementation supports \u201ccontents filtered topic\u201d?", "\nas far as i know, contents filtered topic is one of the extension, so not sure what vendor supports that feature right now.", "A quick check would seem to indicate the following vendors have at least some support for content based subscriptions (or filtering):", "a nice API at the parameter/node level would make it more user-friendly and future-proof.", "Certainly. This needs to be exposed at the ROS level in some way or other.", "Not just for parameter events, but subscriptions in general I would say.", "To keep things connected: here is an old ROS Answers Q&A about this: ", ".", "From user perspective I believe the best would be to have a node which I can roslaunch in only in case I need parameter updates (events). So this node can be configurable on start and send events only for those parameters I\u2019m interested in", "\ne.g. roslaunch prameter_events default.launch update_list:=param1,param2", "I had submitted a PR to the rclcpp repository to add a ParameterEventsSubscriber class which I\u2019d hoped would address some of the issues mentioned here. Namely, the class subscribes to one or more parameter events topics (on either your current namespace or remote namespace), can filter events by parameter name and node, and can set a custom callback per parameter.", "Here is the current PR: ", "This week I am addressing the current feedback, so feel free to offer any additional comments.", "thanks i will look into the PR and leave the feedback.", "the class subscribes to one or more parameter events topics (on either your current namespace or remote namespace), can filter events by parameter name and node, and can set a custom callback per parameter.", "That sounds like an analogue to the TF Listener/Buffer approach.", "i think that we need to consider DDS contents filter topic to see if we can actually do what we want to do. and then bring up those interfaces up to ROS generic common API, so that parameter_events can be modified with new nice API. that is just idea and keep posted if we got anything.", "We will do feasibility for DDS Contents Filtered Topic 1st and then come up with high level design.", "seems like that ", " supports ContentFilteredTopics, we are gonna use this for feasibility check.", "I\u2019m somewhat hesitant about content filtered topics, as they introduce quite a lot of complexity in the rmw layer. The mechanism for expressing filters is complex and would be a huge burden for non-DDS rmw implementations.", "I\u2019m not 100% convinced about the motivation, as I do not think the bus approach (receiving all and filtering for what you want) is going to be problematic in practice. It\u2019s actually worse for tf as data is usually streaming continuously (especially before tf_static and with things like moving robot arms). Though it is not disallowed nor technically wrong, I don\u2019t foresee parameters change so much that you cannot subscribe to all events and filter down. It will be most intense during startup of a large system occurs. And I don\u2019t think many things will need to subscribe to this topic (mostly logging tools and introspection tools).", "Additionally, there are other ways to address this problem which may not be as elegant, but are still sufficient in my opinion. For instance, we could have a composable node that you could attach to any process which would subscribe intra-process to ", " and then filter as you configured it to do, and republish it on a new topic for external consumption. This solution keeps the middleware simple (and therefore more portable), and it should achieve similar performance to the content filtered topics.", "Also, though many of the implementations support content filtered topics, I believe many will not do publish side filtering (this is not a requirement of the feature in DDS, AFAIK). And therefore it will simply be doing what you the user could do (or a library on your behalf) and receiving all data, but filtering it before delivering it to you.", "That all being said, some significant value could be gained by using content filtered topics with keys and instances. We do technically allow key\u2019ed types via IDL now, but we lack the API support to make use of this effectively right now.", "So it\u2019s worth investigating still, but I just wanted to temper the interest in content filtered topics slightly, and/or prepare you guys for the fact that adding them to the middleware API is a significant undertaking.", "thanks for sharing practical thoughts!", "And I don\u2019t think many things will need to subscribe to this topic", "but as long as parameters are there, user wants to do something via parameter events. i believe that this is reasonable. and mostly user is interested in specific parameter for each node, it will receive all of the parameter events anyway. of course that is always depending on use cases.", "would be a huge burden for non-DDS rmw implementations.", "possibly, yes", "I\u2019m not 100% convinced about the motivation", "me neither, we are just trying to figure out what is suitable for.", "I believe many will not do publish side filtering", "So do I, but this is the key for improvement we want.", "\nincluding this, i believe that it is worth to investigate the feasibility.", "thanks,", "\ntomoya", "ParameterEventsSubscriber is introduced in ", "\ni think that we could improve that using Contents Filtered Topics base on ParameterEventsSubscriber.", " ", " ", " , and all", "We tried to use ContentFilteredTopic with opensplice, i see this could be really useful to optimize /parameter_events to be filtered with user interests. opensplice supports ContentFilteredTopic but only on  DataReader side filtering which is not efficient enough for network transport.", "Does anyone have plan to support ContentFilterTopic on DataWriter side with multiple expressions and array types? i just trying to get more information around here.", "thanks in advance.", "Hi ", " ,", "Does anyone have plan to support ContentFilterTopic on DataWriter side with multiple expressions and array types? i just trying to get more information around here.", "Yes \u2014 but, there\u2019s no ETA yet.", "but partition is produced", "All DDS implementations support partitions, and there are quite a few tricks one can play with them (you can publish in multiple partitions, subscribe in multiple partitions and use wildcards, too). Currently ROS2 doesn\u2019t rely on partitions so one would think there is a way to use them for this. It\u2019d be worth a try at least.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["all parameter events via single topic \u201cparameter_events\u201d (current)", "parameter events via topics for each node (user can specify whose parameter is interesting)", "each parameter via each topic (user can specify which parameter is interesting)", "all parameter events via single topic \u201cparameter_events\u201d (current)", "parameter events via topics for each node (user can specify whose parameter is interesting)", "each parameter via each topic (user can specify which parameter is interesting)", "Twinoaks", "RTI", "Prismtech", "OpenDDS", "eProsima"], "url": "https://discourse.ros.org/t/all-of-parameter-activity-via-parameter-events-topic/10767"},
{"title": "Introducing the Robot Vulnerability Database", "thread_contents": ["Hello ROSers,", "As part of our commitment with security, ", " is glad to introduce the ", ", a community-contributed list of robot vulnerabilities and weaknesses.", "This effort aligns with Alias\u2019 mission to ", " and is the first public step we take towards implementing it. Briefly, we share the belief that vulnerability disclosure is a two-way street where both vendors and researchers, must act responsibly.  We thereby adhere to a ", " (read more about ", ") while other flaws such as simple bugs or weaknesses could be filed at any point in time. We notify vendors of vulnerabilities immediately, cooperate with them and favour a coordinated  disclosure where ", ", or sooner if the vendor releases a fix.", "This policy is strongly in line with our desire to improve the robotics industry response times to security bugs, but also results in softer landings for bugs marginally over deadline. According to ", ", most vendors are ignoring security flaws completely. Similar to us, we call on all security researchers to adopt disclosure deadlines in some form, and feel free to use our policy verbatim (we\u2019ve actually done so, from ", ") if you find our record and reasoning compelling. Creating pressure towards more reasonably-timed fixes will result in smaller windows of opportunity for blackhats to abuse vulnerabilities. Given the direct physical connection with the world that robots have,  in our opinion, vulnerability disclosure policies such as ours result in greater security in robotics and an overall improved safety. A security-first approach is a must to ensure safe robotic operations.", "The ", " is an attempt to register and record robot security bugs including both weaknesses and vulnerabilities (refer to ", ") The current content has been built over the past months and includes at the time of writing more than ", ":", "As contributors of ROS and ROS 2, we have create a particular section for ROS (currently only highlighting ROS 2 flaws) available ", ".  We have committed resources to maintain this list and process flaws while reporting about the status of vulnerabilities at the corresponding ROS 2 Security WG meetings. We invite everyone in the community to contribute and help processing security flaws. Currently and as recorded by our team at RVD, ", ":", "Over the coming months we expect to include several ROS and ROS 2 packages in our pseudo-automatic robot security pipelines and collaborate with maintainers while recording and addressing security vulnerabilities and weaknesses", "We\u2019d like to acknowledge and credit the support we received from the ROSin project which partially enabled the development of this work. In particular, RVD will be used to report the findings of ROSIN RedROS2-I and RedROS2-II FTPs, funded by the European Union\u2019s Horizon 2020 research and innovation programme under the project ROSIN with the grant agreement No 732287.", "Finally, a small disclaimer: ", "BTW, for those interested in learning more about our work but also about security in robotics, overall, we invite you all to attend the ", " that will happen within ROSCon 2019 in Macau!", "Do ", " rules that create world writable devices count as a vulnerability or a weakness?", "Hello ", ",", "Do ", " rules that create world writable devices count as a vulnerability or a weakness?", "IMHO, provided those rules were defaults and/or could be forced into a robot or robot component (remotely or even locally, that would just affect the severity) and take advantage of those devices (as part of an exploit), then according to our ", ",  it could be considered a vulnerability. In that case you should be able to provide it with a score for its severity using ", ". See the discusion ", " for a bit more of context in vulnerability/weakness.", "Our goal with existing reported (and future) flaws is to provide means for reproducing and validating its exploitability. We\u2019ve been prototyping for a while (refer to our early ", " approach) and are currently working on a prototype based in Docker. We hope to release is shortly. The idea is that each researcher reporting a flaw should provide a docker-based image that allows reproducing the flaw, arguing about it and ultimately, facilitating its mitigation.", "Interesting undertaking; we clearly need more attention paid to security issues in robotics.", "To help better understand the goal and how the process works, I have some questions:", "Why do we need a robot-specific database for cybersecurity vulnerabilities? Is there a shortcoming in the widely used ", " system? A ", " in their database shows more than a few entries that would seem to be of the type that you\u2019re proposing to keep track of.", "If disclosure of vulnerabilities is meant to be delayed for up to 90 days, but the community submits new vulnerabilities to RVD as public github issues, then how does the delayed disclosure work?", "When you notify a vendor of a vulnerability, does an email address (e.g., security@) suffice, or do you need require other communication mechanism?", "ROS 2 presents 236 security weaknesses", "I have a (maybe stupid) question: is it common practice for for these kind of vulnerability statistics to include test-only code? While problem in test code should certainly be addressed it looks to me that they aren\u2019t really a defect in the shipped software (since they are not part of the packaged software after the build).", "Another note regarding the published numbers here: the public GitHub tickets seems to contain ", " redundancy. The very same defect is being ticketed up to one hundred times just since the functionality / API is used in numerous packages - for each a separate ticket is created. I would certainly consider that to be only a single vulnerability / flaw (even though it affects many packages).", "Both of the above seems to \u201cinflate\u201d the reported numbers significantly therefore I would suggest to reconsider how to account for those in statistics like this. I would also be interested in the actual (non-inflated) numbers to see where we are roughly at.", "Why do we need a robot-specific database for cybersecurity vulnerabilities? Is there a shortcoming in the widely used ", " system? A ", " in their database shows more than a few entries that would seem to be of the type that you\u2019re proposing to keep track of.", "CVEs are managed by ", ", organizations authorized to assign CVE IDs. ", " (see Requirements at ", "). We are taking (what we think are) the right steps to become a CNA and will soon start submitting CVEs (and provide CVE IDs to reported vulnerabilities within RVD). By no means Alias Robotics intends to ", ", we aim to empower it.", "That said, while we look up to the work that Mitre and many other partners started within CVE, over the past year or so, Alias Robotics identified several limitations and started building RVD accordingly (a robot-", " database of vulnerabilities) and strong barriers to change things. Without getting into an extremely verbose reasoning on the things we\u2019ve tried (and failed) and would like to see improved within CVE for robotics, see below some of the aspects we dislike and consider critical to move forward in securing robots and their components:", ": while ", " is complete right about the fact that the current CVE List provides results when searching for ", " (43 CVE entries), ", " (13 CVE entries) and even the more generic (and misleading) query ", " ( 892 CVE entries), a closer look into results (at least to us) into realizing that finding ROS-related flaws is a challenge. Contributing to categorizing this information better is something we\u2019ve committed to but don\u2019t believe will happen in the short term given the complexity/limitations of how the CVE List works (and where robot-related vulnerabilities are the minority, still) ", ". There\u2019s a lot of work to do on this still and we have internal tickets for it. We plan to separate the existing template for reports into two (weakness and vulnerability, facilitating escalation from weakness to vulnerabilities). We also hope to automate the process of reviewing flaws by using parsers that automatically and periodically review all tickets and report/tag those that are malformed.", ": Let\u2019s take ", " (and related sub-reports within the entry) as an example, for a security researcher to reproduce this flaw and provide a mitigation or simply patch it temporarily in their shop-floor, more information would be required. The intrinsic system integration of the robotics field demands for additional bits of information. Examples include a well defined and appropriate severity (to priorize flaws), a reproducible environment and instructions (if feasible) and likely (though this is a personal feeling), a channel for an open discussion where other researchers might triage/contribute/discard the flaw itself (you will find that most robot-related flaws within CVE List have barely been triaged). ", ".", ": Working with robots is very time consuming. From my experience, anyone that has built a robot with ROS understands the pain of rebuilding workspaces across platforms. This is not a criticism though, it\u2019s likely an inherent characteristic of the complexity of the field and the tradeoff of the modularity of ROS. Mitigating a vulnerability or a weakness requires one to first reproduce the flaw. This can be ", " time consuming. Not so much providing the fix itself but ensuring that your environment is appropriate. ", ". We\u2019re still working on it and hope to make it available to everyone very soon.", ": CVE uses CVSS to report on the severity of vulnerabilities. As we discussed and published a while ago, CVSS has strong limitations when applied to robotics. Simply put, it fails to capture the interaction that robots may have with their environments and humans. This is critical when considering the severity of a flaw and has been discussed repeatedly in the security community. We\u2019ve been thinking about all these aspects for ", ", ", ": while some might disagree, from our iterations we found that the process with CVE is somewhat slow. From our research we found that most robots and robots explored nowadays (specially industrial robots!) are highly vulnerable. We believe that a more dynamic path would facilitate mitigating many of these vulnerabilities and accomplish our mission of ", ". ", " (such as checking prior tickets and invalidate it if repeated, tag it as malformed and request for more information, etc.)", "Alias Robotics has committed resources to all the things listed above but of course, support and contributions are more than welcome. We hope the ", " and its members can find a way to support us in this endeavour. Of course, contributing to the CVE List is something we all should do but in our opinion, that falls short.", "From our humble experience, we don\u2019t see CVE changing several of these aspects (in a somewhat acceptable timeframe). This to us, justifies the launch of RVD. We hope to prove with RVD that our statements regarding robotics are somewhat correct and that more resources should be allocated to it. Hopefully this will provide a much stronger argument to Mitre and other parties within CVE.", "\nThe ultimate reason why we decided to launch RVD is because we hope to demonstrate that some of these features are worth integrating into the CVE List.", "If disclosure of vulnerabilities is meant to be delayed for up to 90 days, but the community submits new vulnerabilities to RVD as public github issues, then how does the delayed disclosure work?", "The disclosure policy applies to Alias Robotics and our engineers. We hope to inspire the community with this policy. It\u2019d be great if other groups and individuals were to adopt it as well but we can\u2019t enforce it.", "Anyone can literally jump into the wild and publish vulnerabilities or even worse, sell them in dark markets (rather common from what we\u2019re observing lately). RVD provides a channel to do it responsibly. An approach could be to list the flaw as a weakness (according to our classification, vulnerabilities are a more elevated \u201cdegree\u201d but all vulnerabilities are weaknesses) and then reach out the vendor/maintainer privately providing more information about the flaw and offer support for its mitigation. Eventually, either after 90 days or after a fix has been shipped, the weakness ticket could be enhanced and the complete exploit could be disclosed turning the weakness into a vulnerability.", "A particular example of this is ", ". ", " and other folks have done an amazing job characterizing that and even disclosing a mechanims to reproduce it. The RVD ticket remains as a weakness because we still haven\u2019t found time to reproduce it and provide a mitigation for it. Once we do so, we will elevate it to a vulnerability.", "When you notify a vendor of a vulnerability, does an email address (e.g., security@) suffice, or do you need require other communication mechanism?", "The e-mail ", " is what we are using so far. We haven\u2019t identified the need of additional communication channels for now.", "That was a bit long, sorry ", " !", "have a (maybe stupid) question: is it common practice for for these kind of vulnerability statistics to include test-only code? While problem in test code should certainly be addressed it looks to me that they aren\u2019t really a defect in the shipped software (since they are not part of the packaged software after the build).", "I don\u2019t think this is stupid at all, you\u2019re right. Without saying that we discard these issues (having good flawless tests is relevant), most of the flaws affecting tests that we\u2019ve processed affect underlying software layers (and not explicitly the test code itself). Also, testing on test-only code gives a first valuable intuition. Of course, use-case specific tests are more appropriate but I doubt vendors or integrators would be willing to open source these up (and if they do we\u2019ll do our best to pick them up!)", "I haven\u2019t processed all the RVD tickets but from the intuition acquired building it, I\u2019d say that currently most of the flaws at RVD do report about these underlying defects. We have limited bandwidth and try to focus on what\u2019s more critical.", "Another note regarding the published numbers here: the public GitHub tickets seems to contain ", " redundancy. The very same defect is being ticketed up to one hundred times just since the functionality / API is used in numerous packages - for each a separate ticket is created. I would certainly consider that to be only a single vulnerability / flaw (even though it affects many packages).", "True. This can be further seen with a closer look at the ", ", mitigating a flaw closed several tickets. We\u2019re working on this. As mentioned in my previous comment above, we\u2019ve got some internal tasks already allocated to do this automatically parsing syntactically tickets daily and reaching a compromise. We don\u2019t have a solution ready unfortunately but it\u2019s coming.", "Both of the above seems to \u201cinflate\u201d the reported numbers significantly therefore I would suggest to reconsider how to account for those in statistics like this. I would also be interested in the actual (non-inflated) numbers to see where we are roughly at.", "All right, noted. We\u2019re slowly building up though and have already filtered out quite a bit. Note that the current tickets represent only a very small subset of the ROS 2 packages (ROS core and navigation2 mostly, we disabled the rest for now) with a ", ". Our security pipelines include several static and dynamic tests. Including the autogenerated reports from static testing tools will increase the current number of flaws by an order of magnitude at least (which again, would be hard to interpret).", "Any advice or disagreements (reasoned please) would be very helpful but the general intuition we\u2019re trying to develop is:", "A relevant number to obtain a quick intuition for the insecurity of ROS 2 would be the number of vulnerabilities open (not mitigated). Does this make sense to you ", "? Also, would it help to point to this thread of conversation from the RVD README.md file for further intuition?", "Happy to join the great (and very relevant) discussion points on this thread. Just sharing some thoughts:", "I may add, that conversely to what ", " was stating, CVE covers a yet somehow ", " of Robot-specific vulnerabilities. Very little commitment has been shown so far both by security researcher and robot manufacturers at least when it comes to reporting CVE\u2019s and there is vast amounts of work to be done. RVD is an attempt to systematize this workflow, which complements and feeds vulnerability records maintained by the competent authorities and serves as supporting documentation.", "I\u2019d like to share as well additional challenges we faced ourselves in Alias Robotics when digging into the actual records in vulnerabilities. For example, when we type \u201crobot\u201d in the CVE browser, most of the references will refer back to ROBOT (Return Of Bleichenbacher\u2019s Oracle Threat) which as 19-year old vuln on the RSA encryption which in most cases, does not necessarily apply to a robotic system (won\u2019t in all cases I\u2019ve inspected). Making an emphasis in the fact that we report actual \u201crobot - specific vulnerabilities\u201d is and will be an additional challenge to segregate from other more \u201cIT related\u201d flaws, as ", " points out.", "Similarly, I do believe that ROS2 adoption can greatly benefit from the transparency in the security workflow proposed within RVD.  Weaknesses can be separately inspected and mitigations adopted, all in a trackable and reproducible manner, so ROS2 resources and be kept up to date and secure ", " when used. Of course, there is tons of work to be done still and community contributions will be super-welcome!", "I think this is a very important and highly needed initiative. The potential consequences of an insecure robot are very concerning.", "\nI support the idea of a robot-specific collection but I also agree that it needs to be well maintained.", "However, I think it es even more important to raise the visibility of such a platform. Otherwise ist usefulness will be very limited. OEMs, System Integrators and researchers alike should be aware of this and ideally actively taking part in the process.", "\nI absolutely welcome that Alias is taking the lead here, but elevating this initiative to a broader support by other players would be important. All the issues discussed above (90-days deadlines, scoring, \u2026) could be agreed-upon rules. What are your plans for this and what would be options?", "In any case, we will also actively contribute to RVD in the future.", " ", " Thanks for the detailed rationale.", "If RVD in intended to act as a more responsive and more detailed front-end to CVE, then the concern I\u2019m describing below can be mostly ignored. In that case maybe we can eventually team up with MITRE to improve the CVE feature set based on what our community finds useful in RVD.", "I\u2019m concerned that we might be claiming ", " by saying that robots need their own security flaw scoring and reporting systems. Robots are complex, sure, but there are plenty of physical, actuated things in the world that are controlled by software that might contain vulnerabilities. Are we following the example of other domains that have their own scoring and reporting systems or are we striking out on our own here? What do organizations working in automotive, building infrastructure, factory equipment, medical devices, or other \u201ccyber-physical\u201d fields do?", "Regarding the poor search results available for robot/ROS in CVE today: can that be attributed to the fact that approximately nobody is yet reporting flaws in these systems anywhere? Presumably once we get the community to consistently report their findings, the CVE database would come to contain much more useful information.", "To be clear: I\u2019m very enthusiastic about finding, reporting, and mitigating security flaws! But after 20 years of personally arguing that robots are special and so we need our own X (for many values of X), then living with the resulting maintenance burdens, I\u2019m also eager to reuse existing systems and approaches wherever possible.", "I still have not seen a good reason why we need to strike out on our own. I would rather leverage the work of the NVD and MITRE so people can reuse existing tooling, process and procedures.", "I would say the NVD is lacking in robotics specific CVEs because people have not submitted issues. We have opened 3 CVEs with MITRE this year for ROS packages:", "ROS is just packages on top of an operating system, it would be like Apache standing up a new vuln database just for Apache  projects instead of using MITRE.", "Cheers,", "\n-Joe", "I\u2019m concerned that we might be claiming ", " by saying that robots need their own security flaw scoring and reporting systems.", "Slightly off-topic, but: this is something me and my colleagues ", " and ", " also started wondering. This will probably also come up in our ROSCon presentation (", "), but I just wanted to add that at this point we\u2019re not sure whether CVE is sufficient for robot related bugs/vulnerabilities or whether issues in robot software are actually ", " different that they should get their own classification.", "I guess I wonder why ROS is special and a CVE would not be sufficient to handle a security issue? I mean from a design perspective it sends messages over the network and runs on Linux(for the most part). How is this different from an issue with MQTT?", "This seems like a bit of vanity project, ", " .", "I\u2019d rather we leverage the work and efforts of MITRE.", "Cheers.", "\n-Joe", "Regarding the poor search results available for robot/ROS in CVE today: can that be attributed to the fact that approximately nobody is yet reporting flaws in these systems anywhere? Presumably once we get the community to consistently report their findings, the CVE database would come to contain much more useful information.", "I want to echo this point. There\u2019s actually a PR aspect of this to consider: mature products have CVEs. It\u2019s part of life these days. Security is only recently becoming more of a concern in ROS. As that grows, so will the CVEs, and the perceived maturity of ROS 2. That\u2019s one of the reasons we\u2019ve been submitting them!", "If RVD in intended to act as a more responsive and more detailed front-end to CVE", "I think this is a good way to put it. We certainly tried our best to avoid reiventing the wheel. Our intention is to get aligned as soon as possible with MITRE and the CVE List. Becoming a CNA will help  voice out our opinions (to some extend) and we hope to remain constructive on what needs to change to facilitate securing robots and robot components. RVD is a fast-track we\u2019re taking.", "Our experience (coming from a robotics background and) having tried these tools for a period of time is that they\u2019re not sufficient. I\u2019d be interested in other roboticists from the community sharing their views as well.", "When it comes to scoring mechanisms for the severity of vulnerabilities, ", " (", ") was built by researching what other (robotics) related areas were demanding and wasn\u2019t being met. [", "] or [", "] are among the ones cited while building it. The white paper above discusses it in more detail and proposes a scoring mechanism that takes in consideration aspects that directly apply to self-driving cars and other similar autonomous devices.", "Any help interfacing with MITRE will certainly be very helpful!", "I would say the NVD is lacking in robotics specific CVEs because people have not submitted issues. We have opened 3 CVEs with MITRE this year for ROS packages:", "I applaud this action. This is great and we certainly encourage everyone involved in security to follow a similar approach and commit resources to file reports in the CVE List. As pointed out above, we certainlly will. The big question we asked ourselves when designing RVD was, \u201cAs a roboticist/security researcher, what do I need and find more useful to ", " flaw A in a robot?\u201d  (ROS  specifically, here)\". The core is mitigation.", "I did a quick search on the first ID (", ") you listed above but it\u2019s undisclosed. My guess is that the same patterns critized above about reports in the CVE List are in those reports (or maybe not and I\u2019d be gladly surprised!).", "ROS is just packages on top of an operating system, it would be like Apache standing up a new vuln database just for Apache projects instead of using MITRE.", "This is not what\u2019s being proposed here, at least not within RVD. It\u2019s implicit on its name \u201cRobot Vulnerability Database\u201d. It\u2019s not ROS-specific, it\u2019s for robots. You may claim the same and that robots are a sub-class of hardware which doesn\u2019t deserve its own treatment. Well, I would then object and indicate that according to several sources CVE has currently serious issues capturing vulnerabilities that affect to hardware.", "\nOne only needs to parse the CVE List, compare the density (of hardware vs software reports this year) and the \u201cvalue\u201d on the content of these reports to draw some conclusions.", "One point I\u2019d like to make is that ", ". This is not the feeling we get with the CVE List. We advocate to bring these mechanisms to the CVE List. When reading the CVE List, we felt that many reports where terrible and didn\u2019t help at all reproducing the flaw.", "This seems like a bit of vanity project, ", " .", "Nobody is trying to replace CVE ", ", see reasoning above.", "Are we following the example of other domains that have their own scoring and reporting systems or are we striking out on our own here? What do organizations working in automotive, building infrastructure, factory equipment, medical devices, or other \u201ccyber-physical\u201d fields do?", "Consider ", ", particularly their ", ".  Each advisory may contain multiple vulnerabilities but each vuln links to a CVE.  Also important to note that each vuln has a standard CVSS score to support prioritizing.  Both CVE and CVSS are mature, communicate well, are deeply integrated into vuln management tools.", "most of the flaws affecting tests that we\u2019ve processed affect underlying software layers", "I think I have seen several entries which are only identifying flaws in test code, e.g. using the public API incorrectly / insufficiently. So in these cases the defect is not in the used code but in the test itself.", "Anyway my suggestion would be that it would be helpful if those would at least be moved / accounted for in a separate category to draw a more precise picture how many problems actually affect the code used by applications.", "But after 20 years of personally arguing that robots are special and so we need our own X (for many values of X), then living with the resulting maintenance burdens", "This is my daily life right now\u2026 I really cannot recommend it!", "I may have missed this, but how does the RVD propose to avoid:", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "there will be a significant amount of weaknesses reported for ROS 2, several referring to quality bugs (opposed to security ones)", "flaws that are exploitable will be listed as vulnerabilities (note that we don\u2019t have yet a single vulnerability for ROS 2 (neither closed ones, which to us means, mitigated))", "CVE-2019-13445 - potential integer overflow", "CVE-2019-13566 - potential string overflow", "CVE-2019-13465 - potential iterator cause buffer overflow", "CVE-2019-13445 - potential integer overflow", "CVE-2019-13566 - potential string overflow", "CVE-2019-13465 - potential iterator cause buffer overflow", "Duplication of reports between CVEs and the RVD?", "Robotics engineers needing to watch two databases to get all possible vulnerabilities?"], "url": "https://discourse.ros.org/t/introducing-the-robot-vulnerability-database/11105"},
{"title": "ROS2 Logging", "thread_contents": ["Hello all,", "My team at Amazon is looking at extending the existing logging functionality in ROS2. I\u2019ve described below what our initial plans are for logging and the justifications. I welcome any feedback on the plan.", "Currently in ROS2 most of the logging implementation exists in the rcutils library. The interface into it is a set of macros that get generated during the build and a few functions in rcutils that back them. A string representing the logger name is used as input to these functions to identify which logger is being used/modified. Each implementation of the RCL then provides its own logging interface. In the RCLCPP library, for example, it is again a set of generated macros that are backed by the rcutils macros. When a logger is created in one of the language RCL libraries, it does not call down into the rcutils library to initialize any state for that logger.", "Loggers can be created in association with a node or on their own. Loggers associated with a node are identical to loggers not associated with the node except that the name of the logger is automatically set based on the associated node\u2019s name/namespace. Logs can be created in a hierarchy based on their name. The hierarchy can be used to adjust the severity level at which a logger operates.", "The logging functionality in the rcutils library currently allows for only a single output function  to be set for all logs. It defines a typedef for the output function header and allows the output function to be changed by calling a setter function with a pointer to a new output function. The rcutils library also includes one output function implementation which sends logs to stdout. The output function cannot be changed for different loggers in the hierarchy. Every logger uses the same output function.", "These are the changes my team is looking to implement.", "Increase the number of output functions that can be set in the rcutils layer", "I would suggest to keep a single output function in the core API (simpler, less memory management required). To enable multiple handlers you could create a new function which is capable to dispatch the call to N other functions.", "Will the approach proposed here allow for using something like fluentd as an output? For complex robots, a tool like fluentd provides useful facilities for managing, viewing and processing logged information.", "Will the approach proposed here allow for using something like fluentd as an output? For complex robots, a tool like fluentd provides useful facilities for managing, viewing and processing logged information.", "Yes, the proposed approach should be able to support fluentd. From what I can see, the easiest way to hook fluentd into this proposal would be to use a ", " input to get the log events sent to to the log files. If more advanced features are needed you could always recompile the nodes and swap out the shared logger library with something that hooks directly into fluentd.", "Is it possible to come up with a way to swap out logging systems without needing to recompile nodes?", "Is it possible to come up with a way to swap out logging systems without needing to recompile nodes?", "Yes, that should be possible. Since the shared library is linked at runtime it should be possible to just link in a different implementation. I\u2019ll need to research a little more to see what the most convenient way to do this is. It may still require you to recompile a shared package and source it in your workspace. If other people have thoughts on an easy way to do this I\u2019d be interested in hearing.", "Will the approach proposed here allow for using something like fluentd as an output? For complex robots, a tool like fluentd provides useful facilities for managing, viewing and processing logged information.", "(This is Forrest from the same team in Amazon) Yes our goal is to have an interface so that different types of sinks can be implemented and hooked.", "That said, I would suggest the sink should be fluentd agnostic even if you want to use fluentd to consume the data \u2013 or perhaps I misunderstood you in this case\u2026", "Is it possible to come up with a way to swap out logging systems without needing to recompile nodes?", "Technically this is doable, but we have to be very careful because IMHO logging mechanism should be straightforward to achieve the best robustness possible. Is there a specific use case in your mind that needs such capability?", "I\u2019m thinking about how nodes are typically installed from binaries. If I install nodes from binaries but want to use a different logging daemon to the original node developer, then I lose the ability to install from binaries.", "My understanding is that even when you install Nodes from binaries that ROS dynamically links them from your sourced workspace when they run. That should allow a developer to use some environment variables or some other mechanism to swap out the logger for any predefined ones at runtime or replace the shared library logger by providing their own with the same interface to be linked in instead. I don\u2019t know off hand how difficult or easy that is to do, but it is all possible.", "As noted in a ", ", ros1 logging doesn\u2019t support unicode strings, so it would be nice to support that in ros2.", "We\u2019ve created the first set of pull requests for the new logging features (links below). Our next steps are to work on adding rosout topic capability. As part of that we are planning on porting the Log message from ROS 1.", "For the new ROS 2 message I would like to remove the list of topics the node is publishing on that is in each log message as I don\u2019t think it makes sense to include that with every logged line. I\u2019ll also be adjusting the verbosity level constants to match the values defined in the rcutils package. The final change I was looking at for this message was to move it into the rcl_interfaces package instead of keeping it in a rosgraph_msgs package.", "Links to pull requests below.", "rclcpp: ", "\nrcl: ", "\nrcutils: ", "\n", "A logging implementation for ros2 that using log4cxx.  - ros2/rcl_logging", "\n", "Edit (Nov 14th, 2018 9:45am PST) - Changed the package we\u2019re planning on moving Log message into from common_interfaces/diagnostic_msgs to rcl_interfaces to avoid adding another dependency in rcl.", "Another pull request for the Log message definition.", "The initial implementation of the rosout features is code complete as well and available in the branches listed below.  I\u2019m going to wait to start the pull request for the rosout changes until the existing pull request is complete.", "Common C functions and data structures used in ROS 2 - nburek/rcutils", "\n", "\n", "Library to support implementation of language specific ROS Client Libraries. - nburek/rcl", "\n", "Please go ahead any missing PRs asap (and add a note in it what it is blocked on). We are very close to the API freeze and can\u2019t consider what is not visible anywhere.", "I\u2019ve gone ahead and created pull requests for those features, though I could not find a way to decouple them from the earlier commits being reviewed in the existing pull requests. Once those PRs are done I can rebase these so only the new commits show in the rosout PRs.", "\n", "\n", "\n", "There was some interesting development in rosconsole from ", " to use pluginlib to support different logging sinks, particuilarly to support journald (", "). I wonder if you could consider a similar approach for logging in ROS2, which would provide a familiar mechanism for swapping logging sinks without recompilation.", " is your desire to be able to actually develop custom logging sinks (a reason for using pluginlib), or are you simply suggesting that ROS2 should be able to log to a number of backends which should be configurable at runtime (not necessarily requiring pluginlib)?", "I have a pretty limited number of sinks in mind (stdout, /rosout, journald), but given the fluentd suggestion above (and that ROS2 is cross platform), being able to develop a sink plugin outside of the rcl source tree via pluginlib seems valuable.", "Of course, you can always just write /rosout to journald via an intermediate node, but this can be expensive when intra-process transport is not available.", "it would be very nice if we can choose the backend logging system, cz some vendors have their own specific logging system once it comes to the embedded system.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Increase the number of output functions that can be set in the rcutils layer. We will add new functions to add and remove functions from a list of output functions in the rcutils library, but will not add this capability to the RCL interface. For the initial implementation, we will not add the ability to change the output functions at different logger hierarchies.", "Write a new log output function in the rcutils library that will forward all logs from a logger associated with a Node to a ", " topic on that node.", "Define an interface for a shared library that wraps more power open source logging libraries such as log4cxx. The interface will include initialize/teardown functions, call throughs for when logging metadata changes (such as log levels and formats), and functions to output logs from the rcutils library. We will also define a way of passing through a configuration file location so that the shared library implementation can use the standard config format defined by the library that backs.", "Write a new log output function in rcutils that will call out to a shared library that implements the above interface.", "Write an implementation of that shared library that wraps the log4cxx library. This implementation will include a default configuration that will send all logs to a file.", "Modify the rcutils library so that when it initializes it will hook up the three output functions that now exist in the rcutils (stdout, rosout, and shared library). These will each be able to be individually enabled/disabled via an environment variable.", "Why not add the new interfaces for adding log output functions to the RCL layer so that people implementing their own nodes can hook up additional loggers?\n", "If someone really wants to do this it will be possible by the RCL handle for their node and directly using the rcutils library. The reason for not adding to the RCL interface to make it easy to do in every language is that we do not want to encourage node developers to add their own custom logging in this way. It is better to conform to relying on only the outputs in the rcl/rcutils libraries so that your node can be more easily integrated into other applications. If an application developer wishes to use your node in their application, but wants total control over how logging is handled, it is a better experience for them to only need to adjust the standard output mechanisms natively provided by ROS 2.", "\n", "Why not also add the ability to set different output functions for different logger hierarchies?\n", "We are not providing this as part of the native rcutils library as a simplifier for our initial work. This functionality would be available as part of the shared library output that we are proposing. So anyone who really wanted that level of control could get it for both stdout and file logging by adjusting the configuration file for the shared library logger.", "\n", "Why not send all logs to the rosout topic instead of only those sent to loggers associated with nodes?\n", "Because of the way ROS 2 associates DDS concepts with ROS Nodes, there didn\u2019t seem to be a clean way to setup a general topic on a process that wasn\u2019t associated with an existing Node. Since a process can also contain multiple ROS Nodes, we didn\u2019t think it would be good design to just pick one to have everything published to.", "\n", "Why the shared library?\n", "We went with the shared library approach in order to provide a way to hook into an existing logging library without tying ROS 2 to only using that library. Wrapping an existing logging library will give us the ability to have features such as file logging, log file rotation, and a hierarchy of output sinks without the need to implement all of that in the ROS codebase.", "\n", "Why keep the existing stdout logger implementation in rcutils instead of relying on the shared library to provide the stdout implementation, since most major logging libraries already have those created.\n", "We decided to keep the existing stdout output function because it provides a standard in the cases where someone does not want to rely on the shared library logger. Since you can enable/disable any of the three natively provided log output functions it is easy for a user who wants more control to disable the ROS provided stdout and rely on the", "\n", "Since the shared library will be used in the rcutils layer will it integrate with the custom allocators that the rcl/rcutiles use?\n", "No, we are not planning to provide a hook into the custom allocator for the initial implementation. This could be added later, however, most of the open source logging implementations that are well supported and provide rich features do not provide interfaces for providing your own allocator. We did not want to pass the allocator into the shared library when the shared library wouldn\u2019t actually be able to use it. In the case where someone needs the control over allocation they would need to recompile anyways and at that point could swap out the shared library implementation with a logger of their choosing that provides more control over memory allocation.", "\n"], "url": "https://discourse.ros.org/t/ros2-logging/6469"},
{"title": "TF2 web republisher in ROS2", "thread_contents": ["Hello community,", "\nI hope everyone is good. In the last couple of years we were working on making a platform for teaching robotics remotely using ROS. We were using the RWT tools but the main problem was the internet speed of our country. Living in a country where Internet and network speed are still being issues can not allow us to use high bandwidth consuming tools for robot teleoperation. We worked on reducing tf2 web publisher, the initial version are shared in ", "  and ", " those tools reduce over 80% of bandwidth consumption than the tf2_web_republisher package, which is suitable for our condition.", "\nI was thinking if the idea of making an optimal tf web publisher for ROS2 can be considered useful, especially for countries where Internet speed is problematic.", "\nThank you very much!", "\nCordially,", "\nMeriem L. AARIZOU", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/tf2-web-republisher-in-ros2/10255"},
{"title": "Latency and throughput in ROS2", "thread_contents": ["The paper ", " evaluates the latency of ROS2 (different node configurations, different DDS implementations, different QoS policies, etc.).", "Does someone know if these results have been updated by some more recent work(s)?", "We will release a plugin-based tool that will let you evaluate latency and memory resource while altering number of pubs/subs, QoS, RT settings, large and small message types, publishing frequency, security settings, inter and intra process communication, etc. We need 2-3 more weeks, stay tuned.", "That\u2019s fantastic ", ", looking forward to have a look.", "On our side, we recently released a first tech report (", ") that\u2019s part of a series that hopefully will characterize better the latencies and throughput in ROS 2 while taking in consideration Real-Time aspects. This first tech report treats OSI layers 1 and 2.", "Hi all, we released the performance_test tool: ", " to e.g. benchmark latency, jitter, lost samples, etc. in different DDS implementations.", "\nCurrently supported benchmarking is for communication mean over:", "We plan to extend it to use ROS1 comms as well.", "Hope you find it useful, any feedaback is more than welcome.", "D.", "Hello !", "Nice tool ", " !", "What are the requirements on the RMW layer to be tested ?", "\nI have a ", ", but it currently only support simple pub/sub.", "\nIt would be interesting to measure performance with your tool and compare it to DDS implementations.", "Also (for latency), is it only measuring the end-to-end latency, or can it be more comprehensive ? For example measuring the time spent in each layer (RCL/RMW/DDS/Network).", "Hi ", ",", "I am the maintainer of the performance test tool.", "If you already have RMW implementation which supports pub/sub you should be able to directly test your communication mean without any additional work. You just need to set the proper environment variable ", " before starting the tool.", "It can not messure latency based on application layers unfortunately, for this it would have to be invasive in all these layers.", "But you can create a new communication plugin for the NDN transport as I did for FastRTPS here:  ", ".", "This will allow you to compare only the communication frameworks performance and will also give you some insight over the overhead the various RMW layers introduce.", "If you run into issues implementing the plugin I will be glad to support you.", "Thank you for your answer ", ",", "I was lacking some features (typesupport, proper management of multithreading, etc\u2026), but in the end I was able to test my stack with your package. Also, I already implemented the invasive solution for measuring the latency of each layers. I will ask you if I need help, thank you again.", "Hi ", ",", "Also, I already implemented the invasive solution for measuring the latency of each layers. I will ask you if I need help, thank you again.", "Would you mind sharing some more details about your solution for measuring latency in each layer? Maybe we could even integrate it into the performance_test itself.", "I didn\u2019t do anything complex, but since it is an invasive way of measuring, I don\u2019t know if it is easy to integrate into the performance_test. ", ", and then post processed with a python script. It is not very precise, but since I don\u2019t want the real latency (only being able to compare the two implementations), it is ok for me. To avoid the print extra cost during the experiment, you can register the events+timestamp in a (pre-allocated) table, and print everything at the end.", "Very nice. I was thinking if someone could do a  ros message extension to add-in the latencies at each layers in a private area of the message at each layer (encode as a BLOB) and could be retrieved at the subscriber to measure-in.", "For those interested, a new technical report studying this topic is available: ", ".", "Here\u2019s another update: ", "In this work we present an experimental setup to show the suitability of ROS 2.0 for real-time robotic applications. We disclose an evaluation of ROS 2.0 communications in a robotic inter-component (hardware) communication case on top of Linux. We benchmark and study the worst case latencies and missed deadlines to characterize ROS 2.0 communications for real-time applications. We demonstrate experimentally how computation and network congestion impacts the communication latencies and ultimately, propose a setup that, under certain conditions, mitigates these delays and obtains bounded traffic.", "Compared to other results:", "Hello Victor, thanks a lot for your reports, I\u2019m reading them right now and I came to a sentence that I don\u2019t understand. On ", " on the 4th page you say:", "Additionally, as Ethernet is asynchronous, the high priority frames sharing the same link can content between them.", "What does ", " mean in that context?", "Sorry if it\u2019s a bit of a picky question.", "Oops, later on I found the usage of ", " which now makes sense to me. I guess that one was a typo ", "Hey there ", "! It certainly sounds like a typo. Many thanks for reporting. Let us review it internally and report back if our mistakes go beyond that.", "Cheers!", "An another one:", "A new generation of robot systems which are modular, flexible and safe for human-robot interaction are needed. Existing cobots seem to meet only the later and require a modular approach to improve their reconfigurability and interoperability. We propose a new sub-class of cobots named M-cobots which tackle these problems. In particular, we discuss the relevance of synchronization for these systems, analyze it and demonstrate how with a properly configured M-cobot, we are able to obtain a) distributed sub-microsecond clock synchronization accuracy among modules, b) timestamping accuracy of ROS 2.0 messages under 100 microseconds and c) millisecond-level end-to-end communication latencies, even when disturbed with networking overloads of up to 90 % of the network capacity.", "Read the tech report at ", "Hi Victor,", "Thank you for the reports related to latency using RT_PREMPT linux and ROS 2 with various network settings. It was very interesting to read.", "Have couple of questions.", "In the base RT_PREEMPT linux kernel report (", "), I understand Table-III and Table-IV is what matters. But, while looking at, Table-II (Roundtrip latency results with RT normal), was curious if you know what might be the reason for TX traffic at 100Mbps, the MAX latency is considerably high at 25ms? I would expect latency to be high when RX traffic at 100Mbps", "In the ROS 2 evaluation report (", "), in Fig 5-a, when the system is idle, DDS2 has high MAX latency(4ms) compared to others. Was just curious which DDS implementation is this and what might be the reason?", "In the Fog 6-f of the ROS 2 evaluation report, at 80Mbps, where it cannot meet the deadlines and dropped packets, was curious, is ksoftirqd processing the packets the primary cause for the latency or can it be the DDS layer causing the latency. Also, about packets being dropped, would setting the size of kernel socket buffers ( net.core.rmem*, net.core.wmem*) would help too.", "Thanks", "\nAnup", " see 3 questions above by folks from Apex.", "Hi ", ", ", "Thanks for your feedback, I will try to clarify some of your doubts:", "Both TX and RX paths are suffering from the context change to the ksoftirqd threads but in a different way. In the transmission path both streams are going trough the same Qdisc queue. When there are packets pending to be transmitted in the Qdisc queue they are sent from the ksoftirqd context. At some point the fair scheduler decides that the ksoftirqd thread has consumed enough CPU and it is preempted. During this time, packets are accumulated and we observe high latencies in the order of milliseconds. For 100 Mbps it looks like the RX path, packet are processed more efficiently. This is probably because the Ksoftirqd context is not triggered all the time and part of these packets are processed in the Ethernet IRQ thread which has real-time priority. However, when we increased the network load of the concurrent traffic (>200Mbps) we observed also high latencies even in the RT normal case.", "For fig 5a and 5b we were using the default configuration of each DDS. In the case of that DDS the default configuration might not be optimized for low bounded latencies but for other purposes. However, when for the real-time settings (fig 5c and 5d) we customized the configuration of that DDS and the problem was solved.", "In this case we had 80 Mbps non-ROS 2.0 concurrent traffic with the ROS 2.0 round-trip traffic. As there is no contention in the DDS layers the problem was very likely caused in the kernel level. Posterior analysis tracing the kernel confirmed our suspects. Changing the socket queues may prevent packet drop but would not solve the root of the problem which is going to cause latency. The real problem is caused by how the net processing is deferred to ksoftirqd context. For the moment we can only mitigate these problems and expect this is solved in the new kernel releases.", "My colleague ", " just answered ", ". Ping me if you guys are around IROS and would like to discuss this face to face.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["FastRTPS directly", "ROS 2 rmw layer (and thus any supported rmw_* implementation)", "Connext DDS Micro directly", "All the measurements have been made in embedded devices.", "We measure latencies in a inter-component scenario. Given the lack of synchronization mechanisms (in this particular work we did not set them up), we use round-trip (ping-pong).", "Previous work focuses on the measurement of local latencies while we measure distributed ones.", "We measure how communications are affected in stressed conditions. This is the best way to show if the communication stack is well configured for real-time (which connects to previous work ", " and ", ").", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/latency-and-throughput-in-ros2/4367"},
{"title": "ROS 2 Eloquent Elusor call for testing and package releases", "thread_contents": ["Hello all,", "The ROS 2 team is preparing for the release of Eloquent Elusor and we\u2019d like to invite you to help us by testing out the alpha or releasing your own packages to Eloquent.  For more information on the schedule for the release of Eloquent Elusor, consult the ", ".", "ROS 2 is available with multiple RMW implementations on multiple platforms and architectures. Depending on your system configuration, you can help us out by doing any of the following:", "After testing, reply back here to let us know what worked and what didn\u2019t work, along with what platform you\u2019re on and how you installed ROS 2.", "If you run into problems, all the usual recommendations apply. You can ask questions on ", " with the  ", "  tag or report issues on ", " or the relevant package repository. Be sure to follow the contributing guidelines and issue templates.", "If you maintain a package you would like to release in ROS 2 Eloquent we encourage you to do so by following the ", ".", ", ", ", and ", ",", "\nThe ROS 2 team", "And the packages included in the first sync:", "Thanks to all ROS maintainers who make packages available to the ROS community. The above list of packages was made possible by the work of the following maintainers:", "Thanks for sharing this ", "! I will test this out and share this post. ", "Hi ", ", on my box there is no ", " package yet. The build farm status page is all green though, indicating the sync is completed. Is this expected? I can get ", " packages alright from shadow-fixed.", "The last stage of the pipeline for deploying to the mirrors was not yet setup for the main repository. I\u2019ve added it and the packages should now be accessible from the main repository.", " ", " Is it possible to configure the testing mirror deployment as well ?", "\nThe nightly docker images are using the testing repository and would need a sync to start building again.", "Thanks!", "It\u2019s done. I didn\u2019t realize it hadn\u2019t been done already.", "With many packages being updated for the Beta, I have done another sync to main:", "Thanks to all ROS maintainers who make packages available to the ROS community. The above list of packages was made possible by the work of the following maintainers:", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", " on your preferred platform. Be sure to use the  ", "  branch version of the repos file (described ", ") as Eloquent is still in pre-release.", "Install and use the ", " available for MacOS Sierra, Windows 10, or Ubuntu 18.04 Bionic.", "\n", " as they become available. (", ", ", ")", "Follow the ROS 2 ", " with one or more different RMW implementations.", "Run some ", " and ", ".", "ros-eloquent-action-msgs: 0.8.0-1", "ros-eloquent-action-msgs-dbgsym: 0.8.0-1", "ros-eloquent-action-tutorials-cpp: 0.8.0-1", "ros-eloquent-action-tutorials-cpp-dbgsym: 0.8.0-1", "ros-eloquent-action-tutorials-interfaces: 0.8.0-1", "ros-eloquent-action-tutorials-interfaces-dbgsym: 0.8.0-1", "ros-eloquent-action-tutorials-py: 0.8.0-1", "ros-eloquent-actionlib-msgs: 0.8.0-1", "ros-eloquent-actionlib-msgs-dbgsym: 0.8.0-1", "ros-eloquent-ament-clang-format: 0.8.0-1", "ros-eloquent-ament-clang-tidy: 0.8.0-1", "ros-eloquent-ament-cmake: 0.8.0-1", "ros-eloquent-ament-cmake-auto: 0.8.0-1", "ros-eloquent-ament-cmake-clang-format: 0.8.0-1", "ros-eloquent-ament-cmake-clang-tidy: 0.8.0-1", "ros-eloquent-ament-cmake-copyright: 0.8.0-1", "ros-eloquent-ament-cmake-core: 0.8.0-1", "ros-eloquent-ament-cmake-cppcheck: 0.8.0-1", "ros-eloquent-ament-cmake-cpplint: 0.8.0-1", "ros-eloquent-ament-cmake-export-definitions: 0.8.0-1", "ros-eloquent-ament-cmake-export-dependencies: 0.8.0-1", "ros-eloquent-ament-cmake-export-include-directories: 0.8.0-1", "ros-eloquent-ament-cmake-export-interfaces: 0.8.0-1", "ros-eloquent-ament-cmake-export-libraries: 0.8.0-1", "ros-eloquent-ament-cmake-export-link-flags: 0.8.0-1", "ros-eloquent-ament-cmake-flake8: 0.8.0-1", "ros-eloquent-ament-cmake-gmock: 0.8.0-1", "ros-eloquent-ament-cmake-gtest: 0.8.0-1", "ros-eloquent-ament-cmake-include-directories: 0.8.0-1", "ros-eloquent-ament-cmake-libraries: 0.8.0-1", "ros-eloquent-ament-cmake-lint-cmake: 0.8.0-1", "ros-eloquent-ament-cmake-mypy: 0.8.0-1", "ros-eloquent-ament-cmake-nose: 0.8.0-1", "ros-eloquent-ament-cmake-pclint: 0.8.0-1", "ros-eloquent-ament-cmake-pep257: 0.8.0-1", "ros-eloquent-ament-cmake-pep8: 0.8.0-1", "ros-eloquent-ament-cmake-pyflakes: 0.8.0-1", "ros-eloquent-ament-cmake-pytest: 0.8.0-1", "ros-eloquent-ament-cmake-python: 0.8.0-1", "ros-eloquent-ament-cmake-ros: 0.8.0-1", "ros-eloquent-ament-cmake-target-dependencies: 0.8.0-1", "ros-eloquent-ament-cmake-test: 0.8.0-1", "ros-eloquent-ament-cmake-uncrustify: 0.8.0-1", "ros-eloquent-ament-cmake-xmllint: 0.8.0-1", "ros-eloquent-ament-copyright: 0.8.0-1", "ros-eloquent-ament-cppcheck: 0.8.0-1", "ros-eloquent-ament-cpplint: 0.8.0-1", "ros-eloquent-ament-flake8: 0.8.0-1", "ros-eloquent-ament-index-cpp: 0.7.1-1", "ros-eloquent-ament-index-cpp-dbgsym: 0.7.1-1", "ros-eloquent-ament-index-python: 0.7.1-1", "ros-eloquent-ament-lint: 0.8.0-1", "ros-eloquent-ament-lint-auto: 0.8.0-1", "ros-eloquent-ament-lint-cmake: 0.8.0-1", "ros-eloquent-ament-lint-common: 0.8.0-1", "ros-eloquent-ament-mypy: 0.8.0-1", "ros-eloquent-ament-package: 0.8.2-1", "ros-eloquent-ament-pclint: 0.8.0-1", "ros-eloquent-ament-pep257: 0.8.0-1", "ros-eloquent-ament-pep8: 0.8.0-1", "ros-eloquent-ament-pyflakes: 0.8.0-1", "ros-eloquent-ament-uncrustify: 0.8.0-1", "ros-eloquent-ament-xmllint: 0.8.0-1", "\n", ": 1.12.1-1", "ros-eloquent-builtin-interfaces: 0.8.0-1", "ros-eloquent-builtin-interfaces-dbgsym: 0.8.0-1", "\n", ": 2.2.0-1", "ros-eloquent-camera-calibration-parsers-dbgsym: 2.2.0-1", "\n", ": 2.2.0-1", "ros-eloquent-camera-info-manager-dbgsym: 2.2.0-1", "\n", ": 1.0.0-1", "ros-eloquent-cartographer-dbgsym: 1.0.0-1", "\n", ": 1.4.0-1", "ros-eloquent-class-loader-dbgsym: 1.4.0-1", "ros-eloquent-common-interfaces: 0.8.0-1", "ros-eloquent-composition: 0.8.0-1", "ros-eloquent-composition-dbgsym: 0.8.0-1", "ros-eloquent-composition-interfaces: 0.8.0-1", "ros-eloquent-composition-interfaces-dbgsym: 0.8.0-1", "\n", ": 2.2.0-1", "ros-eloquent-compressed-depth-image-transport-dbgsym: 2.2.0-1", "\n", ": 2.2.0-1", "ros-eloquent-compressed-image-transport-dbgsym: 2.2.0-1", "ros-eloquent-connext-cmake-module: 0.8.1-1", "\n", ": 1.2.0-1", "ros-eloquent-console-bridge-vendor-dbgsym: 1.2.0-1", "\n", ": 2.1.2-1", "ros-eloquent-cv-bridge-dbgsym: 2.1.2-1", "\n", ": 0.1.0-1", "ros-eloquent-cyclonedds-dbgsym: 0.1.0-1", "ros-eloquent-demo-nodes-cpp: 0.8.0-1", "ros-eloquent-demo-nodes-cpp-dbgsym: 0.8.0-1", "ros-eloquent-demo-nodes-cpp-native: 0.8.0-1", "ros-eloquent-demo-nodes-cpp-native-dbgsym: 0.8.0-1", "ros-eloquent-demo-nodes-py: 0.8.0-1", "\n", ": 2.2.2-1", "ros-eloquent-depthimage-to-laserscan-dbgsym: 2.2.2-1", "ros-eloquent-diagnostic-msgs: 0.8.0-1", "ros-eloquent-diagnostic-msgs-dbgsym: 0.8.0-1", "ros-eloquent-domain-coordinator: 0.8.0-1", "ros-eloquent-dummy-map-server: 0.8.0-1", "ros-eloquent-dummy-map-server-dbgsym: 0.8.0-1", "ros-eloquent-dummy-robot-bringup: 0.8.0-1", "ros-eloquent-dummy-sensors: 0.8.0-1", "ros-eloquent-dummy-sensors-dbgsym: 0.8.0-1", "\n", ": 1.0.0-1", "ros-eloquent-eigen3-cmake-module: 0.1.1-1", "ros-eloquent-example-interfaces: 0.7.1-1", "ros-eloquent-example-interfaces-dbgsym: 0.7.1-1", "ros-eloquent-examples-rclcpp-minimal-action-client: 0.8.0-1", "ros-eloquent-examples-rclcpp-minimal-action-client-dbgsym: 0.8.0-1", "ros-eloquent-examples-rclcpp-minimal-action-server: 0.8.0-1", "ros-eloquent-examples-rclcpp-minimal-action-server-dbgsym: 0.8.0-1", "ros-eloquent-examples-rclcpp-minimal-client: 0.8.0-1", "ros-eloquent-examples-rclcpp-minimal-client-dbgsym: 0.8.0-1", "ros-eloquent-examples-rclcpp-minimal-composition: 0.8.0-1", "ros-eloquent-examples-rclcpp-minimal-composition-dbgsym: 0.8.0-1", "ros-eloquent-examples-rclcpp-minimal-publisher: 0.8.0-1", "ros-eloquent-examples-rclcpp-minimal-publisher-dbgsym: 0.8.0-1", "ros-eloquent-examples-rclcpp-minimal-service: 0.8.0-1", "ros-eloquent-examples-rclcpp-minimal-service-dbgsym: 0.8.0-1", "ros-eloquent-examples-rclcpp-minimal-subscriber: 0.8.0-1", "ros-eloquent-examples-rclcpp-minimal-subscriber-dbgsym: 0.8.0-1", "ros-eloquent-examples-rclcpp-minimal-timer: 0.8.0-1", "ros-eloquent-examples-rclcpp-minimal-timer-dbgsym: 0.8.0-1", "ros-eloquent-examples-rclpy-executors: 0.8.0-1", "ros-eloquent-examples-rclpy-minimal-action-client: 0.8.0-1", "ros-eloquent-examples-rclpy-minimal-action-server: 0.8.0-1", "ros-eloquent-examples-rclpy-minimal-client: 0.8.0-1", "ros-eloquent-examples-rclpy-minimal-publisher: 0.8.0-1", "ros-eloquent-examples-rclpy-minimal-service: 0.8.0-1", "ros-eloquent-examples-rclpy-minimal-subscriber: 0.8.0-1", "ros-eloquent-fastcdr: 1.0.11-1", "ros-eloquent-fastcdr-dbgsym: 1.0.11-1", "ros-eloquent-fastrtps: 1.9.0-3", "ros-eloquent-fastrtps-cmake-module: 0.8.0-1", "ros-eloquent-fastrtps-dbgsym: 1.9.0-3", "ros-eloquent-foonathan-memory-vendor: 0.1.0-1", "\n", ": 3.4.0-1", "\n", ": 3.4.0-1", "ros-eloquent-gazebo-msgs-dbgsym: 3.4.0-1", "\n", ": 3.4.0-1", "ros-eloquent-gazebo-plugins-dbgsym: 3.4.0-1", "\n", ": 3.4.0-1", "ros-eloquent-gazebo-ros-dbgsym: 3.4.0-1", "\n", ": 3.4.0-1", "ros-eloquent-geometry-msgs: 0.8.0-1", "ros-eloquent-geometry-msgs-dbgsym: 0.8.0-1", "ros-eloquent-gmock-vendor: 1.8.9000-1", "ros-eloquent-gtest-vendor: 1.8.9000-1", "\n", ": 2.1.2-1", "ros-eloquent-image-geometry-dbgsym: 2.1.2-1", "ros-eloquent-image-tools: 0.8.0-1", "ros-eloquent-image-tools-dbgsym: 0.8.0-1", "\n", ": 2.2.0-1", "ros-eloquent-image-transport-dbgsym: 2.2.0-1", "\n", ": 2.0.0-1", "ros-eloquent-interactive-markers-dbgsym: 2.0.0-1", "ros-eloquent-intra-process-demo: 0.8.0-1", "ros-eloquent-intra-process-demo-dbgsym: 0.8.0-1", "ros-eloquent-joy: 2.3.2-3", "ros-eloquent-joy-dbgsym: 2.3.2-3", "ros-eloquent-kdl-parser: 2.2.0-1", "ros-eloquent-kdl-parser-dbgsym: 2.2.0-1", "\n", ": 2.1.0-1", "ros-eloquent-laser-geometry-dbgsym: 2.1.0-1", "ros-eloquent-launch: 0.9.1-1", "ros-eloquent-launch-ros: 0.9.1-1", "ros-eloquent-launch-testing: 0.9.1-1", "ros-eloquent-launch-testing-ament-cmake: 0.9.1-1", "ros-eloquent-launch-testing-ros: 0.9.1-1", "ros-eloquent-launch-xml: 0.9.1-1", "ros-eloquent-launch-yaml: 0.9.1-1", "\n", ": 2.2.0-1", "\n", ": 1.0.0-1", "ros-eloquent-libyaml-vendor-dbgsym: 1.0.0-1", "ros-eloquent-lifecycle: 0.8.0-1", "ros-eloquent-lifecycle-dbgsym: 0.8.0-1", "ros-eloquent-lifecycle-msgs: 0.8.0-1", "ros-eloquent-lifecycle-msgs-dbgsym: 0.8.0-1", "ros-eloquent-logging-demo: 0.8.0-1", "ros-eloquent-logging-demo-dbgsym: 0.8.0-1", "\n", ": 2.0.2-1", "ros-eloquent-map-msgs-dbgsym: 2.0.2-1", "\n", ": 3.2.0-1", "ros-eloquent-message-filters-dbgsym: 3.2.0-1", "\n", ": 2.0.2-1", "ros-eloquent-move-base-msgs-dbgsym: 2.0.2-1", "ros-eloquent-nav-msgs: 0.8.0-1", "ros-eloquent-nav-msgs-dbgsym: 0.8.0-1", "ros-eloquent-opensplice-cmake-module: 0.8.1-1", "\n", ": 3.2.0-1", "ros-eloquent-orocos-kdl-dbgsym: 3.2.0-1", "ros-eloquent-osrf-pycommon: 0.1.8-2", "ros-eloquent-osrf-testing-tools-cpp: 1.2.1-1", "ros-eloquent-osrf-testing-tools-cpp-dbgsym: 1.2.1-1", "ros-eloquent-pendulum-control: 0.8.0-1", "ros-eloquent-pendulum-control-dbgsym: 0.8.0-1", "ros-eloquent-pendulum-msgs: 0.8.0-1", "ros-eloquent-pendulum-msgs-dbgsym: 0.8.0-1", "\n", ": 2.4.0-1", "ros-eloquent-poco-vendor: 1.2.0-1", "ros-eloquent-python-cmake-module: 0.8.0-2", "\n", ": 1.0.2-1", "\n", ": 1.0.7-1", "\n", ": 1.0.7-1", "\n", ": 1.0.7-1", "\n", ": 1.0.7-1", "\n", ": 1.0.7-1", "ros-eloquent-qt-gui-cpp-dbgsym: 1.0.7-1", "\n", ": 1.0.7-1", "ros-eloquent-quality-of-service-demo-cpp: 0.8.0-1", "ros-eloquent-quality-of-service-demo-cpp-dbgsym: 0.8.0-1", "ros-eloquent-quality-of-service-demo-py: 0.8.0-1", "ros-eloquent-rcl: 0.8.0-1", "ros-eloquent-rcl-action: 0.8.0-1", "ros-eloquent-rcl-action-dbgsym: 0.8.0-1", "ros-eloquent-rcl-dbgsym: 0.8.0-1", "ros-eloquent-rcl-interfaces: 0.8.0-1", "ros-eloquent-rcl-interfaces-dbgsym: 0.8.0-1", "ros-eloquent-rcl-lifecycle: 0.8.0-1", "ros-eloquent-rcl-lifecycle-dbgsym: 0.8.0-1", "ros-eloquent-rcl-logging-log4cxx: 0.3.2-1", "ros-eloquent-rcl-logging-log4cxx-dbgsym: 0.3.2-1", "ros-eloquent-rcl-logging-noop: 0.3.2-1", "ros-eloquent-rcl-logging-noop-dbgsym: 0.3.2-1", "ros-eloquent-rcl-logging-spdlog: 0.3.2-1", "ros-eloquent-rcl-logging-spdlog-dbgsym: 0.3.2-1", "ros-eloquent-rcl-yaml-param-parser: 0.8.0-1", "ros-eloquent-rcl-yaml-param-parser-dbgsym: 0.8.0-1", "ros-eloquent-rclcpp: 0.8.0-1", "ros-eloquent-rclcpp-action: 0.8.0-1", "ros-eloquent-rclcpp-action-dbgsym: 0.8.0-1", "ros-eloquent-rclcpp-components: 0.8.0-1", "ros-eloquent-rclcpp-components-dbgsym: 0.8.0-1", "ros-eloquent-rclcpp-dbgsym: 0.8.0-1", "ros-eloquent-rclcpp-lifecycle: 0.8.0-1", "ros-eloquent-rclcpp-lifecycle-dbgsym: 0.8.0-1", "ros-eloquent-rclpy: 0.8.0-1", "ros-eloquent-rclpy-dbgsym: 0.8.0-1", "ros-eloquent-rcpputils: 0.2.0-1", "ros-eloquent-rcpputils-dbgsym: 0.2.0-1", "ros-eloquent-rcutils: 0.8.1-1", "ros-eloquent-rcutils-dbgsym: 0.8.1-1", "\n", ": 2.2.0-1", "ros-eloquent-resource-retriever-dbgsym: 2.2.0-1", "ros-eloquent-rmw: 0.8.0-1", "ros-eloquent-rmw-connext-cpp: 0.8.0-1", "ros-eloquent-rmw-connext-cpp-dbgsym: 0.8.0-1", "ros-eloquent-rmw-connext-shared-cpp: 0.8.0-1", "ros-eloquent-rmw-connext-shared-cpp-dbgsym: 0.8.0-1", "ros-eloquent-rmw-dbgsym: 0.8.0-1", "ros-eloquent-rmw-fastrtps-cpp: 0.8.0-1", "ros-eloquent-rmw-fastrtps-cpp-dbgsym: 0.8.0-1", "ros-eloquent-rmw-fastrtps-dynamic-cpp: 0.8.0-1", "ros-eloquent-rmw-fastrtps-dynamic-cpp-dbgsym: 0.8.0-1", "ros-eloquent-rmw-fastrtps-shared-cpp: 0.8.0-1", "ros-eloquent-rmw-fastrtps-shared-cpp-dbgsym: 0.8.0-1", "ros-eloquent-rmw-implementation: 0.8.0-4", "ros-eloquent-rmw-implementation-cmake: 0.8.0-1", "ros-eloquent-rmw-implementation-dbgsym: 0.8.0-4", "ros-eloquent-rmw-opensplice-cpp: 0.8.0-1", "ros-eloquent-rmw-opensplice-cpp-dbgsym: 0.8.0-1", "ros-eloquent-robot-state-publisher: 2.3.0-1", "ros-eloquent-robot-state-publisher-dbgsym: 2.3.0-1", "ros-eloquent-ros-environment: 2.4.0-1", "ros-eloquent-ros-testing: 0.2.0-1", "ros-eloquent-ros-workspace: 0.7.1-2", "ros-eloquent-ros1-bridge: 0.8.0-2", "ros-eloquent-ros1-bridge-dbgsym: 0.8.0-2", "ros-eloquent-ros2action: 0.8.1-1", "ros-eloquent-ros2bag: 0.2.0-1", "ros-eloquent-ros2cli: 0.8.1-1", "ros-eloquent-ros2component: 0.8.1-1", "ros-eloquent-ros2doctor: 0.8.1-1", "ros-eloquent-ros2interface: 0.8.1-1", "ros-eloquent-ros2launch: 0.9.1-1", "ros-eloquent-ros2lifecycle: 0.8.1-1", "ros-eloquent-ros2msg: 0.8.1-1", "ros-eloquent-ros2multicast: 0.8.1-1", "ros-eloquent-ros2node: 0.8.1-1", "ros-eloquent-ros2param: 0.8.1-1", "ros-eloquent-ros2pkg: 0.8.1-1", "ros-eloquent-ros2run: 0.8.1-1", "ros-eloquent-ros2service: 0.8.1-1", "ros-eloquent-ros2srv: 0.8.1-1", "ros-eloquent-ros2test: 0.2.0-1", "ros-eloquent-ros2topic: 0.8.1-1", "ros-eloquent-rosbag2: 0.2.0-1", "ros-eloquent-rosbag2-converter-default-plugins: 0.2.0-1", "ros-eloquent-rosbag2-converter-default-plugins-dbgsym: 0.2.0-1", "ros-eloquent-rosbag2-dbgsym: 0.2.0-1", "ros-eloquent-rosbag2-storage: 0.2.0-1", "ros-eloquent-rosbag2-storage-dbgsym: 0.2.0-1", "ros-eloquent-rosbag2-storage-default-plugins: 0.2.0-1", "ros-eloquent-rosbag2-storage-default-plugins-dbgsym: 0.2.0-1", "ros-eloquent-rosbag2-test-common: 0.2.0-1", "ros-eloquent-rosbag2-tests: 0.2.0-1", "ros-eloquent-rosbag2-transport: 0.2.0-1", "ros-eloquent-rosbag2-transport-dbgsym: 0.2.0-1", "ros-eloquent-rosgraph-msgs: 0.8.0-1", "ros-eloquent-rosgraph-msgs-dbgsym: 0.8.0-1", "ros-eloquent-rosidl-adapter: 0.8.0-1", "ros-eloquent-rosidl-cmake: 0.8.0-1", "ros-eloquent-rosidl-default-generators: 0.8.0-1", "ros-eloquent-rosidl-default-runtime: 0.8.0-1", "ros-eloquent-rosidl-generator-c: 0.8.0-1", "ros-eloquent-rosidl-generator-c-dbgsym: 0.8.0-1", "ros-eloquent-rosidl-generator-cpp: 0.8.0-1", "ros-eloquent-rosidl-generator-dds-idl: 0.7.1-1", "ros-eloquent-rosidl-generator-py: 0.8.0-1", "ros-eloquent-rosidl-parser: 0.8.0-1", "ros-eloquent-rosidl-runtime-py: 0.8.0-1", "ros-eloquent-rosidl-typesupport-c: 0.8.0-2", "ros-eloquent-rosidl-typesupport-c-dbgsym: 0.8.0-2", "ros-eloquent-rosidl-typesupport-connext-c: 0.8.1-1", "ros-eloquent-rosidl-typesupport-connext-c-dbgsym: 0.8.1-1", "ros-eloquent-rosidl-typesupport-connext-cpp: 0.8.1-1", "ros-eloquent-rosidl-typesupport-connext-cpp-dbgsym: 0.8.1-1", "ros-eloquent-rosidl-typesupport-cpp: 0.8.0-2", "ros-eloquent-rosidl-typesupport-cpp-dbgsym: 0.8.0-2", "ros-eloquent-rosidl-typesupport-fastrtps-c: 0.8.0-1", "ros-eloquent-rosidl-typesupport-fastrtps-c-dbgsym: 0.8.0-1", "ros-eloquent-rosidl-typesupport-fastrtps-cpp: 0.8.0-1", "ros-eloquent-rosidl-typesupport-fastrtps-cpp-dbgsym: 0.8.0-1", "ros-eloquent-rosidl-typesupport-interface: 0.8.0-1", "ros-eloquent-rosidl-typesupport-introspection-c: 0.8.0-1", "ros-eloquent-rosidl-typesupport-introspection-c-dbgsym: 0.8.0-1", "ros-eloquent-rosidl-typesupport-introspection-cpp: 0.8.0-1", "ros-eloquent-rosidl-typesupport-introspection-cpp-dbgsym: 0.8.0-1", "ros-eloquent-rosidl-typesupport-opensplice-c: 0.8.1-1", "ros-eloquent-rosidl-typesupport-opensplice-c-dbgsym: 0.8.1-1", "ros-eloquent-rosidl-typesupport-opensplice-cpp: 0.8.1-1", "ros-eloquent-rosidl-typesupport-opensplice-cpp-dbgsym: 0.8.1-1", "\n", ": 1.0.5-1", "\n", ": 1.0.1-1", "\n", ": 1.1.0-1", "\n", ": 1.0.2-1", "\n", ": 1.0.5-1", "\n", ": 1.0.5-1", "ros-eloquent-rqt-gui-cpp-dbgsym: 1.0.5-1", "\n", ": 1.0.5-1", "\n", ": 1.0.2-1", "ros-eloquent-rqt-image-view-dbgsym: 1.0.2-1", "\n", ": 1.0.2-1", "\n", ": 1.0.7-1", "\n", ": 1.1.0-1", "\n", ": 1.0.5-1", "ros-eloquent-rqt-py-common-dbgsym: 1.0.5-1", "\n", ": 1.0.0-1", "\n", ": 1.0.3-1", "\n", ": 1.0.3-1", "\n", ": 1.0.0-1", "\n", ": 1.0.1-1", "\n", ": 1.0.0-1", "\n", ": 1.0.0-1", "ros-eloquent-rttest: 0.8.0-1", "ros-eloquent-rttest-dbgsym: 0.8.0-1", "\n", ": 7.0.1-1", "\n", ": 7.0.1-1", "ros-eloquent-rviz-common-dbgsym: 7.0.1-1", "\n", ": 7.0.1-1", "ros-eloquent-rviz-default-plugins-dbgsym: 7.0.1-1", "\n", ": 7.0.1-1", "ros-eloquent-rviz-ogre-vendor-dbgsym: 7.0.1-1", "\n", ": 7.0.1-1", "ros-eloquent-rviz-rendering-dbgsym: 7.0.1-1", "ros-eloquent-rviz-rendering-tests: 7.0.1-1", "\n", ": 7.0.1-1", "\n", ": 7.0.1-1", "ros-eloquent-rviz2-dbgsym: 7.0.1-1", "ros-eloquent-sensor-msgs: 0.8.0-1", "ros-eloquent-sensor-msgs-dbgsym: 0.8.0-1", "ros-eloquent-shape-msgs: 0.8.0-1", "ros-eloquent-shape-msgs-dbgsym: 0.8.0-1", "ros-eloquent-shared-queues-vendor: 0.2.0-1", "\n", ": 1.0.1-1", "ros-eloquent-sqlite3-vendor: 0.2.0-1", "ros-eloquent-sros2: 0.8.0-1", "ros-eloquent-sros2-cmake: 0.8.0-1", "ros-eloquent-std-msgs: 0.8.0-1", "ros-eloquent-std-msgs-dbgsym: 0.8.0-1", "ros-eloquent-std-srvs: 0.8.0-1", "ros-eloquent-std-srvs-dbgsym: 0.8.0-1", "ros-eloquent-stereo-msgs: 0.8.0-1", "ros-eloquent-stereo-msgs-dbgsym: 0.8.0-1", "\n", ": 2.2.1-1", "ros-eloquent-teleop-twist-joy-dbgsym: 2.2.1-1", "\n", ": 2.3.1-1", "ros-eloquent-test-interface-files: 0.8.0-1", "ros-eloquent-test-msgs: 0.8.0-1", "ros-eloquent-test-msgs-dbgsym: 0.8.0-1", "ros-eloquent-test-osrf-testing-tools-cpp: 1.2.1-1", "\n", ": 0.12.0-1", "ros-eloquent-tf2-dbgsym: 0.12.0-1", "ros-eloquent-tf2-eigen: 0.12.0-1", "\n", ": 0.12.0-1", "\n", ": 0.12.0-1", "\n", ": 0.12.0-1", "ros-eloquent-tf2-msgs-dbgsym: 0.12.0-1", "\n", ": 0.12.0-1", "ros-eloquent-tf2-py-dbgsym: 0.12.0-1", "\n", ": 0.12.0-1", "ros-eloquent-tf2-ros-dbgsym: 0.12.0-1", "\n", ": 0.12.0-1", "ros-eloquent-tinydir-vendor: 1.1.0-1", "ros-eloquent-tinyxml-vendor: 0.7.0-1", "ros-eloquent-tinyxml2-vendor: 0.6.1-1", "ros-eloquent-tlsf: 0.5.0-1", "ros-eloquent-tlsf-cpp: 0.8.0-1", "ros-eloquent-tlsf-cpp-dbgsym: 0.8.0-1", "ros-eloquent-topic-monitor: 0.8.0-1", "ros-eloquent-trajectory-msgs: 0.8.0-1", "ros-eloquent-trajectory-msgs-dbgsym: 0.8.0-1", "\n", ": 1.0.1-1", "ros-eloquent-turtlesim-dbgsym: 1.0.1-1", "\n", ": 1.3.0-1", "ros-eloquent-uncrustify-vendor-dbgsym: 1.3.0-1", "\n", ": 2.1.0-1", "ros-eloquent-unique-identifier-msgs-dbgsym: 2.1.0-1", "ros-eloquent-urdf: 2.2.0-1", "ros-eloquent-urdf-dbgsym: 2.2.0-1", "ros-eloquent-urdfdom: 2.2.0-1", "ros-eloquent-urdfdom-dbgsym: 2.2.0-1", "\n", ": 1.0.4-1", "\n", ": 2.1.2-1", "ros-eloquent-visualization-msgs: 0.8.0-1", "ros-eloquent-visualization-msgs-dbgsym: 0.8.0-1", "\n", ": 7.0.0-1", "ros-eloquent-yaml-cpp-vendor-dbgsym: 7.0.0-1", "AWS RoboMaker", "Amazon B9", "Amazon ROS Contributions", "Anup Pemmaiah", "Chris Lalancette", "Claire Wang", "Dan Lazewatsky", "David Gossow", "David V. Lu!!", "Dirk Thomas", "Dorian Scholz", "Eclipse Foundation, Inc.", "Emerson Knapp", "Ethan Gao", "Ivan Paunovic", "Jacob Perron", "John Shepherd", "Jose Luis Rivero", "Juan Pablo Samper", "Karsten Knese", "Michael Carroll", "Michel Hidalgo", "Miguel Company", "Mikael Arguedas", "Pete Baughman", "Scott K Logan", "Shane Loretz", "Steve Macenski", "Steven! Ragnarok", "Steven! Ragnar\u00f6k", "Ted Kern", "Tully Foote", "Vincent Rabaud", "William Woodall", "ros-eloquent-ament-cmake-version: 0.8.1-1", "\n", ": 1.0.9000-1", "ros-eloquent-cartographer-ros-dbgsym: 1.0.9000-1", "\n", ": 1.0.9000-1", "ros-eloquent-cartographer-ros-msgs-dbgsym: 1.0.9000-1", "ros-eloquent-cyclonedds-cmake-module: 0.4.1-1", "\n", ": 1.0.3-1", "ros-eloquent-ecl-config-dbgsym: 1.0.3-1", "\n", ": 1.0.3-1", "\n", ": 1.0.3-1", "\n", ": 1.0.3-1", "ros-eloquent-ecl-errors-dbgsym: 1.0.3-1", "\n", ": 1.0.3-1", "ros-eloquent-ecl-io-dbgsym: 1.0.3-1", "\n", ": 1.0.3-1", "\n", ": 1.0.3-1", "ros-eloquent-ecl-sigslots-lite-dbgsym: 1.0.3-1", "\n", ": 1.0.3-1", "ros-eloquent-ecl-time-lite-dbgsym: 1.0.3-1", "ros-eloquent-examples-rclcpp-multithreaded-executor: 0.8.1-1", "ros-eloquent-examples-rclcpp-multithreaded-executor-dbgsym: 0.8.1-1", "\n", ": 0.12.1-2", "\n", ": 2.2.1-1", "\n", ": 2.2.1-1", "\n", ": 1.0.0-1", "ros-eloquent-pcl-msgs-dbgsym: 1.0.0-1", "\n", ": 1.2.1-1", "ros-eloquent-rmw-cyclonedds-cpp: 0.4.1-1", "ros-eloquent-rmw-cyclonedds-cpp-dbgsym: 0.4.1-1", "ros-eloquent-ros2trace: 0.2.9-1", "ros-eloquent-ros2trace-analysis: 0.2.1-1", "ros-eloquent-sophus: 1.1.0-1", "ros-eloquent-system-modes: 0.1.5-1", "ros-eloquent-system-modes-dbgsym: 0.1.5-1", "ros-eloquent-system-modes-examples: 0.1.5-1", "ros-eloquent-system-modes-examples-dbgsym: 0.1.5-1", "\n", ": 2.2.1-1", "ros-eloquent-theora-image-transport-dbgsym: 2.2.1-1", "ros-eloquent-tracetools: 0.2.9-1", "ros-eloquent-tracetools-analysis: 0.2.1-1", "ros-eloquent-tracetools-dbgsym: 0.2.9-1", "ros-eloquent-tracetools-launch: 0.2.9-1", "ros-eloquent-tracetools-read: 0.2.9-1", "ros-eloquent-tracetools-test: 0.2.9-1", "ros-eloquent-tracetools-test-dbgsym: 0.2.9-1", "ros-eloquent-tracetools-trace: 0.2.9-1", "ros-eloquent-action-tutorials-cpp: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-action-tutorials-cpp-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-action-tutorials-interfaces: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-action-tutorials-interfaces-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-action-tutorials-py: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-actionlib-msgs: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-actionlib-msgs-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-clang-format: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-clang-tidy: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-auto: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-clang-format: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-clang-tidy: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-copyright: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-core: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-cppcheck: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-cpplint: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-export-definitions: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-export-dependencies: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-export-include-directories: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-export-interfaces: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-export-libraries: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-export-link-flags: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-flake8: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-gmock: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-gtest: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-include-directories: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-libraries: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-lint-cmake: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-mypy: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-nose: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-pclint: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-pep257: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-pep8: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-pyflakes: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-pytest: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-python: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-target-dependencies: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-test: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-uncrustify: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cmake-xmllint: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-copyright: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cppcheck: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-cpplint: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-flake8: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-index-cpp: 0.7.1-1 -> 0.7.2-1", "ros-eloquent-ament-index-cpp-dbgsym: 0.7.1-1 -> 0.7.2-1", "ros-eloquent-ament-index-python: 0.7.1-1 -> 0.7.2-1", "ros-eloquent-ament-lint: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-lint-auto: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-lint-cmake: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-lint-common: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-mypy: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-package: 0.8.3-1 -> 0.8.4-1", "ros-eloquent-ament-pclint: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-pep257: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-pep8: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-pyflakes: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-uncrustify: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-ament-xmllint: 0.8.0-1 -> 0.8.1-1", "\n", ": 2.2.0-1 -> 2.2.1-1", "ros-eloquent-camera-calibration-parsers-dbgsym: 2.2.0-1 -> 2.2.1-1", "\n", ": 2.2.0-1 -> 2.2.1-1", "ros-eloquent-camera-info-manager-dbgsym: 2.2.0-1 -> 2.2.1-1", "ros-eloquent-common-interfaces: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-composition: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-composition-dbgsym: 0.8.0-1 -> 0.8.1-1", "\n", ": 2.2.0-1 -> 2.2.1-1", "ros-eloquent-compressed-depth-image-transport-dbgsym: 2.2.0-1 -> 2.2.1-1", "\n", ": 2.2.0-1 -> 2.2.1-1", "ros-eloquent-compressed-image-transport-dbgsym: 2.2.0-1 -> 2.2.1-1", "ros-eloquent-connext-cmake-module: 0.8.1-1 -> 0.8.2-1", "\n", ": 2.1.2-1 -> 2.1.3-1", "ros-eloquent-cv-bridge-dbgsym: 2.1.2-1 -> 2.1.3-1", "\n", ": 0.1.0-1 -> 0.1.0-3", "ros-eloquent-cyclonedds-dbgsym: 0.1.0-1 -> 0.1.0-3", "ros-eloquent-demo-nodes-cpp: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-demo-nodes-cpp-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-demo-nodes-cpp-native: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-demo-nodes-cpp-native-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-demo-nodes-py: 0.8.0-1 -> 0.8.1-1", "\n", ": 2.2.2-1 -> 2.2.4-1", "ros-eloquent-depthimage-to-laserscan-dbgsym: 2.2.2-1 -> 2.2.4-1", "ros-eloquent-diagnostic-msgs: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-diagnostic-msgs-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-dummy-map-server: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-dummy-map-server-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-dummy-robot-bringup: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-dummy-sensors: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-dummy-sensors-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-examples-rclcpp-minimal-action-client: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-examples-rclcpp-minimal-action-client-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-examples-rclcpp-minimal-action-server: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-examples-rclcpp-minimal-action-server-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-examples-rclcpp-minimal-client: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-examples-rclcpp-minimal-client-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-examples-rclcpp-minimal-composition: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-examples-rclcpp-minimal-composition-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-examples-rclcpp-minimal-publisher: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-examples-rclcpp-minimal-publisher-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-examples-rclcpp-minimal-service: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-examples-rclcpp-minimal-service-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-examples-rclcpp-minimal-subscriber: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-examples-rclcpp-minimal-subscriber-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-examples-rclcpp-minimal-timer: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-examples-rclcpp-minimal-timer-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-examples-rclpy-executors: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-examples-rclpy-minimal-action-client: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-examples-rclpy-minimal-action-server: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-examples-rclpy-minimal-client: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-examples-rclpy-minimal-publisher: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-examples-rclpy-minimal-service: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-examples-rclpy-minimal-subscriber: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-fastrtps: 1.9.0-3 -> 1.9.2-1", "ros-eloquent-fastrtps-dbgsym: 1.9.0-3 -> 1.9.2-1", "ros-eloquent-foonathan-memory-vendor: 0.1.0-1 -> 0.3.0-1", "ros-eloquent-geometry-msgs: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-geometry-msgs-dbgsym: 0.8.0-1 -> 0.8.1-1", "\n", ": 2.1.2-1 -> 2.1.3-1", "ros-eloquent-image-geometry-dbgsym: 2.1.2-1 -> 2.1.3-1", "ros-eloquent-image-tools: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-image-tools-dbgsym: 0.8.0-1 -> 0.8.1-1", "\n", ": 2.2.0-1 -> 2.2.1-1", "ros-eloquent-image-transport-dbgsym: 2.2.0-1 -> 2.2.1-1", "\n", ": 2.0.0-1 -> 2.0.1-1", "ros-eloquent-interactive-markers-dbgsym: 2.0.0-1 -> 2.0.1-1", "ros-eloquent-intra-process-demo: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-intra-process-demo-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-launch: 0.9.1-1 -> 0.9.3-1", "ros-eloquent-launch-ros: 0.9.1-1 -> 0.9.2-1", "ros-eloquent-launch-testing: 0.9.1-1 -> 0.9.3-1", "ros-eloquent-launch-testing-ament-cmake: 0.9.1-1 -> 0.9.3-1", "ros-eloquent-launch-testing-ros: 0.9.1-1 -> 0.9.2-1", "ros-eloquent-launch-xml: 0.9.1-1 -> 0.9.3-1", "ros-eloquent-launch-yaml: 0.9.1-1 -> 0.9.3-1", "ros-eloquent-lifecycle: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-lifecycle-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-logging-demo: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-logging-demo-dbgsym: 0.8.0-1 -> 0.8.1-1", "\n", ": 3.2.0-1 -> 3.2.1-1", "ros-eloquent-message-filters-dbgsym: 3.2.0-1 -> 3.2.1-1", "ros-eloquent-nav-msgs: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-nav-msgs-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-pendulum-control: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-pendulum-control-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-pendulum-msgs: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-pendulum-msgs-dbgsym: 0.8.0-1 -> 0.8.1-1", "\n", ": 2.4.0-1 -> 2.4.1-1", "ros-eloquent-quality-of-service-demo-cpp: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-quality-of-service-demo-cpp-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-quality-of-service-demo-py: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rcl: 0.8.1-1 -> 0.8.2-1", "ros-eloquent-rcl-action: 0.8.1-1 -> 0.8.2-1", "ros-eloquent-rcl-action-dbgsym: 0.8.1-1 -> 0.8.2-1", "ros-eloquent-rcl-dbgsym: 0.8.1-1 -> 0.8.2-1", "ros-eloquent-rcl-lifecycle: 0.8.1-1 -> 0.8.2-1", "ros-eloquent-rcl-lifecycle-dbgsym: 0.8.1-1 -> 0.8.2-1", "ros-eloquent-rcl-logging-log4cxx: 0.3.2-1 -> 0.3.3-1", "ros-eloquent-rcl-logging-log4cxx-dbgsym: 0.3.2-1 -> 0.3.3-1", "ros-eloquent-rcl-logging-noop: 0.3.2-1 -> 0.3.3-1", "ros-eloquent-rcl-logging-noop-dbgsym: 0.3.2-1 -> 0.3.3-1", "ros-eloquent-rcl-logging-spdlog: 0.3.2-1 -> 0.3.3-1", "ros-eloquent-rcl-logging-spdlog-dbgsym: 0.3.2-1 -> 0.3.3-1", "ros-eloquent-rcl-yaml-param-parser: 0.8.1-1 -> 0.8.2-1", "ros-eloquent-rcl-yaml-param-parser-dbgsym: 0.8.1-1 -> 0.8.2-1", "ros-eloquent-rclcpp: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rclcpp-action: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rclcpp-action-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rclcpp-components: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rclcpp-components-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rclcpp-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rclcpp-lifecycle: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rclcpp-lifecycle-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rclpy: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rclpy-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rcutils: 0.8.1-1 -> 0.8.2-1", "ros-eloquent-rcutils-dbgsym: 0.8.1-1 -> 0.8.2-1", "ros-eloquent-rmw: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rmw-connext-cpp: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rmw-connext-cpp-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rmw-connext-shared-cpp: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rmw-connext-shared-cpp-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rmw-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rmw-fastrtps-cpp: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rmw-fastrtps-cpp-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rmw-fastrtps-dynamic-cpp: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rmw-fastrtps-dynamic-cpp-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rmw-fastrtps-shared-cpp: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rmw-fastrtps-shared-cpp-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rmw-implementation: 0.8.0-4 -> 0.8.1-1", "ros-eloquent-rmw-implementation-cmake: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rmw-implementation-dbgsym: 0.8.0-4 -> 0.8.1-1", "ros-eloquent-rmw-opensplice-cpp: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rmw-opensplice-cpp-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-robot-state-publisher: 2.3.0-1 -> 2.3.1-1", "ros-eloquent-robot-state-publisher-dbgsym: 2.3.0-1 -> 2.3.1-1", "ros-eloquent-ros-environment: 2.4.0-1 -> 2.4.1-1", "ros-eloquent-ros1-bridge: 0.8.0-2 -> 0.8.1-3", "ros-eloquent-ros1-bridge-dbgsym: 0.8.0-2 -> 0.8.1-3", "ros-eloquent-ros2action: 0.8.2-1 -> 0.8.3-1", "ros-eloquent-ros2bag: 0.2.0-1 -> 0.2.1-2", "ros-eloquent-ros2cli: 0.8.2-1 -> 0.8.3-1", "ros-eloquent-ros2component: 0.8.2-1 -> 0.8.3-1", "ros-eloquent-ros2doctor: 0.8.2-1 -> 0.8.3-1", "ros-eloquent-ros2interface: 0.8.2-1 -> 0.8.3-1", "ros-eloquent-ros2launch: 0.9.1-1 -> 0.9.2-1", "ros-eloquent-ros2lifecycle: 0.8.2-1 -> 0.8.3-1", "ros-eloquent-ros2msg: 0.8.2-1 -> 0.8.3-1", "ros-eloquent-ros2multicast: 0.8.2-1 -> 0.8.3-1", "ros-eloquent-ros2node: 0.8.2-1 -> 0.8.3-1", "ros-eloquent-ros2param: 0.8.2-1 -> 0.8.3-1", "ros-eloquent-ros2pkg: 0.8.2-1 -> 0.8.3-1", "ros-eloquent-ros2run: 0.8.2-1 -> 0.8.3-1", "ros-eloquent-ros2service: 0.8.2-1 -> 0.8.3-1", "ros-eloquent-ros2srv: 0.8.2-1 -> 0.8.3-1", "ros-eloquent-ros2topic: 0.8.2-1 -> 0.8.3-1", "ros-eloquent-rosbag2: 0.2.0-1 -> 0.2.1-2", "ros-eloquent-rosbag2-converter-default-plugins: 0.2.0-1 -> 0.2.1-2", "ros-eloquent-rosbag2-converter-default-plugins-dbgsym: 0.2.0-1 -> 0.2.1-2", "ros-eloquent-rosbag2-dbgsym: 0.2.0-1 -> 0.2.1-2", "ros-eloquent-rosbag2-storage: 0.2.0-1 -> 0.2.1-2", "ros-eloquent-rosbag2-storage-dbgsym: 0.2.0-1 -> 0.2.1-2", "ros-eloquent-rosbag2-storage-default-plugins: 0.2.0-1 -> 0.2.1-2", "ros-eloquent-rosbag2-storage-default-plugins-dbgsym: 0.2.0-1 -> 0.2.1-2", "ros-eloquent-rosbag2-test-common: 0.2.0-1 -> 0.2.1-2", "ros-eloquent-rosbag2-tests: 0.2.0-1 -> 0.2.1-2", "ros-eloquent-rosbag2-transport: 0.2.0-1 -> 0.2.1-2", "ros-eloquent-rosbag2-transport-dbgsym: 0.2.0-1 -> 0.2.1-2", "ros-eloquent-rosidl-adapter: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rosidl-cmake: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rosidl-generator-c: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rosidl-generator-c-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rosidl-generator-cpp: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rosidl-generator-py: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rosidl-parser: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rosidl-runtime-py: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rosidl-typesupport-connext-c: 0.8.1-1 -> 0.8.2-1", "ros-eloquent-rosidl-typesupport-connext-c-dbgsym: 0.8.1-1 -> 0.8.2-1", "ros-eloquent-rosidl-typesupport-connext-cpp: 0.8.1-1 -> 0.8.2-1", "ros-eloquent-rosidl-typesupport-connext-cpp-dbgsym: 0.8.1-1 -> 0.8.2-1", "ros-eloquent-rosidl-typesupport-interface: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rosidl-typesupport-introspection-c: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rosidl-typesupport-introspection-c-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rosidl-typesupport-introspection-cpp: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rosidl-typesupport-introspection-cpp-dbgsym: 0.8.0-1 -> 0.8.1-1", "\n", ": 1.0.2-1 -> 1.0.3-1", "\n", ": 1.0.2-1 -> 1.0.3-1", "ros-eloquent-rqt-image-view-dbgsym: 1.0.2-1 -> 1.0.3-1", "ros-eloquent-rttest: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-rttest-dbgsym: 0.8.0-1 -> 0.8.1-1", "\n", ": 7.0.1-1 -> 7.0.2-1", "\n", ": 7.0.1-1 -> 7.0.2-1", "ros-eloquent-rviz-common-dbgsym: 7.0.1-1 -> 7.0.2-1", "\n", ": 7.0.1-1 -> 7.0.2-1", "ros-eloquent-rviz-default-plugins-dbgsym: 7.0.1-1 -> 7.0.2-1", "\n", ": 7.0.1-1 -> 7.0.2-1", "ros-eloquent-rviz-ogre-vendor-dbgsym: 7.0.1-1 -> 7.0.2-1", "\n", ": 7.0.1-1 -> 7.0.2-1", "ros-eloquent-rviz-rendering-dbgsym: 7.0.1-1 -> 7.0.2-1", "ros-eloquent-rviz-rendering-tests: 7.0.1-1 -> 7.0.2-1", "\n", ": 7.0.1-1 -> 7.0.2-1", "\n", ": 7.0.1-1 -> 7.0.2-1", "ros-eloquent-rviz2-dbgsym: 7.0.1-1 -> 7.0.2-1", "ros-eloquent-sensor-msgs: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-sensor-msgs-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-shape-msgs: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-shape-msgs-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-shared-queues-vendor: 0.2.0-1 -> 0.2.1-2", "ros-eloquent-sqlite3-vendor: 0.2.0-1 -> 0.2.1-2", "ros-eloquent-std-msgs: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-std-msgs-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-std-srvs: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-std-srvs-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-stereo-msgs: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-stereo-msgs-dbgsym: 0.8.0-1 -> 0.8.1-1", "\n", ": 2.2.1-1 -> 2.2.2-1", "ros-eloquent-teleop-twist-joy-dbgsym: 2.2.1-1 -> 2.2.2-1", "\n", ": 0.12.0-1 -> 0.12.1-2", "ros-eloquent-tf2-dbgsym: 0.12.0-1 -> 0.12.1-2", "ros-eloquent-tf2-eigen: 0.12.0-1 -> 0.12.1-2", "\n", ": 0.12.0-1 -> 0.12.1-2", "\n", ": 0.12.0-1 -> 0.12.1-2", "\n", ": 0.12.0-1 -> 0.12.1-2", "ros-eloquent-tf2-msgs-dbgsym: 0.12.0-1 -> 0.12.1-2", "\n", ": 0.12.0-1 -> 0.12.1-2", "ros-eloquent-tf2-py-dbgsym: 0.12.0-1 -> 0.12.1-2", "\n", ": 0.12.0-1 -> 0.12.1-2", "ros-eloquent-tf2-ros-dbgsym: 0.12.0-1 -> 0.12.1-2", "\n", ": 0.12.0-1 -> 0.12.1-2", "ros-eloquent-tlsf-cpp: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-tlsf-cpp-dbgsym: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-topic-monitor: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-trajectory-msgs: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-trajectory-msgs-dbgsym: 0.8.0-1 -> 0.8.1-1", "\n", ": 1.0.1-1 -> 1.0.2-1", "ros-eloquent-turtlesim-dbgsym: 1.0.1-1 -> 1.0.2-1", "\n", ": 2.1.2-1 -> 2.1.3-1", "ros-eloquent-visualization-msgs: 0.8.0-1 -> 0.8.1-1", "ros-eloquent-visualization-msgs-dbgsym: 0.8.0-1 -> 0.8.1-1", "Amazon B9", "Amazon ROS Contributions", "Anup Pemmaiah", "Arne Nordmann", "Chris Lalancette", "Christophe Bedard", "Claire Wang", "Daniel Stonier", "David Gossow", "Dirk Thomas", "Eclipse Foundation, Inc.", "Erik Boasson", "Ethan Gao", "Ivan Paunovic", "Jack O\u2019Quin", "Jacob Hassold", "Jacob Perron", "John Shepherd", "Juan Pablo Samper", "Julius Kammerl", "Karsten Knese", "Michael Carroll", "Michel Hidalgo", "Miguel Company", "Mikael Arguedas", "Paul Bovbel", "Pete Baughman", "Scott K Logan", "Shane Loretz", "Steven! Ragnarok", "Steven! Ragnar\u00f6k", "Ted Kern", "Tully Foote", "Vincent Rabaud", "William Woodall"], "url": "https://discourse.ros.org/t/ros-2-eloquent-elusor-call-for-testing-and-package-releases/10923"},
{"title": "ROS 2 for Consumer Robotics", "thread_contents": ["Hi all,", "\nI\u2019m Alberto, from iRobot.", "\nAs you may know, my colleague Juan and I gave a presentation at ROSCon about using ROS 2 in consumer robotics application.", "\nIf you missed it, you can find it here ", "The purpose of our talk was to discuss about a performance gap in ROS 2 that was preventing it from being effectively used on a particular class of platforms:", "\nwe thought that Linux-based, low cost, embedded platforms (as RaspberryPi) were not taken enough into consideration.", "During our talk we highlighted the most relevant problems of the current (Dashing) release and we suggested some improvements.", "\nAll the experiments presented in the talk or in this blog post have been performed using our open-source performance evaluation framework: it\u2019s a very simple framework that measures some fundamental performance metrics; its peculiarity is that it allows to simulate any type of arbitrarily complex ROS 2 system through a JSON file.", "\nYou can find it here ", ".", "We want to thank all of you for the interest you showed in the problems that we presented and we are extremely happy to see all the work that is going on to address these issues.", "First of all, we can have a look at the default performance of the current ROS 2 master.", "\n", "The performance are already a lot better than what we measured for Dashing, in particular the CPU usage and the latency improved and we have a reduction of ~40 Mb of RAM. We have no more \u201ctoo late\u201d or \u201clost\u201d messages (we are in a single process scenario, so this is highly desirable!)", "However, what is really interesting is all the work that is currently going on and will be part of the next releases", "CycloneDDS", "\nRefactor of the serialization procedure: this made the code cleaner and it reduced latency and CPU usage, especially for big messages.", "\n", " (results ", ")", "\nThis has been recently merged to master.", "\nImproving the deserialization procedure will be the next step and many more features are coming since this DDS has been added to the list of ROS 2 stable sources.", "FastRTPS", "\nSubstantial improvements on the memory side: before most of the memory allocation was happening at startup to target real-time use cases, while now the default behavior will be more memory efficient in scenario where real-time constraints are not present.", "\nThe RAM usage in our benchmark goes from 116 Mb to 33 Mb.", "\nPart of this is already available in master, while other works will be ready for the next Eloquent relase.", "\n", "\n", "RMW Iceoryx", "\nA new RMW, completely based on a shared memory layer in order to ensure best performances for inter-process communication.", "\nThis is already available and it\u2019s receiving a lot of interst and support.", "\n", "Static Executor", "\nA first step towards the refactor of executors in ", ". This new executor performs the best when most of the nodes are already available at startup, but is still able to recognize new publisher/subscriptions.", "\nUnfortunately, it is not updated to the current master, so I haven\u2019t been able to test it extensively, but the CPU usage looks definitely better!", "\nIt\u2019s targeting the next ROS 2 release, Foxy.", "\n", "\n", "With all this work going on, I think that we can say that if Dashing and Eloquent were the releases that added to ROS 2 most of the required features, with the next release, Foxy, the ROS 2 performances will get a big improvement!", "Let\u2019s keep going in this direction, to make ROS 2 a success!", "Hi Alberto,", "As you said, Fast RTPS and rmw_fastrtps default settings are designed for ", ":", "1.- ", ": We allocate some memory at startup to avoid dynamic allocations. While this is good for many applications, it is not if you are looking for minimum memory usage.", "2.- ", ": The user thread is not publishing directly the message but copies the data to a buffer, and a middleware thread does the actual publication. This is good for real-time determinism as the user thread returns immediately. But is not good if you are looking for minimum latency.", "Also, the Fast RTPS for dashing didn\u2019t count with an intra-process mechanism.", "Therefore in your initial comparison, you were comparing:", "But, if you setup Fast RTPS with the recommended settings for this case and use the latest version, you get:", "This experiment includes the whitelist mechanism you recommended in your presentation (10 mb less of memory usage). A lot better, and matching your requirements.", "The documentation to setup the rmw of fast RTPS is in the readme of the rmw: ", "Also is worth to comment ROS2 is creating a DDS participant per publication or subscription, leading to a lot of participants. That is not the recommended use of DDS, and in this case leads to a lot of participants. For the next ROS2 release this behaviour is going to be fixed:", "We did an experiment using your framework with an equivalent topology, but just a single DDS participant. In that case:", "With 1-to-1 mapping, both the memory and the CPU usage improve a lot, as it is the recommended way to use DDS.", ":", "Also, to easily reproduce these results and the different experiments, we created a complete Rosject:", "Get your copy of the ROSject iRobot performance test dds comparison by @2960bd0df664", "Important Note: iRobot scenario uses a Raspberry Pi with raspbian. The rosject creates a cloud instance using linux, and the memory page size is bigger than in a raspberry PI, so the memory measures are higher for any configuration, but it is useful to understand the differences.", "As conclusion, ROS2 with Fast RTPS is highly configurable, ", ", and for Foxy we will focus on performance, so as you predict, it will be even better.", "For a how-to on how to change the basics:", "\n", " (readme)", "\nAnd for detailed documentation of all the available options, see:", "\n", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "Fast RTPS: Static Allocations + Async Pub + Loopback (Dashing)", "Cyclone DDS: Dynamic Allocations + Sync Pub + Intraprocess (Latest)"], "url": "https://discourse.ros.org/t/ros-2-for-consumer-robotics/11860"},
{"title": "IPC in ros2", "thread_contents": ["Does ros2 use inter-process communication when we use it in  linux OS ? What about in case of bare metal micro-controllers where there is no OS?", "In the future, please set the category to \u201cNext Generation ROS\u201d when discussing ROS 2.", "Does ros2 use inter-process communication when we use it in  linux OS ?", "First, I\u2019ll assume you mean \u201cdoes ROS 2 use any operating system IPC mechanisms between nodes on the same machine, rather than sending data over UDP?\u201d, because the term \u201cinter-process communication\u201d only means communication between two processes, but does not imply what the mechanism is (i.e. UDP or TCP can be IPC).", "It depends on the middleware implementation you are using. Currently the default of Fast-RTPS does not use anything other than UDP single cast or multicast. It could, RTPS allows for this in the protocol. I believe some of the proprietary implementations provide a shared-memory based IPC mechanism when on the same machine. Fast-RTPS will hopefully support this in the future.", "What about in case of bare metal micro-controllers where there is no OS?", "There have been some experiments which use RTPS on a OS-less microcontroller to communicate with ROS 2 on a desktop and some other experiments to get our ROS 2 API compiling for microcontrollers, but there is no out of the box support for OS-less ROS 2 at this time. We did enough work to convince ourselves that is possible, but haven\u2019t followed through with sustained support because we didn\u2019t have time, though we would love to do that in the future.", "In that case though, with no OS, you probably would not be using processes so the idea of \u201cInter-", " communication\u201d doesn\u2019t really make sense. You would be using something more like our \u201c", "-process communication\u201d, which can avoid sending the message data over the network (UDP in most cases).", "RTI\u2019s DDS does use shared memory internally when possible, I think.", "Hi sagniknitr,", "Fast RTPS will support shared memory in future releases, is in our roadmap. Regarding microcontrollers we are developing a lightweight version of Fast RTPS based on an OMG future standard for constrained resources devices. Of course it is not a full DDS/RTPS implementation, but a reduced API and different protocol.", "You can see the first prototypes in the ", " use case, and we are working in an release now. This will let you to use ROS2 in micro-controlllers.", "If you want more details, please contact me.", "Jamie,", "Thanks for the update about how Fast RTPS will be evolving.  A few questions, is the prototype with Dronecode you\u2019re referring to the work you did on the ", "?  Additionally, can you point to any public links regarding this new OMG standard for constrained resources? I know that the ", " is publicly available, is a draft of the document you\u2019re referring to available?", "Thanks", "\n- Eddy", "The DDS XRCE (\u201ceXtremely Resource Constrained Environments\u201d because all OMG specifications need a cool acronym) specification isn\u2019t even close to finished yet. The ", " but you have to be an OMG member to get the working documents, unless someone involved is willing to provide them. When the specification is adopted, that becomes publicly available.", "As seems to happen a lot with the DDS specs these days, the RTI/eProsima/Twin Oaks camp and the PrismTech camp have produced their own versions of the XRCE specification and are struggling to reconcile them into a single specification that the OMG can adopt. I won\u2019t wade into the debate over which is better, but I\u2019ll let you draw your own conclusions from the fact that one of the two camps only has one company it it. ", " I hope it\u2019s not going to be the RPC for DDS spec all over again; the arguments over that could be heard in other meeting rooms. But it seems likely that it will be a year and a half or more before the final specification is released.", "Thanks for the informative reply ", ", I had no idea the work was under way.", "I attended the OMG meeting last week, so I took the opportunity to hear what PrismTech and RTI/TwinOaks/eProsima had to say about their competing submissions. The following are the notes I took during their presentations. Remember while reading this that it is based solely on the presentations. I haven\u2019t read the submissions themselves in any detail yet.", "Prismtech presentation:", "RTI/eProsima/TwinOaks presentation:", "My summary:", "Thanks for the summary ", "!  I\u2019m very interested in how the work progresses", "Thanks Geoff, great stuff!", "Hello ", ",", "First of all I\u2019d like to point out that I am one of the author of PrismTech\u2019s/ADLINK XRCE proposal, thus you may think I am giving you my perspective, in that case I urge you to read original documents to see how what I am providing here are facts. That said, let me make a few rectifications to some of the points above.", "You say:", "We are Engineer and Mathematicians not priests. Thus we don\u2019t believe we measure ", " You can find the result of our analysts here ", " but you are welcome to derive them by reading both specs.", "This is also partially correct. We had asked to present what would have been our final proposal in Bruxelles to give a chance to the task-force to digest and one more opportunity to the competing team to join. This has nothing to do with the Vote-to-Vote and the fact that the task-force did not decide to allow the Vote-to-Vote procedure. The OMG has very complex rules\u2026 I know that can seam strange, and they still surprise me after having spent more than 10 years dealing with it.", "The RFP (which I wrote) asks for a protocol not for an API.", "First off, the protocol has a single byte header of which only 3 bits are used for flags and the remainder 5 bits for message-id. There are two flags that are used consistently to identify Reliable and Synchronous messages and another few flags used to mark the presence or absence of some information in the message. Personally I don\u2019t find that daunting complex,  it is quite normal in protocol to use flags to this end.", "\nAdditionally, you may argue that this may add some complexity in the message parsing \u2013 but again \u2013 I think that checking a flag and deciding wether some field is going to be present or not does not belong to the realm of hard. It is also worth  pointing out that some flags are just informative and don\u2019t require any kind of branching in the decoding. Finally, what I can tell you is that with this protocol we have measured performances that  literally blow away RTPS! If you are curious we\u2019ll share the numbers\u2026 Or better make available the code for you to see with your eyes ", " And BTW, if our complex specification can fit in 1KB and RTI&Co simple protocol fits in 43KB\u2026 There is something wrong\u2026 Thus either our is not so complex or their is not so simple ", "As I\u2019ve explained several times during previous OMG meeting we have customers count bytes, and in some use cases they are not willing to spend more than 7 bytes wire overhead for data samples. Our proposal currently has 4 compared to that of RTI/TwinOaks/eProsima which has 16 bytes. We have had our implementation run on a Makeblock robot using BLE with an MTU of 20 bytes.  You can check the comparison on this deck ", " and should wonder why the competing proposal did not provide a proper analysis of the wire overhead. Additionally when leveraging batching we have a wire overhead of (3+n)/n where n is the number of samples being batched.", "Some other thing worth point out is that the protocol allows for data to be pushed, pulled or periodically pushed or pulled. The write protocol also allow to pace the streaming of data that results from a remote query. This is extremely important when dealing with resource constrained nodes that need to consume data little by little.", "I did not hear RTI saying:", "But this is far from being true. The AB review should be public and I can ask permission from the AB to post those. The truth is that the two reviews of the AB raised questions concerning whether the submission was actually answering the RFP. The reason why RTI did not want to vote is that their submission \u2013 if selected would have been killed by the AB. That is as simple as that.", "I\u2019d like to understand why you say this:", "What do you think is our submission cutting out? We are wire efficient yes, extremely wire efficient but at the same tine we support:", "At this point my question is have  you\u2019ve read both specification? If not, I suggest you do our is available here ", "I hope this was useful in clarifying a few aspects and I am looking forward to get some feedback once you\u2019ll have read both submissions. I\u2019ll also be more than happy to answer any question you may have about our protocol.", "A+", "Dear ", ",", "You are being to nice to PrismTech as everyone knows that consistency in design and elegance is seldom achieved through multi-vendor compromises. I think it is best for people to look with their eyes at what the two submission can do and make their own decisions.", "On my side I like debates, I like inquisitive minds and I like hard questions. Thus I\u2019ll be more than happy to answer any question on the XRCE protocol proposed by the PrismTech/ADLINK team explain why it is better than RTI proposal\u2026 And actually it is better than RTPS.", "Thus, please let\u2019s start the open debate to dissect the reasons why our proposal is the one which should be voted and by far the better one.", "I\u2019ll give you another small hint of why our XRCE proposal is an improvement over RTPS\u2026 Do you know how the RTPS protocol deals with discovery? What happens when you have loads of topics, readers and writers in your system and very asymmetric nodes?", "Have you ever tried to do a one shot write in DDS? How much protocol traffic are you going to generate to make that happen\u2026 And how many entities do you have to create?", "I\u2019ll  stop here\u2026 for the time being ", "A+", "Thanks ", " for jumping into the community in such an energetic manner. I think we all appreciate having one of the authors of the proposals providing feedback. That said:", "Remember while reading this that it is based solely on the presentations. I haven\u2019t read the submissions themselves in any detail yet.", "which answers:", "At this point my question is have  you\u2019ve read both specification? If not, I suggest you do our is available here ", "I think I\u2019ll stop here\u2026 for the time being ", " .", "Hi Angelo (", "),", "Coordinate different companies to get a common view on a complex matter is always hard, and in this case, there are multiple design options leading to different tradeoffs.", "Our submission (RTI, Twin Oaks & eProsima) already aligns the views of three different DDS vendors, and sure we will try to incorporate ideas of your submission.", "Our submission tries to accomplish the following:", "We coded a PoC of our submission, and during the presentation, you asked about numbers. At that point, with no optimizations at all, and in debug mode we answered 43Kb. I asked my team to optimize a little bit the code, and here are the numbers we have now for the client:", "Total Memory Use: 8 Kb", "But we could squeeze that even a little more. We are releasing this as Open Source (Apache 2) so anyone can review the results.", "But again, we are not aiming to be as small as possible. We are covering all the requisites of the DDS-XRCE RFP, and testing our solution in what we consider typical microcontrollers today.", "Regarding the process at the OMG meeting, we (RTI, Twin Oaks & eProsima) didn\u2019t want to confront both specifications and choose one of them, but have the time to incorporate ideas from your submission, and that is why now we have an extended deadline.", "Let me join in the fray. I\u2019m the other author of the PrismTech submission and the one who built our tiny prototype. I wasn\u2019t present at the OMG meetings, and I won\u2019t waste any words on what may or may not have happened there.", "Firstly, I don\u2019t think a contest of bytes of RAM adds real value to the discussion, although of course it is an honourable contest in itself ", " I am surprised that you, ", ", had never even had a proper look at the memory use of your implementation given the purpose of the exercise in the first place, but if it is 8kB now then it is much better already \u2014 if still 7kB overweight ", " In any case, memory use is determined more by the implementation than by the protocol messages.", "The precise overhead on the wire is of more interest, as this is fundamental to the protocol. BLE gives you 20 bytes to play with, and a difference of a few bytes of header adds up in that context. Furthermore, as Angelo pointed out, we have customers to whom 8 bytes is too many already. Yet even that is not of such great interest to me in this discussion.", "What really matters in my opinion is a difference in philosophy. The two proposals suggest very different views of what one would ideally want to accomplish.", "The RTI/TwinOaks/eProsima proposal is limited to providing a means for performing DDS operations remotely, and it don\u2019t see how it can do anything other than that. In a sense, it is just a hand-crafted alternative to CORBA with a lower overhead. (Simply using CORBA actually \u201cjust works\u201d if the DDS implementation is faithful to the IDL interface mappings, even if it is ugly.) To me, this route is a pragmatic way of going about satisfying the RFP, but at the same time, an uninteresting one. (Sorry ", " and others \u2026)", "We chose to design a compact protocol that can support what amounts to performing DDS operations remotely, but doesn\u2019t limit itself to it. Instead, it also supports a DDS-like peer-to-peer network with vastly lower overhead, and, in many ways a level of flexibility in specifying what data is of interest (through URIs and selections) that DDS doesn\u2019t natively support.", "All of that would be of little value if it doesn\u2019t perform well or doesn\u2019t scale well. Just like the code size and memory use are mostly determined by the implementation, so is maximum sustainable performance more determined by implementation than by the details of the protocol headers. Size-wise, my prototype can run as a client on an Arduino Uno (8-bit CPU, 2kB RAM). A small test application using the same implementation configured as a peer easily sends ~700k 8-byte msgs/s from one RPi3 to 3 others (CPU is << 100%, network load ~75% of Fast Ethernet, so I really should investigate why it isn\u2019t faster), and goes another order of magnitude faster when run over local loopback on my MBP. That\u2019s better than your typically DDSI implementation. Is this relevant? That depends on whether you have high rate, tiny messages \u2026", "Now my test application doesn\u2019t implement all of DDS \u2014 not even close \u2014 and this is another significant reason why it can do this with only a few kB of code and RAM. At the same time, this is, I believe, where it gets interesting for ROS2.", "As ROS2 has its own middleware abstraction layer that uses only a fraction of the DDS feature set, putting ROS2 directly on our protocol would get you a smaller and a faster system. Smaller and faster usually allows doing more interesting things, even if I can\u2019t say what exactly those interesting things will be.", "Disclaimer: I can\u2019t do run ROS2 over it today, there\u2019s more work to be done on my prototype before it supports all that is required. And I wish none of you would have to take my word for the data I mentioned, but that is not something that is in my power to solve today.", "It looks like I started something of a minor storm moments before starting a holiday\u2026", "I\u2019m thankful that the DDS vendors, PrismTech, RTI, Twin Oaks and eProsima, are all engaged enough in the ROS community to be present on the Discourse board. It is encouraging to future adopters of ROS 2.", "We are Engineer and Mathematicians not priests. Thus we don\u2019t believe we measure", "I wasn\u2019t implying religious believe. It\u2019s an simply expression to describe someone making an assertion. ", " I fully agree that PrismTech\u2019s submission has much smaller messages than the RTI/Twin Oaks/eProsima submission based on the two presentations alone.", "The RFP (which I wrote) asks for a protocol not for an API.", "While this is true, the other submission has managed to define an object model as well, and in addition kept it close to the existing DDS one.", "First off, the protocol has a single byte header of which only 3 bits are used for flags and the remainder 5 bits for message-id. There are two flags that are used consistently to identify Reliable and Synchronous messages and another few flags used to mark the presence or absence of some information in the message. Personally I don\u2019t find that daunting complex,  it is quite normal in protocol to use flags to this end.", "It is quite common to use flags. TCP is full of them. My concern is that the protocol is, in my opinion, undoubtedly complex and, based solely on the presentations, more complex than the other submission. Complexity and size are often a balance and in this situation we appear to have one submission at each end of the balance.", "Finally, what I can tell you is that with this protocol we have measured performances that  literally blow away RTPS! If you are curious we\u2019ll share the numbers\u2026 Or better make available the code for you to see with your eyes", "With the sorts of overhead you are achieving, I\u2019m not surprised performance is amazing. I\u2019d still like to see numbers, though. ", "And BTW, if our complex specification can fit in 1KB and RTI&Co simple protocol fits in 43KB\u2026 There is something wrong\u2026 Thus either our is not so complex or their is not so simple", "As was stated elsewhere in this thread, eProsima\u2019s implementation wasn\u2019t optimised. Since you said you are trying to bring yours to market already and eProsima claimed theirs was a tech demo, I\u2019m not surprised yours is more optimised and thus smaller. Of course, the numbers are definitely in your favour for RAM usage. But I\u2019m curious how much program memory each implementation requires, too. This is often the limiting factor on embedded microprocessors rather than the RAM usage.", "As I\u2019ve explained several times during previous OMG meeting we have customers count bytes, and in some use cases they are not willing to spend more than 7 bytes wire overhead for data samples.", "I didn\u2019t catch that even once during the presentation. Next time, put such an important motivating factor in your slides. ", " RTI and co were much better at motivating their design decisions, and that put a positive spin on their submission.", "You probably also should have put that requirement in the RFP, if it\u2019s that important. The other submission cannot aim for a requirement they are not aware of.", "But this is far from being true. The AB review should be public and I can ask permission from the AB to post those.", "Since the submissions have not gone to the AB yet, as far as I know, then there should not be any official AB reviews, which suggests to me that RTI asked for unofficial reviews from AB members. This may be why they are not public?", "The truth is that the two reviews of the AB raised questions concerning whether the submission was actually answering the RFP.", "In that case I am very interested in seeing what these AB members wrote.", "The reason why RTI did not want to vote is that their submission \u2013 if selected would have been killed by the AB. That is as simple as that.", "That may have been RTI\u2019s reason, but the reason the rest of us present voted no is because we still have two vastly different submissions with no apparent readiness to work towards a single one. PrismTech even behaved in their presentation as if they are expecting RTI, Twin Oaks and eProsima to through away their submission and go with PrismTech\u2019s.", "What do you think is our submission cutting out?", "\u201cCutting down\u201d, not \u201ccutting out\u201d. I meant that you are trying to reduce the size of the messages on the wire as much as possible, at the expense of possibly needing more complex parsing code. I didn\u2019t mean to say that you are cutting out features. It was clear from the presentation that PrismTech supports more features and has more flexibility than the other submission. But there are trade-offs involved.", "Dynamic Discovery (RTI does not, please read their spec!)", "\nPeer to Peer Communication (RTI does not)", "Neither of these are required by the RFP. The RFP heavily directs the submitter towards the style of architecture that RTI/Twin Oaks/eProsima provided.", "Non IP Transports (RTI does not)", "Yes, this is something that I was disappointed about. Hearing RTI\u2019s presentation talk about TCP/IP only seemed to rule out using it on things like Zigbee. But on the other hand, perhaps it\u2019s readily adaptable?", "Generalised Queries (RTI only supports DDS-like queries)", "Well, it is ", "-XRCE, is it not?", "I hope this was useful in clarifying a few aspects and I am looking forward to get some feedback once you\u2019ll have read both submissions.", "It was very useful. I wish I had had this information during the presentation. I still have not had time to read the submissions in detail and unfortunately will not be able to do so before November, but fortunately we now have until February next year to try and resolve this situation.", "And, as ", " said, having code available would make a difference to how well we can judge things like implementation complexity. ", "everyone knows that consistency in design and elegance is seldom achieved through multi-vendor compromises", "While this is true, we are operating at a standardisation organisation, not a rubber stamp provider. There are interested parties beyond just the implementers. We would prefer not to just hold a vote on which submission to go forward with. We would prefer the submitters to actually work together and produce a single submission that combines the best of both without any technological compromises (yes, I\u2019m aware how hard that is).", "I\u2019ll give you another small hint of why our XRCE proposal is an improvement over RTPS\u2026 Do you know how the RTPS protocol deals with discovery? What happens when you have loads of topics, readers and writers in your system and very asymmetric nodes?", "Have you ever tried to do a one shot write in DDS? How much protocol traffic are you going to generate to make that happen\u2026 And how many entities do you have to create?", "I\u2019ll  stop here\u2026 for the time being", "Or, you could provide the answers to those questions, along with the equivalent answers for your submission, so we can see and compare the data to back up your claims.", "Our submission tries to accomplish the following:", "Propose a familiar model to the final user, making use of the DDS object model and specifications: Serialization (CDR), representation (XML-DDS), and some ideas of WS-DDS mapping", "\nNeither the protocol or the API is designed to save every possible bit, but to have something robust, flexible and easy to use.", "This is the strongest impression I got from the presentation, as I said in my own notes. The data model is similar to DDS, which makes adoption by existing DDS users easier, and the ability to implement the protocol in a relatively simple piece of code (which makes it easier to verify and certify) was considered as important as saving bytes on the wire. I\u2019m not sure where the correct balance is between these two requirements, but the PrismTech implementation really gave the impression of being at one extreme.", "testing our solution in what we consider typical microcontrollers today", "This is something that I think is really relevant but that PrismTech have not addressed at all, and RTI/Twin Oaks/eProsima have not addressed enough. What are the typical microcontrollers in use today? What are the target environments for this protocol to be used in?", "The RFP explicitly says this:", "From a high level perspective, the key requirements that a DDS-XRCE implementation has to satisfy are (1) extremely low footprint \u2013 addressing targets with less than 100 Kbytes of RAM, (2) extremely efficient wire protocol \u2013 inducing a protocol overhead of just a few tens of byte over the user data, and (3) support devices that undergo aggressive sleep cycles.", "Both submissions fit within both the RAM usage (with much room to spare) and the protocol overhead.", "More specifically, the actual mandatory requirement is:", "6.5.3. DDS-XRCE protocol overhead, when sending or receiving user data, shall not exceed 24 bytes per packet.", "Let M be the size of the DDS-XRCE message sent out, and U the size of the user data, then M-U <= 24 bytes.", "The precise overhead on the wire is of more interest, as this is fundamental to the protocol. BLE gives you 20 bytes to play with, and a difference of a few bytes of header adds up in that context. Furthermore, as Angelo pointed out, we have customers to whom 8 bytes is too many already.", "Again, this should have been in the RFP if it is so important. That would have saved a lot of trouble. All we got was an evaluation criteria:", "Protocol overhead shall be considered when evaluating submissions. Submissions with smaller overhead are preferable.", "This is a miserably small set of criteria for a complex design space. Even you, ", ", say that protocol overhead is not as important as the design philosophy.", "Which I agree is fundamentally different between the two proposals, and that this is where the root cause lies in the failure to reconcile them.", "The RTI/TwinOaks/eProsima proposal is limited to providing a means for performing DDS operations remotely, and it don\u2019t see how it can do anything other than that.", "The RFP not-so-subtly pushes submitters in this direction. You cannot fault them for taking it at face value.", "I will read both submissions and when I do, I will report back with more technically-informed comments.", "Hello ", ",", "While this is true, the other submission has managed to define an object model as well, and in addition kept it close to the existing DDS one.", "And you see this as a positive aspect? Our model is simpler and more user friendly. For instance, how many people can digest DDS partitions? That said, we have a well defined mapping between XRCE resources and DDS topics.", "Since the submissions have not gone to the AB yet, as far as I know, then there should not be any official AB reviews, which suggests to me that RTI asked for unofficial reviews from AB members. This may be why they are not public?", "Are you an OMG member? If so I\u2019ll forward you the reviews. Both submissions went to the AB and the reviews were posted both on ", " and ", ". If you have access to those mailing list you\u2019ll be able to see them. I also recommend you take a look at those.", "I didn\u2019t catch that even once during the presentation. Next time, put such an important motivating factor in your slides. ", " RTI and co were much better at motivating their design decisions, and that put a positive spin on their submission.", "You probably also should have put that requirement in the RFP, if it\u2019s that important. The other submission cannot aim for a requirement they are not aware of.", "It was impossible as the other vendors did not want to agree on such a low bound. The 24 bytes was the least we could agree on. This is why there is an evaluation on wire-efficiency. This matters were discussed at length, but again I don\u2019t think you attended those meetings, thus you are missing part of the history and the context. In any case, all of those documents are on the OMG archives, thus if of interest you to reconstruct it. Just search for presentation I did on XRCE for almost a year. starting from 2015!", "That may have been RTI\u2019s reason, but the reason the rest of us present voted no is because we still have two vastly different submissions with no apparent readiness to work towards a single one. PrismTech even behaved in their presentation as if they are expecting RTI, Twin Oaks and eProsima to through away their submission and go with PrismTech\u2019s.", "Yes, that is correct as it is since the very beginning that we are trying to do a joint submission. They\u2019ve refused with futile arguments \u2013 if you ask me. We have put lots of effort to trying to join but that has not been corresponded. A pity that you were not in the Bruxelles meeting, otherwise you would have had a taste of it.", "Neither of these are required by the RFP. The RFP heavily directs the submitter towards the style of architecture that RTI/Twin Oaks/eProsima provided.", "Again, you did not attend the end-less arguments we had during the RFP drafting. RTI does not want peer-to-peer in XRCE because they fear it could become as substitute for DDSI-RTPS. Again, this is not something I am inferring, but something that was openly debated during the RFP drafting. We don\u2019t have any issue with that as we think that having a more efficient protocol than DDSI-RTPS for some use cases would be extremely useful.", "Yes, this is something that I was disappointed about. Hearing RTI\u2019s presentation talk about TCP/IP only seemed to rule out using it on things like Zigbee. But on the other hand, perhaps it\u2019s readily adaptable?", "For me that disqualifies completely the submission as in LowPAN environments nobody can afford to use TCP/IP\u2026", "It was very useful. I wish I had had this information during the presentation. I still have not had time to read the submissions in detail and unfortunately will not be able to do so before November, but fortunately we now have until February next year to try and resolve this situation.", "And, as ", " said, having code available would make a difference to how well we can judge things like implementation complexity. ", "I am glad that this helped clarifying the situation, please don\u2019t hesitate to ask any other question. Concerning the code availability we are working on that. I\u2019ll keep you posted.", "A+", "Dear All,", "I wanted to let you know that we have just released under Apache 2 a peer-to-peer implementation of our zenoh protocol called Zeno-He (Zenoh Helium). This implementation fits in about 1KByte of RAM and has 4 bytes wire overhead. This implementation not only is incredibly resource efficient but it is also blazing fast as it delivers incredible point-to-point throughput and low latency.", "The project website is available at ", " and the source code at ", ".", "We will be releasing a brokering system by the end of the year, likewise we be glad to help-out integrating zenoh as one of the protocols supported by ROS2. This could allow to bring ROS2 on micro-controllers!", "N.B. For those of you that are familiar with XRCE, zenoh is the protocol we are proposing for standardisation. But as the standard is not finalised yet, we will keep referring it as zenoh.", "A+", "Kydos,", "Thank you for publishing the Zeno-He library so we can all begin to interact with it.  It is especially useful for the ROS 2 user community to be aware of the effort since it implements the ATLab XRCE proposal.", "I know I would be extremely interested in someone benchmarking Zeno and the proposed epromisa XRCE implementation, and perhaps can find time to do that.", "This is really appreciated ", ", thanks for making this available.", "At present it\u2019s unlicensed code though (", ").", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["They believe that their proposal is more efficient in the wire protocol (trying to save every single byte possible), and supports brokered as well as peer-to-peer communication.", "They have invited the competing submitters to join the PrismTech submission.", "PrismTech believes that they have presented their final submission in Brussels (June) and so were expecting to vote for acceptance in New Orleans (September), but because there are still two competing submissions, and no final submission document was received (only a presentation), this is not possible.", "PrismTech\u2019s reasons for going forward with their own submission:\n", "XRCE tries to target the most wire/power/memory efficient protocol, targeting not just IP infrastructures but a whole range of infrastructures.", "Their submission provides reliability and fragmentation.", "Their current prototype runs on an 8-bit microprocessor with 1 KB of RAM and has a wire overhead of 4 bytes for data samples.", "They got a review from the AB which was favourable (only editorial comments), and they believe that the AB review shows that they satisfy all the mandatory requirements.", "\n", "XRCE applications can be brokered into a DDS data space, or they can discover one another and communicate P2P.", "Their submission is only about the protocol, it does not say anything about the API.", "A DDS-XRCE Agent running on permanently connected hardware provides the access to the rest of the (non-XRCE) DDS domain.", "XRCE provides a data space abstraction in which applictions can read and write data autonomously and asynchronously.", "Data read and written by XRCE applications is associated with one or more resources identified by a URI.\n", "An XRCE resource is a closed description for a set of named values.", "Resource URIs allow for wildcards, which means that more than one resource can be targeted in one definition, which is useful for capturing collections of sub-namespaces.", "A resource with a cardinality of one is called a Trivial Resource.", "Resources also have properties, which are used to attach QoS settings to them, such as \u201cthis resource is transient\u201d or \u201cthis resource is reliable\u201d.", "An XRCE selection is the conjunction of a resource and a predicate over the resource content and properties, used to filter a selection. For example, finding all lights with a luminosity greater than zero. (It seems to provide functionality similar to a very basic subset of SQL.)", "\n", "There is a mapping from XRCE resources to DDS topics.", "Resource serialisation uses the same format as DDS.", "All XRCE messages are a single-byte header and a body.\n", "There are flags in the header for reliability and synchronicity.", "Messages can be \u201cdecorated\u201d by prefixing them with a one-byte pre-header, which determines some of the properties for the following header byte, such as fragmentation.", "The protocol is little-endian.", "Variable-length encoding is used to save space.", "\n", "For addressing, the source address for each message is assumed to be a unique address of the sender.", "The protocol is modular, with a core profile (required for any communication), an optional query profile, and an optional discovery profile.\n", "e.g. If using a communications system like Bluetooth, which already has discovery, the XRCE discovery profile can be removed, saving some space.", "Discovery happens by scouting (sending a scout message to ask for types of nodes to reply, i.e. broker nodes or durability services or peers or clients).", "Other nodes reply to a scout with a HELLO message.", "\n", "After discovery, two nodes need to open a session, which enables publishing and subscribing between those two nodes.\n", "Authentication data is included in the session open message.", "Locator information, telling the other node how it can be reached, is included in the open message.", "The receiving node replies with an accept message or a reject message.", "There is an FSM describing the states a session goes through.", "\n", "Resources and selections are uniquely identified by numerical IDs to save space on the wire.", "A declare message is sent to declare what resources, selections, etc. a node has or will publish or subscribe to.", "Subscriptions can be push, pull, periodic pull or periodic push.", "All data messages and declarations are transported over a conduit (for the session), which is a pair of a reliable and a best-effort channel. Multiple conduits may be used in parallel to avoid head-of-line blocking and allow multicasting.", "One decorator is used to select the conduit for the next message.\n", "It is possible to make this decorator one byte instead of two if the number of conduits is less than five.", "\n", "There is a sync message available to set the next sequence number to expect (e.g. for when not starting at zero).", "The ACKNACK message can acknowledge multiple messages at once, usually up to the given sequence number. It has the option to optionally request retransmission of one or more messages after that point.", "There is a one-shot write function in the protocol, which can do a write of a resource without needing to do any prior registration or discovery.", "This proposal appears to be a very complex protocol with a lot of options in message header structures. An implementation would have a lot of choice points during the decoding of a stream of messages. The \u201cdecorator\u201d idea especially may save bytes on the wire (and in message construction buffers) in some cases, but it complicates the protocol implementation.", "PrismTech are already trying to bring their submission to market as a product.", "This proposal also uses an XRCE agent to provide access from DDS-XRCE nodes and the DDS domain.", "An important use case for them is that devices will tend to mostly sleep, and only wake up occassionally to do some processing, and send and receive data. This means that two devices may never be awake at the same time. This is why they have the agent, which is permanently present and provides a way for XRCE nodes to communicate with each other.", "They say that their proposal focuses not just on the XRCE protocol, but also on the interaction between the XRCE protocol and the DDS domain.", "It is possible for an XRCE agent to behave as an XRCE client to another agent, allowing for a hierarchical structure of agents and clients.", "Their proposal is based on the web-enabled DDS specification, with a DDS-XRCE object model in the agent that has a one-to-one mapping to the DDS data model.", "eProsima have put up a demo on Youtube: ", "\n", "Their demo uses 43 KB of RAM (much bigger than the PrismTech proposal, which can fit in 1 KB).", "The XRCE Agent object model is very similar to the DDS object model, making the mapping very simple.", "XRCE objects are modeled as resources that are addressable by their name and have CRUD operations.\n", "Each resource has a name to address it within the agent and a context; a representation describing the resource; and an ID.", "Resources can be represented as a name, an XML description, or a binary representation.", "\n", "Authentication capability is built into the proposal.", "Types are typically pre-defined profiles in the XRCE Agent.\n", "It is possible to transmit types as binary or XML representations.", "\n", "Message structure:\n", "A message header is either 4 or 8 bytes, depending on if a clientKey is used.", "There is a sub-message header, which is another 8 bytes.", "It is possible to send data in a sequence, meaning the header only needs to be sent once for a bunch of samples.", "\n", "The transport can be message-oriented or packet-oriented.", "CDR and DDS-XML representations are reused.", "Message overhead is typically 12 bytes.\n", "They consider that further reduction in overhead would increase complexity and reduce robustness. e.g. They do not need different code paths for multiple sessions, re-connections, handling variable-length encoding.", "They say it compares favourably to TCP/IP overhead (40 bytes).", "They think they could save 6 bytes from their message header, but the reduction is only 6% in the context of total overhead (when considering the use case of using TCP/IP as the underlying transport protocol) and so is not worth it in the face of increased complexity.", "\n", "They also received 3 AB reviews, which they claim were supportive and did not find any non-editorial problems.", "The submissions are very different. PrismTech is aiming for cutting down the bytes used by the protocol to the absolute minimum at the expense of all else. RTI/eProsima/TwinOaks are favouring some overhead in order to achieve a simpler and more robust protocol and implementation.", "PrismTech\u2019s protocol is overly complex with too many choices during the decoding of a message.", "The extra overhead of the RTI/eProsima/TwinOaks submission is not likely to be a problem in the majority of embedded micro-processors used these days (although I\u2019m not sure how many 8-byte, 1KB-of-RAM micros there are in use in new products). However, their consideration that TCP/IP is going to be the most common transport may not be accurate.", "Dynamic Discovery (RTI does not, please read their spec!)", "Peer to Peer Communication (RTI does not)", "Client to Broker Communication", "Non IP Transports (RTI does not)", "Generalised Queries (RTI only supports DDS-like queries)", "Push/Pull/Periodic-Pull and Periodic-Pull Readers", "Unicast and Multicast communication \u2013 for both client to broker and peer-to-peer", "Durability", "The view ", " provides is a) unbiased, b) the view of a roboticist (that\u2019s what this community is about ", " ! )  and c) based on the information someone got from hearing \u201cyour presentation\u201d. Note the following:", "I believe we all appreciate technical argumentation and slides. I love slides. But what I love even more is code and things that I can reproduce. How can I verify your arguments through experimental results? Is there any open code that supports your arguments? More than bashing around, i think it will do a lot of good to facilitate implementations that others can reproduce in common platforms. Even early stages will do. You might find that you could even get some support (and feedback!) before launching it officially and furthermore, that\u2019ll definitely convince a lot of people on why your approach is better.", "Last but not least, I really hope that the passion you\u2019ve shown answering this thread is shown by supporting and making OpenSplice better.", "Propose a familiar model to the final user, making use of the DDS object model and specifications: Serialization (CDR), representation (XML-DDS), and some ideas of WS-DDS mapping", "Neither the protocol or the API is designed to save every possible bit, but to have something robust, flexible and easy to use."], "url": "https://discourse.ros.org/t/ipc-in-ros2/2619"},
{"title": "ROS 2 Collaboration Bulletin Board", "thread_contents": ["Let everyone know by posting here!", "Ask here!", "Thanks!", "This thread is meant to be a place where people can announce what they\u2019re working on so that people working on ROS 2 related things can find one another.", "We\u2019ve seen that different groups who are experimenting with ROS 2 are duplicating work and don\u2019t know about one another, so hopefully this thread will be useful for discovery within the community.", "Hopefully it will also be useful for people to find out what others have already done and where development is focused at the moment.", "I\u2019d like to try and keep some ground rules for this thread to keep it succinct and browsable. We\u2019ll see how it works out and adjust if necessary.", "Hopefully these rules will keep this more of an announcement bulletin board like thing, rather than pages on pages of memoranda.", "I\u2019ll probably be moderating (removing comments, sticky-ing things if I can, and/or updating this top post) to help keep it easy to consume.", "Thanks!", "I\u2019m working on rviz for ROS 2 by refactoring rviz from ROS 1 into parts and replacing ROS 1 specific parts only with ROS 2 ones. Here\u2019s my plan:", "I know some other people have already been working on this, so if you are let me know and hopefully we can work together on it!", "I have been working on porting many packages which I will organize into various groups. All of the following packages are linked with more detail ", ". Some of the packages were ported merely to a compiling state and have not been properly tested.", "As recommended by ", " and OSRF, I plan to submit upstream PRs for each of these packages in the coming days.", "I am in process of combining my own changes with those of ", " so these link to the (soon to be) combined repos.", "I was looking to see the level of difficulty of getting rqt tools working and ported all the packages necessary to get rqt_dep to an initial working state.", "I\u2019ve also been porting ", ". My approach is not as thoughtful as ", "\u2019s approach: I removed all plugins and am adding them back in one at a time. So far I have: tf, map, and laser scan to some level of functionality.", "One of my main motivation in doing this was to avoid needing to publish OccupancyGrid\u2019s through the ros1_bridge.", "How well has actionlib been ported? I\u2019m interested on working on that, but in a more improving-not-just-porting way. Specifically, I want to make actions a first-class citizen (like messages and services) and write up a REP that specifies how they should be defined and used, so that tools can be more certain about what they are dealing with. It would be great to have an \u201cofficial\u201d rosaction tool, for example, and to not see 5 topics when I list the currently in use topics.", "It\u2019s on the near term roadmap, but we haven\u2019t started it yet.", "We will likely release  an overview (maybe as detailed as a design document?) in the near future describing how we expect actions to look like in ROS2. Regarding a rosaction tool (for ROS1), there is ", " discussing what the feature set of such a tool would be. We could use the ideas in that ticket as a base for a ", " tool in the future. Feel free to pitch ideas there!", "Do you have a draft of that overview available yet? If not, would you like me to start working on one?", "I think if all the guys work on ROS2 github, everyone can contribute to the community and easy to know the progress and synchronize the patch.  If everyone fork one branch to develop , someone don\u2019t know this web page. It will result in many duplicated work.", "\nContributing to ROS 2 github, it would also make developer feel the ROS2 community very active and open.", "\nAll the above , just my suggesiton:slight_smile:", "We try to keep things on the ros2 github repository (at least for now), but not everyone has the permissions to create things there, and not everything belongs there. Since all administration of the organization has to go through the owners of the org, sometimes it is easier and more appropriate to have them on a different organization.", "I consider this an alternative way to notify people of what your working on, not mutually exclusive with pushing things to the ros2 org.", "This is great. How close is this to us being able to bag and playback data without needing the bridge anymore?", "I haven\u2019t done any work on rosbag or playback, so that is entirely unimplemented and not working.", "As for not using the bridge, you can run rviz using ROS 2 and make use of several of the plugins to avoid having to pass data through the bridge. Some of the interesting working plugins are: tf, laser scan, map, and robot model. Others (odom, path, point) may work but I have not tested them.", "Note that to use the robot model plugin it requires a change to the robot state publisher to publish the robot model (see this ", "). I just created a ", " for these changes.", "You said you got tf working to some level of functionality.  We have been running into issues when querying for transforms with lookupTransform.  We query for a transform at a given time, and we always get a transform back that does not match the time stamp that was asked for.  It is anywhere from a few milliseconds behind to 4 seconds ahead of the timestamp that was asked for.  The error actually cycles through from being a bit behind to far in the future.  Did you run into this when you were getting tf to work?  I would give more detail (code, etc.) but did not think this thread was the right place.  We can continue this discussion elsewhere if you have any thoughts that could help.", " If you can reproduce it and believe that it\u2019s a bug please open a ticket and we can dig into it there. ", "Edit: Actually you\u2019re ahead of me, I see the ticket at ", "What is the status of this work? Did you submit this PR? I am mostly interested in diagnostics.", "Haven\u2019t had time to work on any of this recently. ", " created a PR a couple weeks back to update diagnostic updater to work with ros2 ardent (and updated the urg packages as well). The other diagnostic packages have not yet been updated.", "I just created ", " to make the ros2 changes more visible and eventually get them merged into a single repo.", "Hope this answers your question.", "Hi,", "I have been working on ROS2 nodes for the Raspberry Pi camera (a.k.a. raspicam) and the AprilTag detector. Both are implemented as components and are therefore composable for intraprocess communication.", "I am open for all contributions and also don\u2019t mind if the packages get moved to official ros2 groups like ", " or ", ".", "ROS2 node for camera module of Raspberry Pi. Contribute to christianrauch/raspicam2_node development by creating an account on GitHub.", "This is a port of the original ", " from ROS1.", "ROS2 node for AprilTag detection. Contribute to christianrauch/apriltag2_node development by creating an account on GitHub.", "The implementation uses the original apriltag2 library from ", ". For integration with ament workspaces, I am using a CMake version of this library: ", ".", "Given the camera parameters, ", " computes the pose of the marker in the camera frame. It also publishes the raw detections (including the quality of the detection for filtering) and therefore depends on ", " definitions from ", ".", "Hi, I have already ported the ", " which is necessary for ROS2 image processing in the perception applications with OpenCV, and I am trying to upstream it to hopefully benefit more ROS2 users, please let me know if you find any problems, thanks !", "Here is some update to the ros2 cv_bridge, now ", " has been officially upstream to the original ros-perception vision_opencv with a dedicated ros2 branch, please submit/fix issues there when you find to make it benefit more community users from now on, thanks a lot !", "Hi,", "\nCan anyone update me regarding the porting of message_filters to ros 2 environment ? I will be happy to take up this task.", "Actually, we have been porting the message_filters to ROS2, however, you know, it has some dependency to C++ Boost in ROS. now it works except for keeping its Boost dependency in ROS2, next to clean its dependency of Boost with the way in C++11/14, I think it\u2019s good if you would like to help, maybe ", " can update you for more details.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Try to only post once per project/effort, and link to a another discourse post or GitHub issue to continue in depth discussions\n", "Update the first post (rather than post new comments with updates) if you want to keep current details there", "\n", "Feel free to express interest in a topic or in porting a ROS 1 feature/package or to ask if anyone else is already working on it, but try to keep the back and forth short, preferring to split off into a separate Discourse thread or GitHub issue once you\u2019ve connected with one another.", "Try to avoid long discussions about unifying overlapping efforts, preferring to create a new discourse thread instead, linking to it from this thread.", "Before asking if a feature is in ROS 2, check the announcements, Roadmap, and Documentation first. You should not use this thread for a casual \u201cdoes ROS 2 do X yet?\u201d. Only post here if you\u2019re pretty sure it\u2019s not in ROS 2 yet, but you\u2019re interested in helping make it happen and looking for peers to work with.\n", "\n", "\n", " (also see ", ")"], "url": "https://discourse.ros.org/t/ros-2-collaboration-bulletin-board/2239"},
{"title": "Discussion on Rviz rewrite", "thread_contents": ["Forgive me if I\u2019m late on the game on this.  But were there discussions in the past about how to proceed with Rviz in ROS2?   I tried Googling around to see if there were past discussions about breaking from Ogre in an Rviz rewrite but I haven\u2019t found anything.   Any insight or pointers would be welcome.", "I\u2019m mostly curious as to why it seems that rviz is being rewritten again using Ogre (at least it appears) and QT, rather than let\u2019s say Unreal, which is largely OS independent and already supports QT/OGRE combined functionality in a supported framework.  But unreal also supports AR and VR tools along with many other widgets and plugins.  I realize Unreal has a custom license based on a royalty for commercial applications (they assume games), but they will customize that individually, and might provide a ROS community license if it\u2019s in their interest to move into a new domain?", "I\u2019m not trying to stir up trouble, I\u2019m just curious, as my company desperately needs a fully functional Rviz replacement to move our commercial manipulation stack to ROS2 (which would hopefully then be released publicly as a ROS2 alternative to MoveIt!).  As of now, I either need to wait on Rviz development for ROS2 to get to the ROS1 level of functionality (waiting is not really an option for my customers) or write something myself.  In thinking about forking/writing Rviz functionality myself , it seemed odd that the new Rviz would not have had some documented discussions on whether to use a newer framework other than Ogre that facilitated faster development and easier cross platform deployment.", "Links to previous discussions / tickets I could find:", "As ", " already linked to, this discussion happened on the ROS 1 rviz repository:", "That issue needs to be updated (it\u2019s on my todo list), but since we were not planning on a \u201cfrom scratch\u201d rewrite of rviz, I decided to stick with Ogre, since none of the other options gave us much immediate benefit (from my perspective) and I estimated that it was a lot of work to replace Ogre.", "What we did do during the port of rviz for ROS 2 (here: ", ") is we tried to abstract all calls to Ogre behind one rviz API or another, so that in the future we could hopefully replace Ogre with a newer version of Ogre or some other toolkit.", "I say \u201ctried\u201d because there were some quite deep integrations with Ogre, especially in the selection tools and interactive markers, and also many of the third-party displays also use Ogre directly. So some things have been abstracted, but others were deemed too complicated to do for now. So if we wanted to remove Ogre, then we\u2019d have to first finish those abstractions or rewrite the non-abstracted code in the new system.", "Sure I understand the desire to not want to rewrite from scratch.  Let me state the other side as I see it.  If you were to redo Rviz using three.js or Babylon.js, then you eliminate any need for third party apps as a browser becomes your 3D rendering environment.  Of course adding plugins and other Qt-style", "\nMenus means people have to write Web apps, but In some sense that\u2019s easier for certain individuals.  Also, the open source communities behind these webgl platforms is large so perhaps it might spur more outside (of OSRF) development from people that are intimidated by Rviz.", "I realize that I have changed from the original Unreal/Unity approach I mentioned at the start of this thread to a webgl approach, but this is in response to any licensing issues with Unity or Unreal (though for free/open source, I don\u2019t see any real challenges with Unreal or Unity either).", "I realize that bringing these issues up now (rather than a year ago) might not be helpful, but we are trying to plan how to make th Ros2 jump in the near future without the Interactive Markers and other Rviz tools that our navigation and manipulation frameworks are built on top of.  We need to replace those with something.", "A complete rewrite is rarely a good idea. If you want a web-based RViz then just write a new one, no need to throw away everything that has been developed in the last 10 years.", "I also don\u2019t think that web apps are the solution for everything. From my personal experience, I can say they are a lot harder to develop for non-web-developers than Qt/C++ or Qt/Python applications. As ROS is used quite a lot in academics and starting to get used in the industry, where Qt is the dominating GUI framework, I would not like the decision to move to the web.", "However, I agree that Ogre is not perfect. three.js, for example, could also be used in combination with Qt. Did you know that the Qt guys are already working on several methods to support web browsers? If that is what you are looking for google Qt WebGL rendering and Qt WebAssembly.", "Well, we can have a quite deep discussion about the reasons for using Qt compared to web applications here, but I don\u2019t think they would lead to something. My personal preference is Qt because I work on industrial HMIs, if you work on something more consumer-focused then probably web apps would be your choice, long-term support and consistency are key in industrial environments.", "Unity or Unreal are probably not a good fit for an open source software project altogether. But I may be wrong here.", "I\u2019ve written a couple of industrial HMIs recently as well, which may be why I am looking for anything other than Qt ", "I realize that I have changed from the original Unreal/Unity approach I mentioned at the start of this thread to a webgl approach, but this is in response to any licensing issues with Unity or Unreal (though for free/open source, I don\u2019t see any real challenges with Unreal or Unity either).", "Actually both Unreal and Unity would be unsuitable for rviz in my opinion (and unnecessarily sophisticated). Unity is not open source, and a that\u2019s deal breaker for us, since we want a fully open source stack for our user space software. And Unreal because even though it claims open source, they have restrictions on distribution of source and binaries (no matching OSI license for that), as well as commercial use and would potentially prevent someone from producing a product with rviz embedded without needing to pay royalties or something. And that\u2019s a feature of the BSD license we\u2019ve chosen and want to preserve.", "I did consider VTK and Qt3D, however. I think both are in the right range of compromise: open source, easier to use than plain OpenGL, not a full blown game engine (we don\u2019t need to simulate water or physics in rviz, perhaps Gazebo but not rviz).", "Any ways we\u2019ve had that discussion on the rviz issue. Ogre is still ok for now (I\u2019m not sure what limitations it has that rviz needs to overcome), my biggest concern for Ogre 1.x is support lifetime since the main Ogre team has moved on to Vulcan/Metal based Ogre 2.x. But that\u2019s why I started abstracting in the ROS 2 work.", "If you were to redo Rviz using three.js or Babylon.js, then you eliminate any need for third party apps as a browser becomes your 3D rendering environment. Of course adding plugins and other Qt-style", "\nMenus means people have to write Web apps, but In some sense that\u2019s easier for certain individuals. Also, the open source communities behind these webgl platforms is large so perhaps it might spur more outside (of OSRF) development from people that are intimidated by Rviz.", "If you want a web based solution, there can be both, and there is. You could consider porting robot web tools (", "), which had a rviz clone called ", " I think. OSRF doesn\u2019t have to initiate every project that\u2019s possible ", ". I think a web based solution will not replace the desktop application written in C++ (for now) since performance is a key feature of rviz (not saying 3d is slow in the browser, but pub/sub, serialization, and transforms have been issues for rwt in the past due to JS being slow). Maybe with enhancements to the WebAssembly sandbox it might be possible at some point to replace the desktop app. But that\u2019s too risky to try instead of porting the existing rviz right now. If we had more resources I\u2019d definitely love to try.", "we are trying to plan how to make th Ros2 jump in the near future without the Interactive Markers and other Rviz tools that our navigation and manipulation frameworks are built on top of. We need to replace those with something.", "Your absolute quickest and least effort option for that is to contribute to the rviz2 port. It has everything ported except some of the displays, and the effort of porting most displays is relatively low. Interactive markers might be a more considerable amount of work, but there\u2019s no other option that would be less work in my opinion.", "I\u2019ve written a couple of industrial HMIs recently as well, which may be why I am looking for anything other than Qt ", "I guess it depends on your use case, but I don\u2019t have any issues with Qt productivity wise, and it seems like a good option (not sure what your particular issues with it are). It also just got an ISO 26262 option for those industrial users who need that sort of thing and are willing to pay for it:", "How to build functionally safe embedded devices with Qt and Qt Safe Renderer.", "Can you please elaborate on this? Have you used Qt Widgets or QtQuick?", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", " in ", "\n", "the ", " issue on ", "\n", "discussing AR and VR in RViz 2 / ROS 2: ", "\n"], "url": "https://discourse.ros.org/t/discussion-on-rviz-rewrite/4965"},
{"title": "ROS2 Real-time Working Group Online Meeting 2 - Aug 21st, 2019 between 7AM and 8AM PDT (UTC-7)", "thread_contents": ["Hi all,", "\nthis is a call for our 2nd ROS2 Real-time Working Group meeting:  Aug 21st, 2019 between 7AM and 8AM PDT (UTC-7).", "I would like to propose the following agenda constructed from the action items of the previous meeting: ", "[10min] Create an rmw implementation which works for a single process. Once that works connect with the underlying data link (e.g. TSN). Measure: malloc/realloc calls, page faults, context switches, memory consumption, blocking calls, \u2026 RTI Connext Micro is a suitable DDS implementation for something like this due it its staticity and intra-process communication feature.", "[10min] Performance testing on target hardware", "\n", "[10min] Invest in the tools for static and dynamic code analysis and tracing and carefully scan the code.", "[20min]", "[10min]", "Document current state of the art. Someone remarks that there were still mutexes used in e.g. rmw or rclcpp. Memory is still being allocated/de-allocated when receiving messages.", "LMK if you agree with the agenda and if you can join.", "D.", " ", " ", " ", " ", " ", " ", " ", " ", " See above.", " ", " ", "  ", " ", "   see above.", "One remark - regarding the following action item:", "Looks good. Can you also please share the meeting link.", " ", " will join, possibly ", " too", " and I are also interested in joining this meeting. We have been looking at the current implementation of the SingleThreadedExecutor to investigate the high CPU overhead. We have an ongoing discussion here: ", " . As a first step we are starting work on creating a static version of the executor to investigate how much performance can be gained (POC). We think this is a separate issue from the scheduling \u201cproblem\u201d discussed in Tobias\u2019 work. Both issues are important to us and probably to others who want to run a \u201cnormal\u201d ROS2 stack on an embedded board.", " I\u2019d like to join the WG as a listener for the time being", "[20min]", "Yes, that should be enough.", "As a first step we are starting work on creating a static version of the executor to investigate how much performance can be gained (POC). We think this is a separate issue from the scheduling \u201cproblem\u201d discussed in Tobias\u2019 work.", "Very nice work on the CPU overheads!. I agree that the two problems are not related.", "I\u2019d like to join, thanks for taking care of this thread.", "tomoya", "Hi ", ",", "Is it the same Zoom meeting like last time?", "\nI\u2019d like to join it.", "Kind Regards,", "\nAndrei", "We might want to spend some more time thinking about this, before someone goes off and starts on it. I\u2019m not sure 10 minutes is enough here \u2013 maybe have it as the main topic of an upcoming meeting?", "I think there might be a connection to tracing here\u2026 Just saying ", "[10min] Invest in the tools for static and dynamic code analysis and tracing and carefully scan the code.", "\n[\u2026]", "\n4. ", "In principle yes, but I\u2019m not available on the 21st of August, as I\u2019m on vacation. Let\u2019s connect afterwards.", "Hi all,", "\nthe meeting details are here:", "Topic: My Meeting", "\nTime: Aug 21, 2019 07:00 AM Pacific Time (US and Canada)", "Join Zoom Meeting", "\n", "Zoom is the leader in modern enterprise video communications, with an easy, reliable cloud platform for video and audio conferencing, chat, and webinars across mobile, desktop, and room systems. Zoom Rooms is the original software-based conference...", "\n", "One tap mobile", "\n+16699006833,264081213# US (San Jose)", "\n+19294362866,264081213# US (New York)", "Dial by your location", "\n+1 669 900 6833 US (San Jose)", "\n+1 929 436 2866 US (New York)", "\nMeeting ID: 264 081 213", "\nFind your local number: ", "We might want to spend some more time thinking about this, before someone goes off and starts on it. I\u2019m not sure 10 minutes is enough here \u2013 maybe have it as the main topic of an upcoming meeting?", " Dejan_Pangercic:", "Yes - we absolutely should not do this without the proper design document.", "I think there might be a connection to tracing here\u2026 Just saying ", " Dejan_Pangercic:", "Correct. Added.", "In principle yes, but I\u2019m not available on the 21st of August, as I\u2019m on vacation. Let\u2019s connect afterwards.", "OK.", "This is the same time as an AWF board meeting so I may or may not be able to join. Don\u2019t wait for me if I\u2019m not there.", "I would like to join.", "Sincerely,", "\nKosuke", "Sorry guys I was stuck on a plane while this meeting was happening and I only just got clear. Are there any meeting minutes for this?", "David", " Can you please share MoM or meeting recording", " and all:", "\nhere the recordings of the 2nd meeting (I will follow-up with the short transcription tomorrow):", "Topic: 2nd ROS Real-time working group meeting", "\nStart Time : Aug 21, 2019 06:51 AM", "Meeting Recording:", "\n", "Hello,", "\n", "\nI would like to join this group and attend the next meeting please.", "Thank you,", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", " : find someone that will lead this work.", "\n", "\n", "\n", " (Jaime, Miguel) or", "\n", " (Eric, Joe)", "\n", " also volanteered", "\n", "\n", "\n", "\nThis is the topic that I am adding in addition and it was originally proposed by ", ". The proposal is to create a buildfarm with couple of select computers (ECUs) on which to run the ", " and measure performance regressions. ", " realized that several parties are trying to work on this (Amazon, iRobot, Apex, eProsima, Open Robotics, \u2026)", "\nWe would need to figure out the following:\n", "target HW => could Amazon host?", "target (RT)OS => Linux with RT-PREEMPT, QNX, VxWorks, \u2026", "how to automate flashing of (RT)OS and provisioning of DDS, ROS 2 and ", " => Apex works on this", "how to configure and automate running of ", " in a clean environment => Apex works on this\n", "how to run ", "\n", "\n", "how to store the results => Apex works on this", "how to visualize the results (e.g. ", ") such that we can compare historical runs, view results for different configurations of HW, RTOS, DDS, ROS 2 => ???", "which additional metrics do we want => ???", "\n", "\n", "\n", "\n", "  create a shared repository for above tools. Bosch will e.g. open-source their integration of LTTng in ROS2. Silexica is integrating they dynamic analyser.", "\n", " ", "\n", "\n", ": ", "\n", "\n", "\n", "\n", "implement real-time pub/sub (either using Waitset or modified Callback/Executor)", "\nWe briefly scanned through the paper by Bosch: ", ".", "\n", "\n", " : present the paper in detail in one of the next meetings.", "\n", "\n", "\n", "perform memory audit in rmw, rcl and rclcpp (remove unneeded memory allocations)", "split memory allocation in init and runtime phases, avoid memory fragmentation", "remove all blocking calls (or replace with timed calls, e.g.  ", "  vs  ", "  )", "\n", "\n", "\n", " : get William to present his findings", "\n", "Propose a use case => requirements => architecture => hardware", "Proposed canonical use case: a vehicle/robot encounters an obstacle and has to stop safely for it", "Proposed other use case: autonomous driving", "\n", " : Dejan to provide a use case description and requirements", "I did not have time to provide this. ", " and one of our engineers are working on this however.", "implement real-time pub/sub (either using Waitset or modified Callback/Executor)", "\nWe briefly scanned through the paper by Bosch: ", ".", "\n", " : present the paper in detail in one of the next meetings.", "[10min] Create an rmw implementation which works for a single process.", "[10min] Performance testing on target hardware"], "url": "https://discourse.ros.org/t/ros2-real-time-working-group-online-meeting-2-aug-21st-2019-between-7am-and-8am-pdt-utc-7/10279"},
{"title": "Feature Request: rclcpp publisher/subscription work without IDL when intra process", "thread_contents": ["Hi All,", "\nI want to ask if we could support publisher/subscription work without IDL when intra process?", "\nBecause producer-consumer is a very popular coding model, and we want to use publisher/subscription to implement it to transport any type of message when intra process, in which situation the publisher could not support remote subscription.", "Excuse my ignorance, but what is it exactly that you want to do and why is it currently impossible in ROS2? I think I require some more clarification w.r.t. IDL and why it prevents the producer-consumer model. Can you elaborate more, maybe with a simple example / use-case?", "In case this subject is completely over my head, I think ", ", may be able to help with this. He was involved in making changes to how intra-process currently works in ROS2. It\u2019s more likely he will understand what you are talking about / trying to do ", "Thanks for quick reply!", "\nYeah, the current ROS2 support IDL msg type Publisher/Subscription, but it requires a IDL file.", "\nAnd this way prevents us to use it easily\u2026 like:", "\nnode1->create_publisher", "()", "\nnode2->create_subscription", "()", "Indeed, from rclcpp code source, I don\u2019t see what the IDL for when intra-process. We want use publisher/subscription for any type easily without any IDL file\u2026", "How would you imagine this to work without an IDL description of the message content? Will you just pass a pointer to shared memory or an address between the publisher and subscriber? You would then still need to tell the subscriber what it is receiving right (size of the data, type, structure)?", "I think it is easier to just fill an existing message type with the data of cv::Mat() and on the other side unpack it and store it back into a cv::Mat() object. Or if existing message types don\u2019t fit your data-format you could create a custom message to handle it.", "Or am I misunderstanding what you are trying to do?", "In intra-process, the publisher will pass the Message pointer to subscriber, no pack or unpack needed.", "\nOnly needed is the unique_ptr or shared_ptr of message and its copy method.", "The feature you are talking about is often referred to as ", "It\u2019s already in the roadmap, but I don\u2019t think that it will be part of the next release (unless someone steps up and implement it).", "More details here", "\n", "Thanks for your reply!", "\n\" So conceivably you could have the image pipeline with a single  ", "  which never gets copied by the middleware. To do this requires some additional intelligence in the intra process manager, but we\u2019ve already got a design and some proof of concepts in the works.\"", "\nDo you have some design draft that can be shared with us?", "\nI modified the rclcpp code a little, let intra-process publisher/subscription with native type don\u2019t go into rmw layer, now it can transfer pointers, but the problem is the executor/trigger/callbacks are implemented in rmw layer\u2026  So I hope to see a better design ", "There are changes planned to the executor design for the Foxy release, you could voice your request (or an offer to help) to the people involved with that. The interest in a new design was to some extent kick-started by this discussion: ", "(which I was part of).", "I don\u2019t know exactly where the follow-up discussion is taking place, but if you feel like you have useful input to the discussion you could try contacting some people (I\u2019m pretty sure wjwwood is involved).", "Although, I\u2019m also pretty sure they will see this thread ", " so no immediate action is necessary. Just depends on how pro-active you want to be and how soon you will need this feature.", "Thanks, this is very helpful!", "Perhaps I am not understanding but can you not just make a string message and pass the pointer as a string through intra process shared memory?", "Emmm, maybe the purpose is not passing a pointer, but use the publisher/subscriber to implement the producer-consumer model of any type data.", "There are few tangled things being discussed in this thread, I\u2019ll try to reply in line to separate them and describe what is possible and what is planned.", "I want to ask if we could support publisher/subscription work without IDL when intra process?", "Currently that is neither possible nor planned, but I should emphasize that I specifically mean the ", " part. More below.", "Because producer-consumer is a very popular coding model, and we want to use publisher/subscription to implement it to transport any type of message when intra process, in which situation the publisher could not support remote subscription.", "This is also not currently a goal for us (or at least for me and as far as I know my colleagues and our partners). That doesn\u2019t mean \u201cnever\u201d, it\u2019s just that I don\u2019t think we plan to have it.", "Inherent in our communication system is really three things, not just pub/sub but also discovery and serialization/deserialization. The discovery is just convenience and helps with composition and reusability. The (de)serialization is used not only for network (inter-process) transport but also for recording and playback.", "We require a type to be defined by IDL mostly for the serialization part. For discovery we could just have a type \u201cname\u201d which could be made up and just agreed on by both sides. The type doesn\u2019t really influence the pub/sub part, especially at the intra-process level, except to ensure the two communicating end points are using the same type.", "For these reasons we need to at least associate a type with an equivalent IDL type. As pointed out by ", ", this is what we (I) refer to as ", ", i.e. you define a relationship between a user type and an IDL type which allows the user type to masquerade as the IDL type in all of our APIs.", "We don\u2019t yet have type masquerading in ROS 2, but we did have it in ROS 1. We plan to implement this, but the changes go far beyond changes to the Executor in rclcpp.", "However, in both cases, ROS 1 and our ideas on how to do it in ROS 2, you still need a ROS type defined in IDL, in case the user wants to record it to disk or send it over the network.", "We don\u2019t have plans to support \u201clocal-only, non-recordable\u201d pub/sub. Requiring a user to associate a user type to a ROS type is a lot of work, but in ROS 1 it worked well as we provided existing mappings for commonly used types like ", " and ", ", and that was enough. This has the added benefit that users may remotely introspect any publisher, even if normally it is local only and never serialized. As well as the ability to record instances of them to disk.", "And this way prevents us to use it easily\u2026 like:", "\n", "\n", "As I said above, something like this could be possible (though ", " lacks some information that the ROS image message has, e.g. timestamp), but the pcl types are supported, see:", "Indeed, from rclcpp code source, I don\u2019t see what the IDL for when intra-process.", "It\u2019s always possible for a remote subscription to come up and that case has to be handled, so there is no case currently where it is only intra-process in ROS.", "Do you have some design draft that can be shared with us?", "Unfortunately I don\u2019t think there exists such a document at the moment.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/feature-request-rclcpp-publisher-subscription-work-without-idl-when-intra-process/12016"},
{"title": "Keys in msg", "thread_contents": ["Most of the DDS vendors support the idea of a primary key in their message structures. Have we discussed enabling that from the ROS msg format? What are the issues here? A \u201ckey\u201d keyword seems fairly straightforward.", "We\u2019ve discussed it before, but it\u2019s largely seen as overlapping in functionality with topic namespaces.", "If you have a use case that is made possible with keys, then that would be interesting to hear about it.", "However, there are quite a few little details for implementing the key field which are not straightforward to me, like:", "Probably other things I cannot even think of now. So unless there is a big use case which is not possible with namespaced topics, I think we\u2019d probably not expose it.", "I just found this discussion when looking for keyed topic support.  At Houston Mechatronics we have been using a long ago branched version of ROS2.  We are now moving to Ardent and saw that keys still aren\u2019t there.  We use keys for several different things.  One of the things we have implemented is a parameter server purely in DDS which uses keyed topics so there is only one Parameter topic.  The key is the name of the parameter and the value is in the other part of the topic data.  This gives us great flexibility with the underlying DDS software because it handles the history.  If I put my history at keeping only 1 the DDS vendor software we are using (RTI) will intelligently give me the last of each instance of the key.  I only need to worry about one topic, but I can get all of the latest values and nothing else.", "RTI at least has suggested using keyed topics as one of the primary ways to efficiently use DDS in numerous parts of our system.  We\u2019ve had to fork rosidl and rosidl_dds to have this DDS feature on our end.  It supports the RTI version of keys in IDLs, but something similar could likely be extended for the other vendor solutions if they differ.", "Using keys for this use case has one drawback. Keys are not \u201cintrospectable\u201d without receiving the actual data. You can\u2019t answer the question what parameters exists - without actually receiving all the parameter values first.", "So if you would like to implement a user interface which should show the name of all parameters you can\u2019t do that efficiently. Imagine some parameters contain large data but the user only wants to see the names of all parameters and then decides to get only the \u201csmall\u201d value of one of the parameters.", "We\u2019ve been talking at length to RTI about this topic as well as some of the other vendors, and they suggested two concrete ways of using keys in ROS 2:", "For the first point, I think we decided that this would be very difficult to do correctly and efficiently. There are a lot of technical points as to why, but ", " alluded to one which is that keys are not part of discovery, so something like ", " becomes a lot less useful.", "In the end, we imagined a new feature that DDS could have which provides the performance benefits of ", " which you get when using keyed fields on a topic, but without having to have the key itself in the message definition. This new kind of key is something between keys and partitions, or another imperfect analogy is partitions which create instances. This is by no means a sure thing to happen, and even if it did we\u2019d have to wait on the DDS standard to add it and adopt it. But what I took away from it is that: keys are not ideal in all cases and we would love to use instances to reduce overhead and discovery traffic but not at the expense of requiring key fields in our messages.", "For the second point, there\u2019s no reason (as long as we\u2019re not using keys under the hood) that we could not allow users to use keys in their own way, perhaps in the way you described. The only hesitation we had was that this is a sophisticated feature, which really ties our API to DDS much more strongly. To be clear, we don\u2019t intend to support anything other than DDS for the foreseeable future, but we did take a lot of care to insulate our robot specific code from the communication system underneath. Perhaps this is not a realistic abstraction, but in our reference implementation of ROS 2 we\u2019re trying to provide it. Therefore, we\u2019re (or at least I am) wary of taking more and more complicated features into our middleware abstraction layer (rmw, see: ", "). It\u2019s not a deal breaker for key fields as a feature of ROS 2, but a consideration we have.", "To disagree or correct my self, I previously said:", "So unless there is a big use case which is not possible with namespaced topics, I think we\u2019d probably not expose it.", "I can now express a use case where keys would be much more efficient, which is the case of the parameter events topic.", "I\u2019m speaking here about parameters as described for ROS 2, see: ", ", where they are decentralized and owned by nodes, and there is no \u201cspecial\u201d centralized parameter server. Global parameters are realized with a node that has a conventional name (like ", ") and accepts all changes.", "So, every node publishes to the \u201cparameter event topic\u201d anytime a parameter it owns is changed (", "), then a tool can subscribe to the topic and monitor all changes to the parameter system.", "Now, this could either be \u201cevery node publishes to the same ", " topic\u201d or \u201cevery node publishes to its own ", " topic\u201d. The benefit of the first is that a tool that wants to monitor all changes only needs to subscribe to one topic (this is the same use case as ", ", many producers, one consumer of all producers). However, if you want to monitor one node, or only a few nodes, then you need to receive all the data and discard what you don\u2019t want, which is inefficient. For that use case, the second option is better, since you can subscribe to only the nodes you want to monitor, but is very inefficient if you want to monitor them all, because you need to subscribe to N topics, where N is the number of nodes with parameters.", "This is a perfect case where keys are optimal, because it gives granularity but also efficiency when doing a mass subscription. However, I think simply exposing the keyed fields feature would allow us to do this, we don\u2019t need to put it under the hood of our namespaced topics. Also, after thinking about it a lot, and looking for common patterns in ROS 1 which would benefit from keys, I come up with very few. Some of them are important, but I don\u2019t get the feeling that it would be a feature that could be applied all over the place to strict benefit. But that last part is just my opinion.", "I agree changing other ROS features to use keyed topics is a much larger undertaking.  The only thing we are specifically looking for is the ability to create a msg file which will cause them to be generated at this point.  RTI\u2019s implementation looks for the (@)key at the end of the line, so realistically just passing along comments from a msg file to the IDL would make this work.  For example, our msg file is below:", "string<=512 key #//(@)key", "\nstring<=512 value", "We made an update to basically pass this along so the IDL file now includes the following:", "struct Parameter_", "\n{", "};  // struct Parameter_", "This obviously doesn\u2019t solve the problems with discovery that ", " mentioned, but it allows the global parameter setup ", " mentioned, which is how we are using it.", "Dragging up an old thread, but I was curious about this part of your reply ", ":", "Now, this could either be \u201cevery node publishes to the same ", " topic\u201d or \u201cevery node publishes to its own ", " topic\u201d. The benefit of the first is that a tool that wants to monitor all changes only needs to subscribe to one topic (this is the same use case as ", ", many producers, one consumer of all producers). However, if you want to monitor one node, or only a few nodes, then you need to receive all the data and discard what you don\u2019t want, which is inefficient. For that use case, the second option is better, since you can subscribe to only the nodes you want to monitor, but is very inefficient if you want to monitor them all, because you need to subscribe to N topics, where N is the number of nodes with parameters.", "Without using keys, would this (ie: individual topics vs single topic with client-side filtering) not be something that could be worked-around (almost) by using content-based subscriptions?", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["each vendor has its own way of defining them", "dealing with key fields in nested messages", "use of them has to be made visible from all of the ROS tools", "using keys implicitly under the hood to make our topics which have namespaces more efficient (sharing data readers and writers between otherwise unrelated subscriptions and publishers)", "exposing the feature to users like yourself so you can choose to use keys in specific situations"], "url": "https://discourse.ros.org/t/keys-in-msg/1942"},
{"title": "ROS2 perception porting status", "thread_contents": ["Perception includes very important components on ROS, there are 30 useful packages exist on ", " but not available on ROS2. Some topics people discussed to ask about the porting status (", ", ", "), some developers may like to contribute. Not found an overall plan for RO2 perception porting, so just did some search and summarized here ", ". Hope this will be helpful. If the information is not up-to-date, please share comments, I\u2019ll continuously update it.", "Original repositories:", "\n", "place where standard perception stuff is maintained - ROS Perception", "\n", "ROS2 Perception: (updated on 10/16)", " - ", " - ", " - ", " - ", " - ", " - ", " - ", " - ", " - ", " - Not start", " - Not start", " - Not start", " - Not start", " - Not start", " - not start", " - not start", " - not start", " - not start", " - not start", " - not start", " - not start", " - not start", " - not start", " - not start", " - not start", "As a maintainer and/or contributor of some of these, a few thoughts:", "calibration - not sure it is worth actually porting to ROS2 \u2013 while I spent a lot of time working on it at Willow Garage, it is still fairly PR2 specific. I think both the robot_calibration and industrial_calibration packages are in wider use, and more robot-generic. This calibration package is also mostly python-based, with hardly any tests, and so moving it to 3.0 will be quite a bit of work.", "graft - was never really finished. I would consider it superseded by the robot_localization package, which has already been ported to ROS2 AFAIK.", "sparse_bundle_adjustment / slam_karto - I would suggest that we not port sparse_bundle_adustment, and instead merge one of the several branches out there that implement better solvers for slam_karto \u2013 for instance, using ceres-solver.", "-Fergs", "There has been discussions in the past about stopping releasing (open)slam_gmapping in ROS distributions in favor of more performant SLAM approaches like karto or cartographer, so not sure if it should be ported to ROS 2.", "Some packages have been already (partially?) ported:", "I would agree with the decision to avoid poor-performing packages to ROS2. In general, the large number of ROS1 packages can be daunting for someone who is just starting out, especially when it\u2019s not immediately clear which of those packages are considered \u201cbest practice\u201d or are even actively maintained. The ROS QA group should help alleviate this but I think the easiest way to make it clear is to simply not make older outdated packages available in ROS 2.", "On this topic, I notice that we have no object detector package available, either in this list or in ROS2. The \u201cstandard\u201d answer to this problem, Object Recognition Kitchen, has not seen updates in quite some time, so I would argue that it is not the best candidate going forward. It would be great if the community could find an existing package that fills that gap for object detection.", " ", " and ", " are actually ported already.", " I ported these a while ago, just as an exercise. So maybe the solution is not to release them, but know they exist?", "I share the same view. \u201cObject Recognition Kitchen, has not seen updates in quite some time\u201d. For object detection/recognition, I would expect state-of-the-art algorithms being introduced to ROS2 ", ".", "I noticed these existing ROS2 packages missing from the ROS2 perception list, which I think they really could be part of it:", "Contribute to intel/ros2_object_analytics development by creating an account on GitHub.", "\n", "\nReal-time object detection, object tracking, and object localization.", "Contribute to intel/ros2_openvino_toolkit development by creating an account on GitHub.", "\n", "\nPeople related detection", "Contribute to intel/ros2_intel_movidius_ncs development by creating an account on GitHub.", "\n", "\nMobilenet-SSD and Tiny-Yolo object detection", "\nAlex-Net/GoogleNet/SqueezeNet/MobileNet/Inception object recognition", " - object analytics does detection but not recognition, is that correct? What about the last one on your list", "Alex-Net/GoogleNet/SqueezeNet/MobileNet/Inception object recognition", "Has anyone created a ROS2 package for that? Do we have any object recognition solution in ROS2?", " Right you\u2019re. The \u201cObject Analytics\u201d takes the detection results, and provides additional tracking and localization information.", "For object recognition, the ROS2 package \u201cros2_intel_movidus_ncs\u201d provide that feature. See details for which network models supported:", "\n", "Contribute to intel/ros2_intel_movidius_ncs development by creating an account on GitHub.", "\n", "\nThe \u201cclassification\u201d results include label (class or type) of the object, probability.", "I would agree with the decision to avoid poor-performing packages to ROS2. In general, the large number of ROS1 packages can be daunting for someone who is just starting out, especially when it\u2019s not immediately clear which of those packages are considered \u201cbest practice\u201d or are even actively maintained. The ROS QA group should help alleviate this but I think the easiest way to make it clear is to simply not make older outdated packages available in ROS 2.", "Probably it is not always just about performance but reliability in the architectural level as well: ", "On this topic, I notice that we have no object detector package available, either in this list or in ROS2. The \u201cstandard\u201d answer to this problem, Object Recognition Kitchen, has not seen updates in quite some time, so I would argue that it is not the best candidate going forward. It would be great if the community could find an existing package that fills that gap for object detection.", "I think the challenge here is that object recognition isn\u2019t \u201csolved\u201d, as most would consider robot navigation or arm planning (I know \u201csolved\u201d is a loaded term, but I hope it conveys the idea here, the navigation stack works about 80% of the time for a large portion of the robots out there. ORK in contrast has a hard time keeping up with changes in consumer packaging, and only supported ~60 or so objects at the time it was released, if I recall correctly). There are numerous cutting-edge research packages out there, but many of them aren\u2019t maintained because the authors move onto better algorithms and approaches.", "-Fergs", "I totally agree with your assessment. Perhaps it would be a useful exercise to try and figure out what an 80% solution is for computer vision, such as something that would not require object-specific detectors.", "I\u2019ve previously used ", " at a number of places \u2013 it does the basic \"segment a table and the objects that are on it, and generates grasps for MoveIt. I imagine that I will port it to ROS2 at some point, but there are a number of dependencies not yet ported (actions, MoveIt, and I think some PCL related stuff).", "-Fergs", " would you please list detail packages name as you mentioned about ", ", not all ROS perception packages are worth to port, but the packages which are required or depended by other ROS2 application should be considered to port or improve on ROS2.", "I\u2019d have to look into it in more detail \u2013 a quick look at the CMake shows it depends on \u201cpcl_ros\u201d \u2013 mainly for the transform stuff if I recall, although once the package is ported to TF2, all that changes anyways, so it might not be a problem. Actions/MoveIt are the big ones (no sense having a grasp planner if you\u2019ve got no arm planning software, and even in the upcoming release of ROS2 it is my understanding that actions will not be able to cross the ROS1/ROS2 bridge)", ",  regarding grasping, I\u2019ve done some upstream works on \u201cGPD\u201d. It\u2019s a state-of-the-art algorithm for grasp pose detection and very easy for using in ROS. I\u2019ve enabled a ROS2 grasp library as MoveIt plug-in for this algorithm, now in alpha version, coming soon ", "The GPD has been enabled with Intel OpenVINO technology for neural network computation deployment across various devices (CPU, GPU, VPU, etc.) and maximizes performance. Linkage here:", "\n", "Detect grasp poses in point clouds . Contribute to atenpas/gpd development by creating an account on GitHub.", "\n", "I have seen on Discourse and Github resources but found that no one has started to port pcl_msgs. Please let me know if anyone has not started pcl_msgs package. I am interested to port the same.", "Thanks.", "  I have not found someone work on it too. You could port the package and also announce on ", ". thanks.", "  what about the support to Lifecycle managed nodes in ", " (and eventually other stacks)?", "For example, to use ", " with my node based on Lifecycle I had to write another \u201cnormal\u201d node subscribing to image topics published by the \u201cmain\u201d node and republishing them using ", ".", "There is an open issue: ", "I do not know if there are other stacks (other than ", " that is outside \u201cperception\u201d)  that lack the support to LifeCyleNode", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", "\n", "\n", "\n", "branch ros2 ", " (should likely be moved to the upstream repository)", "\n", "\n", "\n", "cv-bridge ", "\n", "Image-geometry ", "\n", "\n", "\n", "\n", "Image_transport ", " - ", "\n", "\n", "\n", "\n", "\n", "/ ", "\n", "\n", "\n", "\n", "\n", "/ ", "\n", "\n", "\n", "\n", "Issue: (", ")", "\n", "\n", "\n", "\n", "  - original port on ros2 branch of ", ". ROS 1 pcl_conversions is deprecated and moved to ", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "may not worth porting, see comments of mikeferguson.", "\n", "\n", "\n", "should be superseded by ", ", see comments of mikeferguson.", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "laser_geometry: branch ", " of ", "\n", "depth_image_to_laserscan: branch ", " ", " (should likely be moved to the upstream repository)", "pcl_conversions: original port on ", " branch of ", " (before ROS 1 repositories were merged)", "\n", " - ", "\n", "\n", " - ", "\n", "\n", " - ", "\n", "branch ros2 ", " (should likely be moved to the upstream repository)", "\n", "\n", " - ", "\n", "\n", " - ", "\n", "\n", " - ", "\n", "\n", "/ ", "\n", "\n", "\n", " - ", "\n", "\n", "/ ", "\n", "\n", "\n", " - ", "\n", "Issue: (", ")", "\n", "\n", " - ", "\n", "\n", " - original port on ros2 branch of ", ". ROS 1 pcl_conversions is deprecated and moved to ", "\n", "\n", "\n", " - Not start", "\n", " - Not start", "\n", " - Not start", "\n", " - Not start", "\n", " - Not start", "\n", " - ", "\n", "\n", " - ", "\n", "\n", " - not start", "\n", " - not start", "\n", " - ", "\n", "\n", " - ", "\n", "\n", " - not start", "\n", " - not start", "\n", " - not start", "\n", " - not start\n", "may not worth porting, see comments of mikeferguson.", "\n", "\n", " - not start\n", "should be superseded by ", ", see comments of mikeferguson.", "\n", "\n", " - ", "\n", "\n", " - ", "\n", "\n", " - ", " (branch ", " should likely be moved to the upstream repository)", "\n", " - ", "\n", "\n", " - ", "\n", "\n", " - ", " (allenh1/", ")", "\n", " - ", " (allenh1/", ")", "\n", " - ", " (allenh1/", ")", "\n", " - ", "\n", "\n", " - ", "\n", "\n", " - ", " (", " - original port on ros2 branch of [ros2/pcl_conversions.git ](", " is currently used)", "\n", " - ", " (Issue: ", "\n", "\n", " - ", "\n", "\n", " - not start", "\n", " - Not start", "\n", " - Not start", "\n", " - Not start", "\n", " - Not start", "\n", " - Not start", "\n", " - not start", "\n", " - not start", "\n", " - not start", "\n", " - not start (may not worth porting, see comments of mikeferguson.)", "\n", " - not start (should be superseded by ", ", see comments of mikeferguson.)", "\n", " - ROS2 Intel openvino wrapper", "\n", " - ROS2 Intel Movidius NCS wrapper", "\n", " - ROS2 Intel RealSense wrapper", "\n", " - 2D object tracking and 3D object localication"], "url": "https://discourse.ros.org/t/ros2-perception-porting-status/6231"},
{"title": "Generating 'dev' and runtime artefacts from ROS packages", "thread_contents": ["First: I\u2019m not entirely sure this belongs here, but I couldn\u2019t think of a better category. It\u2019s probably something that will touch the buildfarm if we can come up with something, hence why I posted it here.", "I\u2019ve been interested in reducing the size of deployments of ROS applications, both native and in Docker (and Singularity) images for some time now, and one thing that I have been curious about is whether it would be possible to generate separate runtime and ", " archives from ROS packages (to use the Debian/Ubuntu terminology).", "Some Googling led me to ", " on ROS Answers, which has an answer by ", " mentioning the support for automatic generation of ", " symbol packages (which has been active for Melodic and newer releases), but couldn\u2019t find additional discussions about the topic.", "Using multi-stage ", "s tremendous savings can be accomplished (going from 4GB+ to 200MB images), but this is non-trivial with ROS packages in the mix.", "Thinking about it, I can see two aspects which may make this either difficult or reduce the gains significantly:", "Pt 1 may not be too problematic. It\u2019s an assumption and would be something to figure out.", "Pt 2 could perhaps be approached very naively: assume everything exported by ", " in a ", " call (in ROS 1) ", " is local to the exporting package is what should go in a ", " package. Assume everything else would go into the runtime package. That information would somehow be transferred to Bloom when it populates the package structure and ", " templates.", "Another option could be to use CMake\u2019s support for ", " in ", " rules (as that could make it work for ROS 2 as well), but I have no idea whether that would help when generating Debian/RPM/something-else packages.", "I also realise that to do this right is probably going to be complex and will require quite some effort.", "This post here on Discourse is to find out whether others have thought about this as well or perhaps even have implemented something in this direction.", "This is definitely something that has been considered at various times. And it\u2019s been thought about recently by ", " who has been looking into generating rpms. As rpms have stricter linters.", "The automation of separating dbg symbols was eventually resolved with it becoming part of the standard debian toolchain:", "From that issue you can find links to various other discussions of adding ", " packages as far back as 2011. But on reflecting on it I think that the reason that we haven\u2019t found a solution for created them is that it doesn\u2019t make sense to \u201cautomatically\u201d split packages. There are many heuristics to say when to put something into the dev version or the runtime component. But in reality there\u2019s many corner cases that will never be met so the maintainer will basically need to list out resources to land in either regular or dev variants of the package. In the Debian world this is the role of the debian package maintainer. Each resource is placed into one or the other bucket. But more importantly the downstream package maintainer then has to add the right dependency on either the runtime or devel package. That downstream maintainer also splits their package into runtime and devel packages. But more importantly they also split the dependencies conditionally on the devel and runtime dependencies appropriately.", "Now you can see that we actually have 4 different cases for one dependency. There\u2019s both devel and runtime versions of both packages. And the dependencies declared on the downstream package have to be conditionally evaluated for the subset of the package that is being used to build or made available.", "We have a rich language of dependencies with at least 5 different versions of dependencies for a package including ", ", ", ", ", ", ", ", ", ". And that\u2019s excluding the extra test and doc dependencies as well as groups etc. We would then have to include a way to declare associations of each of those dependencies to the runtime or devel versions of a package.", "Looking at this from a little bit further away, the main reason for having ", " and ", " packages is because historically ", " was released as a tarball and then the debian maintainers would pick up the tarball, and select what went to each subpackage, and add the appropriate dependency declarations. Since then the process has not evolved much, though now often it\u2019s pulled directly from the source repository. But in general the upstream maintainers are not thinking about the impacts of releasing their software and packaging.", "By comparison in the ROS ecosystem core developers actively use packages as atomic units and leverage those packages even when developing, and they use and pay attention to the package dependencies. The efficiency gains from modular packaging that are usually gained by the debian maintainers work can be leveraged in the development environment too.", "As such I think that it might behoove us not to think of this as a problem to be fixed at the release stage, but as an area of efficiency that we can gain by structuring our upstream packages similiarly. The benefits of separating the build and runtime dependencies helps overall with compile times. Dependency trees do not grow as quickly if they are not the union of build and runtime dependencies. Parallel build tools can build faster when these potentials are paid attention to in the development environment.", "And I think that many of our common practices that the ROS community has developed such as recommending making message only packages gets a lot to this end. They are the higher level equivalent of headers and break apart the dependency trees by providing standard interfaces. And through encouraging small modular packages we get the ability to leverage the find grain dependency control.", "Specifically separating the build and runtime dependencies is something that has been shown to be quite effective that we\u2019re not actively doing. However, instead of trying to do that at release time. I\u2019d suggest that we consider making that a best practice for the ROS maintainers to create full packages that separate concerns into runtime and build time dependencies. This will give the developer the ability to fully specify the dependencies for each and where content goes is also clearly obvious. We could even pick up the naming convention of debian to name the content designed for build time to end with ", " however that would then conflict with the Fedora/RPM convention to name things with ", ".", "In ROS 2 we\u2019ve leveraged this separation of dependency types to enable swapping out the runtime libraries and hide the underlying implementations yet building them all against the same headers by defining a clear interface specification. There\u2019s always a matter of tradeoffs between making things more modular and keeping things as simple as possible.", "So in conclusion I think what I\u2019d like to suggest is that we already have support for all the bells and whistles needed to very clearly define the necessary dependencies. And that if we can identify places where separating the build and runtime dependencies would be valuable that we consider simply making separate packages and not try to find ways to automatically split a package and then find ways to refer to those partial packages in downstream packages. We\u2019re generating packages, we have packages. Keeping it one to one is basically the simplest solution.", "At work I am in a similar situation. We extensively work with docker images and found that ROS certainly doesn\u2019t make it easy to have small docker images. On the larger end they could easily reach 12GiB (although a lot of that was our own negligence). Even a base install of ROS resulted in close to a 800MiB compressed image.", "You\u2019re absolutely correct that there is an inherent limitation at the moment with ROS packages ", " including the dev artifacts and that has given us real trouble in a few areas. One of the things we did actually find however is that nine times out of ten it isn\u2019t actually the ROS packages themselves that are the problem - virtually all of the built debians contain just shared libraries and headers which is only going to be barely larger than a non-dev package. It\u2019s the upstream dependencies that they hold which are consistently problematic.", "As an example the ", " deb package, which is in any core installation of ROS, has a dependency on libboost-dev. This boost metapackage is ", " and has massive dependencies of its own, installing it on a fresh Ubuntu docker image installs 586MB worth of stuff even with ", ". Some of the dependencies that get pulled in are just plain useless for actually ", " ROS applications:", "To workaround this problem we came up with a novel solution. Before installing our ROS dependencies into our docker images we install custom, fake, metapackages. These metapackages are special in that they don\u2019t install anything themselves, they simply \u201cprovide\u201d (in the debian packaging sense) all of the upstream dev dependencies of which ever ROS packages we\u2019re intending to install (plus a subset of ROS packages that we definately don\u2019t need) without actually adding anything to the host system. That way when we later install the ROS dependencies it doesn\u2019t actually install the dev dependencies. It turns out with this alone the size of a bare ROS docker image went from ~800MiB down to ~100MiB compressed. We\u2019ve similarly extended this strategy to tame OpenCV and CUDA which means even our largest base images max out at about 400MiB.", "The positive news is that solving this specific problem in ROS packaging more generally is probably much easier than implementing ", " packages in their entirety. In theory all that is needed is to produce ", " packages that just have extra ", " dependencies of their own, no extra files.", "To a degree this should be straight forward as package.xml already has a mechanism for declaring these dev only transitive dependencies: ", ". The downside of this approach is that it involves fixing dependencies on basically every package in the ROS ecosystem since that\u2019s mainly used to export headers at the moment.", "A hackier approach would be on the rosdep side. At the moment the ", " rosdep key is declared as being the dev packages for every given OS: ", ". It should be possible to create a \u201cparallel\u201d rosdep file that declares the non-dev versions of packages which can then be automatically used by bloom to generate runtime packages with the non-dev dependencies.", "The final approach is as ", "  has suggested, explicitly create \u2018-dev\u2019 ROS packages. The downside of this approach is legacy, there is a substantial amount of legwork to implement this approach and tons of breaking changes to go with it. It also seems overkill since ROS already has most of the mechanisms in place to resolve this on the release side.", "Before installing our ROS dependencies into our docker images we install custom, fake, metapackages. These metapackages are special in that they don\u2019t install anything themselves, they simply \u201cprovide\u201d (in the debian packaging sense) all of the upstream dev dependencies of which ever ROS packages we\u2019re intending to install (plus a subset of ROS packages that we definately don\u2019t need) without actually adding anything to the host system", "Are these REP-127/140/149 metapackages, or the Debian variant? If the latter, are you using ", " for this?", "As an example the ", " deb package, which is in any core installation of ROS, has a dependency on libboost-dev. This boost metapackage is ", " and has massive dependencies of its own, installing it on a fresh Ubuntu docker image installs 586MB worth of stuff even with ", " .", "Yes, that was something I quickly ran into as well.", "That way when we later install the ROS dependencies it doesn\u2019t actually install the dev dependencies. It turns out with this alone the size of a bare ROS docker image went from ~800MiB down to ~100MiB compressed. We\u2019ve similarly extended this strategy to tame OpenCV and CUDA which means even our largest base images max out at about 400MiB.", "The positive news is that solving this specific problem in ROS packaging more generally is probably much easier than implementing ", " packages in their entirety. In theory all that is needed is to produce ", " packages that just have extra ", " dependencies of their own, no extra files.", "Could you go into a bit more detail about your approach (haven\u2019t had my coffee yet)? Are you referring to extra ROS packages here which package the dev dependencies?", "To a degree this should be straight forward as package.xml already has a mechanism for declaring these dev only transitive dependencies: ", " . The downside of this approach is that it involves fixing dependencies on basically every package in the ROS ecosystem since that\u2019s mainly used to export headers at the moment.", "So if I understand you correctly you\u2019d like to also use it to export \u201cother\u201d build dependencies?", "Thanks for the insight, this is quite a creative way to deal with this (although technically still a work-around ", " ).", "Are these REP-127/140/149 metapackages, or the Debian variant? If the latter, are you using ", " for this?", "Debian variant. When I prototyped it originally I did use ", " although we create them with custom tooling nowadays.", "Could you go into a bit more detail about your approach (haven\u2019t had my coffee yet)? Are you referring to extra ROS packages here which package the dev dependencies?", "No. Ultimately we only care about the debian packages. Certainly one approach to achieve that ", " to have separate dev ros packages but that involves overhauling basically every C++ package in the ROS ecosystem since they all invariably depend on boost in some way.", "So if I understand you correctly you\u2019d like to also use it to export \u201cother\u201d build dependencies?", "Yes, so for example I could say my ", " package has ", " on boost-dev, but ", " on ", ". This would then allow bloom to automatically generate two debian packages:", ": depends on boost-non-dev, contains all of the foo package itself", "\n", " depends on boost-dev and ", "This would only require a fairly procedural update to fix up everyone\u2019s package.xml", "It turns out with this alone the size of a bare ROS docker image went from ~800MiB down to ~100MiB compressed. We\u2019ve similarly extended this strategy to tame OpenCV and CUDA which means even our largest base images max out at about 400MiB.", "Nice! Do you have any Dockerfiles you could share publicly that demonstrate this approach?", "At the moment the ", " rosdep key is declared as being the dev packages for every given OS: ", ". It should be possible to create a \u201cparallel\u201d rosdep file that declares the non-dev versions of packages which can then be automatically used by bloom to generate runtime packages with the non-dev dependencies.", "This is something that came to mind multiple times when trying to reduce the amount of packages being pulled.", "\nWhile very convenient to have these \u201cblanket\u201d rosdep keys, it is very uncommon for any package to need \u201call of boost dev packages\u201d or \u201call opencv dev packages\u201d. A great deal of space would be saved if packages were to use more specific and targeted rosdep keys. While some stacks like OpenCV and PCL used to have a single/couple deb with everything, they now provide multiple debs and most likely we should leverage them. For some stacks there is already already a narrower set of keys available, the ", " and the ", " one: ", "In an ideal world, all packages would define separately their ", " with the ", " version of the libraries they use and the ", " with the runtime libs they really need to run the package.", "Given the number of packages using (or implicitly relying) on these blanket rules, it would be very challenging to actually apply this to an entire distro.", "Maybe it\u2019s something that could be encouraged for ROS 2 ? as the number of packages is still pretty limited, so would be auditable. We would need to find a way to discourage / warn users to steer them away from using these blanket rules.", "Nice! Do you have any Dockerfiles you could share publicly that demonstrate this approach?", " The would be great and could be inspiration to reduce the size of the official ROS images that are ginormous.", "Maybe it\u2019s something that could be encouraged for ROS 2 ? as the number of packages is still pretty limited, so would be auditable. We would need to find a way to discourage / warn users to steer them away from using these blanket rules.", "Hear! Hear! A fresh a proper slate, no time like the present to set the president. ", "So in conclusion I think what I\u2019d like to suggest is that we already have support for all the bells and whistles needed to very clearly define the necessary dependencies. And that if we can identify places where separating the build and runtime dependencies would be valuable that we consider simply making separate packages and not try to find ways to automatically split a package and then find ways to refer to those partial packages in downstream packages. We\u2019re generating packages, we have packages. Keeping it one to one is basically the simplest solution.", "This would be a nice way to go about it, but as ", " also wrote, that\u2019s going to be a lot of work (and will result in many more packages as well, which has an adverse affect of build times). For ROS 2 (as ", " suggested) this might be possible still.", "For ROS 1 however I doubt it is feasible any more (nr of packages, size of maintainer/developer community & sunsetting).", "What ", " describes seems like a low-hanging fruit that could allow us to significantly reduce the footprint of ROS 1 (and potentially ROS 2) deployments without requiring too much work.", ": could you provide a little more detail on what you are doing with those metapackages such that we could replicate it? I\u2019m sure ", " would be able to figure out whether we could apply a similar approach to the official ", " and ", " Docker images.", "In an ideal world, all packages would define separately their ", " with the ", " version of the libraries they use and the ", " with the runtime libs they really need to run the package.", "Given the number of packages using (or implicitly relying) on these blanket rules, it would be very challenging to actually apply this to an entire distro.", "Maybe I or someone else can come up with a graphviz/dot script to identify the worst offenders in individual subsets of the packages? I\u2019ll try my luck with ogre/rviz", "There are quite a few tools available for visualising dependency trees (", " and ", " can do it fi).", " indeed brings in approx 580 MB of dependencies (when installed on a bare ", "). ", " is essentially almost singularly responsible for this (207 pkgs for ", " vs 210 pkgs for ", ").", " already lists very specific parts of Boost as dependencies, but as it depends on ", " (as ", " wrote), installing just ", " on a bare ", " image wants to install 655 MB of packages.", "Of this only 8.1 MB is actually placed inside ", ".", "Edit: ", ": I imagine you have some way of figuring out the runtime dependencies of particular ROS nodes / packages and then generate metapackages based on that information. Have you automated this, is this a manual process, or are you relying on package manifests?", " already lists very specific parts of Boost as dependencies", "I guess that\u2019s what I meant by \u201crelying on blanket rules\u201d. While roscpp ", "'s and uses specific parts of boost, it doesn\u2019t declare dependencies on any part of it in it\u2019s ", ", relying on lower level packages to provide all the parts of boost it needs.", "Not sure how the proper subset of boost packages appeared in the control file though\u2026", "Edit: ", ": I imagine you have some way of figuring out the runtime dependencies of particular ROS nodes / packages and then generate metapackages based on that information. Have you automated this, is this a manual process, or are you relying on package manifests?", "Definitely tools helping to extract this information will be very useful", "Maybe it\u2019s something that could be encouraged for ROS 2 ? as the number of packages is still pretty limited, so would be auditable. We would need to find a way to discourage / warn users to steer them away from using these blanket rules.", "Hear! Hear! A fresh a proper slate, no time like the present to set the president.", "Yeah getting these split for ROS 2 and allow to install only the nondev version of ROS packages would be great.", "\nLooks like ROS 2 is facing other challenges as the core is completely boost-free and the ", " image ", ", my guess is from the way message packages are currently packaged.", "While very convenient to have these \u201cblanket\u201d rosdep keys, it is very uncommon for any package to need \u201call of boost dev packages\u201d or \u201call opencv dev packages\u201d. A great deal of space would be saved if packages were to use more specific and targeted rosdep keys.", "There is nothing holding us back to do exactly that already. All it takes is a minute to make a PR to update any packages which do use these \u201cblanket\u201d rosdep keys (see below for an example).", "Maybe it\u2019s something that could be encouraged for ROS 2 ?", "I don\u2019t see why ROS 1 packages couldn\u2019t be updated too. I doubt the number of packages (which use these \u201cblanket\u201d rosdep keys) and enough people care about is actually that high.", "For ROS 1 however I doubt it is feasible any more (nr of packages, size of maintainer/developer community & sunsetting).", "ROS Noetic is not even released yet and will be supported for 5 years. I would think that is motivation enough to still update package you care about. Also it doesn\u2019t mean that the maintainer of a package has to do it. Anyone can create a pull request with this kind of change - the maintainer only has to accept it and roll a new release.", "And as mentioned above an example how easy it is to improve the dependency size: ", " uses specific rosdep keys (", ", ", ", ", ") instead of ", " (which maps to ", "). The effect on installing ", " (assuming you have ", " installed anyway):", "While dev/non-dev ROS packages would certainly get us further we could already do something today. So please consider to create PRs to replace the usage of \u201cblanket\u201d rosdep keys with something more specific.", "Our Dockerfiles by themselves aren\u2019t all that useful since most of what they do is install fake packages.", "The generation of the fake packages is the interesting part, I\u2019m not sure how much I can share so I\u2019ll describe it in high level terms. The entire process operates entirely within the realms of Debian packaging, nothing ROS specific.", "When we want to build an image we declare its high level debian dependencies, typically this will be a set of ROS packages (e.g. ros-kinetic-ros-core) and some other libraries that we want to use with it. We then have a Python script which takes this list and traverses the dependency graph. As it traverses the graph it will start to prune off dependencies based off of certain criteria, some of this will be hard coded rules based on package names but mostly it\u2019s automated heuristics. The main one is the one which eliminates packages based on their ", ". While all the ROS packages sit in the ", " section (since bloom doesn\u2019t know any better) the packages in the upstream Ubuntu repos are nicely split up which makes it easy to eliminate all the packages in the ", " section or the ", " section. As we prune off packages we add them to a list of packages to \u201cprovide\u201d in the metapackage we\u2019re going to generate.", "Along with this we also explicitly add certain non-dev dependencies to the images. For example we explicitly add ", " of the non-dev boost packages (which turn out to be not that big) to our images to make up for not having the boost-dev meta-package.", "Here\u2019s an example of the pruned graph for ros-kinetic-ros-core (nodes are only shown the first time they\u2019re found in the graph):", "Maybe it\u2019s something that could be encouraged for ROS 2 ?", "I don\u2019t see why ROS 1 packages couldn\u2019t be updated too. I doubt the number of packages (which use these \u201cblanket\u201d rosdep keys) and enough people care about is actually that high.", "For ROS 1 however I doubt it is feasible any more (nr of packages, size of maintainer/developer community & sunsetting).", "ROS Noetic is not even released yet and will be supported for 5 years. I would think that is motivation enough to still update package you care about. Also it doesn\u2019t mean that the maintainer of a package has to do it. Anyone can create a pull request with this kind of change - the maintainer only has to accept it and roll a new release.", "And as mentioned above an example how easy it is to improve the dependency size: ", " uses specific rosdep keys (", ", ", ", ", ") instead of ", " (which maps to ", "). The effect on installing ", " (assuming you have ", " installed anyway):", "Reason I was hesitant to start doing this is that we risk breaking downstream packages that may be (implicitly/unknowingly) depending on ", " to bring in ", ".", "This seems to have happened before (from: ", "):", "Before the ROS package ", " was bringing in the boost dependency transitively. Since ", " now uses the system package of ", " boost is not exposed as a transitive dependency anymore.", "Anyway the packages in ", " should state their direct dependencies explicitly anyway and not rely on transitive dependencies for this. Please see ", " for the proposed fix.", "Technically those downstream packages would need to be fixed of course. I just wasn\u2019t sure that was a feasible thing to do in ROS 1 still.", "That was all really. I\u2019m more than happy to start submitting PRs. But I don\u2019t like breaking things and potentially problematic changes like this have been met with hesitation from OR maintainers in the past, so it\u2019s not too strange for us to first look at approaches that would result in similar gains without causing too much trouble \u201cupstream\u201d.", "Reason I was hesitant to start doing this is that we risk breaking downstream packages that may be (implicitly/unknowingly) depending on ", " to bring in ", " .", " Same reason here.", "\nIn the above example of ", " not declaring its\u2019 boost dependency. It\u2019s likely that this ", " PR broke ", " in the process.", "\nIn the case where the changes are targeting noetic only, it wouldn\u2019t be too much of an issue as maintainers would update their packages before releasing. But for people not having a dedicated ", " branch it may propagate build failures every time one layer fixes the dep declaration.", "If that\u2019s a road we\u2019re comfortable going down for Noetic, I\u2019m happy to help submitting PRs.", "It\u2019s likely that this ", " PR broke ", " in the process.", "Seeing as ", " hasn\u2019t been released yet for Noetic that isn\u2019t much of a problem right now.", "Noetic would seem like the time to start pruning these package manifests.", "re: replacing blanket ", "s: moving dependencies on keys like ", " to ", " et al. would keep builds working. The runtime dependencies would be much lighter though.", "Perhaps a two-step process could be used: first tighten up the ", "s, then change build dependencies.", "And a related PR for ", ":", "As it traverses the graph it will start to prune off dependencies based off of certain criteria, some of this will be hard coded rules based on package names but mostly it\u2019s automated heuristics. The main one is the one which eliminates packages based on their ", ". While all the ROS packages sit in the ", " section (since bloom doesn\u2019t know any better) the packages in the upstream Ubuntu repos are nicely split up which makes it easy to eliminate all the packages in the ", " section or the ", " section.", "Bloom\u2019s patch support could perhaps be used to change the default ", " to more appropriate values. That would require some work, but would seem doable for at least stuff in ", " and similar metapackages.", "But should we perhaps consider adding support for categories to ROS package manifests? Packages could be placed in ", " by default, but if the author/maintainer provides the metadata, Bloom could use that to populate the ", " field.", "RPM did have \u201cgroups\u201d, but those seem to have been deprecated some time ago.", "Here\u2019s an example of the pruned graph for ros-kinetic-ros-core (nodes are only shown the first time they\u2019re found in the graph):", "Entries without a ", " are pruned then, I gather? And the second column shows the cumulative sub total of the packages installed by (and for) that branch of the tree (but the trees only include a dependency if it wasn\u2019t added somewhere else earlier (so ", " shows up with 23MB, but that\u2019s probably because it depends on all sorts of Python dependencies which aren\u2019t shown a second time))?", "With some primitive scripting and a very manual process I\u2019d arrived at a similar set of packages, but I hadn\u2019t gotten ", " down to ", " MB yet.", "Perhaps a two-step process could be used: first tighten up the ", " s, then change build dependencies.", "I started part of the process and opened PRs to ", " and its\u2019 dependencies to get rid of the blanket ", " key (in both build and exec). This was pretty straight forward (though not automated) and did not include any audit/tightening of the runtime dependencies. This allowed to propagate the ~300MB space gain to the all of ", ".", "re: \u201cfirst tighten up the ", " s\u201d: Migrating all these packages to format 2 or 3 would also allow us to leverage the ", " versus ", " and tighten them accordingly. Bloom could then use that information to segregate ", " vs actual runtime dependencies.", "And a related PR for ", " :", "Great !", "Reason I was hesitant to start doing this is that we risk breaking downstream packages that may be (implicitly/unknowingly) depending on ", " to bring in ", " .", "Assuming that almost all packages depend on e.g. ", " the only chance to breaking downstream packages is if all packages including and below ", " are switching from ", " to something more specific for an already released distro. If only one package limits the change to Noetic (since it already needs a separate branch for other reasons) downstream packages will still have ", " available in Kinetic / Melodic. Therefore I think the chance for regressions is fairly low.", "Perhaps a two-step process could be used: first tighten up the ", " s, then change build dependencies.", "What would be the advantage of that? The first step already affects downstream packages. The second step is local to the package and is easy to test and doesn\u2019t affect other packages - so why should it not be done at the same time?", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["ROS has (very) few leaf packages: many ROS packages export libraries, headers and other resources that get consumed by others as part of a build. This means that when a package is installed, it\u2019s most likely installed because it\u2019s being used by another. Main contributor to package size are the libraries (this is an assumption), which would always be present and thus having a separate runtime and ", " package doesn\u2019t offer much net gain.", "it\u2019s not necessarily something that can be automated: creating proper Debian packages can be ", ". Part of what makes it complex is knowing what should go where, and this is not always obvious either. A single source package could spawn multiple binary packages, and the rules that govern this are typically largely hand written.", "gcc", "perl", "python3", "Before it pulled in ~500MB", "Afterwards it only pulls in ~200MB", "Before it pulled in ~500MB", "Afterwards it only pulls in ~200MB"], "url": "https://discourse.ros.org/t/generating-dev-and-runtime-artefacts-from-ros-packages/12448"},
{"title": "Project Azure for Kinect (4th gen Kinect)", "thread_contents": ["I\u2019m stealing ", "\u2019s (and/or ", "\u2019) thunder a bit, but just thought I\u2019d start a topic about the \u2018new Kinect\u2019 that MS has just announced: ", " (random link to VentureBeat article). MS site here: ", ".", "Some impressive specs (copied from the VB article):", "The depth image resolution will probably require GPU accelerated processing, as the Kinect2 was already enough to bring many machines to their knees.", "Edit: some other articles/links:", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["1024\u00d71024 depth image resolution", "Highest Figure of Merit (highest modulation frequency and modulation contrast resulting in low power consumption with overall system power of 225-950mw)", "Automatic per pixel gain selection enabling large dynamic range allowing near and far objects to be captured cleanly", "Global shutter allowing for improved performance in sunlight", "Multiphase depth calculation method enables robust accuracy even in the presence of chip, laser and power supply variation", "Low peak current operation even at high frequency lowers the cost of modules"], "url": "https://discourse.ros.org/t/project-azure-for-kinect-4th-gen-kinect/4729"},
{"title": "Fully Open Source (Industrial) Robotics Controller", "thread_contents": ["I\u2019m unsure if this is the right forum to discuss ROS related business ideas or not, if not please let me know where the right place is.", "I have this vision of a fully open source industrial robotics controller based on ROS-I. This includes hardware and software, basically, everything that you need to drive a robot from the motor drivers up or alternatively to drive a robot with an existing proprietary controller.", "I have the feeling that it\u2019s still quite hard to get started on using ROS for an industrial application, because of many factors, not only involving the complexity of the ROS platform.", "What\u2019s missing from ROS at the moment are following pieces. I\u2019ll also add my ideas on how to solve them.", "The opportunity I see here is to build such a platform. For a client, this platform would give following benefits, compared to using a proprietary robotics controller.", "How to make money with this business?", "The goal of this project is to make using industrial robots more affordable and accessible by leveraging the power of ROS.", "Status: Idea, partially proof of concept", "I would very much appreciate your feedback if you think this is a reasonable idea and what kind of applications you see for such a platform.", "I\u2019d suggest to wait for ROS 2 and consideration of TSN in DDS. ", " could be interesting for you. From the papers conclusion:", "\u201cFor  higher  layers,  we foresee a contending landscape where the integration of TSN", "\nin different middleware solutions focused on interoperability", "\nsuch  as  OPC-UA  and  DDS  promise  to  deliver  a  bottom-up", "\nreal-time communication solution.\u201d", "I love the idea of an end to end open robot controller. The nature of my work (contract research at SwRI) means that custom hardware is almost never allowed for safety, cost, and support reasons. I think you will find a lot of folks here that have similar restrictions.", "What a lot of us ", " collaborate on is the user facing end of your proposed stack: the programming language, virtual pendant, and communication interface between PC & hardware. I\u2019m just musing now, but recently we\u2019ve seen more robot vendors provide a \u201cdumb servo\u201d interface to their hardware. We should have (but do not) the basic software in place to easily replicate what robot controllers can do now: jog, point to point move, cartesian move. Save paths, load paths.", "If we have our own controller, that is ROS based, it almost eliminates the need for a robot command language.  However, I do think there is value in providing a programming interface that is more familiar to industrial robot programmers.  We are actively developing something called ", ", that attempts to simplify programming, while still benefiting from power of ROS.", "Additional must-haves:", "How to make money with this business?", "This is by far the harder question.  An open source controller still requires a robot.  Not everyone is going to build a custom robot (or not enough to make it a worth while business).  If the controller worked with off the shelf robots, that would help, but I don\u2019t see getting the cooperation of existing robot vendors as very likely.", "Very interesting topic indeed! Thanks ", " for bringing it up and ", " for referring to our previous work (we will release before ROSCon a follow up on that!).", "We actually looked at a somewhat similar idea a while ago and have an ", " prototype that interfaces with two of the most common collaborative robots seamlessly (in our opinion, ", " is indeed right about the opportunity here). From a modularity perspective (which is what we\u2019re mostly interested in), such a concept (an Open Source (Industrial and ", ") Robotics Controller) is something very appealing but we did not obtain good input from the robot vendors we spoke with (which I guess was expected).", "We already expressed this to ", " directly but to motivate others to contribute, we from Erle Robotics wouldn\u2019t mind allocating some resources and contributing with such a project.", "E.g.: if there were to be enough interest, we could produce a limited number of our existing ", "  and distribute it to those interested parties.", "If the controller worked with off the shelf robots, that would help, but I don\u2019t see getting the cooperation of existing robot vendors as very likely.", "I wouldn\u2019t be so pessimistic about that. If they see it as a way to sell more robots, they might be more interested. You need to approach them with the idea that it will expand the market for their robots, rather than as something to cannibalise their controller business. I\u2019ve seen it work before.", "Very interesting topic indeed! Thanks ", " for bringing it up and ", " for referring to our previous work (we will release before ROSCon a follow up on that!).", "You are welcome. I totally agree with the papers statement and appreciate the effort invested into modularization concepts HRIM, H-ROS, etc as well. I am looking forward to the follow up.", "First: I\u2019d love to have a full open source stack! Specifically the part where you just want to have a robot do some things.", "For this idea to succeed (you want to make money doing this too), you need to know your targets. Will that be companies? A robot manufacturer (startup?) looking to offload support to a community? A manufacturing company which makes products? Why would such a company decide to use another platform if they already have spent serious money on a robot brand, including educating staff and writing programs (sometimes processes are signed of by their customer, which will make it even less interesting to switch)?", "In my opinion, in industry, users need an easy way of programming so they \u201cget things done\u201d. These users don\u2019t go designing robots, they don\u2019t have the knowledge/time/money, they don\u2019t go tinkering, they don\u2019t have the time/knowlege/task to dive into writing nodes and worrying about dds, realtime etcetera. They have a task and want to use a tool to solve a problem.", "\nCompanies themselves struggle to hire staff who can perform these (for the ROS community simple) tasks. On a normal level, coming from school. These men and women do not have a university degree.", "I think that one of the big missing things in a full stack is the programming language and easy programming for a factory user. All your points about the hardware side are doable.", "If you want to have success:", "How to make money with this business?", " I was thinking about something end-user facing for the programming language, like a turnkey solution that works similar to what typical industrial robot controllers offer. But maybe I\u2019m thinking to much \u201cin-the-box\u201d on this topic.", "\nAnd yes, support for off-the-shelf robots is a necessity in my opinion, even if you don\u2019t get the support of the vendors themselves, the vendors provide ROS support, so it shouldn\u2019t be too hard to add support for their robots. But it would be of course better if the vendors collaborate, selling more robots, for additional user groups, could be an opportunity for them as well.", " Thank you for contacting me. I\u2019m very interested in hearing and seeing more at ROSCon.", " I agree.", "RT support of the middleware is definitely helpful, but I don\u2019t think it\u2019s a minimum requirement for such a controller. As pointed out, Machinekit or any other motion control layer needs to be RT capable, but the middleware itself could also operate in userland.", "The RT support of the middleware, however, is necessary when we are talking about distributed motor control. Which is something ", " is targeting for example.", "I agree. Supporting closed source robot hardware would be possible, even without the vendors actively helping with the integration.", "On the other hand, vendors could be interested in offering ROS support not only as a software package but also on the controllers they sell. Just musing.", "Dear ", ",", "thank you for your post . And thank you ", ", ", ", ", ", ", ", ", " & ", " for adding valuable answers to this thread.", "And to answer your introductory questions: Yes, ROS Discourse is the right forum to discuss this ", "From a point of view of ROS-Industrial Consortia (in the Americas, Europe and Asia-Pacific) you mention a lot of issues that we 've looked at it in the past, and as my previous speakers/posters have already expressed: some of it is tempting, most of it could be possible, and all have been on the radar (which does not make it less right or wrong).", "As you remember from our last collaborations (thanks again for your support at sprint tech workshop & ", " at IPA), the devil is in the details (e.g. see comments from ", " like: safety, cost, and support reasons). Therefore, we use official industrial robot controllers.", "If you want to challenge this (and think, you can find potential customers that don\u2019t have that restrictions), I personally would encourage you and others to further investigate in developing a fully Open Source Industrial Robotics Controller. In that respect: great offer, ", ", for offering to allocate some resources and contributing with such a project.", "So far there was not a sufficient alignment of the ", " resources involved in such effort (think about the safety certification costs alone) to pull this off. If anybody has more links, please add them to this post/thread.", "As you and ", " are both based in Europe, you could even apply for some EU funding for a Focused Technical Projects (", ") via the ROSIN project (", ") and give it a try.", "Good luck!", ", ", ", ", ", and Thilo", "If people coming from school knowing this programming language and if you\u2019re lucky some hardware/software concepts, you\u2019ll also solve the problem of companies trying to find educated personnel. Might be an opportunity for the ROSIN project and education.", "As you and ", " are both based in Europe, you could even apply for some EU funding for a Focused Technical Projects (", ") via the ROSIN project (", ") and give it a try.", "+1 for this. Thanks ", " and ", ". After the reactions, we are considering doing so. I\u2019m thinking more in the ROSin FTP direction though. Although the percentage funded is lower, it certainly (at least it does to me) matches a bit better the objective of a potential project (maybe someone could argue this?).", "Creating a small consortium where each partner had access to a different industrial robot and could contribute with their corresponding abstractions for a common Open Robotics Controller (ORC?, ", ")  may make sense.", "If there\u2019s anyone interested, please say so.", "Very interesting idea indeed. I like the suggestion of ThiloZimmermann for a EU funding. So, If ", " and ", " are considering to apply it. Can I propose to joint this proposal as an academy collaborator? Thanks.", "Hello ", ",", "Can I propose to joint this proposal as an academy collaborator? Thanks.", "Thanks for your interest. That\u2019s certainly very feasible. The current status of the project proposal is as follows:", "Currently, the group is composed by:", "We will need a bit more of information about you and your group but feel free to write me if you feel you could contribute. Please specify which robot targets you\u2019d be willing to use for the project.", "Hi ", " ", " I\u2019ve been working on and off on an OS robot (hardware, so that dimensions can be adapted for each case), running on Machinekit called ", " Currently I\u2019m working towards changing the design from prototype for use in practical colleges in NL. I too would like to enquire how can collaborate this project.", "Hi ", " ", " I\u2019ve been working on and off on an OS robot (hardware, so that dimensions can be adapted for each case), running on Machinekit called ", " Currently I\u2019m working towards changing the design from prototype for use in practical colleges in NL. I too would like to enquire how can collaborate this project.", "Pretty interesting! Why don\u2019t you write me directly at \u201cvictor at ", "\u201d and describe a bit more the contributions you have in mind, the entity you belong to and the robot targets you have in mind?", "Thanks!", "Hi ", ",", "It looks an interesting initiative!", " is willing to collaborate in this project. We can contribute with our mobile robots!", "We\u2019ll write you directly.", "Thank\u2019s for your idea, I really agree!", "\nThe good news is: There is an industrial controller (controller + IO-system + Linux + Real-time + \u2026) available which supports ROS.", "\nPlease send a short e-mail for more information (", ") or have a look a this ", "Very nice and exciting topic! I would love to make a robot and understand everything about how it works ", "From my experience the only thing that makes a robot industrial is the fact that companies are able to buy it and legally use it (certifications / safety). It\u2019s not about weight, payload, speed, range, being collaborative or even how the maintenance will be done, these are to be discussed after a certification is issued.", "The dream robot for me would be:", "I think there is a real marker opportunity in making cheap capable robots, robots that do not cost much (mechanics, electronics) but have nice software inside, which would easily allow tasks that known industrial robots struggle with (vision etc.).", "For every robot that I have used so far the problem was always in the software:", "I think one big barrier is the mechanics cost: making a decent robot is complicated and expensive.", "\nThere is already a lot of open source robots that can be 3D printed, however most of them use stepper motors or servomotors which may not be the best if scaling up the robot. It could be a great start using these projects with AC or DC servos instead of servomotors.", "I can help for:", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["a robot command/programming language, equivalent to what you have for industrial robots - that\u2019s only necessary if you want to skip the vendor\u2019s controller", "An easy to use online programming HMI, well, that\u2019s doable.", "A low-level real-time capable platform to drive the robot if you are not interested in using the vendors\u2019 controller. ", " work for this.", "A reference hardware platform. I know applications are diverse, but having a common ground to start from just makes things a lot easier. An RT Linux capable platform, preferably with low-level IO access, which is powerful enough to support CV and machine learning applications should do. Turns out the ", " is a good candidate.", "No vendor lock-in.", "Easy and intuitive programming, thanks to the great HMI and teaching capabilities.", "Leverage the whole ROS eco-system for your application.", "Rebrand the product for your application.", "A reference platforms makes it easy to get started, more focus on your core business.", "Sell the hardware/software as a turnkey solution.", "Provide consulting services around ROS, robotics hardware and so on.", "Use dual licensing for commercial and open source applications.", "Provide paid premium support for the platform.", "a robot command/programming language, equivalent to what you have for industrial robots - that\u2019s only necessary if you want to skip the vendor\u2019s controller", "Trajectory generation, planning, and smoothing at the joint level is also missing.  This would have to be added to the low level controller in order to achieve industrial robot level motion.", "Collaborative functionality.  Might as well jump into this growing market, rather than focus on legacy applications.", "you need ", " that companies can buy, proving they can get going. They are mostly interested knowing if the tool can do the job, and what it yields them. Managers mostly decide about purchasing these tools. Concepts as ROS, Open Source or vendor lock-in are second round considerations.", "staff must be able to work with your stack solving a problem, They will help leverage the decision if they tell their Manager that they are able to work with the tools. Possibly even tried out a demo without hardware.", "If people coming from school knowing this programming language and if you\u2019re lucky some hardware/software concepts, you\u2019ll also solve the problem of companies trying to find educated personnel. Might be an opportunity for the ROSIN project and education.", "do not underestimate developing and selling a product, and providing support if you\u2019re going to provide hardware/software as turnkey solution.", "consultancy would be where you have a starting point.", "Open source hardware\n", "Mechanics (dimensioning, CAD / drawings, most interchangeable parts as possible)", "Electronics (CAD / BOM)", "\n", "Open source software\n", "ROS native", "Access to the closed-loop control (monitoring, configuring etc.)", "\n", "Certified", "Not being able to run tasks concurrently", "Robot not following the setpoint (not because of the mechanics)", "Missing (paid) options", "Low memory", "ROS driver not exposing all controller functions", "And the list goes on\u2026", "The mechanics", "The software (from real time to GUI)"], "url": "https://discourse.ros.org/t/fully-open-source-industrial-robotics-controller/5832"},
{"title": "[URDF-NG] Next-generation robot descriptions", "thread_contents": ["There is some ", " on how to improve the current URDF format and parsers to fill some immediate needs.", "This topic is for questioning everything and discussing what the perfect way to share and reuse information about a robot might be.", "What needs are there? What assumptions can we make?", "What is this robot we are describing? What information do we need to share?", "What counts as a robot really? For the purposes of this discussion a robot is any physical device whose interaction with the world is sensed, processed, and acted upon in an intentional manner.", "For instance, some robots can be described as a set of rigid bodies and constraints on those bodies. Others include soft bodies or flexures. Nonlinear constraints (such as joint limits) and losses (transmission inefficiency) are often known or estimated well enough that we want to include them in the description. Sometimes the constraints are simplified to the joints between bodies and described in the manner of a graph.", "Myself, I use URDF only when forced to by the tools needed for a particular project. I prefer an embeddable scripting language (lua, python) for the description. Cleaner than XML for editing and one has callback functions for non-linear or heuristic information. If you are unfamiliar with this approach,", ".", "Sounds great right? However I don\u2019t get any of the benefits of a well designed and dessiminated format.", "I see enough frustration in the world with the limitations of URDF that it\u2019s clear that there is a need for something more. What does the next generation of robot description look like?", "I have a couple of observations.", "Does the use of a scripting language provide any other benefits, such as programmable features? That would be an interesting concept.", "The lack of tools for creating and editing URDF files in a more suitable interface is the problem, rather than XML, in my opinion.", "I agree that there are nicer, more suitable interfaces for creating and editing the robot information. However, ASCII text is a format that almost everyone on almost every platform can edit. No one has to wait for the editing tool and all it\u2019s dependencies to be brought to their platform.", "A YAML format for URDF would probably be as readableandcwritable as the RBDL format you mentioned.", "I prefer YAML to XML for static data files as well. The RBDL uses the Lua programming language. (The RBDL format is Lua).", "Does the use of a scripting language provide any other benefits, such as programmable features? That would be an interesting concept.", "Yes. If the definition file is used statically and only loaded from disk, then the language can be used to encapsulate concepts, deal with repitition nicely, and increase readability. For instance, if one wanted to specify their link parameters in terms of of Denavit-Hartenberg parameters instead of xyz-rpy, one would just insert a small function at the top of the file to do the conversion.", "If the definition file is used dynamically, then one can write functions in the programming language that are called by the code using the file. For instance, one could have a joint_friction(joint_number, joint_angle, joint_velocity) hook function defined in the config file that would get called during simulation steps.", "It would be nice to have URDF\u2019s in python, like how dynamic_configure files work.", "\nThat way it is not yet another language to learn.", "\nThe robot description would be much cleaner, you could support generating the description from parameters. This is useful for highly configurable robots such as the turtlebot, which currently hack this functionality into the existing xacro/urdf system.", "We should have the gazebo people and the ROS-I people as part of the discussion.", "\n", " and I been discussing this topic for a while.  It would be good to have one format for all of the ROS / Gazebo projects.  SDF was something that we thought could be the format.  There is a long thread on this on the old google groups.", " You can see how creating URDF\u2019s in python can work in practice with ", ". I wrote when I needed to deal with non-trivial URDF\u2019s. I find working with XML directly (editing the files) unpleasant. The idea that one would write a python script to parse and execute a language embedded into xml (ie xacro), rather than just using python directly, confuses me to no end. But I\u2019ve seen colleagues invest a lot of time and frustration using xacro to try to solve the problems they have with the URDF format so I guess it makes sense to some.", "Though perhaps I\u2019m misunderstanding you. Do you mean instead that you\u2019d like to see a dynamic_configure API? A robot_model node that you can dynamically update using dynamic_configure instead of a static xml text robot_model parameter?", "Any chance you can link that thread here? Any key outcomes of the thread?", "EDIT: I think ", ".", "EDIT: It seems the general consensus is to standardize on the SDF format. That seems like a sane iteration of the current situation with ROS and Gazebo.", "That looks awesome, thanks for the link.", "Something like that is what I was looking for. I would like to see something like that become the standard way to do robot description.", "EDIT: This is a response to your first message, I didn\u2019t see your second one.", "I started this thread hoping for some discussion on, well, next generation robot descriptions. Harmonizing current formats (URDF/SDF/etc) is a really important discussion for the community; but that\u2019s really about cleaning up the current generation.", "Anyone interested in the next generation?", "That\u2019s why I brought up the Python description format.", "ROS2 replaces XML launch files with Python ones, I think that it makes sense to do something similar with URDF the other source of XML pain in the ROS ecosystem.", "Looks like your stuff generates XML and sends it out to stdout and eventually into the robot_description parameter to be used by robot_state_publisher.", "I think for the next generation of URDF, I would like to get rid of the XML entirely (if possible) and have the Python code actually act as robot state publisher and send out the description data on a latching ", " topic, as well as tf data.", "As for the actual format, I like odio_urdf but I haven\u2019t looked at it very closely.", " ", "Can we get the Gazebo team on this thread?", "Hopefully the next gen of robot descriptions is the same between ROS2 and Gazebo.", "I believe they\u2019re already listening in.", "This category grew out of the ROS Live event with robot description formats", "\nas the topic.", " has put together a nice recording as well as lots of links can be", "\nfound at: ", "I\u2019ll call out specifically the ", "\nIf you weren\u2019t there or don\u2019t have time to listen at the moment.", "Tully", "ROS industrial needs to be part of it.  I looped Paul in on this thread.", "We started a document that some of the key players commented on.", "\nProbably should push it a bit harder now if there is interest.", "This is a big", "Looks like your stuff generates XML and sends it out to stdout and eventually into the robot_description parameter to be used by robot_state_publisher.", "Yes, that code is specifically for the URDF way of describing robots. The internal hierarchy of objects mirrors the URDF elements, and each object has a string representation that matches the URDF XML.", "I think for the next generation of URDF, I would like to get rid of the XML entirely (if possible) and have the Python code actually act as robot state publisher and send out the description data on a latching /robot_description topic, as well as tf data.", "I\u2019m having a hard time picturing why one would want to do this.", "There are many uses for a robot description that have no need for ROS IPC.", "Also one could argue that the state of the robot should not be part of it\u2019s description. The ", " and ", " documentation has some nice discussion of this, though with a focus on simulation and the simbody implementation.", "I\u2019m not sure python would be an ideal choice for describing a robot. Python was not designed to be a data exchange language. In addition, web applications, which can parse XML, would have a hard time with python.", "Hi all, it seems that there is interest in figuring out what to do ASAP for ROS2, which was not the point of this thread. I\u2019ve ", " and I\u2019ll link in the external discussions mentioned above so there is a good start for that.", "It will be cleaner and clearer to ", ".", "Describing flexible link robots? Reconfigurable robots? Soft robots? Able to wrap your head around configuration languages, or why a shared object file with an API might make a good reuseable, shareable robot description? Continue below.", "I\u2019ve always found a lot of value in a non-interpreted interchange format, like URDF or SDF or even HTML or JSON. So, for me I don\u2019t like the idea of a description format that exists only in an interpreted form (like as Python or Lua).", "It\u2019s convenient to have these tools when writing the descriptions, but very inconvenient when trying to consume the description in many different places. I think a good middle ground is like what we have with xacro + URDF. You might have issues with either xacro or URDF, but I think a good idea that came out of that is to pair a well established interchange format with \u201ctemplating-like\u201d tools to make it easier to create the description by hand or programmatically. This is reflected in things like web development, where the interchange format is HTML, but commonly the server will use a scripting language to generate the otherwise tedious to specify XML content.", "We were leaning towards SDF during our discussions.", "\nand at Modbot we are all about flexible / reconfigurable robots so that", "\npart interests us.", "I\u2019ve always found a lot of value in a non-interpreted interchange format, like URDF or SDF or even HTML or JSON. So, for me I don\u2019t like the idea of a description format that exists only in an interpreted form (like as Python or Lua).", "It\u2019s convenient to have these tools when writing the descriptions, but very inconvenient when trying to consume the description in many different places.", "I think a key part of an interchange format is that it\u2019s content is very clear and easy to grasp and process by all. A simple declarative text file certainly achieves that.", "The strength of that approach is that when in inevitable need for dealing with repetitive and formulaic declarations arises, you can use xacro and I can use assembly and everyone is happy.", "So I agree there is a strong case for a non-interpreted format.", "Can you elaborate on what about an interpreted/script interchange format worries you? The second you touch ROS (or xacro) you are loading the python library, so the memory/processing overhead can\u2019t be the issue. Configuration scripts usually have a minimum of \u2018code\u2019 in them (cmake being an ugly exception) and thus a minimum of patterns or idioms that are tricky for the new user, but perhaps that is the concern?", "It\u2019s convenient to have these tools when writing the descriptions, but very inconvenient when trying to consume the description in many different places.", "I think a good middle ground is like what we have with xacro + URDF. You might have issues with either xacro or URDF, but I think a good idea that came out of that is to pair a well established interchange format with \u201ctemplating-like\u201d tools to make it easier to create the description by hand or programmatically. This is reflected in things like web development, where the interchange format is HTML, but commonly the server will use a scripting language to generate the otherwise tedious to specify XML content.", "Is this what you would choose if you had a blank slate going forward? Is there anything you would want to see change or improve?", "Can you elaborate on what about an interpreted/script interchange format worries you?", "If the data exchange (previously I used interchange, which I think is not the correct terminology now) format is a script or interpreted then everyone who uses it needs to have an appropriate interpreter loaded and any context that might be used in the script. For example, RBDL requires everyone that needs the description to have a Lua interpreter. Lua is by no means a heavy requirement, but there are plenty of platforms where that would be inconvenient at best, for example loading the description in a webpage (couldn\u2019t find a Lua vm in javascript) or iterating through the links in Matlab (couldn\u2019t find one here either), neither of which have a native way to hook into a lua interpreter. You can always parse the description lua file in C++ and then serialize the in-memory \u201cobject\u201d to send it to a browser or to Matlab, but then you just have an unofficial data exchange format.", "Even if you manage to get an interpreter at each place where you want to use the description then you\u2019re likely to need some additional context to be available at each of those places too. Because the description script can have logic in it, it\u2019s a natural extension to want to use command line arguments or environment variables or something else to modify the resulting description. You could limit this functionality, perhaps RBDL does, but this is a core utility that people use in xacro and really need to make it easier to describe robots with lots of optional configurations. If you have no static intermediate format, then this context needs to go along with the description script so it can be given to the interpreter at each end point where the description is consumed.", "The second you touch ROS (or xacro) you are loading the python library, so the memory/processing overhead can\u2019t be the issue.", "Why do you need python to touch ROS? I can write a URDF without using xacro and load it with a pure C++ library. In fact I\u2019d argue that having an intermediate format that is data only would considerably reduce cpu and memory overhead compared to an data exchange format that is interpreted, especially when being consumed in several places.", "Is this what you would choose if you had a blank slate going forward? Is there anything you would want to see change or improve?", "I would prefer an explicitly defined data exchange format for the description that is data-only (probably XML or JSON) and then pair that with a prefered templating interface (xacro, erb, empy). That way consumers of the description can remain as simple as possible and the developers who are creating the descriptions have tools to help them with authoring. It would be great to have a \u201cprefered\u201d or \u201cprescripted\u201d template engine to use, that way tools could be built to understand them, but by leaving that unspecified developers get the freedom to use whatever template engine they prefer.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Save time by not having to think about and create a project specific description. (Accompanied by the risk that the description designers made provisions to handle all aspects of a description that your project needs.)", "Share a description for reuse by others. You and the peers you are sharing with must agree on the meaning of some subset of the information in the description.", "Share a description between different softwares. By using a single description, errors introduced by data entry mistakes are eliminated. ", ".", "what else?", "Easy to create and edit across all platforms.", "Minimize difficulty in integrating the description into new codes/languages/platforms.", "A starting set of description information that is useful and whos meaning is agreed upon.", "The ability to be extended as needed with project specific info.", "The ability to be formally extended by the community as progress maches forward.", "The descriptions are primarily created by people and the one tool in common across all platforms is the text editor.", "The descriptions are primarily consumed by software.", "Any given description is usually project specific (No standard object model)", "Only my internal software reads the description, so not a lot of reuse between software.", "No reuse between peers either. As a consultant an annoying amount of my work is confidential.", "XML was intended as a language primarily for computers to work with, with human readability as a bonus. The lack of tools for creating and editing URDF files in a more suitable interface is the problem, rather than XML, in my opinion.", "A YAML format for URDF would probably be as readableandcwritable as the RBDL format you mentioned."], "url": "https://discourse.ros.org/t/urdf-ng-next-generation-robot-descriptions/222"},
{"title": "ROS Quality Assurance Working Group December 2019 Meeting Notes", "thread_contents": ["\nAdam Alami (facilitator of the meeting)", "\nDr. ", "\nGijs van der Hoorn", "\nJohn-Paul Ore", "\nMatt Droter", "\nMatt Robinson", "\nMax Krichenbauer", "\nRidhwan Luthra", "\nV\u00edctor Mayoral Vilches", "Agenda:", "Thanks for the report ", "!", "We ran out of time. We couldn\u2019t discuss these two items:", "Too bad we couldn\u2019t have time for this ", " . Regarding HAROS, I wanted to call for additional input on anyone trying this actively. We are starting to (as pointed out in a previous meeting) and would be happy to share our experiences if anyone\u2019s interested.", "Regarding the second item, I understand it might be of less interest to the group given the fact that is mostly security-related (though quality and security interconnect in some cases). Would it make sense to try again this second item in the next telco? A 15-20 min slot would be enough to share a few bits of our work there. We\u2019ve made an effort to align with ROSin robusts\u2019 work so in a way, it follows from Chris\u2019s talk.", "Definitely. Will dedicate 15 mins to both items in next meeting.", "Fantastic! We will prepare accordingly then.", "Hi V\u00edctor,", "(Sorry if this is hijacking the topic a little)", "Regarding HAROS for ROS 2, I would like to add here that Max Krichenbauer submitted a PR some time ago which adds support for ROS 2 workspaces. This is already available in the current release.", "Hi Victor,", "\nSorry for the late follow-up and sorry we didn\u2019t have time to talk about this anymore last Thursday.", "As Andre already pointed out, I\u2019ve been working on making HAROS \u201cROS2-ready\u201d.", "Apart from the PRs that allow it to find ROS2 packages,", "\nthere is also a ROS2 (ament) linter package in development:", "\n", "Contribute to esol-community/ament_lint development by creating an account on GitHub.", "\n", "\nWith this, you can simply add ", " as a test dependency, and HAROS will be automatically installed in an appropriate virtual environment and run to analyze your code.", "\nIt\u2019s still under development, but should already work for both ", " and ", " packages.", "Could you please let me know why you\u2019re interested in the topic? Than I can make sure that future development will cover your use case.", "Best regards,", "\nMax", "I am glad to see ", " 's talk being circulated more widely. It is a great piece of work and deserves a wider audience. The ROSCon videos should be up shortly, but I think this work could have a lot of impact as a blog post. It would be great if the original authors would be able to summarize their work in document so we could point new users to it. I might be able to find a platform to publish the work on if that were to happen.", "I would like to know what needs to happen with respect to the Wiki last edited PR. Is there anything I can do to help gather requirements?", "I would like to know what needs to happen with respect to the Wiki last edited PR. Is there anything I can do to help gather requirements?", "Thank you!", "\nI think it would need a reviewer and of course more people voicing their opinion either in favor or against it.", "\n", "\n", "Thanks, ", "! I don\u2019t think that we had considered summarising the work as a blog post / a concise document for ROS developers, but that seems like a brilliant idea that we should definitely prioritise ", " If you could help us to publish such a document, that would be fantastic!", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Talk by Dr. ", "\n", "Discuss how we can accelerate the review and merge of the current initiatives:\n", "QA Dashboard. ", " to the pending PR.", "The CI Badge for ", ". ", " to the pending PR.", "The list of pending PRs for review. ", " to the pending PR.", "\n", "Discuss next quality initiative.\n", "Gijs proposed a warning message for outdated ROS packages Wiki pages.", "HAROS for ROS 2", "Quick introduction to quality flaws identified while researching on security", "\n", "\n", " : The ", " to the talk slides.", "\n", " :  We discussed the various reasons why our PRs are not attended, reviewed and merged. One of the reasons we discussed is not engaging the community adequately and socializing the QA initiatives. We decided to make a \u201cCall for comments\u201d posts for all our initiatives. The posts will call for people to comment and contribute to the PRs discussions.", "\n", " : This initiative was discussed. The conclusion is that a community consultation should continue in order to have precise requirements of what it needed to happen in order to address the problem.", "We ran out of time. We couldn\u2019t discuss these two items:\n", "HAROS for ROS 2", "Quick introduction to quality flaws identified while researching on security", "\n", "\n", " and ", " to post in the QA Forum \u201cCall for Comments\u201d for the pending initiatives\u2026", "HAROS for ROS 2", "Quick introduction to quality flaws identified while researching on security"], "url": "https://discourse.ros.org/t/ros-quality-assurance-working-group-december-2019-meeting-notes/11824"},
{"title": "Input validation as a metric for quality", "thread_contents": ["Security and robustness is a major concern to a lot of folks in ROS community. Keeping this in mind, I propose that sanitation and validation of inputs (and possibly outputs) be considered as a strong metric for calculating the quality of a package. Here are some of my thoughts:", "In order to increase security and robustness, as a first step, we can start with checking inputs from", "Some kinds of data require sanitation because they are constrained however, those constraints aren\u2019t explicit such as range (input to switch case, pixel values, euler angles), mathematical relationships (quaternions), internal structure (URL, compressed octree maps) among others.", "Ensuring the constraints are met in the input is important because of the ", " nature of topics and parameters. The lack of good command line argument parsing tools for C++ (an important language in the community) and the allure of using command line for passing arguments can result in an unstable configuration. As a result, some packages are only a key-stroke away from either crashing or worse propagating the error onwards to other packages.", "As a community, we should create packages that can handle erroneous inputs gracefully by", "I expect URL parsing to mostly be an issue in the near future with the increase in packages providing nodes to communicate over the internet [2]. However, others are a concern right now, especially during debugging. We can send erroneous input from command line tools which offer no validation (eg: default values for quaternion are [0, 0, 0, 0]).", "The effect on performance, code complexity, development effort is expected to be minimum with an assured increase in overall robustness of the software stack. Moreover, a lot of packages already adhere to the best practices like this.", "I\u2019d like to confess in advance that I don\u2019t know how to enforce or detect violations automatically, or even what all would constitute a violation of ", " since it might be a non-exhaustive list. Having said that, I\u2019m eager to know your views on the topic and to answer, clarify and discuss.", "Thanks", "\nKunal Tyagi", "[2]: By then, hopefully, the issues are resolved in the upstream libraries", "There is some discussion related to input validation here:", "There is some discussion related to input validation here:", "In the meanwhile I summarized considerations about \u201cDesign by Contract\u201d (which relates to input and output validation, could also be used for consistency checking on the node/nodelet level) and how it could be applied to ROS in one of my fun projects ", ". It didn\u2019t reach \u201cimplementation phase\u201d. Don\u2019t assume any progress in implementation\u2026 I decided to retire that project and continue with a project in ROS2 whenever I find some time and motivation ", " However the projects ", " is probably a shorter read than the thread.", "I\u2019d like to confess in advance that I don\u2019t know how to enforce or detect violations automatically, or even what all would constitute a violation of input validation since it might be a non-exhaustive list. Having said that, I\u2019m eager to know your views on the topic and to answer, clarify and discuss.", "The ", " points to a project where Python ", " is used for property based testing in ROS1. That would be a possible way to verify violations.", "It could be even easier to integrate with ROS2 because the ROS2 infrastructure supports ", " out of the box with ", ". Python ", " integrates with ", " out-of-the-box. If you search in the ", " you will find out how it integrates with ", ". (BTW: ", " is legacy\u2026)", "Having an DBC sounds the best way forward, however, for a lot of languages, libraries/standard don\u2019t exist to implement packages in such a fashion. I think with ROS2, we\u2019ll be seeing packages in a number of different languages (at least Go, Rust, and C apart from Python, C++ and Lisp).", "As such, I have a few open ended questions. How can we", "Since DBC implementations are immature, and we should start somewhere so as to enable simpler on-boarding of packages to DBC paradigm. I like the idea of using Python hypothesis to create simple test nodes for other packages to run and test against.", " for all major ROS packages with a message, we should add Python nodes to read and send messages (pre-defined types) to test the assumptions for that message. This helps people test if their system is resilient to wrong inputs by writing output tests themselves (following examples is easier than doing it from scratch).", "Maybe make this a standard practices so people can call relevant functions from the message package to test the assumptions themselves for their messages. (This might result in the same code being written multiple times in multiple language or writing the code in C for inter-operability)", "This also enables a debug launch method where people can launch these nodes to check if their packages are sending the correct data during normal run-time operations or run these nodes against a rosbag.", "As such, I have a few open ended questions. How can we", "I don\u2019t know if scoring is reasonable.", "You want DbC checking enabled in development/integration versions of the software only (not in production versions). E.g. compiled programming languages with built-in support implement this with conditional \u201cinjection\u201d of the DbC logic during compile time. \u201cBy throwing a compiler switch, Contracts code can be enabled or can be withdrawn from the compiled code.\u201d (", "). C++17 supports DbC as well (", "). I don\u2019t know if it is implemented in C++ compilers already and how. (If the language does not have built-in support the \u201cmanual\u201d conditional \u201cinjection\u201d of DbC logic is a potential source for errors. This applies on the ROS level as well.)", "I feel that a package with the correct checks on input and output would increase the robustness of any system it\u2019s used in. I really like knowing that none of my nodes can seg fault or show undefined behavior, no matter what you throw at them. This is hard and time consuming. In order to incentivize such practices in the community, we need to reward the packages which aspire for a higher standard for stability as well as inform the wider community about them.", "The ", " tag in the README of a repository gives me a little more confidence in a foreign codebase. A ", " tag increases my confidence but a ", " doesn\u2019t. A well-documented README (or similar file) ensures me that the developer wants other to use the package and has documented it\u2019s correct usage and failings. These anecdotal feelings without any fact make me think that a score for robustness is reasonable.", "Robustness is an abstract concept, but is influenced by a lot of factors. Resilience to random inputs (fuzzing) is one of them. Lack of seg-faults is another. There are a variety of factors, each with a different weight to a different segment of user. First step in increasing robustness is always ensuring you only accept the correct input and deliver the correct output. As a result, the first step towards a badge of robustness would be to have a badge related to Input and Output validation. It can be a simple ", " sticker or a ", " sticker or something a more complicated than that (if that\u2019s possible).", "I would be using Contracts to mean something to validate input/output against.", "It depends on the overall application context", "I completely agree with this. It\u2019s upto the user to choose the correct contract. Contracts can\u2019t be one-size-fits-all. Moreover, there is little reason not to parametrise the contracts. User might want to choose a lower and upper bound on acceleration along x-axis and y-axis and a total acceleration magnitude constraint. We can\u2019t know it in advance. However, we can know that for sensor_msgs/NavSatFix.position_covariance_type, there are only a fixed range allowed, and this can be an example of standard contract. User might include a run time check (only option if the node is in say, python) or a compile time check. We shouldn\u2019t limit the options either way. Providing contracts only to a certain language would change the capabilities of ROS as well as the results people expect in different languages.", "I think contracts would be like messages. ROS would provide a few standard contracts, but users would be free to combine a standard contract provided by ROS as they wish or write their own to suit their needs. Just like how users might use the Imu message or want to create a new Imu message without orientation or a new message with pressure.", "built-in support implement this with conditional \u201cinjection\u201d of the DbC logic during compile time", "I\u2019ve seen people use modified asserts and logging methods which activate based on the compile type (Debug, Release, ReleaseWithDebugInfo). There\u2019s no reason why it shoudn\u2019t be similar for contracts. This is what makes me skeptical of the contract proposal for C++.", "The user should be able to use the contract how ever required. It could be compile time or run time.", "\nCompile time would require using extra libraries or creating new macros or wait for future standard support. But this approach isn\u2019t language agnostic. For run time support, leveraging DDS might be a good option.", "C++17 supports DbC as well", "On a related note, ", " doesn\u2019t have contracts.", "In many cases the interface data types are too complex to define what \u201cvalid\u201d data is", "This is the issue with not only many sensor_msgs (among other messages from visualization_msgs, etc.), but also configuration parameters and dynparams for nodes. This doesn\u2019t mean we can\u2019t do something for the simpler messages or simpler checks.", "We can add simple contracts, specially the conditions ones written as comments in the messages (number of points is width*height. It\u2019s a straight path to segmentation fault in Python as well as C++ without this simple check). In fact, the initial contracts would be simply whatever checks people already use.", "I personally feel contracts shouldn\u2019t rely solely on compile time DbC because it restricts people from using a language the rest of the logic would be best written in.", "Sidenote: Any form of implemented contracts would need to be integrated with ", " command line interface or with the message type itself. Or else the user might face trouble diagnosing the reason the messages (from command line) aren\u2019t doing what they are supposed to do, and hunting down contracts in every subscribing node might be a headache. If contracts are good, but tooling doesn\u2019t exist, people wouldn\u2019t use them. If they are bad (the interest in DbC would like to say otherwise ", " ), they might as well not exist in the library.", "I really like knowing that none of my nodes can seg fault or show undefined behavior, no matter what you throw at them.", "To detect seg faults one usually runs the production code with a dynamic analysis tool (like e.g. ", ", ", " consider ", " or ", " (", ").", "To check against seg faults on the ROS level you would have to check if there is any response from the node (the test runner should not crash) after throwing some input at it. To generate as much as possible different input (for fuzzy testing) you would need some ROS level property based testing framework.", " uses property based testing ", " and ", " to generate input data for tests. The same approach could be used to generate input data for ROS nodes. However the ROS1 test frameworks would need (significant) modification/extension to get the data into test cases. (In case I am wrong please correct me!)", "Thanks for pyros. It looks like it can be the base of \u201cfuzzy testing\u201d.", "We should decouple pyros-dev capabilities depending on which package the message belongs to (right now the core code is tightly coupled with std_msgs). It\u2019d make it easier for people to write tests (parametrised) for their custom messages", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Subscribers and service servers", "Command line", "Parameter server", "checking range of inputs either against constants (defined in the message)", "using robust libraries like OpenCV which guarantee trimming of input to within acceptable ranges", "using mathematical constraints, such as by normalizing quaternions on input", "range checking while creating data-structures from compressed messages", "using compatible libraries for dealing with URL (", " Each library has a different quirk in URL parsing)", "score a given implementation (say on a scale of 0 being no contract to 5 being a contract with no assumptions left unchecked).", "handle trade-offs: Lots of package owners might face the issue of increase in latency in order to increase their score from say 4 to 5. As a result, we might want to categorize types of assumptions so the highest priority ones affect score more than one with a low priority.", "create guidelines regarding what a contract must have or better (next point)", "create a general guideline for all languages which stays applicable with/without a DBC support. This will enable a C package to adhere to the guidelines as easily as a Python package", "find out the major issues in integration between packages as a starting point for the previous points (some issues faced by me have been mentioned in passing but I\u2019m by no means a good representation of ROS community)", "score a given implementation (say on a scale of 0 being no contract to 5 being a contract with no assumptions left unchecked).", "\n", " If e.g. data input/output to a ROS node/nodelet is considered valid or not depends in many cases on the application the node/nodelet is used in and cannot be defined in the node/nodelet scope in a generic way. Consider a node wrapping an IMU. The data types are simple (", "). If e.g. the accelerations are beyond the hardware specification it is pretty obvious that the output (e.g. published topic) is invalid. An application level node/nodelet which uses the IMU nodes data as input could validate it. For a generic node which uses the IMU nodes data as input, lets say to stabilize the pose of a drone, the \u201cvalidity\u201d of the input would depend on the overall application setup and capabilities (IMU node, \u201cstabilization\u201d node, motor control node, etc.). The acceleration input would be considered invalid above levels which would lead the overall setup to fail in stabilizing the drone pose.", "\n", " E.g. consider a node/nodelet providing or consuming the ", " data type\u2026", "handle trade-offs: Lots of package owners might face the issue of increase in latency in order to increase their score from say 4 to 5. As a result, we might want to categorize types of assumptions so the highest priority ones affect score more than one with a low priority.", "create guidelines regarding what a contract must have or better (next point)", "See comment about \u201cscoring\u201d ", ". I think it is just possible to recommend what a contract should have (if reasonable)."], "url": "https://discourse.ros.org/t/input-validation-as-a-metric-for-quality/3732"},
{"title": "The MoveIt 2 journey (part 0): why MoveIt 2?", "thread_contents": ["This is the first of a series of articles that we will produce to describe our learning experience and contributions with the MoveIt 2 and ROS 2 communities. The MoveIt! motion planning framework is an open source software for motion planning, manipulation, 3D perception, kinematics, control and navigation. It\u2019s built on top of the Robot Operating System (ROS) and altogether, according to its maintainers, remains the third most popular package in the ROS world. MoveIt! provides an easy-to-use platform for developing advanced robotics applications, evaluating new robot designs, and building integrated robotics products for industrial, commercial, R&D and other domains.", "As MoveIt! evolves beyond R&D environments and starts getting integrated into more and more commercial and industrial products, it\u2019s only natural to look for improvements and seek alignment with groups attempting to use ROS on industrial and commercial environments.", "Over the last years some groups have extended ROS to obtain different degrees of determinism (e.g. [1]), however these attempts ended up with complex and use-case specific architectures that were never fully adopted by industry. As described at [2], ROS started in November 2007 as the development environment for the research-oriented Willow Garage PR2 robot. Due to its research nature, ROS did not considered many aspects relevant for industry. One of such was real-time compliance. ROS was never meant to guarantee deterministic responses, critical for an improved motion planning experience.", "With complete understanding of these limitations, around 2014, Open Robotics started designing a new version of ROS called ROS 2. Such version aimed to deliver upgraded features when compared to ROS 1 and was officially released the 8th of December, 2017. ROS 2 has been extended enabling support for teams of multiple robots (or robot modules), small embedded platforms or primitives to enable real-time robotic systems.", "As one of the companies leading the transition to ROS 2 and as the company behind ", ", the first modular robotic arm that runs ROS 2 natively, the use of MoveIt! seemed natural to us. While MARA can be operated ", " with MoveIt! (see ", ") through the ", " ROS package, it was always our desire to provide the best experience. And this brought us to ask ourselves: Why MoveIt 2?", "Our motivation:", ". While this can be fine tuned, doing so is technically complex. Moreover, it generally requires to have a powerful-enough computer and, even in the best case, unnecessary latencies (due to the layers of abstraction) appear in the overall control chain.", ". ROS 2 delivers upgraded features when compared to ROS 1. It has been extended including support for teams of multiple robots (or robot modules), small embedded platforms or primitives to enable real-time robotic systems. We can particularly highlight the following characteristics:", ". Our ", " technology allows to build robots whose components are all ROS 2-native. It\u2019s only natural that we aim for a motion planning framework that can similarly also operate in a ROS 2-native manner.", ": Open Robotics performed an initial analysis [3,4] of the capabilities one could achieve with ROS 2 in terms of determinism. These articles already highlight the importance of the computer architecture, the underlying operating system or the communication middleware used. All these aspects need to be taken into account when designing a real-time distributed system. This matter was further investigated by our group at [6,7,8,9] where we evaluated and characterized the ROS 2 responses on a (an embedded) system while researching and optimizing the underlying communications middleware (DDS), the Linux Networking Stack, the Linux operating system or the base link layer towards the creation of a firm-real-time capable distributed system based in ROS 2. Focused purely on ROS 2 layers (ROS Client Library (rcl), ROS middleware layer (rmw), etc.), Maruyama et al. [5] conducted an experimental study aimed at comparing the performance of ROS and a preliminary version of ROS 2, under different types of Data Distribution Services (DDSs). More recently, member of Apex.AI wrote a short introduction[10] summarizing optimizations required in the ROS 2 layers such as the use of safe data types, split memory allocation in init and runtime phases, remove all blocking calls or implement real-time safe log output handler among others.", "\nAll these optimizations are but pre-requirements to obtain real-time distributed motion planning over ROS 2. It\u2019s also required to optimize the motion planning framework itself. This will and end-to-end real-time motion planning experience.", "\nMoveIt 2 is the place where to do so. The adoption of ROS 2 facilitates the real-time optimization of the underlying layers and paves the path towards real-time motion planners. Preliminary work (though not connected to ROS 2 just yet) is available at ", " (", ").", ". According to some of its core maintainers, \u201cmany companies and R&D teams report they will not migrate to ROS 2 until the MoveIt 2 port is complete\u201d. Looking at past releases of ROS, this was similarly true when Kinetic was released; months later, when MoveIt! was ready for Kinetic, adoption picked up dramatically.", "Motivated by the technical and strategical benefits, our team announced a few weeks ago ", ". We plan to deliver to the community a first working prototype of MoveIt 2 with MARA, as ", ", and have partnered with ", " to benefit from their expertise in motion planning.", "Our work is happening at ", " and we\u2019re contributing directly to the official MoveIt 2 repository (", ") through Pull Requests. In barely a few weeks, the repository has about 60 starts and active involvement from members of the MoveIt maintainers group. We encourage everyone to jump in and contribute to MoveIt 2.", "We\u2019d like to credit our partners at PickNik for their support in the process. Similarly, we\u2019d like to thank William Woodall, Dirk Thomas, Tully Foote or Robert Haschke for their insights and contributions in this first phase of the project.", "The unofficial MoveIt 2 logos are the result of ", ". We\u2019ve made them available for everyone.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", "\n", "\n", ": Supported by companies from all around the world that collaborate with open source contributions to make ROS 2 the de facto standard for robot application development.", "\n", ": ROS 2 was built from the ground up to be industry-grade and used in production environments, including high reliability and safety critical systems.", "\n", ": first class support for Linux, Windows, and macOS plus a tiered support model that allows for seamless ports to new platforms, such as real-time and embedded OSs.", "\n", ": Layered architecture which allows for the co-existence of both open source and proprietary solutions while facilitating the comparison of different technologies for each layer.", "\n", ": ROS 2 is ready for use across a wide array of robotics applications, across several domains. From indoor to outdoor, home to automotive, underwater to space, and consumer to industrial.", "\n", ": The default communications method in ROS 2 uses the industry standards DDS and RTPS, which are already widely deployed in a variety of industrial applications, from factories to aerospace.", "\n", ": ROS 2 provides the robotics tools, libraries, and capabilities needed to develop applications, allowing developers to focus on the work that is important for business.", "\n", ": ROS 2 code is licensed under Apache 2.0 License, with ported ROS 1 code under the 3-clause (or \u201cnew\u201d) BSD License. Both licenses allow permissive use of the software, without implications on the user\u2019s intellectual property.", "\n", ": Over 10+ years the ROS project has produced a vast ecosystem of software for robotics by nurturing a global community of hundreds of thousands of developers and users who contribute to and improve that software. ROS 2 is developed by and for that community, who will be its stewards into the future.", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "[1] Wei, H., Shao, Z., Huang, Z., Chen, R., Guan, Y., Tan, J., & Shao, Z. (2016). RT-ROS: A real-time ROS architecture on multi-core processors. Future generation computer systems, 56, 171-178.", "[2] Gerkey, B., Why ROS 2.0? Retrieved from ", "\n", "[3] Kay, J., Introduction to Real-time Systems. Retrieved from ", "\n", "[4] Kay, J., Proposal for Implementation of Real-time Systems in ROS 2. Retrieved from ", "\n", "[5] Maruyama, Y., Kato, S., & Azumi, T. (2016, October). Exploring the performance of ROS2. In Proceedings of the 13th International Conference on Embedded Software (p. 5). ACM.", "[6] Guti\u00e9rrez, C. S. V., Juan, L. U. S., Ugarte, I. Z., Goenaga, I. M., Kirschgens, L. A., & Vilches, V. M. (2018). Time Synchronization in modular collaborative robots. arXiv preprint arXiv:1809.07295.", "[7] Guti\u00e9rrez, C. S. V., Juan, L. U. S., Ugarte, I. Z., & Vilches, V. M. (2018). Real-time Linux communications: an evaluation of the Linux communication stack for real-time robotic applications. arXiv preprint arXiv:1808.10821.", "[8] Guti\u00e9rrez, C. S. V., Juan, L. U. S., Ugarte, I. Z., & Vilches, V. M. (2018). Towards a distributed and real-time framework for robots: Evaluation of ROS 2.0 communications for real-time robotic applications. arXiv preprint arXiv:1809.02595.", "[9] Guti\u00e9rrez, C. S. V., Juan, L. U. S., Ugarte, I. Z., Goenaga, I. M., Kirschgens, L. A., & Vilches, V. M. (2018). Time Synchronization in modular collaborative robots. arXiv preprint arXiv:1809.07295.", "[10] Pangercic, D., ROS 2 and Real-Time, Retrieved from ", ".", "[12] ", "\n", "[13] ", "\n"], "url": "https://discourse.ros.org/t/the-moveit-2-journey-part-0-why-moveit-2/8461"},
{"title": "ROSCon 2019: Call for Workshop Proposals", "thread_contents": [" is expanding! In past years, members of the community could propose only talks. This year, we are extending the conference format so that you can submit:", "This year\u2019s ROSCon will also include invited panels and keynote speakers.", "Today we are opening submissions for workshops. Please submit your workshop proposals ", ", no later than May 22nd, 2019.", "We cannot offer content that is not proposed! If there is a topic on which you would like to present, please propose it. If you have an idea for an important topic that you do not want to present yourself, please post it for discussion here on ", ".", "All topics related to ROS are invited. Example topics include:", "To get an idea of the content and tone of ROSCon, check out the slides and videos from ", ".", "All submissions will be reviewed by the program committee to evaluate:", "Additional consideration will be given to balancing the subject matter and duration of presentation.", "We encourage proposals from presenters of all backgrounds and experience levels.", "If you have any questions about whether your subject matter is appropriate, feel free to post on ", " or contact the ROSCon 2019 Organizing Committee at ", ".", "Workshop proposals must include", "Accepted presenters will be required to provide their materials 5 weeks before ROSCon for content review to ensure the quality of the event. Content that does not pass review may be removed from the schedule at the discretion of the program committee.", "Submit your workshop proposal by May 22, 2019 ", ".", "The opening of submissions for talks and for videos will announced separately.", "David Lu!! (Locus Robotics)", "\nMelonee Wise (Fetch Robotics)", "\nProgram Co-Chairs", "I hope that you prioritise workshops that are going to be very interactive, or even tutorials, rather than mini-conferences.", "Things I can\u2019t present myself but want to see:", "Thanks for organizing this ", "! I\u2019ll go ahead and share my wish list below:", " Same for MoveIt 2", "Acutronic Robotics and PickNik are the main forces so far behind the ", ". From Acutronic Robotics\u2019 side, we\u2019d be happy to provide an interactive tutorial here demonstrating the capabilities of MoveIt 2 with ", " during ROSCon 2019. Beyond moveit2, there\u2019re probably others doing interesting work which should be covered as part of this workshop. I\u2019ve just announced the creation of the ", " so I\u2019d go ahead and suggest that the tutorial should be called something like \u201c", "\u201d which should group both the moveit2 effort but also, hopefully, other related projects.", "Let\u2019s see the reaction and we\u2019ll then coordinate to make a proposal ", "We will propose one. ", " we will propose one too.", "Can you shed a bit more light on how workshops will happen? I would surmise that the schedule cannot afford very many 3 hour blocks\u2026", "Some questions:", "(subject to change) We\u2019re planning for a small number of workshops to run in parallel in the same slot in the afternoon of October 30th, the day prior to the start of the traditional presentations.", "It would be great if that could be fixed soon. I need to plan travel and might need an extra night in the hotel to make that.", "Understood. We\u2019ll should be able to get a draft program published early next month (after we\u2019ve received and reviewed the workshop proposals).", "run in parallel in the same slot in the afternoon of October 30th", "I agree with ", " that I have to take this into account when making travel arrangements and so it would be great if the exact details were known soon.", "btw, this may be unusual, but I usually make travel arrangements before getting acceptance notifications. It often saves a lot of money to be early\u2026", "May I suggest having a prominent notice about this on the ROSCon site, once you\u2019ve made a decision? Likely, people will not expect the conference to essentially start a bit early!", "Seconding this ", "Great idea! I just started (a bit late) the discussion for a MoveIt 2 Workshop:", "\n", "\n", "We would like to propose HCP (heterogeneous computing platform) for Autonomous vehicle as a topic.", "We are happy to announce that the workshops for ROSCon 2019 will take place on Wednesday October 30th, the day before the main conference event at the same venue from 2pm to 5pm. We\u2019ve just updated the ", " with this information. Please stay tuned for more information. We will be announcing the selected workshops and how to register for them in an upcoming announcement.", "One quick reminder, if you haven\u2019t submitted your workshop proposal, today\u2019s the last day!", "any registration needed to participate in workshop?", "\nor we could just jump in the room on that day?", "thanks,", "Registration is indeed required for the ROSCon workshops. You can select a specific workshop as an add-on to regular conference registration: ", ".", "thanks for the information!", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", " - As in previous years, the standard presentation format will be a talk, with the presenter(s) talking live in front of slides/video, with a brief question period at the end, fitting into a 10, 20 or 30 minute time slot.", "\n", " - One new format is the video presentation, with up to 2 minutes of self-contained audio-visual content, featured alongside the talks in the program. Videos will be presented without live narration or Q/A afterward.", "\n", " - Also new this year are workshops, in which the presenter(s) will provide a hand-on in-depth look at a particular topic in a more interactive format, over the course of up to 3 hours.", "New packages / frameworks", "Insights / improvements for existing packages", "Case studies on unique ROS deployments / use cases", "Developments for specific robots, sensors, platforms", "Competitions / collaborations / initiatives", "ROS in commercial / research / teaching environments", "Standards / best practices / development tools", "\n", " - The proposed content should use ROS in a substantial way, but beyond that, the work must also be relevant and compelling to a general ROS audience. Writing a ROS driver for a specific piece of hardware is an excellent contribution to the community, but describing the intricacies of its firmware may not be relevant to this audience. Furthermore, content should be relevant to a global and diverse community.", "\n", " - We encourage proposals to contain big ideas with high impact. It is preferable that proposals have a demonstrable quality as opposed to being purely theoretical.", "\n", " - Articulating your ideas clearly and grammatically is a key prerequisite for giving a compelling live presentation.", "\n", " - Content should be original and not something that has already been heard before. Will this be the 40th talk on a particular topic at ROSCon? Or are you presenting something new?", "\n", " - Because we are an open-source community, proposals for which the underlying code and other content is available under an open source license have a greater chance of being accepted. It is not a hard requirement, but proposals focused on proprietary systems should contribute in some other way to the community. Promises of future release are difficult to evaluate, so having your content released at the time of proposal submission is preferred.", "Title (maximum 70 characters)", "Presenter(s) (name and affiliation)", "Summary - for public consumption, used in the program schedule (maximum 100 words)", "Description - outline and goals, for review by the program committee. Describe the intended audience and what resources (if any) would be required. Please be sure to include enough information in your proposal for the program committee to evaluate the above review criteria.", "\n", " Navigation 2 tutorial", "\n", " Same for MoveIt 2", "Real-time (", ", ", " and others)", "Safety and standardization (", ")", "Security (", ", ", " and others)", "Will the conference become multi-track?", "Will there be a dedicated workshop day, before 31st or after 2nd?", "If not, will all workshops take place in the same time-slot?"], "url": "https://discourse.ros.org/t/roscon-2019-call-for-workshop-proposals/8855"},
{"title": "ROS 2 TSC Meeting Minutes: 2019-06-20", "thread_contents": [", TSC members, community:", "we would appreciate  some feedback on what you think the most valuable contributions among these ones would be (originally listed above):", "In order of preference from most-wanted to not-as-most-wanted:", "It would be great to have ", " in the safety group, since that\u2019s already one of our possible action items.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Attendees\n", "Open Robotics: Brian G, Louise, William", "LGE: Seonman", "Tier IV: Geoff", "eProsima: Jaime", "Intel: Matt H.", "Apex.AI: Lyle", "ROBOTIS: Pyo", "TRI: Toffee", "Bosch: Karsten", "Acutronic Robotics: Victor", "Amazon: Rutvik", "ARM: Filipe", "Microsoft: Sean", "GVSC (TARDEC): Jon Smereka", "\n", "Old business\n", "[2 mins] [Gerkey] ROS Elevator Pitch Brochure\n", "Done, with ", " to update the docs merged (example: ", ").\n", "Need to re-enable the update job to push it public.", "It will land here: ", "\n", "\n", "\n", "[2 mins] [Gerkey] ROS trademark update\n", "Draft use policy under development, led by Geoff with input from Brian G., Jaime, and some others.\n", "Brian to respond to outstanding feedback.", "\n", "Goal: finish first draft by the end of June, go to legal review, then bring to TSC for discussion.", "\n", "\n", "New business:\n", "[5 mins] [Gerkey] ROSCon updates\n", "\n", "\n", "\n", "\n", "[10 mins] [Gerkey] Dashing debrief\n", "How did we do with the release?\n", "What went well?\n", "(Victor) Thanks, their porting went well. Pre-release of Dashing was rather useful (empowered a complete port within a week of time, including external ROS 2 packages for manipulation)", "\n", "What could be improved?\n", "(Matt H. for nav team) Late changes in Fast-RTPS (1.7.2 - 1.8.0) were disruptive, happened in May, still recovering.\n", "We should integrate more Nav tests to avoid breaks like this.", "Nav team has tests which are docker-ized and use gazebo.", "Lifecycle node greatly increased number of topics and services, making nav test stress the middleware in new ways that aren\u2019t caught by existing tests.", "ROS 2 team to integrate a periodic (nightly?) version of Matt\u2019s nav test.\n", "Future goal: distill nav test to its basic stress-testing characteristics without the complexity of nav or gazebo.", "\n", "\n", "(Geoff)  In the future ROS 2 release team could take in results from external CI as well (e.g. Autoware) during the release testing.", "(Victor) geometry2 was released late. Fixed though.", "(Karsten) issues with getting ROS 1 package maintainers to be responsive to changes (specifically ones needed for ROS 2)\n", "Use the existing process, wherein Open Robotics staff and others in the community will help to mediate handovers: ", "\n", "\n", "\n", "\n", "\n", "[10 mins] [Gerkey] New member application(s) discussion", "\n", "Standing updates:\n", "[20 min] [William / All] Roadmap planning - Eloquent Elusor\n", "Master ticket is ready, seeded with Open Robotics\u2019 planned tasks: ", "\n", "List is work in progress, subject to change", "Getting back to rviz to fill in some long-standing gaps\n", "(Matt H.) Trouble with matching QoS types, e.g., for a map publisher with latching-like behavior. Issue to be opened on rviz.\n", "There is an issue already filed here which I believe is the same thing:\n", "\n", "\n", "\n", "Add the ability to do dynamic_reconfigure-like GUI features via rqt for handling params.", "Plan to get performance tests integrated into main CI system", "\n", "(Rutvik) How about creating a user-focused theme for Eloquent, to help motivate which features are to be prioritized? Volunteers to work on that:\n", "Rutvik", "Brian", "Geoff", "\n", "All are invited to add their own planned contributions as comments to the Eloquent master ticket.", "\n", "TSC members updates:\n", "ROBOTIS\n", "Prepare the ", " on ROS 2 Dashing with ", ", ", "\n", "\n", "Apex.AI\n", "From ", " we will for ROS 2 E work on the performance_test part. Major contributions include\n", "Results will be dumped into the SQL-like database", "Multi-process support", "ros2 launch support", "Aggregation of the test results into the test management suite (which will then allow regression monitoring and better bug triaging)", "\n", "Further contributions that we could bring in (items with * are on the ", " we would contribute 1-2 things based on the popular demand):\n", "Static code analysers (we are evaluating LDRA, TrustInSoft)", "Dynamic code analysers (e.g. Silexica SLX C++)", "*Rewritten rmw layer (super easy integration of DDS implementations, exposed full DDS API, 1 copy operation only, \u2026)", "*rmw that includes RTI Connext Micro", "Documentation testing extension to launch_testing (in which the documentation files written in markdown are instrumented such that they become integration tests)", "Presentation of best practices needed for development according to the ISO 26262 (FuSa for automotive)", "*Upstream the velodyne driver from ", " to ", "\n", "Support for ROS2 compilation on QNX", "Configuration management system. We see these use cases which ROS 2 parameters do not satisfy:\n", "Global configuration that many nodes share (e.g. RTOS priorities, vehicle dimensions, \u2026)", "Process level configuration", "Communication configuration (DDS Connext Micro)", "*Waitset implementation in rclcpp", "\n", "\n", "\n", "eProsima\n", "Fast RTPS 1.8.1 to be released next week\n", "Liveliness completed & bug fixes", "\n", "Micro XRCE-DDS 1.1: To be released also, aligned with Fast RTPS 1.8.1\n", "Micro-ROS to follow.", "\n", "Discovery Server: Public release next week.", "Performance Tests: Public end of this month\n", "Dedicated machines.", "\n", "ROS2 Integration Service\n", "Based on OSRF SOSS", "ROSIN Project", "\n", "\n", "Tier IV\n", "We have 8 half-FTEs beginning work on ROS 2 contributions (total 4 FTEs)", "Proposed contributions for ROS 2 E:\n", "Debian as Tier 1 (preferred) or Tier 2 platform", "Real-time publish/subscribe capability via adding new executors and/or implementing callback groups (need to consult William to determine specific work required; will also of course coordinate with real-time WG)", "Implement an rmw library for RTI\u2019s real-time DDS (Connext DDS Cert)", "\n", "\n", "LGE\n", "On Friday (6/21) we should be able to submit a PR to build webOS OSE with ROS 2 dashing release that\u2019s upgraded to OpenEmbedded 2.6 Thud;\n", "We tested it on raspberrypi3 and emulator (qemux86). It depends on OSE releasing the updated OpenEmbedded support.", "\n", "Need help from OSRF to finish the transfer of meta-ros to ros-infrastructure (from bmwcarit) so PR can be submitted", "\n", "Microsoft\n", "Ongoing project to do Windows binary packaging for ROS 2. Idea is to use bloom to produce vcpkg data and then produce chocolatey artifacts. More work needed to better connect vcpkg and chocolatey.", "Working on producing Dashing binaries from MS build farm.", "\n", "\n", "Working group updates:\n", "[3 min] [Matt H] Navigation\n", "Still wrapping up release for Dashing; aiming for end of June.", "\n", "[3 min] [Rutvik] Security\n", "Bug fix in moveit2 ", ". Short write up ", ".", "Planning to dedicate some resources to ensure moveit2 makes use of dynamic bug finding tools.\n", "To be integrated in the moveit2 CI analyzing both the moveit2 code and ROS 2 (base) code ", "\n", "Planning to report and fix bugs as they\u2019re found (to a limited amount of resources)", "\n", "\n", "[3 min] [Lyle] Real-time\n", "ROS 2 real-time workshop was accepted at ROSCon", "\n", " action items:\n", "Dejan to provide a use case description and the requirements", "Find someone that will lead the work on real-time capable rmw", "Get William to present his findings on real-timeness in rcutils, rcl, and rclcpp", "Create a shared repository for tools used for static and dynamic code analysis as well as tracing", "Present Bosch paper and real-time with Callback+Executor in detail in one of the next meetings", "QA RT buildfarm being finalized and prepared for public release.", "First peek available at ", "\n", "\n", "\n", "[3 min] [Geoff] Safety\n", "Held a somewhat better attended meeting (5 participants, so extrapolating we should have half the ROS community by mid-next year)", "There is significant interest in safety, but most people don\u2019t know exactly what is needed or what to contribute", "We have some concrete actions we can work on (see above topic) but are resource-constrained", "\n", "[3 min] [Karsten] Embedded\n", "Need more activity; Acutronic, eProsima are interested to participate", "\n", "[3 min] [V\u00edctor] Manipulation\n", "Moveit 2 alpha release ", "\n", "Moveit 2 and CI ported to Dashing official release ", "\n", "Still submitting PRs upstream but very little response from the moveit community (slowing down contributions).", "Aiming to get pick&place moveit tutorial running in the coming weeks", "Considering different avenues for the future", "\n", "\n", "\n", "Static code analysers (we are evaluating LDRA, TrustInSoft)", "Dynamic code analysers (e.g. Silexica SLX C++)", "Rewritten rmw layer (super easy integration of DDS implementations, exposed full DDS API, 1 copy operation only, \u2026)", "Rmw that includes RTI Connext Micro", "Documentation testing extension to launch_testing (in which the documentation files written in markdown are instrumented such that they become integration tests)", "Presentation of best practices needed for development according to the ISO 26262 (Functional Safety for automotive)", "Upstream the velodyne driver from ", " to ", "\n", "Support for ROS2  QNX (compilation and testing (we actually got python and thus colcon to run on QNX)", "Configuration management system", "3", "5", "8", "4 (We have someone working on this part time; would be happy to follow your lead)", "1", "2", "7", "9", "6"], "url": "https://discourse.ros.org/t/ros-2-tsc-meeting-minutes-2019-06-20/9652"},
{"title": "Call for Chapters Springer Book on ROS (Volume 3)", "thread_contents": ["After the success of the Springer Book on ROS (Volume 1) with 27 chapters, and Springer Book on ROS (Volume 2) with 19 chapters, this is a third call for chapters for a Springer book on Robot Operating System (ROS). The objective of the third volume is to provide the reader with comprehensive references on the Robot Operating System (ROS), which is currently considered as the main development framework for robotics applications.", "ROS (Robot Operating System) has been developed by Willow Garage and Stanford University as a part of STAIR project as a free and open-source robotic middleware for the large-scale development of complex robotic systems. ROS acts as a meta-operating system for robots as it provides hardware abstraction, low-level device control, inter-processes message-passing and package management. It also provides tools and libraries for obtaining, building, writing, and running code across multiple computers.", "The main advantage of ROS is that it allows manipulating sensor data of the robot as a labeled abstract data stream, called topic, without having to deal with hardware drivers. This book intends to fill the gap and to provide ROS users (academia and industry) with a comprehensive coverage on Robot Operating System concepts and applications. It will cover several topics ranging from basics and foundation to advanced research papers. Tutorial, survey and original research papers will be sought. The book will cover several areas related to robot development using ROS including but not limited to robot navigation, UAVs, arm manipulation, multi-robot communication protocols, Web and mobile interfaces using ROS, integration of new robotic platform to ROS, computer vision applications, development of service robots using ROS, development of new libraries and packages for ROS, using ROS in education, etc. Every book chapter should be accompanied with a working code to be put later in a common repository for the readers.", "This book is expected to be published by April of 2018 by Springer. It will appear under the Studies in Computational Intelligence series. For additional information and guidelines regarding the publisher, please visit ", "Regarding Indexing, the book will be indexed by Scopus and will be submitted for indexing to ISI Books, and DBLP.", "Abstract Submission: June 15, 2017", "\nFull Chapters Due: August 15, 2017", "\nChapter Acceptance Notification: October 15, 2017", "\nRevised Version Due Date: November 15, 2017", "\nRevised Chapter Acceptance Notification: December 15, 2017", "\nEstimated Publication Date: April 2018", "Any contribution that provides an added value to Robot Operating System (ROS) is of interest for the book. The topics of interest include \u2013 but not limited to- the following:", "\nROS 2.0 Tutorials", "\nROS Basics and Foundations", "\nRobot Control and Navigation", "\nSelf-driving cars using ROS", "\nArm Manipulation", "\nRobot Perception", "\nROS Integration to Web and Mobile apps", "\nReal-World Application Deployment using ROS", "\nUsing ROS in Higher Education", "\nContributed ROS Packages", "\nUnmanned Aerial Vehicles Control and Navigation", "\nSoftware Archiectures using ROS", "\nROS-enabled Robot Design", "\nThis volume welcome chapters about the upcoming version ROS 2.0, including tutorials, comparisong with ROS 1.0, new features in ROS 2.0.", "Also, papers related to using ROS for umanned aerial vehicles are particularly welcome.", "The book will accept three categories of chapters:", "Tutorial chapter: it focuses on a particular ROS concept or contributed package and provides a step-by-step tutorial that explains the fundamental of the concepts/packages and presents detailed guidelines on how to use the contributed code. It must specify the ROS versions that are compatible with the tutorial code, and must provide illustration with figures and code interpretations. The code must be available to public in a share repository (to be announced later). Accompanying Video tutorials are highly recommended.", "Research chapter: it presents a research technical contribution in the robotics area where ROS was used to validate the findings. The chapter must presents a sufficient material on the technical contribution in addition to necessary theoretical background, but a major focus should be made to ROS implementation and experimentation. The implementation and experimentation must be sufficiently detailed for a reader be able to reproduce the experiments. It must specify the ROS versions that are compatible with the tutorial code, and must provide illustration with figures and code interpretations. The code must be available to public in a share repository (to be announced later). Accompanying Video tutorials are highly recommended.", "Case study chapter: a case study chapter should present a real-world experimentation with ROS on particular robotics platform. It should present a detailed description of observations made during experiments, and what are the challenges encountered during development and experimentation. The chapter should also highlight the best practices that would facilitate deployment and the lessons learnt.", "\nThis volume welcome chapters about the upcoming version ROS 2.0, including tutorials, comparisong with ROS 1.0, new features in ROS 2.0. Also, hot topics papers related to using ROS for umanned aerial vehicles and self-driving cars are particularly welcome.", "Researchers and practitioners are invited to submit a 1-3 page chapter proposal clearly explaining the mission and concerns of the proposed chapter. This helps as a registration of the chapter for the final submission. Submission of abstracts must be done through EasyChair system Authors of accepted proposals will be notified about the status of their proposals and sent chapter guidelines. Full chapters must be submitted by August 15, 2017 through EasyChair system. The Chapter should not exceed 50 pages with respect to Springer format. All submitted chapters will be reviewed on a single-blind review basis. Contributors may also be requested to serve as reviewers for this project.", "Volume 1 was really great! I\u2019m excited for the release of Volume 2 (Jun. 9, 2017): ", "Good luck!", "Good to know that!", "\nThanks", "Your works are very interesting Mr. Koubaa! I just missed the submission deadline of few days. I hope that it will be a fourth edition", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Editor:Anis Koubaa, Full Professor, PhD", "Affiliation:Prince Sultan University (Saudi Arabia)/CISTER Research Center (Portugal)/Gaitech Robotics (China)", "Bio:Anis Koubaa is a Professor in Computer Science in Prince Sultan University (Saudi Arabia), a Research Associate in CISTER Research Unit (Portugal), and consultant at Gaitech Robotics (China). He has been leading several research projects on robotics and Internet of Things, and in particular integartion of ROS into the IoT. He is the director of the Robotics and Internet of Things Unit (RIOTU) at Prince Sultan University. He is the chair of the ACM Chapter in Saudi Arabia amd a Senior Fellow of the Higher Education Academy (SF-HEA) from the United Kingdom. Prof. Anis is the editor of several books, and author and co-author of more than 160 publications. He is the Editor-in-Chief of the Robotics Software Engineering topic of the International Journal of Advanced Robotics Systems (IJARS). Prof. Anis contributed with the design and development of the first cloud-based system for controlling and monitoring of drones over the Internet, called Dronemap Planner. His h-index is 30.", "\n", "\n", "\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/call-for-chapters-springer-book-on-ros-volume-3/1810"},
{"title": "ROSCon 2019: Call for Talks/Videos", "thread_contents": ["As ", ", ", " is expanding! While we are ", " until this Wednesday (May 22nd), today we are opening submissions for standard talks and videos.", "You can submit proposals for talks and videos on the ", " until July 15th, 2019.", "We cannot offer content that is not proposed! If there is a topic on which you would like to present, please propose it. If you have an idea for an important topic that you do not want to present yourself, please post it for discussion at ", ".", "Talk proposals must include", "This information must be formatted as a pdf, using the ", ".", "Accepted presenters will be required to provide their materials 5 weeks before ROSCon for content review to ensure the quality of the event. Content that does not pass review may be removed from the schedule at the discretion of the program committee.", "Video submissions must include", "This information must also be formatted as a pdf using the ", ".", "Videos do not need to provide an extended description, but will need to provide a link to the video online. Note that the submitter is responsible for ensuring that the video is viewable by the reviewers. Note that while revisions may be made between the submission deadline and the conference, it will be reviewed based on the submitted content, which should be \u201cfinished quality.\u201d", "The general content guidelines and review criteria were ", " ", ".", "David Lu!! (Locus Robotics)", "\nMelonee Wise (Fetch Robotics)", "\nProgram Co-Chairs", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", " - Presenter(s) talking live in front of slides/video, with a brief question period at the end, fitting into a 10, 20 or 30 minute time slot.", "\n", " - Up to 2 minutes of self-contained audio-visual content, featured alongside the talks in the program. Presented without live narration or Q/A afterward.", "\n", " - Presenter(s) providing a hands-on in-depth look at a particular topic in a more interactive format, over the course of up to 3 hours.", "Title (maximum 70 characters)", "Presenter(s) (name and affiliation)", "Summary - for public consumption, used in the program schedule (maximum 100 words)", "Description - outline and goals, for review by the program committee. Describe the intended audience and what they can expect to learn. Please be sure to include enough information in your proposal for the program committee to evaluate the above review criteria.", "Title (maximum 70 characters)", "Presenter(s) (name and affiliation)", "Summary - for public consumption, used in the program schedule (maximum 100 words)", "Link to video online (maximum of two minutes). Do not feel the need to pad your video to two minutes: a concise thirty second video will present better than a slow two minute video."], "url": "https://discourse.ros.org/t/roscon-2019-call-for-talks-videos/9234"},
{"title": "TSC Meeting Minutes 2019-04-18", "thread_contents": ["Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Attendees:\n", "Allison Thackston (TRI)", "Brian Gerkey (Open Robotics)", "Brian Shin (LG Electronics)", "Dejan Pangercic (Apex.AI)", "Dirk Thomas (Open Robotics)", "Filipe Rinaldi (Arm)", "Geoffrey Biggs (Tier IV)", "Jaime Martin Losa (eProsima)", "Jonathon Smereka (TARDEC)", "Karsten Knese (Bosch)", "Louise Poubel (Open Robotics)", "Matthew K Hansen (Intel)", "Rutvik Hora (Amazon)", "Seonman Kim (LG Electronics)", "Tully Foote (Open Robotics)", "Victor Mayoral Vilches (Acutronic Robotics)", "\n", "Old business:\n", "[2 min] [Brian] ROS trademark update\n", "Brian providing usage specimens to lawyers for filing.", "TSC: volunteers to form small group to work on usage policy?\n", "Geoff", "Jaime", "Brian", "\n", "\n", "[2 min] [Brian] Elevator pitch\n", "Brian iterating on draft with layout designer. Should have something ready in the next week or so.\n", "Brian to integrate links (comment from Matt H.)", "\n", "\n", "[2 min] [Brian] TSC content in ROS 2 docs\n", "Live: ", "\n", "Update Safety lead to Geoff\n", "PR: ", "\n", "\n", "\n", "\n", "[2 min] [Dirk] Transition plan from ", "\n", "\n", " shuts down May 16 (", ")\n", "Want public state to determine the status of the board.", "Also want multiple organizations in a single board, but might not be achievable.", "\n", "\n", "\n", "New business:\n", "Working group document storage and communication channel\n", "We\u2019ll continue a thread in Discourse, tentatively looking at adding discourse categories to collect working groups in a hierarchy.", "\n", "[2 min] [Brian] Open Robotics hiring Evangelist\n", "\n", "[15 min] [Brian] Dashing release communication plan\n", "Planned Support Cycle:\n", "LTS: 2 years", "\n", "Features: need to accumulate key feature list\n", "Google doc for commenting open to everyone", "Brian to set that up", "\n", "Demos: who has demos to include?\n", "Several TSC members planning to include demos, aiming for screenshots, videos, narrative text, and/or tutorials describing how to replicate the work.", "Demos from outside the TSC also welcome!", "\n", "\n", "\n", "Standing updates:\n", "[15 min] [All] Release planning - dashing update:\n", "Apex.AI\n", "Testing and launch improvements\n", "\n", "Performance Testing", "\n", "Acutronic Robotics\n", "Real-Time\n", "Work already started, expecting a first version with selected platforms for June (Dashing)", "\n", "Information models\n", "Coliza released ", "\n", "\n", "Motion planning progress: ", "\n", "Articles describing the process and raising awareness: ", "\n", "CI ", "\n", "Docker containers (for CI purposes) ", "\n", "\n", "Install instructions ", "\n", "\n", "Bosch\n", "Ongoing work with diagnostics. Waiting for PRs to be merged.", "Preparing buildfarm CI job to build rosbag2.", "\n", "Amazon\n", "QoS PRs in progress. Working end to end with RTI & OpenSplice", "Testing in progress against FastRTPS v1.8 that supports these QoS", "Security threat model is merged. Contributions from Acutronic for MARA", "ASAN/TSAN jobs are running. Our team is working on stack ranking and fixing issues.", "\n", "eProsima\n", "Deadline, lifespan, and liveliness QoS Supported on Fast RTPS 1.8", "Static Memory allocations. It is a WIP, but discovery allocations will be all static in Fast RTPS 1.8, and many others.", "\n", "Open Robotics\n", "IDL support landed\n", "3rdparty generators need updates", "Rospy generated content now leverages numpy might be API changes", "\n", "Intraprocess efficiency/performance improvements", "C++ API for composable nodes", "Launch support for loadable components", "New generation of Launch API", "Read Only Parameters", "XML frontend for Launch(might fall back)", "Range support for Parameters, in process by at risk for feature freeze deadline.", "Fixed rclpy memory leak, expect backport", "rosbridge_suite port is ongoing", "Infrastructure and CI jobs improvements", "Support for generating RPM spec files expected", "\n", "LG Electronics\n", "In Progress: OpenEmbedded Platform support", "Merged PRs to rosdep and rospkg that were needed for OpenEmbedded", "Submitted PR for superflore upstream, under review", "Have reference HW demo on Raspberry Pi 3 with set of Crystal packages using superflore automatically generated recipes", "Working on extended Crystal package support (currently 275 packages)", "Will build Dashing packages now that Dashing distribution index has been released", "\n", "Microsoft\n", "Working with Open Robotics on ROS 2 release logistics for the Windows side, including how to host chocolatey packages, ROS bridge and vcpkg integration.", "Stood up a colcon build on Azure DevOps", "We\u2019re going to add an installer to rosdeps so that when a chocolatey package is not available, rosdep will consult vcpkg to see if a recipe is available and offer to download, build and install.", "Working on a vcpkg feature to export chocolatey packages", "\n", "\n", "Working groups:\n", "[5 min] [Matt H] Navigation\n", "Added Obstacle Layer - still doing some tuning", "Converting nodes to lifecycle nodes, for improved bring up / shutdown reliability - in code review", "Converting to using Actions across the stack", "Adding recovery behaviors via behavior tree", "Adding parallel planning", "Moving to using BehaviorTree_CPP v3.0", "Support integration of system test into ROS2 build farm? (need to discuss)\n", "Issue: ", "\n", "Line: CI for simulation-based testing of navigation", "\n", "\n", "[5 min] [Rutvik] Security\n", "Threat Model is merged, Turtlebot and MARA models", "Setting a 2 week cadence for ongoing meetings", "\n", "[5 min] [Dejan] Real-time and safety\n", "Reference hardware platforms\n", "Using the ", "\n", "\n", "\n", "[5 min] [Karsten] Embedded\n", "No updates as for now. Preliminary work has to be done before the next meeting, presumingly in May.", "\n", "[5 min] [V\u00edctor] Motion planning WG Suggestion\n", "Discussion of plans and planned actions, input from TSC", "\n", "\n", "Late new business:\n", "[Rutvik] armhf (32-bit ARM) support\n", "Seeing demand for armhf", "Looking to improve the toolchain", "ARM interested in supporting this", "Also of interest to Apex to avoid requiring hardware, all platforms are arm based", "Target Tier 3 to start, want to push it up to at least Tier 2", "\n", "[Brian Shin] Definition and requirements for new platform support\n", "Rep-2000: ", "\n", "OpenEmbedded as Tier 3 platform\n", "Would like more definitions for what the requirements are for the tiers.", "A process for being selected/supported would be valuable", "\n", "\n", "[Karsten] State of real time within ROS 2\n", "State of executor\n", "How can we approach proposing changes to this?\n", "Design Doc or PR proposals are best or go through working doc", "\n", "\n", "ROS 2 and Real-time discourse post", "\n", "New TSC member inquiries\n", "Looking for ways to engage, how can they get involved? What can we send them? They\u2019re looking for chunks of work to pick up to demonstrate interest.", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/tsc-meeting-minutes-2019-04-18/8832"},
{"title": "Announcing ROS snapshot repositories", "thread_contents": ["There is an established workflow for new releases within a ROS distribution. As improvements are made, changes are periodically synced into the main ROS repositories and those changes are announced via Discourse. While we strive to avoid regressions and compatibility breaks in new syncs they can occur, causing disruption in your workflow if it happens in packages you rely on. Even without regressions syncs can affect users who install new packages without upgrading installed packages between syncs. Or your build system may rely on storing and retrieving packages with exact version numbers which become unavailable after being replaced by new versions during a sync.", "With the aim of improving overall reproducibility in the ROS community we\u2019ve set up a new apt repository host that will provide persistent hosting for snapshots of each sync for active ROS distros. The snapshots will be taken just after every sync of the ROS stable repository and will be available for at least six months from the sync date.", "For teams that want to more closely control when they update to the latest sync, these snapshot repositories will make it easier to access the packaged binaries from earlier syncs.", "Snapshot repositories for the following ROS distributions are available now and will remain available for at least 6 months from their sync date.", "ROS Indigo: Ubuntu Trusty ARMv7 (armhf), Ubuntu Trusty i386, Ubuntu Trusty AMD64 (x86_64)", "ROS Kinetic: Ubuntu Xenial ARMv7 (armhf), Ubuntu Xenial ARMv8 (arm64, aarch64), Ubuntu Xenial i386, Ubuntu Xenial AMD64 (x86_64)", "ROS Melodic: Ubuntu Bionic ARMv7 (armhf), Ubuntu Bionic ARMv8 (arm64, aarch64), Ubuntu Bionic AMD64 (x86_64)", "ROS 2 Ardent: Ubuntu Xenial ARMv8 (arm64, aarch64), Ubuntu Xenial AMD64 (x86_64)", "ROS 2 Bouncy: Ubuntu Bionic ARMv8 (arm64, aarch64), Ubuntu Bionic AMD64 (x86_64)", "ROS 2 Crystal: Ubuntu Bionic ARMv8 (arm64, aarch64), Ubuntu Bionic AMD64 (x86_64)", "See the instructions in the ROS wiki ", "Snapshots do not receive bug fixes or security updates so it is still a good idea to follow ROS releases and upgrade periodically.", "ABI compatibility between snapshots is not tested or guaranteed so when switching a system to a new snapshot updating all ROS packages is recommended.", "We think most ROS developers should continue to use ROS from the primary repositories.", "The snapshot repository is still in preview so waiting for us to stabilize it before using it on production robots is prudent.", "But if your build and deploy process involves bundling ROS packages before transferring a comprehensive artifact, like a Docker or OCI container image, then the snapshot repository is worth checking out today. And after you do, reply to this thread with any feedback or to let us know you found it useful.", "Awesome work! I\u2019ve seen few folks who have been ", " repo for similar snapshotting capabilities. Although the DockerHub\u2019s registry allows you to ", ", we\u2019ve still encountered a few cases that would\u2019ve been better served with these snapshot repositories. Perhaps folks could now use docker registries in courses with the snapshot repositories to archive installed binary images beyond the six months from the sync date.", "For those who don\u2019t know, the Offical Library images for ROS are also archived in DockerHub\u2019s registry, the digests of which can be found by navigating the commit history of the Library\u2019s repo-info:", "Extended information (especially license and layer details) about the published Official Images - docker-library/repo-info", "Not sure how far back the archive stretches, but I can still pull ", ". Note: the offical library images themself however are still configured to use the primary repositories.", "I\u2019m glad to learn about the snapshot repos.  A few months ago I was burned by a regression in the main repo and didn\u2019t know where to find the old debs.  This looks like a great resource.", "Is the reproducilbility of ROS being tracked somewhere?  I\u2019ve been working on it some myself and was wondering if there were ways to contribute or learn what other people might be doing.", "Because of the regression I ran into I started caching the ROS packages locally using aptly.  I noticed ", " published the aptly docker container so I wondered if clearpath is doing something similar.", "I also posted this, ", "  a short while ago because I was concerned about reproducibility when using rosdep  Being able to get the old debs if required is a large step, but if you\u2019re using the rosdep db in github, it could shift underneath you even if you have stable deb packages.", "I don\u2019t mean to get too off track with that, but the more reproducible the better.  Thanks for the announcement!", "Is the reproducilbility of ROS being tracked somewhere?", "Not that I\u2019m aware of, but it\u2019s a concern I\u2019ve been pondering and iterating on since I joined Open Robotics. As I\u2019ve had my hands in different elements of the release process it\u2019s given me a pretty deep view (although I\u2019m sure it\u2019s still not complete) of all the ingredients that make up a ROS release and this discussion adds to the motivation to carve out time to document what I think I know.", "Thanks, that would be great.  I\u2019d be interested in helping once that is up.", "Snapshots will be available for at least six months from the sync date.", "Just a clarification; What about after a distro went EOL, e.g. would Indigo snapshot(s) remain available after it goes EOL this year, or would the snapshot(s) of Indigo be removed 6+ months after EOL?", "Either way this is absolutely great. I\u2019ll test this out in a (pre-)production setting at our team (probably combined with container approach ", " ", " for more portability). Thank you!", "Just a clarification; What about after a distro went EOL, e.g. would Indigo snapshot(s) remain available after it goes EOL this year, or would the snapshot(s) of Indigo be removed 6+ months after EOL?", "Thanks for the question. It\u2019s a good one.", "I\u2019m not making any extended commitments for the snapshot repositories yet so for now let\u2019s assume that final snapshots will expire just like any other. Because we don\u2019t remove EOL distros from the main repositories, once a distro goes EOL it\u2019s final snapshot would be nearly equivalent to the state of the main repositories (except releases of the python utilties: rosdep, rosdistro, bloom, etc). There are two overarching reasons we\u2019re not making an extended commitment out the gate.", "Because of the regression I ran into I started caching the ROS packages locally using aptly.  I noticed ", " published the aptly docker container so I wondered if clearpath is doing something similar.", "We (mainly) cache the full source using JFrog and rebuild the binaries using our ", " approach.", "The Snapshots repository is now being used to archive unsupported ROS distributions which are about to be removed from ", " (see ", " for details) using a datestamp of ", ".", "In order to allow for future snapshots to include repositories beyond just Ubuntu or Debian repositories, we\u2019ve also moved the apt repositories into an ", " subdirectory symlinking to ", " when appropriate. The earlier snapshots are available both at the datestamp root and the ubuntu subidrectory but future snapshots will be published only to the ubuntu subdirectory.", "In order to allow for future snapshots to include repositories beyond just Ubuntu or Debian repositories, we\u2019ve also moved the apt repositories into an ", " subdirectory symlinking to ", " when appropriate. The earlier snapshots are available both at the datestamp root and the ubuntu subidrectory but future snapshots will be published only to the ubuntu subdirectory.", "That\u2019s great thanks!", "Looking into using the snapshots repo for EOL distros docker images, I noticed that there is no ", " subdirectory for ", ", but there is one for ", ".", "\nWill the symlink be created in the future? Or is it recommended to use the ", " subdirectory for Debian distros?", "Edit: Is there a recommended repo / place for reporting issues with the snapshots repositories?", "I noticed that there is no ", " subdirectory for ", ", but there is one for ", ".", "\nWill the symlink be created in the future?", "This was an oversight on my part and has been corrected.", "Edit: Is there a recommended repo / place for reporting issues with the snapshots repositories?", "Not at the moment. I think for now questions about the snapshots repository can go on ", " and reporting issues like this is probably best done replying to this thread, which I\u2019m watching.", "Someday I would like to get the Chef recipes and shell scripts used to create the snapshots repositories cleaned up, extracted, and published which would create a natural home for issues with the canonical deployment as well. But I don\u2019t have time to do that work on the visible horizon.", "This was an oversight on my part and has been corrected.", "Thanks! It looks like the stretch one is an empty directory ", "Not at the moment. I think for now questions about the snapshots repository can go on ", " and reporting issues like this is probably best done replying to this thread, which I\u2019m watching.", " I\u2019ll post follow-up questions on ROS Answers", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "I want to leave myself room to iterate, including breaking changes like urls, and the six month lifespan allows me to do that gracefully.", "The cost to maintain these snapshots indefinitely, both in storage and bandwidth is not something we can responsibly commit to without having a better idea of what that cost will be. Before releasing this I did some back-of-the-envelope estimates but none of it replaces real-world data. So as we add more snapshots I\u2019ll be looking at the growth rate of our storage consumption and at the bandwidth consumption and that will inform how this service evolves."], "url": "https://discourse.ros.org/t/announcing-ros-snapshot-repositories/7705"},
{"title": "ROS 2 TSC Meeting Minutes: 2019-07-18", "thread_contents": ["Acutronic Robotics", "Amazon", "Apex.AI", "Arm", "Bosch", "eProsima", "Intel", "LG Electronics", "Microsoft", "Open Robotics", "ROBOTIS", "GVSC (nee TARDEC)", "Tier IV", "Toyota Research Institute", "Establish formal \u201cwaiting period\u201d for new orgs before joining and/or require a minimum history of contributions before considering an application.", "If I may, it would be helpful to applicants to clarify the participation that is actually judged (and how it\u2019s judged). The ", " (version 0.4) doesn\u2019t actually provide any insight into what is expected of a given applicant, it just says to send an email. Do you expect that initial email to contain all the contributions to be judged as well as the story of what the applicant is looking to accomplish on the steering committee? Or are you going to crawl through all ROS repos looking for commits from our email addresses (in which case, what is a \u201cROS repo\u201d and how did you determine our email addresses)? Neither seem ideal.", "Additionally, are there guidelines for what the contributions should be? As an example, I expect that our contributions to SROS 2 would count, but off-hand I\u2019d say our contributions to Fast RTPS would not as it\u2019s not a ROS-specific project. However, given that eProsima is a member of the steering committee, I expect that assumption would be wrong. In that case, do our contributions to support ROS 2 in Snapcraft count toward this? If we were a company creating a robot that runs ROS 2, does that count?", "I don\u2019t mean to call anyone out here, I think all the current members are excellent, I\u2019m just saying these lines to external observers look very fuzzy, and guidelines for what counts toward the steering committee members\u2019 FTE don\u2019t seem to exist. Such things would be very useful for applicants. Otherwise it\u2019s hard to even know when one should apply in the first place, especially if you start requiring a minimum history.", "Hi ", ",", "\nThanks for the meeting minutes.", "\nif possible I\u2019d like to join a real-time discussion as well.", "Kind Regards,", "\nAndrei", "Hi ", "I had to spend lots of time in the past month analysing adaptive Autosar stack => will report after consulting with Open Robotics", "I have seen that you have spent some time on adaptive AUTOSAR: It can have DDS as a transport layer it would be nice to have a bridge between ROS2 and ADAR. We have adaptive AUTOSAR running on Linux and VxWorks. Would be interesting to know what your conclusions are ", "Kind Regards,", "\nAndrei", " Thanks for the feedback and the questions. You\u2019re right in pointing out that the lines are fuzzy, and these are among the issues that we\u2019re working through right now. We aim to be as fair and as transparent as possible, but I also want to avoid unwittingly constraining ourselves with rules that won\u2019t age well.", "E.g., it was suggested early on that we enumerate the set of repositories that count as being valid destinations for ROS 2 contributions. I argued against that idea because I don\u2019t believe that any such enumeration will stand the test of time. In exchange we have the question you\u2019ve raised, which is what should count?", "You\u2019re right that FastRTPS isn\u2019t strictly part of ROS 2, but given the critical role that it plays as a dependency in the ROS 2 ecosystem (not to mention that (I\u2019m guessing) ROS 2 is the most significant use case for FastRTPS), I would consider contributions to FastRTPS to be helping ROS 2. I appreciate that this line of reasoning can be carried to an extreme, wherein patches to LLVM are helping ROS 2.", "It\u2019s clear to me that we should improve the rigor of the process for joining and remaining part of the TSC. Please bear with me while we make some improvements.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Attendees\n", "Open Robotics: Tully Foote, Brian Gerkey, Louise Poubel, Dirk Thomas", "Microsoft: Lou Amadio, Sean Yen", "ROBOTIS: Yoonseok Pyo", "Bosch: Karsten Knese", "Acutronic Robotics: Victor Mayoral Vilches", "eProsima: Jaime Martin Losa", "Intel: Kelly Hammond", "Tier IV: Geoff Biggs", "LGE: Brian Shin", "Apex.AI: Dejan Pangercic", "TRI: Toffee Albina", "Amazon: Adam Duncan", "\n", "Old business\n", "[2 mins] [Gerkey] ROS trademark update\n", "Application in process of being filed", "Draft usage policy under legal review", "\n", "\n", "New business\n", "[15 mins][Gerkey] TSC member participation level and admissions process\n", "We now have 6 pending applicants", "Review data on TSC member participation to date", "Suggestions for improvement:\n", "Establish formal \u201cwaiting period\u201d for new orgs before joining and/or require a minimum history of contributions before considering an application.", "Clarify that all members are expected to make public commitments on the tracking ticket for the upcoming release.", "Provide more structure for the commitment comments on the tracking tickets.", "Clarify that all members are expected to provide at each meeting an update on how their >= 1 FTE of effort is currently being directed. Members who can\u2019t attend would fill in that update in this agenda before the meeting.", "\n", "AD: The data is useful.", "KK: Ok if people don\u2019t have time for the meetings. Would like to see more review of git activity. Qualitative evaluation of active or not active.", "AD: Might want to see activity for new members for one release cycle. DT: A full year is a long time.", "KH: Contributions ahead of time makes sense. Need companies coming in to address list of things that are needed, maybe a higher bar for coming in. To make sure it\u2019s a place for action, not just talking. A year might be too long, but probably not 6 months.", "BG: Should we formalize that an update expected even if you don\u2019t attend? Brian to make a low overhead process for this.", "BG: Does anyone object to a public commitment on GitHub tracking ticket?\n", "GB: Public commitments are good for tracking funding from management.", "DP: Tickets aren\u2019t the best planning tool. There might be better tools, but it\u2019s better than nothing.\n", "BG: Certainly valid", "DT: External visibility is helpful too.", "\n", "AD + DP: It\u2019s valid to call out the companies that haven\u2019t made their updates yet. So Brian et al don\u2019t need to nag individual companies.", "\n", "KK: It\u2019s hard to vote for new members with little information.", "GB: If there\u2019s no track record, it\u2019s hard to make a judgement.", "AD: Would almost like that there\u2019s no vote, but a criterion based on the track record.", "BG: Will review applicants for contribution activity and summarize back to TSC", "\n", "\n", "Standing updates\n", "[2 mins each] Member contribution updates\n", "\n", "\n", "Departure from TSC. Thanks and best wishes.", "\n", "\n", "\n", "Plan to update the eloquent tracking ticket with our contributions by end of next week.", "Working on automated release testing", "Enabled QoS Liveliness in RMW_FASTRPTS with the release of 1.8.1 into ROS 2 mainline", "All build warnings passing for ARMHF, entire test suite now passing", "Still investing in performance tests, not clear how we can get alignment on one performance suite\n", "DP: Apex and iRobot talking about how to merge the implementations.", "\n", "\n", "\n", "\n", "We will follow this proposal and are committing to ", "\n", "Documentation testing extension to launch_testing (in which the documentation files written in markdown are instrumented such that they become integration tests)", "Support for ROS2 QNX (compilation and testing (we actually got python and thus colcon to run on QNX) => we will start with the design document first", "Static code analysers (we are evaluating LDRA, TrustInSoft)", "Upstream the velodyne driver from ", " to ", "\n", "\n", "I had to spend lots of time in the past month analysing Adaptive Autosar => will report after consulting with Open Robotics", "\n", "\n", "\n", "\n", "\n", "Maintaining and bug fixes of rosbag2\n", "Start, stop and resume bag files", "Recording QoS settings correctly", "\n", "Migrating diagnostics\n", "Finishing up diagnostics_aggregrator", "Internally requesting open source permission to officially maintain the ros2-devel branches", "\n", "Resuming work on real time executor for rcl and rclcpp\n", "Bosch\u2019s PhD student to work on EDF scheduler for rclcpp", "Micro-ROS scheduler for microcontrollers on top of rcl", "\n", "\n", "\n", "\n", "Released Fast RTPS 1.9 beta\n", "Allocation QoS : Static Memory Allocation", "Discovery Server", "\n", "WIP: Fast RTPS Performance tests: new infrastructure\n", "Already online, but still working in the tests and analyzing the first results.", "\n", "Micro-ROS WIP:Porting to dashing, solving bugs", "\n", "\n", "\n", "Working on Navigation 2 close to landing with a few more things to work through on CI", "\n", "\n", "\n", "Continued work on OpenEmbedded support - targeting Tier 2 platform support", "Have taken maintainership of ", " repository - pushed generated recipes for dashing and crystal to meta-ros", "Created legacy branch for old meta-ros, reviewed outstanding PRs", "Adding support for ROS1 distros", "\n", "\n", "\n", "Been doing ROS1 infrastructure and dependencies support on Windows, translates to ROS2", "Took over VSCode extensions with debuggability and launching", "Working on supporting RViz or Gazebo in unaccelerated modes in Azure", "Working to connect vcpkg with rosdep", "Working to implement modular package for windows, leveraging bloom and vcpkg and chocolaty", "\n", "\n", "\n", "Implementation of XML frontend for launch", "Design for passing key/value parameters (beside remappings)", "rviz: interactive markers, torque ring, message filters", "rqt parameter plugin", "continue porting rosbrige_suite", "RPM packaging for CentOS", "Various bug fixing", "\n", "\n", "\n", "Still in preparation of ", " on ROS 2 Dashing, we have some ", "of Micro-XRCE-DDS-Agent, so we need help from eProsima.", "These are the efforts ROBOTIS is working on for ", ":\n", "\n", ":\n", "Support ROS 2 Eloquent", "Support ROS 2 binary packages for TurtleBot3", "Support Linux distro image based on Raspbian for ROS 2 Dashing and Eloquent with TurtleBot3", "Porting ROS 1 package of existing TurtleBot3 to ROS 2", "\n(", " and family packages)", "\n", "\n", ":\n", "Porting to ROS 2 (", ")", "\n", "\n", ":\n", "Support ROS 2 Eloquent and add examples and documentation", "Support Arduino boards and ", " (provide completely open-source hardware and software for ROS 1 and 2)", "\n", "ROS 2 Tools (rqt plugin):\n", "We want to join the development of the existing ROS 2 Tools based on rqt and contribute to the more diverse ROS 2 tools.", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "Investigation of the work necessary to add Debian as a supported platform (beginning with Tier 2) has begun.\n", "Targeting Debian Boxer.", "\n", "Investigation of work necessary to improve real-time support for executors/nodes/publish/subscribe has started but is in extremely early stages. Need to coordinate with the real-time WG but there have not been any meetings.", "Work on support for RTI\u2019s micro DDS in rmw has started, but progress is likely to be slow.\n", "Can drop this?", "\n", "Have also identified other features of need but unsure how to proceed.\n", "Most notable is a new diagnostic system that does software as well as hardware.", "Also raised recently was the need to get large amounts of data out of AWS instances ", " without paying huge amounts of money, so some kind of compressed storage support for rosbag2. Especially compressed point clouds.", "\n", "\n", "\n", "\n", "Collaborating with Open Robotics on many features", "There\u2019s a new ROS 2 robot that will come out soon.", "\n", "\n", "[2 mins each] Working group updates\n", "Embedded\n", "Next meeting July 29, 6pm CEST", "Opened poll for collecting hot topics of WG: ", "\n", "Broaden scope, attracting more people, introducing regular meetings (e.g. once per month)", "\n", "Manipulation \u2013 Pause group for now", "Navigation\n", "No updates", "\n", "Real time\n", "We will organize a workshop at ROSCon: ", "\n", "We will meet this month to advance on action items from here: ", "\n", "We also started to see a need for a real-time buildfarm: AR, eProsima and Apex are interested in this work", "\n", "Safety\n", "Held a third (?) meeting two weeks ago.\n", "\n", "Agriculture WG presented their small robot application", "Identifying specific things we can do to be useful is proving to be difficult.", "\n", "Security\n", "Created a framework for testing vulnerabilities and contributed initial attacks and validated those attacks. Need to validate the mitigation.", "Design is still open: ", "\n", "Next security working group will be scheduled for within the next two weeks to demo and get feedback.", "\n", "New proposed WG: dev tools\n", "Rqt_", "Plot_juggler", "webviz", "Seconding Developer Experience focus: LA GB", "AD Will start with a proposal for graphical tools and information", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/ros-2-tsc-meeting-minutes-2019-07-18/10066"},
{"title": "Autoware Reference Platform Working Group Meeting #3", "thread_contents": ["Wednesday 30th of October", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Kenji Funaoka (Tier IV)", "Steve Kan (Tier IV)", "Stephane Strahm (Kalray)", "Cheng Chen (Autocore)", "Status on AutoCore board", "Connection with ", "\n", "Discussion on requirements categories", "Status on demo 2020", "Demonstration on-going ROSCon Macau with TierIV\n", "2 PCU boards with PC Simulator\n", "LiDAR stack", "Controlling", "No accelerator", "\n", "Software= Autoware.AI", "\n", "Accessibility of board to be confirmed by Cheng\n", "Requests by Kalray and TierIV", "\n", "Estimated power consumption : 20-30 Watts (without accelerator)", "Accelerator for the demo: Movidius, Google TPU, plus accelerator from Chinese companies", "Goal: ", " activities part of Reference Platform Group", "Yang is leading this ", "\n", "Stephane to contact Yang to make it happen ( + Cheng)", "Reference Platform Group is defining the ", "\n", "Managed by Foundation", "Documentation\n", "Interfaces", "Functionalities", "Integration of software", "Basic guidelines for design", "Performance expectations", "Collection of requirements defining the Reference Design", "\n", "Available through AWF", "\n", "Reference Platform Group will refer to ", "\n", "Actual implementation of Reference Design", "Provided by companies as product Platform", "Autocore PCU is the first Reference Platform according to Autoware Reference Design (upcoming)", "\n", "Suggestion: rename Reference ", " Group as Reference ", " Group\n", "To be submitted to TSC", "\n", "Need to initiate requirements definition process", "Proposal\n", "Collective work\n", "Each member AND each participation shall contribute (Discourse)", "\n", "Organize by categories of requirements for allow better focus\n", "Sensors\n", "TierIV can list sensors currently tested", "\n", "Hardware for application\n", "List of currently used", "\n", "Hardware for acceleration\n", "List of currently used", "\n", "Drivers\n", "\n", "Reference Design Configurations\n", "Demo part of this", "Performance expectations / guidance", "\n", "Software integration\n", "Autoware.AI", "Autoware.Auto", "\n", "Safety\n", "Redundancy considerations", "\n", "Security\n", "to be defined", "\n", "Simulation\n", "Definition of environment for simulation: To be handled by the Simulation team", "\n", "Testing\n", "SIL and HIL approaches", "Define test cases and test scenarios (leveraging system test such as dSpace or others)", "\n", "\n", "Need policy for req management and tool: to be checked with TSC\n", "Steph in touch with Geoff to initiate this", "\n", "\n"], "url": "https://discourse.ros.org/t/autoware-reference-platform-working-group-meeting-3/11451"},
{"title": "Autoware TSC meeting minutes for April 17th, 2019", "thread_contents": [" Geoffrey Biggs (Tier IV)", "Nothing in particular.", "Minutes approved.", "To reduce noise on the GitHub issue tracker, we have, over the past two months or so, been enacting a policy of directing anything not a confirmed bug or feature request to Discourse for help. This has been effective, with help being provided actively by many Autoware developers at Discourse. However, the general ROS policy is that support should be done through ", " because that site is better suited to providing a searchable archive of problems and solutions.", "It has been the plan from the start to, in the long term, either set up an \u201cAutoware Answers\u201d site or use ROS Answers. Use of Discourse was intended to be a placeholder until traffic grew high enough to justify an answers site. Traffic has been higher than expected right from the start, however.", "Because of the existing ROS policy of not doing support on Discourse, the OSRF is concerned that Autoware using Discourse for this purpose will confuse other ROS users (who are not likely to notice the category of a thread) and cause an increase in general ROS support requests on Discourse. Therefore we have been asked if we can shift support to ROS Answers.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Jan Becker (Apex.AI)", "Geoffrey Biggs (Tier IV)", "Joseph Buckner (AutonomousStuff)", "John Buszek (AutonomousStuff)", "Chen Cheng (Autocore.ai)", "Victor Duan (Linaro)", "Esteve Fernandez (Apex.AI)", "Kenji Funaoka (Tier IV)", "Brian Holt (Parkopedia)", "Shinpei Kato (Tier IV)", "Seonmaan Kim (LG)", "Angelo Mastroberardino (Parkopedia)", "Dejan Pangercic (Apex.AI)", "Paul Sastrasinh (TRI-AD)", "Antonis Skardasis (StreetDrone)", "Matt Spencer (Arm)", "Stephane Strahm (Kalray)", "Daisuke Tanaka (Tier IV)", "Dmitry Zelenkovsky (LG)", "Yang Zhang (Linaro)", "Opening remarks and new member introductions (Board)", "\n", " Confirmation of previous minutes** (All)", "\n", " Removal of project-specific sub-categories on Discourse (Geoff)", "\n", " Moving TSC home from Slack to Discourse (Geoff)", "\n", " Moving Autoware support from Discourse to ROS Answers (Geoff)", "\n", " Action items from previous meeting (All)", "\n", " Autoware.AI/Autoware.Auto (Apex.AI/Tier IV)", "\n", " Map format (Parkopedia/Tier IV/Apex.AI)", "\n", " Use of code from Apollo and revisit policy towards Apollo (All)", "\n", " Hiring a lawyer to look at simulator licenses (Board)", "\n", " Unreal game engine licensing for simulators (Apex.AI)", "\n", " Invite Epic to join the Autoware Foundation (Apex.AI)", "\n", " Joining ", " and ", " (Apex.AI/Tier IV)", "\n", " Parkopedia commitment resources (Board/Yang)", "\n", " StreetDrone commitment resources (Board/Yang)", "\n", " Planned contributions from foundation members. (All)", "\n", " Common hardware platform: Lexus and the parameters for control (Tier IV)", "\n", " Milestones for development of Autoware.Auto (All)", "\n", " Arm and the ELISA foundation (Arm)", "\n", " Perception process unit hardware and software design (Autocore.AI)", "\n", " ", " for ", " (Apex.AI)", "\n", " Automating map and vehicle model imports with ", " (Apex.AI)", "Move TSC discussion place and AWF operations discussion place from Slack to Discourse\n", "Tier IV (Geoff); will do in stages by the next meeting", "\n", "Remove the public sub-categories of the public Autoware category at Discourse\n", "Tier IV (Geoff)", "\n", "Update the support guidelines and bug/issue templates for Autoware.AI to use ROS Answers instead of Discourse for support discussion\n", "Tier IV (Geoff)", "\n", "Arrange review of licenses for Unreal, Unity, CARLA and LGSVL\n", "Apex.AI/Board (Yang)", "\n", "Provide differences between Apex.Autonomy and Autoware.Auto, and between Apex.OS and ROS 2, in next meeting\n", "Apex.AI", "\n", "Review, discuss and improve milestones for Autoware.Auto development\n", "All", "\n", "Coordinate with Tier IV and Kalray to bring their work on algorithm acceleration into the computing platform effort\n", "Linaro (Yang)", "\n", "List planned contributions that go towards Foundation work and can be used to meet the milestone -demos. ", ".\n", "Tier IV", "LG", "Kalray", "Arm", "Linaro", "AutonomousStuff", "TRI-AD", "Autocore.ai", "Huawei", "Velodyne", "\n", "Coordinate on prototyping work for Lanelets2 use in Autoware\n", "Parkopedia, Tier IV", "\n", "Talk to OSRF about using one of their GSoC slots for Autoware work\n", "Apex.AI", "\n", "Set up a teleconference to talk about the vehicle interface work for Autoware (especially Autoware.Auto)\n", "StreetDrone", "\n", "The project-specific sub-categories on Discourse (under the Autoware public category) have virtually no traffic.\n", "\n", " (2 threads)", "\n", " (2 threads)", "\n", " (1 thread)", "\n", " (0 threads)", "\n", "We have been told that if they have almost no traffic, then they are probably not worth having.", "We need to either actively use these sub-categories, or remove them and move what little existing discussion there is to the main Autoware category.\n", "Geoff recommends the latter option, due to easier maintenance and less clutter.", "\n", "\n", ": Remove the sub-categories and move the existing threads to the Autoware category.", "No opposition, ", ".", "Slack is nice for holding a real-time chat, but it has several disadvantages:\n", "We are using the free tier, which means we only have access to the most recent 10,000 posts. Thus we are losing the background for decisions that have been made.", "It is very hard to find where specific conversations occur, because everything is organised by channels rather than ", ".", "It can be distracting and hard to keep up with as notifications can come in at a high rate and if you do not respond rapidly the thing you wish to respond to can be lost in the conversation.", "It requires direct engagement as soon as possible (relates to the above).", "Message formatting is limited - only good for short messages.", "\n", "By contrast, Discourse (provided by the OSRF) has many advantages, including:\n", "All history is available.", "Conversations are archived separately so the background for decisions is clear.", "Discussion does not happen in real time so most conversations are easier to manage across time zones.", "Direct messages are possible, and apart from rapid-fire chats are as useful as Slack direct messages.", "Subscriptions can be done at a fine-grained level so you can get only the categories or threads you are interested in in your inbox, or as desktop notifications, or just via the Discourse site.", "Necessary response time to join a conversation is much longer due to ability to reply to individual messages, easily quote parts of messages, etc.", "Richer message formatting options.", "\n", "Most important point is easier tracking of decisions and their background. This is important for the Autoware Foundation as an organisation.", "Secondary point for some TSC members is that Slack is very disruptive to their work flow and hard to keep up with.", "\n", ": Shift all TSC-related and Foundation operation-related discussion to the ", " private category on Slack.\n", "Proposed extension: Shut down the TSC and operation channels on Slack; when real-time, rapid-fire conversation is necessary, start a direct message channel specifically for it.", "Possible extension: Create a separate private category for Autoware Foundation operation discussion, separate from the TSC (like the Slack channel).", "\n", "Tier IV in favour.", "Apex.AI strongly in favour.", "AS in favour", "Parkopedia no objections", "Kalray in favour", "Slack channel shutdown also agreed", "\n", ": Move from Slack to Discourse private category and shut down the Slack channels. All TSC and Foundation-related discussion should happen on Discourse in the private category or via direct message, ", " Slack, to avoid confusion or loss of material.", "\n", ": Shift support for Autoware to ROS Answers, with support guidelines asking for questions to be tagged with an ", " tag so we can find them.\n", "Possible problem: Most new users are not likely to use the ", " tag, making finding their questions harder for Autoware developers; other ROS users do not have much experience with Autoware (its existence is surprisingly ", ") and so won\u2019t be able to provide support. The result could be an impression of Autoware having poor user support.", "\n", "\n", ": Set up our own \u201cAutoware Answers\u201d site. The downside is maintenance is non-trivial.", "Apex.AI in favour of using ROS Answers.", "Tier IV in favour.", "Parkopedia in favour.", "We will need to put effort into looking for mis-tagged questions and tagging them correctly, but this is the only problem.", "Has the side effect of us being more involved in the ROS community.", "Will investigate if we can provide a link that automatically tags a question with Autoware.", "\n", ": Will use ROS Answers. Geoff to do work to move to ROS Answers.", "Review opinions on the tool chain and information provided by TRI-AD and make a decision on what to use\n", "Geoff, Esteve", "\n", ": Applied for and qualified for GitLab\u2019s open source programme, so will use GitLab as the tool chain. Will need to do some engineering for CI to meet the fork and pull model.", "\n", "Coordinate with the Linux Foundation/AGL on their efforts to improve safety certification practices of open-source software\n", "Geoff to take point", "ARM, Linaro, TRI-AD, Tier IV, Kalray to participate as interested", "\n", ": None yet; AGL stated they won\u2019t have anything to talk about until July.", "\n", "Lead improvement of mapping format used by Autoware\n", "Brian Holt (Parkopedia)", "\n", "Produce some proposals for milestone demos that we could set to drive the development of Autoware.Auto and direct resources (choice and ordering to be decided in TSC meeting ", ")\n", "Geoff", "\n", ": Milestone draft created and circulated for discussion. See dedicated agenda item.", "\n", "Coordinate with Tier IV and Kalray to bring their work on algorithm acceleration into the computing platform effort\n", "Yang", "\n", ": None yet; will try to meet in the next week.", "\n", "List planned contributions that go towards Foundation work and can be used to meet the milestone demos (once decided)\n", "All premium members", "\n", "Follow up with premium members who have never attended a TSC meeting\n", "Yang", "\n", "Hire a lawyer with experience in open source licenses to look at licenses for all potential simulators\n", "AWF board", "\n", ": Decided to use Apex.AI lawyer, paid for from AWF budget; waiting to receive revised license from LG. Also need to include CARLA, Unreal and Unity licenses.", "\n", "Autoware.AI:\n", "Improving development practices through reduced write access to repositories and stronger PR rules.", "Splitting repositories and moving packages out of ", " repository.", "\n", "Autoware.Auto\n", "Ported two more algorithms from Apex.Autonomy", "Was waiting for tool chain decision before setting up infrastructure, CI, etc. This decision has been made now (in favour of GitLab Gold via the OSS programme), so this work can begin.", "Discussion going on at Apex.AI about how to sync Apex.Autonomy and Autoware.Auto. Will be testing a process using a GPS driver.\n", "Apex.Autonomy runs on top of Apex.OS (the real-time, deterministic, certified version of ROS 2).", "\n", "\n", "Focus has been on producing XML representations from the real-time data that they collect.", "Currently have an internal XML representation that can represent all aspects of both open and covered carparks.", "Next piece of work is to determine how to consume that map for the purposes of navigation and localisation.\n", "This is where lanelets comes in.", "\n", "Lanelets2 is an open source, open format map representation. It has a library that implements it available already.", "Lanelets2 doesn\u2019t cover as much as Parkopedia\u2019s internal format, such as multiple levels, ramps, etc. But Lanelets2 is open source, and so modifiable and acceptable and no challenges of balancing releasing some parts and not others.", "Parkopedia has had success converting their XML representation into OpenStreetMap.", "Brian has spoken to Atlatec and they are using lanelets2 as well.", "Parkopedia wants to support the effort required to integrate lanelets2 into autoware for navigation and localisation.\n", "Lanelets2 supports localisation but it may not support everything needed but Autoware for localisation.", "\n", "Parkopedia is working with leading OEMs on the use of artificial landmarks. They want to integrate this information into the lanelets2 format.", "Parkopedia believes that all maps that Autoware can read and write should be in an XML format that ideally uses the lanelets2 library.", "LG is concerned about the streaming of map data.\n", "The wider OEM community is not considering using XML. Most automotive companies are using NDS, which is much heavier than an XML representation.", "\n", "Apex.AI has talked to the authors of lanelets2 and found them very open to adding new features that Autoware requires, although they may want some kind of payment if they have to do any work themselves. It is worth considering trying to get them into the AWF.\n", "Lanelets2 development is very active and it is very well maintained.", "\n", "\n", ": Parkopedia wants to make the contributions to lanelets2 to support 3D.\n", "Apex.AI is concerned if Parkopedia can afford to do this work.", "\n", "\n", ": Apex.AI wants to see a lightweight prototype, e.g. using the NDT localiser node.\n", "Tier IV is working on prototyping to see how lanelets2 can be used internally in Autoware.", "\n", "Some code from Apollo has ended up in Autoware again recently.\n", "\n", "Do we need to revisit our policy towards Apollo?", "If not, how are we going to handle cases of wanting features they have already implemented?", "For copying of code:\n", "Board: Fine with this sort of code copying as long as the copyright is preserved.", "Apex.AI: We should be using source from external sources as a dependency rather than copying it into Autoware.", "Tier IV: The policy of not copying has already been established and clarified but there is a lot work to do for cleaning up existing code that has been forked unnecessarily.", "\n", "For relationship to Apollo:\n", "Board: We should be OK with using code from Apollo because it is open source.", "Apex.AI: Then should we work with them to make their code easier to depend on rather than copy?", "LG: If we understand the algorithms and they are better we should copy them because Apollo breaks their API all the time.", "\n", ": Decide to copy or not on a case-by-case basis.", "\n", "Esteve (Apex.AI) has spoken directly to Epic Games about how their licensing works for using Unreal in simulators for autonomous driving.", "Epic stated that we can do whatever we want with Unreal, and only if we were to ", " the simulator would the royalty policy kick in.", "Still want a second opinion from the lawyer that the AWF will hire to look at the licenses.", "Epic\u2019s revenue model is through support contracts, not through royalties.", "Epic Games has expressed an interest in joining the Autoware Foundation as a paid member.", "Their interest is obviously going to be in the use of their engine to drive self-driving simulators.", "Epic have invited someone from the AWF to attend their event in Detroit next week for people using Unreal in industrial applications (not games).\n", "\n", "\n", ": If they are interested in joining they should go through the usual process.", "These outreach programmes allow organisations to work with students and with people from underrepresented communities (women, people from developing countries, etc.).\n", "Targeted to people who want to be involved in open source projects.", "\n", "They are very successful at giving these people experience they may otherwise not be able to get and at encouraging them to get into open source.", "They are a good way to introduce new people to our projects.", "They provide another way to find new employees (OSRF has had good experience with this)", "For an example of the impact such diversity programmes can have, watch this short talk from ROSCon 2016: ", "\n", "For GSoC:\n", "Organisation makes a proposal to be part of the programme.", "Google selects organisations and allocates a number of slots to each selected organisation.", "Google pays the student a stipend.", "Organisations are responsible for mentoring the student with the goal of their work being integrated into the organisation\u2019s projects.", "\n", "For Outreachy:\n", "Not specifically for students, for underrepresented communities.", "Funded by donations (it\u2019s a foundation) such as from Microsoft. May need to contribute financially to be involved.", "Happens twice a year (summer and winter).", "In general works the same way as GSoC.", "\n", "Apex.AI suggests starting with one to avoid getting overworked while we figure out how to support it.", "Apex.AI suggests that because we are late for GSoC, we ask the OSRF if we can use one of their slots instead.", "\n", ": Try to use an OSRF slot this year for GSoC, and use that to figure out how to work with it so we can participate properly next year.", "See ", "\n", "Listed:\n", "Apex", "Parkopedia", "Streetdrone", "\n", "Not listed\n", "Tier IV", "LG", "Kalray", "Arm", "Linaro", "AutonomousStuff", "TRI-AD", "Autocore.ai", "Huawei", "Velodyne", "\n", "All \u201cnot listed\u201d companies must provide their proposed contributions ASAP.", "We need to settle on a common hardware platform. Momentum and inertia seem to be pushing us towards the Lexus.", "We need to know the detailed parameters of this car for:\n", "Control algorithm tuning (Tier IV needs this)", "Physical modelling for simulation (LG needs this)", "\n", "It has been suggested that AutonomousStuff can provide this sort of detailed information.", "AS is willing to help with this work, but they cannot spend weeks getting the exact parameters. They also need to figure out what they are already doing in relation to LGSVL, and how the control work relates to their commercial product.", "AS to talk to LG offline about the LGSVL work.", "StreetDrone has already done this work for their vehicle to get all the necessary parameters, and they provide a URDF model.", "\n", ": TSC members all agree on the need for a common format for defining the car\u2019s parameters (URDF).\n", "May need an automatic exporter from URDF to the simulator, depending on the simulator being used.", "\n", "\n", ": StreetDrone is driving vehicle interface abstraction. They will collaborate with AS.\n", "StreetDrone to set up a meeting to talk about the vehicle interface.", "\n", "We must choose milestones to direct our development efforts for the next generation Autoware.", "See ", ".\n", "This is the planning topic. Agreed milestones will be made public in the open Autoware category and on the Autoware Foundation website.", "\n", "We must agree on at least the first two or three milestones today.", "Recently the ROS 2 TSC\u2019s security working group has done quite a bit of good work in developing a threat model for two robots:\n", "The Turtlebot 3", "Acutronic Robotics\u2019 ", "\n", "\n", "\n", ": A member company should undertake to develop a thread model for Autoware.Auto and its ", ".", "A company called ", " has capabilities for automating the creation of simulation worlds and vehicle models.", "Should we get in touch with them and see if they want to work with us?"], "url": "https://discourse.ros.org/t/autoware-tsc-meeting-minutes-for-april-17th-2019/8938"},
{"title": "Generalized Traffic Light Classification Architecture", "thread_contents": ["Currently, Autoware.ai contains 3 types of traffic light classification systems:", "Each of these assumes that it will be handed two pieces of information:", "These traffic light ROIs (regions of interest) are provided by the ", " (feature projection) node which uses information from the vector map and camera intrinsic and extrinsic parameters to project the bulb locations from the map in 3D space into the 2D plane of the camera\u2019s field of view.", "In developing our own traffic light classification node, we have run into the following issues:", "We think it is possible to provide a general-purpose architecture for traffic light recognition (and other constrained-ROI-type image classification problems) but some pros/cons must be considered for each approach. I\u2019m not going to speak too much to the types or capabilities of neural networks which would fit the bill since that isn\u2019t my area of expertise - I\u2019ll invite my colleague Joe Driscoll to speak on this topic - but more on the overall architecture. I think our intended goals for the new architecture look something like this:", "For implementing an architecture which does the above, these possible options come to mind:", "Well, now that I\u2019ve written a novel on the subject, please provide feedback and suggestions on how we can make an awesome traffic light detector that works well enough to be used in real traffic!", "\nThank you for starting the discussion. I believe a lot of people are interested in the topic.", "About approach 1&3, don\u2019t you still need to calculate ROI from vector_map information even with DNN? Determining the presence of relevant traffic light does not ensure that irrelevant traffic lights are not in the image. If DNN detects multiple traffic lights in the image, you need information to choose which one to look at.", "You are correct. That is a fact that I missed. However, we could use the centroid of the initial ROI estimate from the feature projection node to find the closest detected light from those that the DNN node found.", "It\u2019s really a trade-off between attempting to make the feature-projection node more robust to differences between the idealized world (vector map) and the real world and providing an alternative to feature projection that is less prone to the same real-world pitfalls as feature projection but needs feature projection as an anchor to the idealized world.", " thank you for your comprehensive analysis of the current status and for prividing possible solutions related to the classification of traffic lights.", "Here are some of my comments related to your post:", "If you agree with me, (A) even with current ADAS map format,  the definition of which traffic light applies to which lane is not well defined. Current format defines \u201cclosest lane ID\u201d, but not exactly which one it is, it also only allows the definition of a ", " lane. (not sure about other ADAS formats)", "(B) just like you mentioned previously, current definition of a traffic light is ambiguous. It requires the search of individual \u201clamps\u201d to define a traffic light object. This is not as straightforward as it should be. In my opinion a new layer defining the traffic lights objects need to be added to the ADAS format.", "Now, regarding the 3 of the proposed solutions. I still think that approach (2) of your list is the most \u201cdynamic\u201d, since different nodes can be used to classify regardless the DL framework. However, I also agree that it needs to be improved.", "The recognizer must publish three pieces of information:", "In my opinion, the ", " nodes should only publish an array of results, for each image in a similar fashion to ", ", but containing the Traffic Light classification results.", "Visualization (super_impose, and markers) should be handled in an independent ", " node.", "The recognizer must classify a found traffic light from the image as having one of four states:", "I mentioned above an array of classification results, instead of a single result, so the classifier can handle more complex combinations.", "\nCase in point, only in central Japan these three types of traffic can be found:", "\n", "Example:", "would match to:", "\n", "I believe this should be able to handle different combination in different parts of the world.", "What do you think?", "Is it possible to only emit a single ROI from feature-projection node by a simple filtering rule such as FOV cropping or largest ROI.", " I agree with your assessment of the shortcomings of the mapping format with regard to traffic lights. However, we are unable to modify the existing ADASMap format (it is Aisan\u2019s proprietary format) which is why Autoware is moving toward a new \u201cAutoware Map\u201d format. This format supports many-to-one relationships between lights and lanes (see page 17 of ", "). I believe the new format also supports what you are suggesting in regard to multiple lights on a signal. ", " may be able to comment more on this issue.", "I like the idea for ", " but it will run into the following problem:", "In this scenario, because of the latency introduced by the classifier, the ", " cannot correctly identify which raw image is tied to the classification results. If it publishes the most recently-received version of both, it will be superimposing old classifications on new images. The time delay won\u2019t be much but I just wanted to mention this issue.", "Publishing probability with the state would just push the logic of decision to the consumer module. Could cause duplication in the case of multiple consumer modules. IMHO tl modules are the best place to have definitive decision and output a definitive result. Please give a possible scenario where this probabilistic information is useful for a consumer module.", "Approach 1 I really like for the following reasons:", "PS: Crazy idea, draw ROI using perception node, run small NN on cropped ROI. eliminating feat_proj.", " - I agree with your assessment about passing the probability on to another node for the decision. However, these would be very useful for training/tweaking so I don\u2019t think publishing it is a bad thing. We could publish it and just not use it in any downstream nodes.", "Regarding approach 1, I would tend to agree with most of your points. However, as far as using the", "\nperception node for the light ROI, as ", " mentioned, we need to have some measure of certainty about which light applies to the lane we are currently in and we can\u2019t determine this without data from the vector map, thus necessitating ", ".", "which is why Autoware is moving toward a new \u201cAutoware Map\u201d format. This format supports many-to-one relationships between lights and lanes (see page 17 of ", ").", "Actually, we have decided to use Lanelet2 format as IO format and also as internal format in TSC meeting. (AutowareMapFormat will disappear.)", "\nHowever, we would need to add some extension to Lanelet2 format so that it has enough information to minimize the degradation of current Autoware functionalities. I will post the idea about extended format on discourse soon.", "I believe the new format also supports what you are suggesting in regard to multiple lights on a signal.", "Lanelet2 supports a single lane linked to multiple traffic lights and also multiple lanes linked to a single traffic light.", " I also agree that it would be simpler to have tl modules to have definitive decision. However, one of the concerns that ", " is mentioning is that having only four states (Stop, Yield, Go,  Unknown) is not enough in some situations (at least in Japan).", "Even the lighting pattern doesn\u2019t change, whether you are allowed to \u201cGo\u201d or not depends on which way the vehicle is going. In the following example from ", "\u2019s post, the vehicle is allowed to \u201cGo\u201d only straight or to the left, but not to right.", "\n                    ", "\n\n", "Therefore, you would need more than the four states.", "Yes more states should be helpful. Attaching probability to each state, not. I wonder if the following in enough:", "So, I think there are multiple ways to handle the light layout that ", " describes above. Here are a couple:", "Thoughts?", "I am having a hard time imagining how would approach 2 work. What is the image that the classifier will classify? It will have to be an image of a whole light cluster ie: ", "  I don\u2019t think there is a way to subdivide this image any further.", "Also what do you mean by \u201cdirection-based\u201d signals? Who create this signals? Do you mean 3 separate ros topics (left, right, ahead) to publish separately a [r, g, y] state for each?", "Please clarify.", "Maybe I misunderstood the meaning of the lights in your example cluster. I\u2019m not very familiar with traffic lights in Japan. Are each of the arrow lights on the bottom row associated with a single light on the top row or does the entire top row indicate something totally separate from the bottom row?", " will have to correct me. But If I was driving in Japan, I would interpret this as:", "In the above picture:", "Hence the full state of the signal for all 3 directions can only be obtained after recognizing the whole cluster. Hence we wouldn\u2019t be able to subdivide the cluster.", "It looks like the TLD need to be modified for geographical regions anyways. e.g.", "Hence I think it would be more important to design the topics to be flexible enough to cover most traffic rules. Then the implementation can be swapped in and out for different regions.", "WRT the discussion of detection + classification 2 stage pipeline V.S. a single stage pipeline, here are some research on both approaches:", "2 also references a large number of research papers using 2 stage solution, which uses either image processing technique as a first stage, or YOLO-like object detection CNN as a first stage.", "To offer maximum flexibility, I propose the following:", "In a graph", "\n", "To improve ease of internationalisation it would be helpful to split TLD black box into 2 parts,", " - In your revised graph above, wouldn\u2019t the purpose of the \u201cTLD_Vision_Detector\u201d only be to verify that the light exists inside the ROI? Doesn\u2019t this then become a two-stage detection system as was described above? I feel like we might be better off offering alternative implementations of the \u201cTLD_BlackBox\u201d described in your first graph for different countries or just flags which set the country to enable/disable functionality within the node. Thoughts?", "I think Feature_Projection and ROI can be deprecated. Neural networks are capable of detecting and classify traffic lights from the raw image. I left it in the graph to be a \u201coptional\u201d input.", "For example, there could be multiple traffic light in view of the camera. the Vision Detector would  detect all of them. TLD_internationalisation would then take the one \u201cclosest\u201d to the vehicle and output its state.", "This way if special sauce is needed for a particular country, for example right on red in US (default green for turning right), then one need only to modify TLD_internationalisation, and not have to touch any neural network bits in TLD_Vision_Detector.", "That is my intention, but I would have no problem if all this is done as a blackbox inside a single node.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["A heuristic approach (", ")", "A DNN approach which utilizes the MXNet framework (", ") and CUDA", "A DNN approach which utilizes the SSD framework (", ") and CUDA", "A list of regions of interest which contain the traffic lights", "A raw image", "The results from the heuristic approach were terrible and nearly unusable in real-world scenarios.", "Both the MXNet and SSD/Caffe detectors contain backbones which were trained using the COCO dataset, which is not available for commercial use. This severely limits the applicability of these nodes since they were designed specifically for these frameworks.", "Much of the functionality is duplicated between the DNN-based nodes.", "Attempting to separate the cropping/ROI extraction functionality of these nodes from the classification functionality leads to either timing issues or chicken-and-egg problems (described in more detail in a bit).", "The ", " node is somewhat naive in it\u2019s cropping mechanisms. Variance in pitch/roll/yaw of the vehicle, multiple bulbs in certain vector map versions, and the field-of-view of the detection camera lead to ROI images which are either too large, too small, only covering a portion of the light, or not pointing at the light whatsoever.", "The recognizer must take in raw images from one or more cameras and detect if a traffic light which exists in the vector map also exists within those images.", "If a traffic light exists in the vector map and is applicable to the currently-occupied lane and direction of travel but is outside the field of view of the camera(s), the recognizer should provide this feedback.", "The recognizer must classify a found traffic light from the image as having one of four states:\n", "Stop (usually red)", "Yield (usually yellow)", "Go (usually green or blue)", "Unknown", "\n", "The recognizer must publish three pieces of information:\n", "An overall recommendation to the vehicle control system about how to proceed given the detected and classified traffic light(s).", "An image which contains the contents of the raw image plus superimposed squares around the detected traffic lights and their associated classifications (this is currently provided by all classifiers but is only useful for human interaction and not necessary for system functionality).", "A ", " which contains markers for the detected lights and their classification results (again, this is not necessary for system functionality but is provided by all current classifiers).", "\n", "Combine the problems of detection and classification into a single, neural-network-based approach.", "Pros:\n", "Simplifies the architecture immensely", "Reduces compute resources (no image re-publishing, cropping, etc.)", "Gets rid of latency and chicken-and-egg problems", "\n", "Cons:\n", "Difficult to make general-purpose given the feature, language, and library support of the many neural network frameworks that are available.", "Difficult to troubleshoot since the task domain has increased and you can\u2019t obtain partial results.", "People who are using Autoware without a GPU are out of luck.", "\n", "Keep the detection task separate from the classification task but improve ", "'s ROI selection and, in the classification task,separate the actual classifier from the ROS node by either creating the classifier as a library or a separate node with a ROS service call in-between.", "Pros:\n", "Reuses existing code.", "The classification task can be heuristic or DNN-based and the classifier-interface node doesn\u2019t have to care - it just makes a service call or overloaded function call.", "\n", "Cons:\n", "The classifier-interface node can run into latency issues. Whether using a library or separate-node approach for the classifier, the latency between receiving the raw image and ROIs for that image and publishing the superimposed image with classification results is non-trivial. To keep consistency in the published superimposed image, the classifier-interface node has to receive the raw image and ROIs, make a call to the classifier, wait for the classifier to return the result, annotate the image and marker arrays, and then publish them. This can cause incoming images and ROIs to not be processed while the classifier-interface node is waiting for the current classification result. Making this call in any sort of asynchronous way means that you have to manage a list of received raw images and ROIs and coordinate them with the returned classification results.", "If using a library-based approach, only one language can be used and the choice of the language for the classifier-interface node would determine which language would be supported for the classification libraries (e.g., if using C++, can\u2019t use Python for the classifier).", "The detection task essentially remains the same but contains band-aids and hacks to make it better at feature projection in a real-world environment.", "\n", "Use feature projection to either a) determine if a relevant traffic light is in the image(s) AND find the ROI for that light or b) if a GPU is available, just determine if a relevant traffic light is in the image(s) while handing the detection task to a DNN-based node if the traffic light is in the image(s). In addition, separate the classifier as described in 2.", "Pros:\n", "Makes all involved nodes \u201cgeneral-purpose\u201d and usable with or without a GPU.", "Improves the ROI generation with a common approach that is known to produce high-reliability results (the DNN-based detector).", "The placement of traffic lights in the vector map and the yaw/pitch/roll of the vehicle are much less relevant to the detection task because the DNN-based detector only uses the raw image as input.", "The neural network for traffic light detection could be very shallow if only looking for one type of object in the image.", "Each of the stages of detection and classification can be more easily troubleshot and fine-tuned due to increased visibility into the pipeline.", "Same pros as 2.", "\n", "Cons:\n", "More computationally expensive than other approaches because of multiple neural networks running simultaneously and more nodes.", "Same cons as 2.", "\n", "Stop (usually red)", "Yield (usually yellow)", "Go (usually green or blue)", "Unknown", "Camera publishes raw image", "Feature Projection publishes ROIs (or light positions, as suggested)", "Classifier consumes raw image and ROIs (or light positions, as suggested) and produces classification (takes unknown amount of time)", "\n", " consumes raw image and classification", "Simplicity, simplify code and compute graph, reduce large message passing", "More robust, given all problem with current feature extraction node, a DNN approach with some filtering from vector map information should give a lot more robust result. Especially in areas that vector map is inaccurate or lacking.", "Achievability, seems to be a well-explored approach, a lot of networks and training data that can be used. ", ", ", ", ", "\n", "Speed, people running autoware without a GPU should already be in a lot of pain given that perception and tl detection module already reply on NNs. A CPU only simple heuristic node could still be provided by combining current feat_proj and region_tlr nodes, but I suspect the resultant quality would fit nobody\u2019s needs.", "tfd node publish a light color for going forward, turn left, turn right. Default to red. Hence the tfd would be in charge of condensing the different shapes of lights into these 3 channels.", "DecisionMakerNode currently have logic to do straight/left/right recognition by using angle. This node can then make a go/hold decision based on tfd output.", "Have the entire light cluster classified by the tlr in one go. This is difficult to implement because of the required number of statuses for different light combinations and the complete re-training required for the existing neural networks, not to mention the number of images required for each state for each combination of lights for training.", "Create individual, \u201cdirection-based\u201d signals. Using the example image from above, create 3 signals with seperate classification states for each. We would need to add metadata to the mapping format to indicate the direction of travel that each signal controls and then either have the feat_proj choose the correct one based on a \u201cdirection-of-travel\u201d input or have a decision node after the classification decide which to use. The upside of this approach is that the existing tlr NNs would only require a bit of transfer learning to train rather than compete re-training.", "Create \u201cdirection-based\u201d signals as described in 2 but have the classifier learn to distinguish between the different signal types and produce both a signal type and a state classification.", "The top row is the normal traffic light scenario, I.E. 3 lights with R/Y/G. Meaning Stop/Slow/Go for all directions. (I think each position only shows one colour, otherwise, it would be difficult for colour blind people.)", "The bottom row contains modifiers that overwrite the top row instruction. (they are only ever green, they have 2 states, off/green)", "Stop for all directions", "For a left turn, override to Go. For going ahead override to forward.", "In Japan, the green light is blue, the pre-processing of the raw image need to account for that.", "In the US there is right on red, and TLD or other node needs to be able to recognize the (No turn on red) sign.", "In Europe, there is ever only one directional modifier in addition to the main light.", "Join traffic sign and traffic light detection and classification using a single DNN. ", "\n", "2 stage pipeline - ", "\n", "specify a single stage TLD. If multiple stages are required, they can be implemented as internal stages of the TLD.", "feat_proj will continue to exist but improved to take into account the pose of the car", "TLD takes the output of feat_proj as a suggestion but doesn\u2019t wholly rely on the map to provide accurate information", "TLD outputs a go/slow/stop states for each of right/left/ahead directions.", "A decision node will take the output of TLD and path planner to issue STOP/GO signals to the vehicle.", "To deal with geographical differences, TLD node will have different implementation depending on the application.", "Autoware can provide a generic TLD node trained using a publically available database. As there are established research projects in this area, a reference implementation can be done following one of the papers.", "TLD_Vision_Detector to perform purely the task of detecting the lights from an image.", "TLD_internationalisation to integrate information from other sources to condense vision detection into light/right/ahead light signals.", "TLD_Vision_Detector would only deal with running a neural network and is hence very simple.", "TLD_internationalisation would then take multiple signal and discern a left/right/ahead signal."], "url": "https://discourse.ros.org/t/generalized-traffic-light-classification-architecture/9354"},
{"title": "RQT in ROS2", "thread_contents": ["Hello ROS community!", "We are excited to announce that ", " is working with ", " to port the plugin-based graphical user interface ", " to ROS2 for the December Crystal release. The RQT packages provide an easier entry-point for a broader user base than command line usage. RQT is built using the open source cross-platform framework ", ".", "Our primary approach to this effort will be:", "We invite the community to provide feedback and suggestions on RQT by replying to this thread. While this is an ideal time to break API, given time and resource constraints, enhancements will be secondary to porting existing functionality. However, this thread will also act as a rough roadmap to guide future enhancements.", "We believe this is an excellent opportunity to contribute to the ROS2 development effort and a first step in preparing PickNik to migrate ", " to ROS2. We are grateful to the community and corporate partners like Amazon that help drive improvements for ROS.", "Thanks,", "\nThe PickNik Team", "This is my rqt wishlist, in an order that is a rough combination of increasing difficulty and decreasing priority:", "This is my rqt wishlist", "Please do not mistake porting effort with arbitrary feature development. The main goal is to port the existing framework and several plugins to ROS 2 (Python 3 as well as Windows).", "If you would like to specific features please feel free to contribute them - either to the current ROS 1 branches or to the -to-be-created ROS 2 branch. A couple of brief notes to your bullets:", "rqt_plot - \u2026 implement from scratch \u2026", "There is no reason to implement \u201cyet another\u201d plotting plugin. There is already (at least) two: ", " as well as ", "rqt dynamic reconfigure", "Dynamic reconfigure conceptionally / intentionally doesn\u2019t exist in ROS 2. The ROS 2 parameters are node specific and replace the ROS 1 parameters as well as dynamic reconfigure.", "Individual crashed or unresponsive plugins", "In the past Qt offered the ability to embed widgets from separate processes (at least on X11). That is not available in Qt 5 anymore and therefore this way of isolating plugins in ", " isn\u2019t possible anymore. If you see another way to achieve this please feel free to propose it.", "rviz-in-rqt", "There is already a ", " plugin for ", " (it has some severe issues though). That could be ported as is. Publishing and rendering the ", " views and relaying the mouse / keyboard interaction sounds like a big no-go to me.", "Convert a .perspective file to a webserver + html5/js, or an android app", "This sounds like an incredible complex task - even ignoring that there are no html5/js or Android components atm which could be the target of any mapping.", "Please do not mistake porting effort with arbitrary feature development. The main goal is to port the existing framework and several plugins to ROS 2 (Python 3 as well as Windows).", "I\u2019m responding to the \u2018While this is an ideal time to break API, given time and resource constraints, enhancements will be secondary to porting existing functionality. However, this thread will also act as a rough roadmap to guide future enhancements\u2019 above.  If there were decisions to be made in immediate porting effort that would benefit the sorts of features outlined above then that is the substance to take away.  For instance, if only a subset of the common plugins where to make the cut for the targeted release, the first few items are what I would like to see- and others will have an opinion, and maybe some shouldn\u2019t be ported at all?  (I\u2019m drawing inspiration from other ros2 threads about if a given package or part of a package isn\u2019t used much, or has been superseded, or just is way less useful than some other parts or packages, don\u2019t bother porting right now or ever)", "There is no reason to implement \u201cyet another\u201d plotting plugin. There is already (at least) two:  ", "  as well as  ", "If it were quicker to do it from scratch, or just narrow support to a single back end, and that would make the difference between having rqt_plot by the desired time or not, and/or it would end up with better performance, then that would be the reason to consider not just a direct port.  (Maybe it should publish the plot as an Image, or a generic vector image message type if pixels seem clunky?  Maybe every visual plugin should publish an Image instead of drawing directly to a window- that would simplify several of them, to the point where they are no longer even rqt plugins, just regular ros2 nodes with parameters set through a generic ros2 param setting rqt plugin?  If there are strong reasons not to that ties into the rviz-rqt idea)", "Dynamic reconfigure conceptionally / intentionally doesn\u2019t exist in ROS 2. The ROS 2 parameters are node specific and replace the ROS 1 parameters as well as dynamic reconfigure.", "Instead of direct porting there would be an equivalently functional rqt ros2 plugin for viewing and changing per node parameters.  (Being able to hide some parameters and save that into the .perspective would be useful if every node has a lot of boiler plate parameters.)", "In the past Qt offered the ability to embed widgets from separate processes (at least on X11). That is not available in Qt 5 anymore and therefore this way of isolating plugins in  ", "  isn\u2019t possible anymore. If you see another way to achieve this please feel free to propose it.", "That\u2019s unfortunate.  In the much longer term maybe the qt in rqt should be something else (which could also benefit the web/android/whatever cross platform capability, or some of the other items here).", "Publishing and rendering the  ", "  views and relaying the mouse / keyboard interaction sounds like a big no-go to me.", "I\u2019d be curious to know why- if it has anything to do with underlying limitations of ros or qt it will help me guide my future pull-request efforts and comments (if it is just timeframe this is something for the longer term, e.g. \u2018rviz2.5\u2019 or \u2018rviz3\u2019).  I\u2019ve done similar things on a limited scale in ros1 with satisfactory results, I assume ros2 will perform better.", "Convert a .perspective file to a webserver + html5/js, or an android app", "This sounds like an incredible complex task - even ignoring that there are no html5/js or Android components atm which could be the target of any mapping.", "Yes that is true, but again I throw it in here in case someone else knows something can contribute, or in some decision between x or y it turned out x could be more easily converted to those platforms.  The short term would probably be a few of those components- a generic node parameter configuration widget, an image viewer, plotter, echo, publish, etc. and just a document to guide how to manually assemble them into something similar to the rqt file, and automation later.", "If you would like to specific features please feel free to contribute them - either to the current ROS 1 branches or to the -to-be-created ROS 2 branch.", "Of course, I\u2019ve always done this in the past.  I\u2019m hopeful that if the right minimum coverage of standard ros interfaces have good general ui plugins then writing ui code now will pay off in my (or someone else in my place) not having it to write much or any application specific ui code in the future, it will just be a matter of selecting and positioning and configuring the widgets (we\u2019d be writing ros nodes with ros interfaces mainly meant to be part of a ui that is a thin layer of generic plugins, but that is an improvement over having to write qt).", "Do we actually need two separate ways to build graphical user interfaces in ROS2? There is ", ", which provides dockable widgets, and ", ", which provides dockable widgets and also 3D visualization.", "\nI don\u2019t know why ROS1 has two separate GUI widget plugin architectures, but porting GUI widgets from ROS1 to ROS2 is a good opportunity to reconsider this. Is there a reason ROS2 needs to have two GUI widget plugin systems?", "I consider RViz as the more useful GUI to visualize a robot\u2019s state and control it, and I think that ROS2 should establish RViz plugins as the default way to compose GUIs. I do not see the advantage of having two plugin systems for widgets. In some cases (e.g. image view), it even creates multiple versions of the same visualization functionality.", "The only remaining issue I see with RViz is that the 3D view in RViz is not dockable at the moment, i.e. it is always visible and cannot be removed. I think developer time is better spent by making the 3D view dockable and porting Rqt widgets directly to RViz(2).", "I actually don\u2019t agree. The docking system in rviz is minimalistic and used primarily with things related to rviz\u2019s activities. rqt\u2019s docking system is far more sophisticated and necessary for some of the features it supports.", "One important difference is that rviz panels share state with each other though C++ interfaces whereas rqt plugins can either be c++ or Python and exchange (almost) all information via ROS topics, services, and actions.", "I actually see them having different goals, if anything were to be elided, I\u2019d say it should be that rviz\u2019s application code (docking and extra widgets) could be replaced with rqt, such that the rviz panels (i.e. the render window, panels, and tool bars) would become rqt plugins and the \u201crviz\u201d application would simply be a specially crafted rqt layout.", "I\u2019m actually not sure it\u2019s worth doing this, because of the aforementioned shared state between rviz parts which would require either rebuilding those interfaces as ROS interfaces (unnecessary and would have more overhead) or changing rqt so that different plugins could communicate with each other directly (a difficult issue to be sure, given you cannot assume the existence of other plugins nor that they\u2019re c++ or Python).", "Any update on rqt for ROS2?", "Hello Lalit,", "We ported most of the rqt common plugins to ROS2 for the Crystal release. Please see the tutorial page for more information.", "Stephen", "Thanks Stephen, I will check it out.", "If anyone wants to help, I plan to port ", " to ROS2. Any help from people with experience in DDS/ROS2 is welcome.", "Is there any plan to port ", "?", "There is no reason to implement \u201cyet another\u201d plotting plugin. There is already (at least) two: ", " as well as ", "If it were quicker to do it from scratch, or just narrow support to a single back end, and that would make the difference between having rqt_plot by the desired time or not, and/or it would end up with better performance, then that would be the reason to consider not just a direct port.", "This is the only thing I have to say about the latter comment ", "Is anyone porting* the rest of the rqt plugins? In particular, is anyone porting rqt_graph?", "(*Edit, fixed)", "rqt_graph has been ported and released!", " - Where? Can you point me to it?", "is any one porting rviz plugin for rqt?", "To install ", ". ", ", ", "I tried on ", ".", "Contribute to ros-visualization/rqt_graph development by creating an account on GitHub.", "@ harderthan- I am working on Ubuntu 18.04, ROS2 Dashing", "\nI have already installed rqt-graph what you have mentioned.", "rqt is listing only \u201cImage View\u201d and \u201cPlot\u201d options  under \u201cplugins/Visualization\u201d", "Do I need to install any other plugins to get rviz plugin for rqt?", "I\u2019m not sure anyone has taken on the port of the rqt_rviz plugin. When we ported the RQT plugins to ROS2, this one was specifically avoided due to the large amount of work involved and the timeline we were working under. Alberto from iRobot also looked into it, but I\u2019m not sure if they were able to make any progress on it. It\u2019s likely a large undertaking and would require some dedicated effort from knowledgeable individuals.", "Related thread:", "Stephen", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Target only the RQT-common plugins and dependencies", "Add support of Python3 and ament build system", "Support OSX and Windows", "Rework ROS middleware plugins to work with DDS", "Support the other core ROS libraries that are currently being developed by being first adopters of their new APIs, such as rosbag, roslaunch, and actionlib.", "rqt_image_view - I\u2019d like to see this before much anything else.", "rqt_plot - maybe just choose or implement from scratch a simple single plot type rather than integrating multiple ones, make it work well enough, don\u2019t consume tons of cpu with default settings.", "rqt dynamic reconfigure with an interface more like rqt_image_view- I\u2019ve made my own ros1 version of this: ", " (it has some issues with reloading and servers not responding I need to clear up) - instead of a tree of all possible servers there is just one that is saved as a setting into the perspective file, but it can be switched with a drop down menu.  I\u2019ll make a ros2 version myself given ros2 dynamic reconfigure (?).", "message publishing and echoing, service calling and action calling could also use similar treatment to be more like rqt_image_view, and with the configuration hidden be presentable to an end user who knows nothing about ros.  Save configuration to the perspective file so it would be possible to set up a widget in a ui that is meant to do something specific on a single pre-configured topic or service as opposed to a tool to explore all possible topics and services etc. on a system in a big tree or list.", "Individual crashed or unresponsive plugins ought to not bring down the entire rqt instance.", "rviz-in-rqt - I know rviz2 work is already underway but it would be fantastic if the whole of it could be a small number of rqt plugins.  A render core would publish the view/s as Images and be configured through standard ros2 interfaces.  rqt_image_view would need to send all mouse events rather than just left mouse clicks.  The side panels could be special rqt plugins, or some functions could be generic service caller or dynamic reconfigure plugins and corresponding servers within the render module.  Eliminate redundant plugins for rviz like the image viewer (though the one that under/overlays rendered objects is still useful).", "Convert a .perspective file to a webserver + html5/js, or an android app."], "url": "https://discourse.ros.org/t/rqt-in-ros2/6428"},
{"title": "ROS 2 and Real-time", "thread_contents": ["In one of the previous ROS 2 TSC meeting it was suggested that we form a Working Group in which we will try to analyse the current state of ROS 2 and make it real-time.", "To this date we have the following articles about real-time in ROS 2:", "Since real-time is not something that can start and stop within the ROS 2 \u201cborders\u201d, we would like to propose to analyse an entire stack, from the hardware platform to the applications written with ROS 2.", "There is many details that we could get lost into but we think that we could start with the following list and elaborate on the items:", "We are requesting for comments:", "We are aiming for our first video meeting next week.", "D.", "This looks like a massive amount of effort. I commend you for even trying, but would caution that only very few people will be able to take part in this.", "At the same time, it\u2019s lacking a clear use case. Maybe we don\u2019t need all of that in the first shot. Without a use case, we don\u2019t know. Without a use case we don\u2019t have requirements. So, maybe starting with step 11 would be an idea ", "FWIW, I quite liked ROS1\u2019s \u201cjust have a real-time capable publisher\u201d approach. It\u2019s, by far, not enough in the long run, but it did get us into the kinds of system we were interested in. It\u2019s also a very modular approach, because it essentially by-passed the \u201cnormal\u201d core.", "As for the regular ROS2 core, I would love to see some analysis. Maybe we could convert some of your goals into code analyzer rules, and then run it over the code-base to see how many problems there are and where they are located (yes, all of us who have looked know there are quite a few, but it always helps to have some numbers to get a better grasp of the issue).", "For the record, in the micro-ROS effort, we are currently targeting Cortex-M class micro-controllers with a POSIX RTOS (NuttX). Reference platforms are mostly single core.", "We are aiming for our first video meeting next week.", "Next week are Easter holidays for many people.", "Happy to see this kicking off and willing to collaborate as pointed out previously.", "To this date we have the following articles about real-time in ROS 2:", "I\u2019d add the following articles to the list above which comes from a ", ":", "and this session in the last ROS-I conference in Europe: ", "Since real-time is not something that can start and stop within the ROS 2 \u201cborders\u201d, we would like to propose to analyse an entire stack, from the hardware platform to the applications written with ROS 2.", "This is the right approach. Same applies to safety and security.", "Pick real-time capable hardware platform. Decide if we go multi-core many-core or uP.", "This is a very troublesome topic. One of the points we should answer before selecting any hardware platform is answering the question of \u201cwhat\u2019s the actual (real-time) ", " of this WG?\u201d Is it going to be soft real-time? hard-real time? What are the use cases we have in mind for real-time? (this should probably come from the groups driving the work).", "Things are ", " different depending on where we want to go.", "We\u2019ve worked on this topic for several years already and humbly accumulated a few good (and not so good) experiences. We ended up moving into a ", " in close collaboration with Xilinx (Intel has similar, rather good alternatives) however I wouldn\u2019t claim such platform will be valid for (hard) real-time in any scenario. Obtaining (hard) real-time typically requires a good definition of the target (whether it\u2019s a joint driver, a LIDAR driver or a motion planner within MoveIt).", "There\u2019s no silver bullet and maintaining a specific hardware platform for hard (or even soft) real-time  requires a huge amount of resources.", "Create CI for RT testing (e.g. ", ")", "That\u2019s us. I\u2019ll be giving an update today but should be ready in a couple of months. Again, very open to include additional hardware platforms, reach out for more information on how to do so.", "We are requesting for comments:", "We are aiming for our first video meeting next week.", "We\u2019re obviously ", " in. Do you need help organizing the meetings? Happy to support  and plan the events or organize the meeting notes.", "At the same time, it\u2019s lacking a clear use case. Maybe we don\u2019t need all of that in the first shot. Without a use case, we don\u2019t know. Without a use case we don\u2019t have requirements. So, maybe starting with step 11 would be an idea ", "Agree with this and aligned with my paragraph above, we need to specify not only the level of real-time we\u2019re aiming for but also the particular use case", " this group is willing to maintain to serve as study cases for the community.", "For the record, in the micro-ROS effort, we are currently targeting Cortex-M class micro-controllers with a POSIX RTOS (NuttX). Reference platforms are mostly single core.", "I\u2019m somewhat concerned about the \u201creal-time\u201d capabilities we may end-up achieving with ", "\u2019s existing architecture. While the project is still ongoing and much work is left (almost half its way though), the architecture of DDS-XRCE requires a \u201cbridge\u201d to transform XRCE\u2019s client/server (or peer-to-peer if it ends up being implemented) communications into DDSI-RTPS ones (the ones in common ROS 2). Beyond communications between XRCE-native entities, communications won\u2019t interoperate directly with the ROS 2 network and such bridging will introduce a compromise for real-time applications. Including such \u201cbridge\u201d as one of the cases of study will benefit  the (micro-ROS) project.", "I\u2019m somewhat concerned about the \u201creal-time\u201d capabilities we may end-up achieving with ", "\u2019s existing architecture.[\u2026] the architecture of DDS-XRCE requires a \u201cbridge\u201d", "From our (Bosch CR) side, we only target the MCU itself as the real-time capable device.", "Apart from pragmatic reasons (this makes it much easier), in our current products that\u2019s all we need.", "I would guess that this assumption is true for many products, because it is a very common architectural approach to keep the real-time safe parts a very small part of the overall system. Of course, AD is a notable exception, which is probably why Dejan is so interested in a more comprehensive approach ", "Last, but not least, we\u2019re very interested in wireless communications and ", " real-time is out with that anyway.", "such bridging will introduce a compromise for real-time applications", "It depends on the implementation of the bridge. Assuming the transport layer is real-time capable (e.g., wired), the bridge itself could maintain real-time guarantees.", "Including such \u201cbridge\u201d as one of the cases of study will benefit the (micro-ROS) project.", "Very much agreed!", "Last, but not least, we\u2019re very interested in wireless communications and ", " real-time is out with that anyway.", "While I can\u2019t speak on its behalf ", " (or how deterministic it\u2019ll be), there\u2019s some interesting work we\u2019ve been exploring with a local research group here in our area that\u2019s extending TSN for wireless communications. Let me know if you\u2019re interested and I\u2019ll connect you.", "It depends on the implementation of the bridge. Assuming the transport layer is real-time capable (e.g., wired), the bridge itself could maintain real-time guarantees.", "Soft real-time guarantees probably, but hard real-time ones require the bridge itself to also be hard-real-time. Not only the transport layer but everything above as well, from the data link layer (OSI layer 2) up to the ROS 2 rcl (OSI layer 7, and going through all middle layers including the network and transport layers (which we typically refer to as the networking stack), the communication middleware (e.g. DDS), etc.).", "AFAIK, real-time isn\u2019t a goal in micro-ROS project but I\u2019d agree that we should indeed consider it and commit resources to it.", "Soft real-time guarantees, probably but hard real-time ones require the bridge itself to also be hard-real-time. [\u2026]AFAIK, real-time isn\u2019t a goal in micro-ROS project but I\u2019d agree that we should indeed consider it and commit resources to it.", "I just want to highlight that having a bridge, ", ", does not prevent us from achieving real-time capability. Of course, the ", " of the xrce-dds-bridge we use in micro-ROS is a different story. A lot of work remains to be done there, on all the layers you mentioned and probably internally as well.", "Do you want to join this working group? We will form a regular ROS working group that uses Discourse for discussions and holds video and in-person meetings.", "I would like to join this working group and contribute.", "Ingo, I agree with you that this is a significant effort - however there are many many use cases. If you are relying on low cost camera sensors (either 2D or 3D) for localization and obstacle avoidance you are most likely going to be piping that data through the CPU. If you want to go faster than a crawl you better have some level of determinism as to when that data is going to be processed and a stop/continue decision is made. There are certain types of camera based navigation that just don\u2019t work unless you have deterministic timing and that deterministic timing needs to occur between cameras and things like IMU.", "I have customers today (for example in warehouse) who both want the robot to go as fast as possible (to increase throughput) but also want to spend as little on the robot as possible - hence lower cost sensors. Now, I can easily build a fast low cost robot, but unless I am using systems that are outside of ROS its hard for me to ensure it is safe.", "Even if I could get part of the system to have deterministic timing that would be a huge boon - for example - if the safety sensors could pass messages direct to the motor controller over a deterministic data fabric (say AVB ethernet) such that the motor controller knows that it has to either slow down or stop that would already help a lot.", "I might start there - with that simple subset - a safety sensor that has a RTOS uC and a motor controller that has a similar RTOS uC and them passing DDS messages with deterministic characteristics.", "If we can get that to work then we can move on to the CPU oriented applications of camera based navigation.", "David, I\u2019m all sold on real-time. It\u2019s essential for many applications. I hope my comments above are not implying otherwise. Real-time is essential for ", ", which is what I think you\u2019re aiming for.", "I\u2019m even more sold on determinism. In fact, I\u2019m usually credited with putting it prominently on the ROS map through a talk at the ROSCon in 2017. That\u2019s not the same as real-time, however.", "When I say that those are big efforts, I\u2019m not saying we don\u2019t have to do this. I\u2019m mentioning it because I care about the ", ".", "And in particular, I think that the ", " depends a lot on the ", ". And Dejan didn\u2019t specify that. So, all I\u2019m asking is that people seriously think about the ", " before embarking on this journey.", "At the very least, these thoughts will give us some requirements and some metrics. And then we can think about how to achieve that in the easiest way.", "It will also give us some common ground to speak about.", "For me personally, I care about small consumer robots. So, my answers to the stack Dejan posted are:", "Now, if you ask Dejan, I\u2019m pretty sure his answers will be ", " different. That\u2019s because he has a ", " application (autonomous driving). Not sure about what Victor will say, but he\u2019s working on manipulation, which ", " again be quite different.", "So, from my perspective, we\u2019d like to collaborate on some of the points under bullet point 6, and that\u2019s also the core thing for ROS2. For the rest of the things, we are very likely to have a radically different approach.", "Therefore, please, before embarking on a \u201cfull stack\u201d approach, get your use cases clear and then maybe people will know what they\u2019re getting into and what the goals are.", "Great! Now we are getting some good discussion. Ingo, yes we\u2019ve dived in to actions and solutions before getting clear on the problem statement. We\u2019ve also generated a list of actions that mix both development and process and could be more clearly MECE. We are missing chunks - determanistic message passing requires known allocations of bandwidth - which is available with standards like AVB but not, so far, included on the list - we also need to talk a little bit about hardware. How about if we reformulate the discussion as follows for everyone to throw rocks at:", " To enable universal robotic service", " ROS robots cannot operate safely in many domains due to a lack of predictability and determanism that means sensors can\u2019t be relied on to prevent human injury", " ROS2 robots can guarantee safety in environments with unprotected humans by using sensors and by passing data from those sensors through the ROS2 messaging infrastructure.", " How can we create deterministic responses to sensor inputs in ROS2?", "Hardware", "Software", "Process", "I\u2019d propose to do the bold italic items first with the image of the initial target state being a sensor (say a sonar) passing a message to a motor controller for E-Stop.", "As the author of the Ada client library, I\u2019m interested in this topic. Not sure I can contribute much at this time but I will in any case try to keep the Ada library in sync with developments in this area.", "Do you want to join this working group? We will form a regular ROS working group that uses Discourse for discussions and holds video and in-person meetings.", "Yes, I\u2019d like to join the working group and contribute.", "Please count me in for teleconferences!", " and ", ", unless I\u2019m traveling, I\u2019ll be in the meeting but to would it be possible for you to participate  also and provide a small update of the RT build farm we\u2019re building? I think it\u2019s a great opportunity to get input.", "I guess some of people interesting in ROS 2 and Real-time are aware of the future DDS/TSN mapping but I did not see any material related to it linked in the discussion, so I think it is worth adding the links here:", "I\u2019d also like to attend the working group meetings.", " ", " ", " et al thank you very much for your feedback and also apologies for not replying earlier.", "I am with you and I agree that we need a use case. Not listing an item to decide on the use case was an oversight on my side. However I got the following use cases from your replies:", "If you want to plus one any of above items or add another use case please let me know.", "Otherwise it is clear that alone above 4 use cases are vastly different and will have different requirements, different HW, different middleware and probably also different control and data flows (which will result in different node architectures).", "Said that I guess we have 2 options to start from here:", "I am leaning towards the second option.", "I\u2019d like to invite for a meeting next week to decide on above and to kick off the work. Could you guys meet on", "Note that we have an interest across the globe, so getting a meeting friendly time in every zone will be impossible.", "That starting time is very Europe-friendly, so yes, it works for me ", "How much time do you expect the meeting would take? More than 90 minutes?", "That time works for me.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Original article by Jackie: ", "\n", "ROS 2 ported on some RTOS (", ", ", ")", "Apex.AI article about porting ROS 1 applications to ROS 2 applications: ", "\n", "Bosch proposing how to make Callback-group-level Executor real-time ", "\n", "Pick real-time capable hardware platform. Decide if we go multi-core many-core or uP.", "RTOS (real time operating system). Decide if we go posix or not posix. Add adaptive partitioning scheduler.", "Create/Get BSP (board support package) and do modifications (e.g. patch RT PREEMPT for Linux, configure the kernel (e.g. isolate CPUs, remove all unwanted drivers, add other applications))", "Explore use of real-time hyper-visor (QNX has one)", "Use/create static and real-time middleware", "rmw, rcl, rclcpp layers:\n", "introduce safe data types (bounded, check type integrity)", "perform memory audit (remove unneeded memory allocations)", "split memory allocation in init and runtime phases, avoid memory fragmentation", "remove all blocking calls (or replace with timed calls, e.g. ", " vs ", ")", "implement real-time safe log output handler (no logging to console or  file)", "implement real-time pub/sub (either using Waitset or modified Callback/Executor)", "convert ros2 launch to C++", "run tools for static and dynamic code analysis (PCLint, LDRA, Silexica, LTT-ng)", "\n", "Check everything above in the STL library", "Node architecture for deterministic execution (policy for message aggregation, nodes cohesion, parallelization, \u2026)", "Global error handling (history of failures, core dumps, fail-safe mechanism, \u2026)", "Real-time safety for higher level concepts, e.g.:\n", "services", "parameters", "actions", "\n", "Create reference applications and porting guidelines from ROS1 to ROS2:  ", "\n", "Create CI for RT testing (e.g. ", ")", "Do you have items to be added/removed from above list?", "Do you want to join this working group? We will form a regular ROS working group that uses Discourse for discussions and holds video and in-person meetings.", "Do you have items to be added/removed from above list?", "Do you want to join this working group? We will form a regular ROS working group that uses Discourse for discussions and holds video and in-person meetings.", "We use micro-controllers and they are real-time capable and usually single core, some multi-core, usually homogeneous.", "We use a POSIX RTOS, NuttX", "We chose hardware that\u2019s supported by 2. Still a pain though.", "Not necessary", "We use Micro-XRCE-DDS", "\u2026", "\n6.1) don\u2019t care", "\n6.2) got some ideas, interest to collaborate", "\n6.3) got some ideas, interest to collaborate", "\n6.4) unclear\u2026", "\n6.5) don\u2019t care", "\n6.6) HERE\u2019S THE BIGGIE", "\n6.7) don\u2019t care", "\n6.8) got it", "don\u2019t care", "working on it, using SPA approach", "proposing system modes approach", "don\u2019t care", "maybe", "we use a HIL approach", "CPU", "\n", " *", "Communications infrastructure\n", "\n", " *", "Low speed (e.g. SLIP)", "\n", "\n", " *\n", "modifications???", "\n", "CPU RTOS (e.g. QMX deriv)", "\nmodifications (e.g. patch RT PREEMPT for Linux, etc)", "\ndrivers for determanistic communications (e.g. bandwidth allocation on AVB)", "Libraries (rmw, rcl, rclcpp)\n", "Cleanup for safe implementation\n", "introduce safe data types (bounded, check type integrity)", "perform memory audit (remove unneeded memory allocations)", "split memory allocation in init and runtime phases, avoid memory fragmentation", "implement real-time safe log output handler (no logging to console or file)", "remove all blocking calls (or replace with timed calls, e.g. mutex vs timed_mutex)", "\n", "Cleanup for desirability\n", "convert ros2 launch to C++", "\n", "\n", " *\n", "Real-time pub/sub will need to request bandwidth allocation from shared comms infrastructure (e.g. AVB ethernet)", "Define message length standards", "Other", "\n", "\n", "\n", " *", "Services\n", "Global error handling (history of failures, core dumps, fail-safe mechanism, \u2026)", "Real-time safety for higher level concepts, e.g.: services, parameters, actions)", "\n", "run tools for static and dynamic code analysis (PCLint, LDRA, Silexica, LTT-ng)", "Check everything above in the STL library", "Create reference applications and porting guidelines from ROS1 to ROS2: ", " 9", "\n", " *", "Create BSP", "Create reference applications and porting guidelines from ROS1 to ROS2: ", " 9", "consumer robots (Ingo)", "warehouse logistics robots (David)", "mobile manipulation robots (Victor)", "autonomous driving robots/cars (Dejan, Geoff)", "select one of the use cases above and probably loose interest from people having other uses case.", "focus on somewhat generic parts of ROS 2 that will help independently of the selected use case.", "\nMy reading of your comments is that these parts are the following ones:\n", "create rmw layers for static and real-time middleware (RTI Connext Micro, Micro-XRCE-DDS)", "perform memory audit in rmw, rcl and rclcpp (remove unneeded memory allocations)", "split memory allocation in init and runtime phases, avoid memory fragmentation", "remove all blocking calls (or replace with timed calls, e.g.  ", "  vs  ", " )", "implement real-time pub/sub (either using Waitset or modified Callback/Executor)", "integrate tools for static and dynamic code analysis (PCLint, LDRA, Silexica, LTT-ng)", "Create node architecture for deterministic execution (policy for message aggregation, nodes cohesion, parallelization, local error handling \u2026)", "Create a design for global error handling (history of failures, core dumps, fail-safe mechanism, \u2026)", "\n", "Create CI for RT testing (e.g. ", ")", "\n", "\n", "Mon, May 20@7AM PST: ", " ?"], "url": "https://discourse.ros.org/t/ros-2-and-real-time/8796"},
{"title": "Astra driver for ROS2", "thread_contents": ["I noticed there is a repo to use the astra camera in a ros2 deployment.", "\nI forked the code and am trying to run it, and it compiles just fine, but it doesn\u2019t actually deliver any data.", "\nI can run OpenCV and it connects and delivers data.", "\nI can run the ROS1 driver, and it connects and delivers data.", "\nI can run the OpenNI sample viewer, and it connects and delivers data.", "So my question is:", "\nAm I doing something wrong in ROS2 for it to work?", "\nOr is this driver still under development?", "I\u2019m just putting the code into a workspace, like usual, and building it with \u2018ament build\u2019.", "\nWhen I run it, I see \u2018Starting IR stream\u2019 and \u2018Starting depth stream\u2019, and the topics are all there. But I don\u2019t see any data flowing.", "\nI used CLion to breakpoint into the code, and it didn\u2019t appear that any callbacks were being activated.", "Anyways, any help would be great.", "\nThanks!", "I\u2019ve used it in the past for sure, but it has been under active development lately for a demo we\u2019re trying to put together.", " may have more info for you.", "I do have an Astra Pro. Maybe there\u2019s an issue there?", "I know that the astra Pro had issue in ROS1 because it advertise itself as a UVC for the RGB and another USB device for the depth. The ROS2 version of the driver did work for me in ROS2 by just building it, installing the udev rules and running it. We never tried it on an Astra Pro (AFAIK) though. ", " and ", " have been playing with it lately they may be able to give more input.", "I did do some work on it, though I haven\u2019t really changed much in a few weeks.  In my testing, things seem to be working and I\u2019m getting good depth images out of it.", "The fact that you don\u2019t seem to be getting callbacks is interesting, though.  Note that there are two levels of callbacks: when the driver actually has a frame it calls AstraFrameListener::onNewFrame(), and if the frame is \u201cvalid\u201d onNewFrame() then calls the higher level AstraDriver::newDepthFrameCounter().  Where did you put your breakpoint?  Can you see if you are getting the onNewFrame() callback?", "One other thing I\u2019ll mention is that I have seen cases where the camera will stop streaming data after starting and stopping the driver a few times.  This seems to be some kind of firmware level thing, and if you unplug the camera, wait a couple of seconds, then plug it back in, it tends to start working again.  That would also be worth trying.", "So, I switched out my Astra Pro for an Astra Mini, and the driver just worked.", "\nThere are some issues, so I\u2019m going to open up an Issue on GitHub.", "Thanks for the help.", "Anyone looked into the performance comparison of the ROS1 driver vs ROS2 driver?", "\nI\u2019m noticing a HUGE degradation in performance using the ROS2 driver. Wondering if it\u2019s my setup or if the driver just isn\u2019t fleshed out enough to be performant.", "My test system: MacBook Pro i7 2.5GHz, Xenial connecting to Astra Mini.", "Yeah, I\u2019ve had performance issues as well.  I was able to mostly work around it by disabling the color and IR cameras, and set the depth camera to 320x240.  That gets me about 15 frames/sec with something like 100% CPU time, which is good enough for what I need at the moment.  But we should really look into improving it.", "Ouch.", "I did the same thing as you, and I was getting 30 fps from the driver. (although this was all going through the ROS2 dynamic_bridge, so there may be some lag).", "\nThe depth_to_pointcloud node drops that in half to ~15 fps for the PointCloud message. That surprises me. Is that conversion computation really that time consuming? Maybe we can make it faster using GPUs?", "I should be a little more clear that I am running all of this on a Pine 64 board (", "), so it won\u2019t be as fast as on an Intel chip.", "That being said, I don\u2019t really know how much CPU time this should take up.  My feeling is that there is room for improvement both in the astra driver and in depth_to_pointcloud, but I haven\u2019t profiled to find out where the bottlenecks are.  Before I went all the way to a GPU, I would profile, find the problem points, and try to optimize those first (this could be as simple as building with optimization and/or NEON turned on, neither of which I\u2019m doing at the moment).", "I just figured that the function is pretty basic. Iterate n^2 over an image and convert to PointCloud2 format. I\u2019m already compiling in Release, so optimization is all on. So maybe GPU is the only way to go for real acceleration.", "But all that aside, I did some performance analysis using the ", " tool and ran it against both the ROS1 and ROS2 versions of both ", " and ", ".", "\nIt looks like they both spend about the same time in the same functions, but the ROS2 variants spend extra time in ", ".", "Not sure if there are techniques, yet, that help to accelerate/overcome this new conversion step.", "\n[My next step is to verify that my ROS2 base was compiled in release mode\u2026]", "Ok. Verified my ROS2 base is in Release mode (it wasn\u2019t).", "\nI reran the profiling on the depth_to_pointcloud node, and this is the output:", "A little hard to read, but basically the worst offender is the convert_ros_to_dds on the PointCloud, which takes ~23%. Then comes convert_dds_to_ros on the Image, at ~6%, and then finally the actual conversion from Image to PointCloud2, at ~5%.", " maybe there\u2019s something we can fix in the CoreDX rmw wrapper that can help speed this up?", "Another idea I had was I could make a composition of the astra driver and this conversion and eliminate part of the slowdown (~6% for dds_to_ros conversion of Image).", "What about that ~40% going to wl? Is that the wireless driver? I guess that is the connection DDS would be using on my laptop\u2026", "Any other ideas?", "Nice debugging.  Out of curiousity, exactly how did you run operf (just so it is archived here for the future)?", "I was wondering about that wl myself.  The next time I have some time (probably next week), I might try this locally to see what happens when I\u2019m hooked to ethernet instead of wifi.  That would be interesting.", "I also notice that there is ~10% going to memmove and memcpy, unaligned.  I\u2019m guessing if we could find a way to ensure that that is aligned, that would also be faster.", "Other than those things, yeah, I\u2019d say we\u2019d have to concentrate on convert_ros_message_to_dds and see what we could improve there.", "I downloaded the oprofile package and installed it.", "\nTo use it, you have to have root privelages, so I created a bash script that I can run under ", ".", "\n", " does the trick.", "\nThe reason I chose oprofile instead of gprof (or other) is that you can kill the process and it still collects info.", "To generate the statistics you have to run:", "\n", "There could be something obvious that could significantly improve ", " for CoreDX, but it would be interesting to see if this is also the case with Connext (I\u2019m not sure FastRTPS would be apples to apples since it uses type support introspection to serialize/deserialize). We always knew that this function was wasted work, but to get rid of it, we need to have the ability in the middleware to publish and take serialized data directly rather than delegating serialization/deserialization to the middleware. That way we can do the \u201cROS message struct\u201d -> CDR serialized buffer directly skipping the convert function. I know we could do this in FastRTPS, but I\u2019m not sure about Connext. Also FastRTPS currently uses the introspection API which will be slower than statically generated code to do the conversions. We can likely get a huge speed up there by providing a static version of type support for FastRTPS.", "Ran the code in composition mode (both depth_to_pointcloud and astra_driver as libs, using UniquePtr to pass the Image), and that didn\u2019t seem to make much difference.", "Switched back to 2-node mode, and connected via Ethernet instead of Wifi (disabled Wifi, connected a dummy cable to another machine in the lab), and the performance was way better. So clearly that ~40% on ", " was getting in the way.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["ROS1 driver delivers ~30 fps and consumes ~70% CPU.", "ROS2 driver, with CoreDX as rmw implementation, delivers ~5 fps and consumes ~170% CPU."], "url": "https://discourse.ros.org/t/astra-driver-for-ros2/1894"},
{"title": "REP 105 and the outputs of localisers", "thread_contents": ["I was looking at REP 105 today to understand what a localisation node should produce for maximum compatibility with the ROS ecosystem, and I\u2019ve come to the conclusion that we need to specify some more, either in REP 105 or in another REP.", "In ", ", it says this:", "The transform from odom to base_link is computed and broadcast by one of the odometry sources.", "The transform from map to base_link is computed by a localization component. However, the localization component does not broadcast the transform from map to base_link. Instead, it first receives the transform from odom to base_link, and uses this information to broadcast the transform from map to odom.", "This ", " that transforms are published and consumed throughout a navigation system in ROS.", "What is catching me up is that this is not consistent with what I\u2019ve seen elsewhere in the ROS ecosystem or what I remember using myself over the years.", "Although memories can be blurry and impacted by a lack of caffiene, looking around a bit showed that:", "So what should localisation sources publish? Should they publish ", ", or should they broadcast transforms, or should they do both?", "The catch with broadcasting transforms, as ", " pointed out to me, is that there is no covarience information, which makes it hard to do things like combine multiple sources and filter data.", "Are transforms meant only to be broadcast by the end of the localisation chain, after all localisation data sources have been filtered and combined?", "This ", " that transforms are published and consumed throughout a navigation system in ROS.", "I\u2019m not exactly sure where that comment comes from. Can you clarify? From the quoted REP 105, I think the wording is not ideal, its a little verbose for just trying to say: ", ". The rest of the words about how that transform is computed are unnecessary. Also the fact it doesn\u2019t mention SLAM, only localization, is interesting. I\u2019m not sure if that was an intentional exclusion or just wasn\u2019t on the mind at time of writing.", "Just because ", " ", " produces a ", ", doesn\u2019t mean it is required to be REP-105 compliant. You can be compliant and also then provide additional information.", "The ", " takes in \u2026", "Those are indeed 2 valid options of things for robot localization to fuse. In the situation you present where you\u2019re using RL as a localizer, then RL itself is now the \u201clocalization component\u201d, and not the inputs to RL. Its then on RL to produce the transformation to be REP 105 compliant. Regardless, the additional publication of other messages (ie ", ") are not necessary and shouldn\u2019t be explicitly required for the minimum REP standard in my opinion.", "To address your last 3 paragraphs respectively, and to summarize my opinion:", "Separately, if you\u2019re asking what I think a localizer ", " produce, I think that includes a ", ". But REP-105 is concerned with frame convention, not localizer conventions. If you wanted to add the requirement to publish a pose, that should be a separate REP since REP-105 is dealing exclusively with frames, usually in TF, which doesn\u2019t take in covariance information. If you\u2019re working with multiple localization components, fusing them, and outputting a composite localization component, I agree each of them should be compliant so they are independently valid as localization components themselves (to have reusability). However, as far as the block diagram of your system is concerned, the \u201clocalization component\u201d is the entire entity of the individual elements going into the fusion method and then served to the system. So REP-105 applies to the entirety of it, which is really then just on RL, and the individual localization components do not need to strictly follow the existing REP (but should, if you don\u2019t want to make trouble for yourself).", "Summary of this opinion:", "Just because ", " ", " produces a ", " , doesn\u2019t mean it is required to be REP-105 compliant. You can be compliant and also then provide additional information.", "This is the crux of my question. You can produce a pose or a transform, with or without a covariance, and there are advantages to each, but REP 105 only allows one.", "I guess the best solution then is that any localisation system should produce both, with ", " output being used if you feed its result into another localisation system, and the TF transform being used if it\u2019s the end result? So that section of REP 105 only applies to end-of-pipeline localisation results.", "In otherwords, this:", "Probably, yeah we should make a new REP for localization / mappers to provide not only REP-105 frames, but also the pose with covariance on update for a potential upstream use.", " Any thoughts on this topic?", "Also ", ".", "I\u2019ve realised I\u2019m probably misusing the word \u201clocaliser\u201d in the above posts. Everywhere you see \u201clocaliser\u201d, think \u201csource of robot position information\u201d. I\u2019m not just concerned with things that localise in a map, but also things like IMUs, GNSS sensors, visual odometry updates, and so on. Some produce an instantaneous pose in their coordinate system and some produce an offset since their last frame.", "\u2026 but also things like IMUs, GNSS sensors, visual odometry updates, and so on. Some produce an instantaneous pose in their coordinate system and some produce an offset since their last frame.", "That drastically changes the scope of the discussion, and likely invalidates my commentary above.", "With that said, all the examples you provided above have standard messages in ", " or ", " which already include covariance information.", "I think if you want to expand the scope, we\u2019d need to create some coherent narrative or theme that ties all of those sensor / derivative / localization / motion estimators together. I think that might be a challenge. I would restrict it to localizers. When you start talking about things that just compute changes in pose, it becomes unclear whether that should apply to the ", " or ", " transform. And in fact, they could be applied more conventionally to the ", " problem.", "And in fact, they could be applied more conventionally to the  ", "  problem.", "+1", "Are transforms meant only to be broadcast by the end of the localisation chain, after all localisation data sources have been filtered and combined?", "The main link in your transform tree defined in the REP should be your final fused best estimate of the combined result that\u2019s published as the ", " trasform. The most robust localization will usually be a fusion of multiple sources with different uncertainties. If these are broken apart and structured in different nodes they will need to communicate that information through various mechanisms such as ", " messages. They can potentially provide even more information. A lot of these interfaces are often defacto provided by the first implementation. I agree with ", " a new REP to define a standard way to share different odometry or localization estimates would likely be valuable as we get more implementations and start to consider different domains.", "If you\u2019re providing an intermediate localization solution the transform output can be suppressed or often is published as a child/leaf transform for convenient debugging and visualization.", "Also the fact it doesn\u2019t mention SLAM, only localization, is interesting. I\u2019m not sure if that was an intentional exclusion or just wasn\u2019t on the mind at time of writing.", "This is not excluding SLAM, The SLAM is simultaneous ", " and mapping. SLAM is just one class of localization algorithm that happens to be building the map at the same time.", "If you produce a transform, you need to know where you are in the tree, either via configuration or querying TF2. This makes it more annoying for the publisher and harder to just shove a localisation source into your system and let the consumers decide what frame they want the information in. On the other hand it makes things more absolute in terms of knowing exactly what the message means, which is a bonus for debugging.", "The goal of REP 105 is that users of the transform frames don\u2019t need to worry about the choice of the implementers of the localization methods. It is the responsibility of the developer setting up the localization to make sure that there\u2019s the appropriate end product that\u2019s easy for downstream developers to be able to rely on generic frames. The main point of the REP is to avoid the problem of \u201clet the consumers decide what frame they want the information in\u201d. The consumers have a list of frames with specific semantic meaning that are defined in the REP. If your implementation provides an additional frame with different semantics that\u2019s great and people can use that. But if it\u2019s not in the standard any code written against that will not translate to other implementations. As the implementer you can add any complexity you want or need. The ability to \u201cjust shove a localization source into your system\u201d should not change the output that downstream developers expect.", "The majority of consumers of transform information do not care about anything other than that they have the best estimate possible of the odometry or localization available. And the REP just defines specifically that output.", "I think if you want to expand the scope, we\u2019d need to create some coherent narrative or theme that ties all of those sensor / derivative / localization / motion estimators together. I think that might be a challenge. I would restrict it to localizers. When you start talking about things that just compute changes in pose, it becomes unclear whether that should apply to the ", " or ", " transform. And in fact, they could be applied more conventionally to the ", " problem.", "Indeed the majority of fusion right now is focused on the odometry layer usually merging, wheel encoders, IMUs, and potentially visual odometry. There are different semantics of localization versus odometry but there are also a lot of primitives that overlap especially when implementing various SLAM algorithms. A REP to homogenize either or both would be valuable.", "The majority of consumers of transform information do not care about anything other than that they have the best estimate possible of the odometry or localization available. And the REP just defines specifically that output.", "I think this was the source of my confusion. REP 105 applies specifically and solely to the end product, and I was mentally trying to fit the entire pipeline up to that point into its model.", "I have nothing useful to add, but will loop in ", "It looks like there isn\u2019t a lot to add at this point, but as long as I\u2019m here:", "The ", " takes in  ", "  and  ", "  and produces the same message types (I think; ", " will correct me if I\u2019m wrong).", "The package takes in all sorts of messages: ", ", ", ", ", ", ", ", and ", ". It outputs:", "To me, the only ", " output of a localizer or odometry node should be the transforms mentioned in REP-105. We just publish the other data because it can be more convenient for consumers to fire up a single topic sub than to instantiate a TF2 buffer and use that. It also lets you visualize things using ", " (yes, you can visualize the transforms, but you can\u2019t persist N of them like you can with the other types). I\u2019m all for coming up with (and adhering to) any new REPs that come out of this discussion.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["AMCL in ROS 1 outputs ", " and a ", " transform", "The ", " stack\u2019s AMCL does the same thing", "The ", " takes in ", " and ", " and produces the same message types (I think; ", " will correct me if I\u2019m wrong).", "They should only publish transforms to be minimally compliant", "If you\u2019re fusing multiple sources of data together, using RL or otherwise, then that fused output is now the localization transformation source and that should be complient with REP-105, not the components that came into it.", "Like in publishing addition information (like ", "), you\u2019re welcome to also publish intermediate calculations for other frame transformations. However at the end of the day, a source should be providing the ", " transformation. The intermediate steps or additional things you do are application specific and with in the blackbox of a localizer as far as the rest of your system is concerned.", "Probably, yeah we should make a new REP for localization / mappers to provide not only REP-105 frames, but also the pose with covariance on update for a potential upstream use.", "Technically as far as REP-105 is concerned, if you use AMCL and a few other methods to fuse together, AMCL nor the other methods are localization components. Only the fusion of them is the localization component requiring to publish the frames.", "I see no drawbacks for this but I\u2019m not sure it should be strictly required. I think it should be an option called out with an explanation for why you might want to include the ", ". If you\u2019re using a single algorithm, what you propose doesn\u2019t matter to a user.", "If you produce a pose, it\u2019s in ", " so you don\u2019t need to know about the TF tree until you are a consumer. The publisher doesn\u2019t care about what its parent in the tree is.", "If you produce a transform, you need to know where you are in the tree, either via configuration or querying TF2. This makes it more annoying for the publisher and harder to just shove a localisation source into your system and let the consumers decide what frame they want the information in. On the other hand it makes things more absolute in terms of knowing exactly what the message means, which is a bonus for debugging.", "If you produce a pose, it\u2019s easy to attach covariance. If you produce a transform, which REP 105 asks for, you can\u2019t include covariance data which makes REP 105 only applicable to the end of a localisation pipeline, even though it may not be.", "A transform from ", " -> ", ", if the ", " is set to ", ", OR a transform from ", " -> ", " if the ", " param is set to ", ". You ", " turn off the transform broadcast, if you want.", "The filter is producing a full state estimate, including velocity and acceleration, so it publishes an ", " message with pose and velocity, and, optionally, an ", " message."], "url": "https://discourse.ros.org/t/rep-105-and-the-outputs-of-localisers/12585"},
{"title": "ROS 2 robot_state_publisher improvements", "thread_contents": ["I\u2019m currently near the end of a ", " of ", ".  There are a few goals to this rewrite:", "I want to discuss the last point a bit further, and get some thoughts from the community.  To start with, I want to make it clear that I am ", " trying to solve the entire problem of \u201cmake a URDF changeable across a robot\u201d.  That involves a lot more pieces than just ", ".  However, adding some level of dynamicity to ", " at least solves part of the problem.", "With ROS 2, we have a bunch of tools that make solving the problem of a dynamic ", " possible.  We have the ability to get and set parameters (and get notified when they change), we have the ability to publish ", " (latched) topics, etc.  Here are a few different ways I\u2019ve though about to make the ", " changeable:", "Make the ", " a required parameter during node startup.  To access the ", ", consumers have to do the equivalent of ", ", and to change it, the equivalent of ", ".", "Make the ", " a required parameter during node startup.  Publish the current ", " on a latched topic.  To change ", ", the equivalent of ", " has to be run.", "Make the ", " a required parameter during node startup.  Publish the current ", " on a latched topic.  Provide a service to allow changes to the ", ", which would then propagate to the topic.", "Make the ", " ", " provided during node startup.  ", " would do nothing until something called a service to set the ", ", at which point it would start publishing transforms.  Changes to the ", " would be done via the same service call.  There would be a latched topic that publishes the current state of ", " for downstream consumers.", "These are the options I\u2019ve thought of; there are some others in this same vein.  The ", " currently implements solution 2, but I\u2019m looking for opinions from the community on any of these options, or an option I haven\u2019t thought of.  Thoughts?", "Ping ", ", ", ", ", ", ", ", ", " as a (non-exhaustive) list of people who have expressed interest in this topic.", "Make the ", " a required parameter during node startup. Publish the current ", " on a latched topic. Provide a service to allow changes to the ", " , which would then propagate to the topic.", "I think option ", " is the best.", "Option 4 I don\u2019t like having to have something external on startup give it the current information. Option 1 I think is also a reasonable choice but I prefer 3 because if its a topic, then as it updates, it will automatically update the state of all the subscriber nodes that depend on it. Also having a node need to talk to another node\u2019s parametesr seems to break (?) the intent of separation of parameters across nodes.", "Option 2 is similar enough to 3, but I like having a service call so that if someone makes ", " it can be a drop in replacement if it advertises the same service.", "A 5th alternative: using a topic on which nodes publish urdf (sdf?) ", " and consumers of ", " (not the parameter any more here) would have to compute a consistent view of the current ", " based on the fragments they\u2019ve received so far.", "This would make the robot description similar to how TF works, where consumers listen in on updates and a utility library does the heavy lifting of piecing together a consistent view of the current state.", "Adding a temporal dimension to the fragment stream could then allow \u201ctime travel\u201d similar to how TF has it, and it would automagically support dynamically updating robots.", " could still be a private parameter of nodes to provide them their fragment(s), if those are static for instance, but it would no longer need to be.", "This could of course make use of parameter update events to keep track of changes, of latched topics to reduce traffic and computational overhead and to quickly seed the local view for late-joiners, and if needed could be based on techniques for achieving coherent shared state from the distributed algorithms domain (distributed file systems, distributed shared state, lock-stepping, transactions, atomic updates, quora, etc).", "Hm, perhaps this falls in the \u201ctry[\u2026] to solve the entire problem of \u2018make a URDF changeable across a robot\u2019\u201d category.", "However, adding some level of dynamicity to ", " at least solves part of the problem.", "Does it though? Without support in other parts of the system I don\u2019t think it does that much\u2026", "You could dynamically change the robot description and perhaps use it in part of your own code which uses the robot description, but then rviz probably wouldn\u2019t work right (unless we\u2019ve verified it can handle this). I\u2019d personally prefer to see a proposal for how to do dynamic robot descriptions on both sides before assuming that one of the options you proposed solves part of it. As ", " said, perhaps you need to have some \u201cdistributed consensus\u201d or \u201ceventually consistent\u201d pattern in place and that might require more information or a different pattern of communication. It\u2019s not obvious to me that any of these options will be part of the solution without exploring it at least a bit.", "The reason for using a topic in ROS 2 was primarily so that it could be recorded easily with ", ", at least until recording parameters is a thing.", "W.r.t. accessing the robot description anonymously, I actually don\u2019t think that\u2019s the case now, as you need to know the topic name it\u2019s on. I don\u2019t actually think having to know the node name to access the parameter is any different. You just have to make sure that the node name is \u201cX\u201d where \u201cX\u201d is the agreed convention, and any tools that \u201cread\u201d it need to be configurable on which one they access. The only slight advantage of the topic (that I see) is that you can use remapping on both sides, where as you would need a parameter or something to configure the \u201crobot description parameter address\u201d for nodes that read it.", "However, for writing the robot description (changing it) I again don\u2019t view the service name (let\u2019s say ", ") to be any different really from a parameter address (let\u2019s say something like ", ").", "For ", "\u2019s idea about having multiple contributors to the robot description, then the topic becomes much more viable when reading it, but I still think for setting the value, using the parameter infrastructure is ok.", "So if you really want to do one of these, I\u2019d vote for option 2, since it avoids extra services, which themselves have overhead. The parameter ones are already there anyways.", "Following my own logic, having the topic is redundant and not any more anonymous than a parameter (imo), but I think it\u2019s fine to keep since that keeps compatability with what is in ROS 2 now, and it allows it to be easily recorded with ", ".", "Does it though? Without support in other parts of the system I don\u2019t think it does that much\u2026", "You could dynamically change the robot description and perhaps use it in part of your own code which uses the robot description, but then rviz probably wouldn\u2019t work right (unless we\u2019ve verified it can handle this).", "This is the case that I\u2019m trying to address; at least give people the option to handle it in their own code.  As I said, on its own this definitely won\u2019t completely solve the problem, but I feel like it is incremental progress towards some use cases.  Basically, having this ability (even in a limited form) seems better than people forking ", " to do their own dynamic thing.  And we can always improve/change it later, including updating rviz2 more dynamicallly.", "The reason for using a topic in ROS 2 was primarily so that it could be recorded easily with ", " , at least until recording parameters is a thing.", "Make sense.", "W.r.t. accessing the robot description anonymously, I actually don\u2019t think that\u2019s the case now, as you need to know the topic name it\u2019s on.", "But I feel like that ", " anonymous, or at least, anonymous in the ROS sense.  Any node can publish to the ", " topic, so downstream consumers don\u2019t have to care which node is publishing.  Accessing parameters on a node, on the other hand, ties you to that node.  I guess you could argue that you could rename ", " to ", ", and thus parameters would work, but that seems pretty icky to me.  In any case, you aren\u2019t actually arguing against the ", " topic as far as I can tell, so no reason to discuss further here :).", "So if you really want to do one of these, I\u2019d vote for option 2, since it avoids extra services, which themselves have overhead. The parameter ones are already there anyways.", "That\u2019s sort of what I thought when I initially implemented what I have now.  After I wrote up the alternatives, 2 seemed the best to me as well, but 3 isn\u2019t far behind.", "Hm, perhaps this falls in the \u201ctry[\u2026] to solve the entire problem of \u2018make a URDF changeable across a robot\u2019\u201d category.", "This is an interesting proposal, and would probably solve more of the problems, but it is honestly outside of the scope of what I have the time to do here.  So I\u2019d be all for someone proposing the pieces to do this, but it likely won\u2019t be me (and may not be ", " at all, for that matter).", "Hi, just a quick thought now. I think there\u2019s long been the misconception that robot_state_publisher is a somewhat superior \u201cconsumer\u201d of robot_description. It isn\u2019t.", "I think the problem isn\u2019t whether robot_state_publisher should become an \u201cowner\u201d of the robot model. If you stick to the Linux paradigm of simple tools doing one thing precisely, then robot_state_publisher is a thing that takes a robot description and joint states, and publishes some TFs generated from these.", "You see, from this point of view, it isn\u2019t different from e.g. RViz or robot_body_filter, which are also tools that need to somehow receive the current model of the robot and do some nice stuff with it.", "So I suggest this rewrite should go in this direction - i.e. do not care about how the model is generated. And in no way take ownership of the model. The only thing that needs to be agreed upon is how to transmit the model to the \u201cclients\u201d (topic/parameter). You don\u2019t even have to take care about the \u201cpublishers\u201d of the model during the rewrite.", "What follows from this idea is that ROS could be \u201crobot-model-producer\u201d independent. There can be several ways of generating the robot model, ranging from simple parsing of a URDF file as ROS 1 does, to some segment-based construction as others suggest. I would leave this logic to the community. ROS2 could for example implement just some simple robot_model_publisher, which could take the robot model from some (private) parameter/URDF file/whatever, and publish it either as a topic or make it available as its public parameter. People who need more flexibility could then write more complicated generators, segment assemblers and so on. The only requirement for \u201cclients\u201d would then be to be able to accept the whole generated URDF model.", "Basically, having this ability (even in a limited form) seems better than people forking ", " to do their own dynamic thing. And we can always improve/change it later, including updating rviz2 more dynamicallly.", "I\u2019m concerned that gives someone the impression that dynamically changing the robot description should \u201cjust work\u201d, which isn\u2019t true. I\u2019d prefer someone forking it until it supposed to actually work with at least the standard tools like rviz and rqt.", "I guess you could argue that you could rename ", " to ", " , and thus parameters would work, but that seems pretty icky to me.", "That\u2019s exactly what I\u2019m saying. Why is it \u201cicky\u201d?", "At the end of the day a topic and a parameter (and a node name too) are just a resource name. The only benefit for the topic is that there can be multiple publishers and they replaying from a bag is easier.", "To be clear, I think we should keep the topic for reading the value. It\u2019s setting where I find having an additional service to be questionable.", "Note related to the ", " though, but can we make sure that at any point in time, there is a full state of the robot? The issue I frequently had in ROS1 was the use of latched topics for static transforms (", ") where static TFs were only published once at the beginning, leading to a loss of those messages when a bagfile is not replayed from t=0.", "\nAs far as I know, there are no latched topics in ROS2. I just want to make sure that we do not run into the same issue again with ROS2. To make it clear: Randomly accessing any point in time in a logfile that logged the ", " should produce a full and valid robot state of all joints that have been published up until then.", "What follows from this idea is that ROS could be \u201crobot-model-producer\u201d independent. There can be several ways of generating the robot model, ranging from simple parsing of a URDF file as ROS 1 does, to some segment-based construction as others suggest. I would leave this logic to the community. ROS2 could for example implement just some simple robot_model_publisher, which could take the robot model from some (private) parameter/URDF file/whatever, and publish it either as a topic or make it available as its public parameter. People who need more flexibility could then write more complicated generators, segment assemblers and so on. The only requirement for \u201cclients\u201d would then be to be able to accept the whole generated URDF model.", "I tend to agree with this. A topic for readers seems like something everyone is on board with, though it does dodge the question of what to do when it changes during runtime (republished). The main reason it\u2019s loaded into ", " is convenience. And the main reason I\u2019m somewhat hesitant to endorse having a way for ", " (or the proposed ", ") to change it is that it\u2019s setting up for an expectation that changed robot models are supported OOB by at least the standard tools.", "As far as I know, there are no latched topics in ROS2.", "There\u2019s the \u201cdurability\u201d QoS:", "I just want to make sure that we do not run into the same issue again with ROS2. To make it clear: Randomly accessing any point in time in a logfile that logged the ", " should produce a full and valid robot state of all joints that have been published up until then.", "I don\u2019t think there\u2019s a solution for that in ", ", I think that this is just a corner case that needs to be addressed by the playback tool.", "w.r.t. the ", ", I think it\u2019s a step sideways since in ROS 1 you had to manually load the parameter value into the parameter server (and also be careful to record it) as the bag could not capture it at all.", "Well, I think every tool has to decide whether it can react to robot model changes or not. If it can\u2019t, it should e.g. write an error to rosout, restart itself, or do whatever seems to be correct if the model changed and the tool can\u2019t process it.", "What are actually the tools using the robot model? In ROS 1, I can remember just robot_state_publisher, rviz, the few attempts at robot_*_filter, and that\u2019s probably it. Or am I missing something? You can of course have more tools involved, like moveit (but there the robot model itself isn\u2019t sufficient as you need the whole SRDF).", "Well, I think every tool has to decide whether it can react to robot model changes or not. If it can\u2019t, it should e.g. write an error to rosout, restart itself, or do whatever seems to be correct if the model changed and the tool can\u2019t process it.", "I suppose that\u2019s true, but it would be nice to make sure at least the standard tools do something reasonable, which I\u2019m not convinced about. Currently the only tool that publishes to the topic doesn\u2019t allow you to change it without restarting, but that\u2019s essentially the same thing as republishing it.", "What are actually the tools using the robot model? In ROS 1, I can remember just robot_state_publisher, rviz, the few attempts at robot_*_filter, and that\u2019s probably it. Or am I missing something? You can of course have more tools involved, like moveit (but there the robot model itself isn\u2019t sufficient as you need the whole SRDF).", "I don\u2019t know of any others, but that\u2019s part of my hesitation because I know that this has been discussed in the past around end-effectors and planning/self-filtering, and in those cases I don\u2019t know if you need something more or not. I just don\u2019t know what the use case for dynamically updating the robot model is right now, and so I cannot say whether or not this will be sufficient or not.", "I find ", "\u2019s idea intriguing.", "For ", "'s port in general I agree with ", ". We should have a separate tool for providing the robot description from the tool that turns joint states into TF information.", "Do we want to allow multiple robot descriptions? (Within a single DDS domain?) If so, then I think the robot description must be provided via a name-spaced topic. So far the discussion seems to be implicitly assuming a single robot.", "Do we want to allow multiple robot descriptions? (Within a single DDS domain?) If so, then I think the robot description must be provided via a name-spaced topic. So far the discussion seems to be implicitly assuming a single robot.", "For what it\u2019s worth, all of my considerations above were thinking about allowing more than one robot description per domain. All of topics, services, and parameter\u2019s (including node names) are namespace-able, and so allow having more than one at a time.", "What follows from this idea is that ROS could be \u201crobot-model-producer\u201d independent. There can be several ways of generating the robot model, ranging from simple parsing of a URDF file as ROS 1 does, to some segment-based construction as others suggest. I would leave this logic to the community. ROS2 could for example implement just some simple robot_model_publisher, which could take the robot model from some (private) parameter/URDF file/whatever, and publish it either as a topic or make it available as its public parameter. People who need more flexibility could then write more complicated generators, segment assemblers and so on. The only requirement for \u201cclients\u201d would then be to be able to accept the whole generated URDF model.", "I\u2019m not sure I understand what the role of ", " is here.  It\u2019s just a node that takes a file from disk and publishes it?  I\u2019m not sure that has too much value; you can do the same thing by running a global ", " today, no special node needed.  On the other hand, people definitely do depend on ", " publishing the TF transforms for their robot, so it is unclear to me where that would come from in this model.", "That\u2019s exactly what I\u2019m saying. Why is it \u201cicky\u201d?", "I guess it is a matter of perspective.  We allow changing the node name for some good reasons, but I still think of it more like an \u201cidentifier\u201d, rather than a totally fungible resource.  So renaming yourself to \u201cbecome\u201d another node seems like a lie to me.  I view topics, on the other hand, as fungible.  But you are right, your method would work.", "what the role of ", " is here. It\u2019s just a node that takes a file from disk and publishes it?", "In the simplest case, it would be as you describe. Read a file from disk and expose its contents as a param. But, as many people here mention, there is need for more complicated robot model \u201cgenerators\u201d (e.g. assembly of URDF fragments coming on a topic). There, the model publisher would be a more complicated thing.", " I\u2019m really happy to see some attention being paid to ", ". I was going to look into some dynamic behaviors, so I\u2019m glad you\u2019ve started us down that path!", "One thing I\u2019d really like to see is an ability to call a service to change one of the fields that would have been parsed out of the xml.", "For example, it might be desirable to call a service to change the color of a link\u2019s mesh. This would be extremely useful.", "That said, I share ", "\u2019s concern with respect to RViz and its ability to refresh this in a performant fashion. While I have seen RViz change to a different robot model, it takes several seconds to actually occur. I would want these changes to happen much faster, and without reloading the entire model. Maybe there could be a way to forward the delta on the URDF to RViz in a way that would make it so that RViz doesn\u2019t have to reload the entire model?", "I guess it is a matter of perspective. We allow changing the node name for some good reasons, but I still think of it more like an \u201cidentifier\u201d, rather than a totally fungible resource. So renaming yourself to \u201cbecome\u201d another node seems like a lie to me. I view topics, on the other hand, as fungible. But you are right, your method would work.", "I agree. I don\u2019t like the idea of remapping the node name of my ", " to ", " just to make sure the params map up correctly. If they both just expose global topic ", " and service ", " it entirely goes around the issue of making it dependent on an implementation.", "I view the robot state publisher as something that reads a URDF and gives me some static transforms. If some of these transforms are changing, they\u2019re probably not being given out by the URDF but by TF updates. I could see for MoveIt if you want to add tools or if you have some extremely funky robot and want to have some dynamically-changing-static transformations that would be nice, but I don\u2019t see what any of that has to do with the initial discussion. I agree with William and Hunter on this front for what its worth.", "I don\u2019t like the idea of remapping the node name of my ", " to ", " just to make sure the params map up correctly. If they both just expose global topic ", " and service ", " it entirely goes around the issue of making it dependent on an implementation.", "The only case where the node name would be used (in my proposal) would be setting the description remotely, which I think will be uncommon, and in that case you don\u2019t need to change the node name of the ", ", but instead you just make the \u201ccaller\u201d that\u2019s setting the description change the parameter on the ", " rather than the ", " node.", "The only reason I think a parameter could be a good fit here is that this service, e.g. ", ", only has one side effect which is to change the robot description which was likely initialized with a parameter and is likely stored in one too, just for convenience, and therefore it seems like we could just request to set the parameter instead, saving the need for an additional service server. But in the end, I don\u2019t actually mind if there one or the other or both.", "I think everyone agrees that using a topic for reading the description is more convenient and future proof.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Simplify the code, as it was too complicated before.", "Bring the code up to modern ROS 2 standards.", "Reinstate some of the features that were missed during the original port.", "Allow the ", " to be changed during runtime.", "\n", "\n", "Pros: Most like ROS 1 in concept.  Makes ", " the \u201cowner\u201d of the ", ".  Uses existing ROS 2 parameter infrastructure to the fullest.", "Cons: Most unlike existing ROS 2 (meaning we have to make changes to things like rviz2).  Makes ", " the \u201cowner\u201d of the ", ".  The ", " is no longer anonymous; consumers have to know the name of the ", " node.", "\n", "\n", "\n", "Pros: Uses the parameter infrastructure for initial configuration and setting.  Keeps the topic \u201canonymous\u201d for getting the ", ".  Doesn\u2019t require changes to RViz2.", "Cons: Setting the ", " isn\u2019t anonymous; the name of the node is necessary.  Is a bit inconsistent, in that getting and setting the ", " is done via different mechanisms.", "\n", "\n", "\n", "Pros: Makes getting the ", " anonymous, so ", " no longer \u201cowns\u201d the ", ".  Same for the service.  RViz2 doesn\u2019t have to change.", "Cons: Only uses parameters as an \u201cinitialization\u201d mechanism; doesn\u2019t take full advantage of the parameters infrastructure.", "\n", "\n", "\n", "Pros: Ensures that ", " isn\u2019t  the \u201cowner\u201d of the ", ".  Doesn\u2019t require changes to RViz2.", "Cons: ", " is no longer standalone; it needs an external \u201csomething\u201d to tell it the initial ", ".", "\n"], "url": "https://discourse.ros.org/t/ros-2-robot-state-publisher-improvements/11521"},
{"title": "Rosbag Backward Compatibility", "thread_contents": ["I\u2019m not sure if ROS 2 has reached this point in its development, but has there been any discussion about maintaining some level of backwards compatibility with bag files from ROS 1? I\u2019m specifically thinking about the scenario where I have a lot of data collected using ROS 1 that I would like to replay into ROS 2 systems.", "ROS 1 bags store the actual message data with the same format as it is being used on the wire (plus some additional header and meta information). This is done so that recording / replaying bags is efficient.", "Since ROS 2 will use a different marshaling / transport its wire format will be different. Therefore I would expect the ROS 2 \u201cbags\u201d to be stored in a different format.", "But there are two ways moving forward:", "I\u2019d also say that, as you pointed out, we\u2019re not to the point where we\u2019ve decided on the bag format. In ROSBag version 2 (which is the current version used in ROS 1: ", "), it assumes ROS 1\u2019s serialization and ROS 1\u2019s topic properties (like latching = true/false). One option would be to do a ROSBag version 3 which would have the ability to store arbitrary connection information and serialized data. Then you\u2019d just need the right plugin to read or write a particular format for the data. If we did that, then we\u2019d probably consider trying to backport this to ROS 1 and create migration tools like we did with ROSBag version 1 -> version 2 (", ").", "Another option would be to use some other existing data format scheme like hdf5 (", ") or something like that. We\u2019re keeping an open mind about reusing more broadly used solutions, but the rosbag format has familiarity and commonality with ROS 1 in its favor. Until we come up with a concrete solution for ROS 2, I think you have to assume the format might be different from what\u2019s in ROS 1. Either way, we\u2019re aware that people have loads of rosbags already and will need to either have them work natively in ROS 2 (through the bridge or a plugin maybe) or have them easily converted to the ROS 2 format.", "Thanks for the quick response, it sounds like there\u2019s a number of viable solutions.", "Several years ago I did a bit of work on developing and implementing a possible new format for ROSBag heavily based on the Matroska container format (.mkv). It uses EBML and is very flexible, supporting pretty much any data and metadata you can dream of, chapters, streaming, chunking across multiple files, etc. It has compatibility with the tools you can use to modify and manage Matroska files. You could even conceivably store a ROSBag 2 format file in this container format, although I doubt that would be very efficient or worthwhile.", "Although I finished the format design, I never finished the implementation (changes at work got in the way). The half-finished implementation is still online:", "tawara - Stream-based data recording and playback library", "The specification is probably more useful than half an implementation:", "I\u2019m not suggesting that this format is the way ROSBag should go in ROS 2. Never finishing the implementation meant I never tested its viability and speed, for example. But I thought I\u2019d mention it if anyone is interested. ", " was also involved in this work.", " also did work in his previous lab with a variation of the ROSBag format. I\u2019m sure he will chime in with the results of that work.", "At the same time as the above work, I also looked at HDF5. I haven\u2019t looked at it since, but back then my impression was that it\u2019s great for certain kinds of data, like lots of raw numbers coming from things like strain sensors and temperature sensors, but it was not an ideal fit for more structurally complex data. However, that may have changed and the library and tools were good. Being able to make use of existing tools would be nice. The people at KULeuven have done a lot of work with HDF5.", "Phew, been a while ", "What I can say about my own work on the format ", " mentions is that it was motivated not completely, but significantly, by internal politics. At my old lab, we had a different middleware developed internally, and it was not acceptable (politically) to use ROS. I thought that maybe others had the same problem, but exchanging data would be very useful, so we tried to create something which didn\u2019t have \u201cROS\u201d in the name, but was conceptually quite close, so ROS could eventually migrate. There was not a lot of interest either in the ROS camp, nor in the other camp, though, so this went nowhere, unfortunately.", "Otherwise I probably wouldn\u2019t have felt the need to change anything fundamentally ", "My colleagues here also tell me that they some of the use cases of rosbag2 are problematic, e.g., when a rosbag is split, there is no information about this in the bag file. You have to infer either using external information, or a heuristic based on the file-name. We would prefer some information on this to be in the library.", "Maybe I\u2019ll post some more later, if I remember anything more.", "Having spoken with a number of colleagues about this now, we primarily see a few necessary feature extensions. This would actually apply to the current rosbag already:", "The Matroska-based format I mentioned above can do all those things with ease. With the exception of the last point, I expect it wouldn\u2019t be too hard to add then to the existing format, too.", "Hi Dirk,", "I am trying the first approach i.e getting rosbag data in ros2 using ros1 bridge.", "\nBut I am facing some issues here.", "\nThe callback for the subscription of rosbag data is not consistently happening.", "\nI suspect that this is somewhat related to the clock. Please let me know your suggestions on the same.", "\nI did not play bag with --clock as I am not sure that how to use use_sim_time with my ros2 nodes.", "steps i followed in each terminal:-", "\nroscore", "\nstart the dynamic bridge :-  ros2 run ros1_bridge dynamic_bridge", "\nrospbag play", "\nros2 run  ros2-node", "Thanks,", "\nPoonam", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["You can simply use the ROS 1 rosbag application to playback a ROS 1 bag file and use the ", " to bridge the messages to a ROS 2 system.", "As soon as a ROS 2 specific bag solution exists someone could write a \u201cplugin\u201d to enable also reading files with the ROS 1 bag format.", "The use of textual data-type definitions in rosbag2 was the most problematic thing, and we discussed about that quite a bit.", "I recall I found some of the arbitrarily sized meta-data structures to be a bit annoying to parse.", "Other than that, yes, the format is non-standard, but it\u2019s not overly complicated. To my knowledge, there are no generic data-writing libraries out there, because it appears that almost everybody his or her own format. This is a bit annoying, but it also suggests that finding the right abstractions is not trivial.", "continuation information. when a bag is split, there is no information about this in the file. You have to guess from the file-name. It would be awesome if there would be a marker at the end of the file, to let readers know where to continue.", "information on parameters: currently completely missing, so you can\u2019t reconstruct parameter settings, nor can you detect run-time changes", "latching. there is no information that I know of that a topic is latched", "playing multiple bags: when loading multiple bags, I\u2019m told that rosbag indexes all of them in a time-consuming fashion to determine whether they are to be played sequentially or interleaved. maybe we could avoid that."], "url": "https://discourse.ros.org/t/rosbag-backward-compatibility/773"},
{"title": "ROS2 Real-time Working Group Online Meeting - May 20th, 2019 between 7AM and 8AM PDT (UTC-7)", "thread_contents": ["Hi everyone,", "We are planning to hold the first ROS 2 Real-time Working group meeting on May 20th, 2019 between 7AM and 8AM PDT (UTC-7).", "See pre-discussion: ", ".", "\nApex.AI is inviting you to a scheduled Zoom meeting.", "Topic: ROS 2 Real-time", "\nTime: May 20, 2019 7:00 AM Pacific Time (US and Canada)", "Join Zoom Meeting", "\n", "One tap mobile", "\n+16699006833,771375394# US (San Jose)", "\n+19294362866,771375394# US (New York)", "Dial by your location", "\n+1 669 900 6833 US (San Jose)", "\n+1 929 436 2866 US (New York)", "\nMeeting ID: 771 375 394", "\nFind your local number: ", " ", " ", " ", " ", " ", " ", " ", " ", "  ", " see the invite above.", "Could I please join in as a listener?", "Thanks", "Vilas", "(", ")", " yes, very welcome to join.", "I would like to join the meeting.", "\nMaybe I can comment to some RTOS-related topics.", "i did not make it, could you share the recording or minutes, if available?", "Dear all,", "\nhere are the minutes of our meeting on May 20.", "Zoom is the leader in modern enterprise video communications, with an easy, reliable cloud platform for video and audio conferencing, chat, and webinars across mobile, desktop, and room systems. Zoom Rooms is the original software-based conference...", "On the use case:", "Create an rmw implementation which works for a single process. Once that works connect with the underlying data link (e.g. TSN). Measure: malloc/realloc calls, page faults, context switches, memory consumption, blocking calls, \u2026 RTI Connext Micro is a suitable DDS implementation for something like this due it its staticity and intra-process communication feature.", ": find someone that will lead this work.", "Document current state of the art. Someone remarks that there were still mutexes used in e.g. rmw or rclcpp. Memory is still being allocated/de-allocated when receiving messages.", "\n", ": find examples in code.", "\n", ": get William to present his findings", "Invest in the tools for static and dynamic code analysis and tracing and carefully scan the code.", "\n", " create a shared repository for above tools. Bosch will e.g. open-source their integration of LTTng in ROS2. Silexica is integrating they dynamic analyser.", "We briefly scanned through the paper by Bosch: ", ".", "\n", ": present the paper in detail in one of the next meetings.", "Victor, Ingo, Dave and Geoff will co-submit.", "Create an rmw implementation which works for a single process. Once that works connect with the underlying data link (e.g. TSN). Measure: malloc/realloc calls, page faults, context switches, memory consumption, blocking calls, \u2026 RTI Connext Micro is a suitable DDS implementation for something like this due it its staticity and intra-process communication feature.", " : find someone that will lead this work.", " I can take this up. However, I would need some help to understand the problem statement and to find the solution. Let me know your thoughts.", "How about having another meeting in July?", "Bosch will e.g. open-source their integration of LTTng in ROS2.", "Follow-up: I made a ", " about the alpha release!", " I will send an invite for next week.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["select one of the use cases below and probably loose interest from people having other uses case.", "focus on somewhat generic parts of ROS 2 that will help independently of the selected use case.", "\nMy reading of your comments is that these parts are the following ones:", "create rmw layers for static and real-time middleware (RTI Connext Micro, Micro-XRCE-DDS)", "perform memory audit in rmw, rcl and rclcpp (remove unneeded memory allocations)", "split memory allocation in init and runtime phases, avoid memory fragmentation", "remove all blocking calls (or replace with timed calls, e.g.  ", "  vs  ", "  )", "implement real-time pub/sub (either using Waitset or modified Callback/Executor)", "integrate tools for static and dynamic code analysis (PCLint, LDRA, Silexica, LTT-ng)", "Create node architecture for deterministic execution (policy for message aggregation, nodes cohesion, parallelization, local error handling \u2026)", "Create a design for global error handling (history of failures, core dumps, fail-safe mechanism, \u2026)", "Create CI for RT testing (e.g. ", ")", "consumer robots (Ingo)", "warehouse logistics robots (David)", "mobile manipulation robots (Victor)", "autonomous driving robots/cars (Dejan, Geoff)", "Victor, Acutronic Robotics", "Tobias, Bosch Research", "Ingo, Bosch Research", "David, Ubiquity Robotics", "Akihiko, eSol", "Geoff, TierIV", "Lalit, Intel", "Lander and Carlos, Acutronic Robotics", "Matt, Intel", "Nick, AWS", "Sriram", "Dejan and Anup, Apex.AI", "Dejan to provide a use case description and requirements", "find someone that will lead the work on real-time able rmw", "get William to present his findings on real-timeness in rcutils, rcl and rclcpp", "create a shared repository for tools for static and dynamic code analysis and tracing", "present Bosch paper and real-time with Callback+Executor in detail in one of the next meetings", "Propose a use case => requirements => architecture => hardware", "Proposed canonical use case: a vehicle/robot  encounters an obstacle and has to stop safely for it", "Proposed other use case: autonomous driving\n", "\n", ": Dejan to provide a use case description and requirements", "\n", "create rmw layers for static and real-time middleware (RTI Connext Micro, Micro-XRCE-DDS)", "perform memory audit in rmw, rcl and rclcpp (remove unneeded memory allocations)", "split memory allocation in init and runtime phases, avoid memory fragmentation", "remove all blocking calls (or replace with timed calls, e.g. ", " vs ", " )", "integrate tools for static and dynamic code analysis (PCLint, LDRA, Silexica, LTT-ng)", "implement real-time pub/sub (either using Waitset or modified Callback/Executor)", "create rmw layers for static and real-time middleware (RTI Connext Micro, Micro-XRCE-DDS)"], "url": "https://discourse.ros.org/t/ros2-real-time-working-group-online-meeting-may-20th-2019-between-7am-and-8am-pdt-utc-7/9196"},
{"title": "Execute code within a Node/Callbackgroup context", "thread_contents": ["Currently a node lives in a executor, and callbacks from timers and subscriptions are executed by that executor, taking callbackgroups into account.", "However, sometimes I have a trigger from somewhere else, not related to ROS, that I want to handle in that same context, This to prevent having to fiddle with mutexes etc.", "Basically something like this:", "\nrclcpp::Node::execute(CallbackT && callback, rclcpp::callback_group::CallbackGroup::SharedPtr group = nullptr);", "\nI then expect the callback to be executed as soon as possible in the same way as a subscription or timer callback.", "Now I do it by creating a one-off timer with a duration of 0, but it\u2019s not the nicest thing in the word. Would it be useful to have something like that in ros2?", "Yeah, that would be nice, and we\u2019ve thought about it before, but have always just done a timer will a small or zero timeout instead.", "Other similar systems have methods like ", ". Which just calls the callback as soon as it is convenient.", "Yeah it also works indeed, it\u2019s just that to make a one-off timer you need to store the timerhandle and make it accessible to the callback in order to make it one off.", "Just for reference, i now use the following utility:", "I solved a similar issue creating a custom objects that inherits from ", ".", "\nThis is registered similarly to subscription callbacks and it can  be triggered externally.  In my case it\u2019s triggered whenever data is added to a buffer.", "That\u2019s actually a cleaner solutions that should also introduce less overhead. Requires a bit more effort though but I\u2019ll look into it! Thanks!", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["  gc_ = rcl_get_zero_initialized_guard_condition();", "  rcl_ret_t ret = rcl_guard_condition_init(", "    &gc_, context->get_rcl_context().get(), guard_condition_options);", "\n", "  if (RCL_RET_OK != ret) {", "    throw std::runtime_error(\"SubscriptionIntraProcess init error initializing guard condition\");", "  }", "}", "\n", "bool", "is_ready(rcl_wait_set_t * wait_set)", "{", "  (void)wait_set;", "  return buffer_->has_data();", "}", "\n", "void execute()", "{", "  if (any_callback_.use_take_shared_method()) {", "    ConstMessageSharedPtr msg = buffer_->consume_shared();", "    any_callback_.dispatch_intra_process(msg, rmw_message_info_t());"], "url": "https://discourse.ros.org/t/execute-code-within-a-node-callbackgroup-context/9406"},
