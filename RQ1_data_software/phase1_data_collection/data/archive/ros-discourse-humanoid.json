[
{"title": "JSK's use of humanoids", "thread_contents": ["Hi", "We at JSK, has similar situation as vigar, we had a lot of (un-organized) ROS-Software also used in DRC and has been applied to several robots including open and closed robot.", "\nwalking controller -> ", "\nros integration -> ", "\nunfinished tutorials ->  ", "\nrobot model -> ", "\nfoot step planner -> ", "In my opinion, a Humanoids SIG is a very nice idea, as still many software/approaches are not that easy to reuse for different humanoid robots as they probably could.", "I agree, and teams like us, it is not easy to switch from existing system to others, but projet like", "Let\u2019s start a new thread to discuss the revival and extentions to humanoid_msgs. It seems like Vigor\u2019s StepTarget.msg has parameters that more closely match what most groups are commonly using.", "An RVIz plugin sounds like a great idea! Most packages are using Visualization Markers for footsteps, but that has been pretty limited in my opinion.", "As for humanoid kinematics/dynamics, it seems like ", " is a lightweight and actively maintained library that has these calculations. There is an example ZMP preview controller based on it ", ".", " Regarding improving KDL kinematics for trees, are you aware of this extension of KDL from Leuven?", "expressiongraph - This library provides expression trees for representation of geometric expressions and automatic differentiation of these expressions. This enables to write down geometric express...", "I have been using this library on our robots, and found it pretty useful.", "That looks like an interesting library. However it\u2019s licensing under the EUPL will mean that a large part of the ROS community will be unwilling to use the package due to strong copyleft. This makes it unsuitable for integration as a core tool.", "From: ", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["re-create humanoid msgs and rep  ", ", ", "\n", "create visualizer (rviz plugin) for these msgs", "From our experience of moveit applied to humanoid robot, ", ", we need IK interface for trees (improve kdl_kinematics?), add interface for calculate COM, Momentum and others (kdl_kinematics? robot_model? ), balance calculation method? these could be basics for all of software", "need mathematical library for humanoid calculation, Preview Control, Resolved Momentum Control? Riccati Equation, \u2026", "Version 1.1 of the licence was published recently. Why this update?", "\nIn response to the comments and reactions received on v.1.0, the Commission provided some minor clarifications to avoid interpretation problems. Fundamentally however, no big difference between v.1.0 and v1.1 exist, only the drafting has been improved without affecting the spirit of the licence.", "\nA clarification worth mentioning is the modification of article 1 to improve the management of on-line activities such as \u201cApplication Service Providers\u201d (ASP) or \u201cSoftware as a Service\u201d (SaaS). These activities have been more explicitly included in the scope of the copyleft effect: the EUPL could therefore be described as an \u201caffero-like\u201d licence (AGPLv3)"], "url": "https://discourse.ros.org/t/jsks-use-of-humanoids/2107"},
{"title": "Humanoid_msgs Definitions", "thread_contents": ["This thread is to discuss a new set of standard message definitions for humanoid robots. The current standard is humanoid_msgs, but it is not widely adopted and is currently limited to bipedal footstep planning/execution.", "As a starting point, I will propose modifications to StepTarget.msg to extend functionality for 3D terrain, and include commonly used step parameters:", "geometry_msgs/Pose pose   # step pose as relative offset to last leg", "\nuint8 swing_leg                      # which leg to use (left/right, see below)", "\nfloat32 swing_duration          # the duration spent in single support phase", "\nfloat32 step_duration            # the duration spend in double support phase", "\nfloat32 swing_height             # the max height of the swing foot relative to the stance foot", "uint8 RIGHT_LEG=0", "\nuint8 LEFT_LEG=1", " ", " Could JSK and Vigir footstep planning be made compatible with something like this?", "Another footstep message is from IHMC: ", "It is sent as a list of footsteps using:", "\n", "\n", "Thank you for starting this thread! I think it is great to start with common data structures and interfaces.", "Just to clarify: Is this thread focused on message definitions describing footstep planning and execution? Or should it also discuss other message definitions for coordinated multi-arm manipulation actions?", " The IHMC definition looks appealing to me. But is there any reason in general to provide the option for sole vs ankle relative coordinates? If I recall correctly, that was only to handle BDI\u2019s interface to the Atlas robot. And why are position/orientation split out into separate fields?", " We could talk multi-arm manipulation messages on this thread as well. I think we should expand to have humanoid_nav_msgs, humanoid_manipulation_msgs, etc.", "Can\u2019t help you with they 'why\u2026?\". I participated in the NASA Space Robotics Centennial Challenge which used the IHMC API for controlling NASA\u2019s R5 / Valkyrie. Thought it deserved being mentioned.", "yet another footstep msg -> ", " ", "I\u2019d add that humanoid_msgs shouldn\u2019t be a fork of someone else but be directly hosted in the org. Get the original author to move ownership of it or recreate the package.", "The messages of PAL are using humanoids_msgs but the status message is a nice addition:", "\n", "pal_msgs - Commonly used messages, services and action in PAL", "\n", "Thanks for initiating this discussion. We have also been working in this area and have established a ", " robots (independent of the number of legs). Specifically, a ", " as mention above is implemented as:", "Two parts of this message format are interesting: profile_type & ignore_contact. One activity in the Space Robotics Challenge was climbing stairs. The IHMC messages didn\u2019t allow, as far as I could tell, the profile shaping or setting a non-contact, i.e. a step always ended in double contact stance.", "From a stance with both feet on a step the first foot moved fine, clearing the riser and settling on the tread. There was no nose. It did this because the foot moved straight up and then horizontally onto the tread. The second food would catch the riser since it move at an angle. The profile couldn\u2019t be modified. Also, since a full step was needed the trajectory could not be raise the foot and then slide it onto the tread.", "There is a option to do a two position trajectory move in the IHMC message but I didn\u2019t have time to see how that worked or whether it would be sufficient for stair climbing, or descending.", "Thanks for the elaborations ", "! For step/leg motion types that are more complicated, arbitrary motions can be executed with ", " from ", ":", "Hello, from another humanoid user group perspective (LAAS, Gepetto)", "IMHO I would be in favor of having a message close to what JSK is using because it is going in the direction of multi contact planning.", "\nA multi-contact planner would provide at least a list of contact stances with the duration between each contact stance.", "An extension of the limb values to the URDF body identifier would probably work if someone wants to do multicontact with other bodies.", "At least one field would be missing removing the contact or going to contact.", "If there is no simultaneous contact event that would be enough.", "With respect to the issue raised by the end effector trajectory we have tried:", "Because the connection between the planner and a real-time walking pattern generator often involves", "\ngenerating a CoM trajectory after the planning the last solution is likely to be modify by the real time controller.", "\nA field indicating the type of trajectories published in a different topic would be maybe more practical ?", "Hello,", "in our footstep planning framework, we are using nested msg types to model the level of detail required by the different processing steps for 3D planning:", "\n", "\n", "\n", "\n", "\n", "\n", "The most difficult part is to cope with the distinct data required for the motion/walking software. Depending on the actual implementation of the walking algorithms, very different data is requested. From my experiences, I\u2019ve seen that BDI wants to know the \u201clift\u201d height in ", ", IHMC could handle foot contact area information and ROBOTIS THORMANG allows even to set timings for COM/ZMP trajectory calculation. We spend a lot of time to implement a framework which allows for handling this issue.", "We have solved the variation of requested data by adding an uint8 array, to encode custom robot specific data. Furthermore, our step messages contain attributes for operator interfaces in order to enable supervised planning (\u201cinteractive planning\u201d).", "From previous comments, I can already see a lot of different use cases. I guess we should first collect a clear list of requirements by the community and then work out a proper design for the messages, so everyone could work with it.", "At this early stage, we should already strongly consider to design the message in way that it is usable for n-legged robots.", ": Yes, would like to use common messages in our footstep planning software. But the current humanoid message does not provide the required features.", "We may first need to decide where the interface for this step message should sit.", "Should this be primarily used as a goal for a controller? If so, many of the planning cost parameters could be dropped. But if it needs to be an interface between different planning layers they need to stay.", "Is the controller responsible for computing CoM and foot trajectories, or is there a separate gait generator that does this? If we want to support multi-contact planning, it would be useful to split out the two so that foot (end effector) trajectories could be planned intelligently.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Half step ( y, z position)", "Polynomials", "Bezier curves", "Joint trajectories"], "url": "https://discourse.ros.org/t/humanoid-msgs-definitions/2119"},
{"title": "Naming standards for joints in humanoid robots", "thread_contents": ["Hi,", "It was very quiet in this SIG in the last month, so I will try to start a new discussion.", "\nI was trying to use the same code on different humanoid robots with the same 20-DOF joint configuration. The problem was that the URDFs were very differently structured and named. So I tried to find out what the standards are in ROS.", "\nAll I could find is REP 120 [1], which specifies the naming for some links and a general frame hierarchy. This is nice, but it doesn\u2019t specify the naming for the joints.", "\nI had a look at some of the URDFs of humanoid robots and the names differ a lot. There are different writing styles and different names for the joints, e.g. HeadPan and neck_yaw is the same thing.", "\nIs there any specification that I missed, or would it maybe be a good idea to make a new REP?", "[1] ", "First of all ", " feels awkward to me, it goes completely against all the naming conventions in ROS.", "At the same time, both alternatives you presented are names that encode the axis of rotation the joint performs given some arbitrary reference system.", "\nTo further elaborate on this I\u2019d highlight the importance of the convention you use to build your TF tree/URDF.", "\nThere are many styles, and I\u2019m going to be probably wrong with the names:", "The namings you proposed go well with the American convention that I\u2019ve seen in Valkyrie and the PR2.", "\nI\u2019d however advise for using the Denavit-Hartenberg frame convention as it\u2019s an industry standard plus it gives you freedom over naming, you can number them in the order they appear in a kinematic chain, with REEM-C we used ", ", ", ", ", ", etc. My personal preference is the latter, while with the head you are kind of ok (already weird on Valkyrie, where there are 2 tilt joints) arms will give you a hard time: ", ", ", ", ", " you\u2019ve already ran out of meaningful names!", "References:", "\n", "\n", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", ", where the angle of rotation is around Z and position of X and Y determine the positive direction", "(my naming) The Japanese convention is the same as Denavit-Hartenberg but they rotate around the Y axis", "(my naming) The American convention is to assign frames to joints such that all joint frames align with a flat right-handed coordinate frame when the robot is in an arbitrary ", " state."], "url": "https://discourse.ros.org/t/naming-standards-for-joints-in-humanoid-robots/3992"},
{"title": "Learning humanoid with ROS + Bioloid", "thread_contents": ["Hi All,", "Thanks for creating this new discussion cateogry.", "\nI am learning ROS and getting my hands dirty with a bioloid humanoid robot as a hobby.", "I have created a PCB board that has 4 FSR sensors on each feet to calculate the ZMP to improve balance.", "\nI am using RPI2 but will probably need to upgrade as more sensors will be added.", "Various repo I am re-using for the humanoid:", "I look forward to the various discussions regarding humanoid full stack and improvement to current packages dedicated to humanoid in order to prevent having to re-invent the wheel.", "cheers,", "\n-Mathieu", "Some picture of the robot.", "Hey", "\nI am also working on my humanoid. Could you guide me on how to control my dynamixels and walk my robot? Please help.", "\nThanks", "Dynamixels has a ros package really good.", "\nCreating config files ( yaml ), you\u2019re able to control as you control joints on gazebo.", "\n", "\nAnd to install everything else needed: ", "These ones are the steps to control the Dynamixel\u2019s motors. However, for walking movement is necessary to study more.", "Wow! Could you tell us more about FSR implementation please!", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["controller from Dave Coleman:", "\n", "\n", "inspired state machine from these guys:", "\n", "\n", "navio+", "\n", "\n", "inspired from those repo from humarobotics", "\n", "\n", "various inhouse repos to put things together."], "url": "https://discourse.ros.org/t/learning-humanoid-with-ros-bioloid/2100"},
{"title": "About the Humanoids category", "thread_contents": ["The Humanoids SIG will work to expand the core ROS capabilities for humanoid robot platforms. Areas of interest include motion planning and control for bipedal mobility, arm control and dexterous manipulation, and coordinated whole body movement.", "This grew out of a discussion ", ".", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/about-the-humanoids-category/2092"}
]