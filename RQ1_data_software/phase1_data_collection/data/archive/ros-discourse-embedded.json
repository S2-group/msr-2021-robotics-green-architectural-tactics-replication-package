[
{"title": "New forum for ros-sig-embedded", "thread_contents": ["Hi ros-sig-embedded,", "As some of you may have been aware we\u2019ve been getting feedback about ways to improve the communication within the ROS community. People have been looking for ways to discover activity in the ROS community and at the same time are looking to be able to filter the content more actively.", "Unfortunately using our current mailing lists these two efforts are somewhat contradictory so we\u2019ve setup a discourse instance at ", "We have started moving the SIGs over gradually, and as we grow into the site we plan to", "As such I\u2019m asking that this SIG transition to using the discourse instance to communicate instead of the mailing list. We will work hard to keep the mailing lists going for a while for backwards compatibility.", "We started the migration with ros-sig-java: ", "\nAnd if you have feedback on the site please raise it in the Site Feedback category: ", "So please take a moment to sign up for a discourse account and in your settings you can choose to be notified about everything, or filter for specific categories. The current settings support reply by email, but a new thread does currently require using the web interface.", "I\u2019ve turned off posting directly to the mailing list so that we don\u2019t get bifurcated communications. Thanks for your patience and see you on ", ".", "Thanks,", "\nTully", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/new-forum-for-ros-sig-embedded/139"},
{"title": "SBCL \"roslisp\" on ARM Debian Jesse", "thread_contents": ["I am attempting to put kinetic on a Pine64 running debian Jesse ARM64 and have run in to an SBCL dependance problem.", "Has anyone else seen this and fixed the issue?  Seems to me that we should have the option of not requiring roslisp to be installed on our embedded systems,  given that debian ARM does not have an SBCL package.", "Linaro has packaged sbcl: ", " for my testing on the DragonBoard 410c those repos are installed by default which I guess is why I haven\u2019t seen an issue.", "Can you try testing with those? Since that\u2019s actually an implicit dependency we probably should import those packages.", "If you can verify the package works we can import it into the ROS repository by adding it ", "I will try the repo and let you know.", "this repo is just added to my sources.list and when I do apt-get install sbcl, it should work, right?", "this repo is just added to my sources.list and when I do apt-get install sbcl, it should work, right?", "Yes this is what I have", "Thanks!", "\nI\u2019ll post my results", "Yes, SBLC was my only concern when installing ROS on an ARM32 (Raspberry Pi platform with Archlinux platform). Now they have released some binary packages form ARM platform so it should be OK. Even for ARN64. So let us know if you managed to do it.", "sbcl is available on:", "armhf for ", " and ", "armhf and arm64 as of [Ubuntu Xenial] (", ") and ", "So looking forward I\u2019m not worried about availability, Jessie arm64 seems to be the limiting factor.", "Thanks Tully,  that worked.", "Thanks for verifying ", " I\u2019ve now added it to our bootstrap repo:", "It will propagate through the buildfarm in the next couple hours.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/sbcl-roslisp-on-arm-debian-jesse/304"},
{"title": "Kinetic-desktop-full for debian jessie", "thread_contents": ["Has anyone installed the full ROS on debian jessie arm64?", "\n", "  I cannot find the package.  The reason that I want to install it is that I cannot install ros-controllers without RQT, etc.  I start to go down a rabbit hole ", " is available in the shadow-fixed repository it will be in the next ", "You can get the testing version of the new packages from the ", "Seems like there is still a lot missing right now.  When will it be sync\u2019ed?", "We\u2019re at 19 days right now. The arm64 builds are playing catchup from some architecture specific blockers.", "Please ping ", " on ", " to request a sync for Kinetic if you\u2019d like to accelerate it.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/kinetic-desktop-full-for-debian-jessie/306"},
{"title": "List of SBC's and supported OSs", "thread_contents": ["Continuing the discussion from ", ":", "I\u2019ve put together a page on the wiki where we can collect SBCs and what OS/archs they support.", "Please visit: ", " and help fill in any SBC you\u2019re interested in so we can understand what people are using and are interested in.", "There are some OS/Arch combos on that wiki page that are not supported by the buildfarm currently. (ex: Jessie/armhf, Xenial/arm64)", "Should there be some kind of notice on the SBC page if this is the case?", "If you try to follow the deb install instructions on the wrong arch, the error messages are pretty bad, and hard to debug. (just says \u2018Unable to locate package\u2019 on Xenial/arm64)", "That page could definitely use some augmentation. Documentation of what platforms have debian packages available would be a great addition.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/list-of-sbcs-and-supported-oss/156"},
{"title": "Information for those using Raspberry Pi, Ubuntu Xenial, and ROS Kinetic", "thread_contents": ["This is \u201chopefully\u201d a point in time statement:", "The following refers to images from this source: ", "For those who are using or plan to use the Ubuntu 16.04 Xenial server builds for Raspberry Pi 3 (and 2), it is important to immediately disable ", " and avoid ", ".", "There is a temporary solution to prevent a system from upgrading critical kernel files: ", "There are known issues with various patches which have been introduced after 1034. These patches make the Raspberry Pi unstable - primarily during the boot process. The result is the Raspberry Pi will sometimes freeze during boot. Several re-attempts (power cycling) and the system may eventually boot. Occasionally even this is insufficient.", "By installing the original images and not permitting upgrades of core kernel files, the RPi + Ubuntu Xenial + ROS Kinetic is stable.", "Background:", "Launchpad thread: ", "[spoiler]", "\nUPDATE: 2017-02-15: There is a better workaround available. Rather than use the \u201chold\u201d feature, users may edit the config.txt and change the device_tree_address (", "). The result should be the following lines:", "\n", "Even with this improvement, completing apt-get dist-upgrade will break wlan0.", "UPDATE: 2017-02-16: The config.txt has been repeatedly reported to work; however, I get boot issues.[/spoiler]", "UPDATE 2017-02-17: The update from the 15th has proven unreliable. The suggestion of using a non-server version from ubuntu-pi-flavor-maker is proving more promising.", "UPDATE: 2017-02-15: There is a better workaround available. Rather than use the \u201chold\u201d feature, users may edit the config.txt and change the device_tree_address. The result should be the following lines:# set extended DT area    #device_tree_address=0x100    #device_tree_end=0x8000    device_tree_address=0x02008000", "Just to be clear, we would modify the ", " file to comment out the old device_tree parameters, then only set the ", " to be ", ".", "In the launchpad thread you linked to, there was some references to ", ":", "\n", "\nDid you try those yet?", "\nDoes say the ubuntu-mate-16.04.2-desktop-armhf-raspberry-pi.img encounter that same issues?", "\nI\u2019m going to try it with ROS in a bit.", "I did not attempt the alternate image because of the statement at the end of the thread \u2026", "Shuhao (shuhao) wrote on 2017-02-13:\t", "\nThe images listed on ubuntu-pi-flavour-maker and the one listed on ", " is exactly the same. The same issue should exist on both systems.", "The non-server ubuntu-pi-flavor-maker builds are built using a different process, and don\u2019t seem to have this issue. They come with rpi-update and can easily run the RPi \u2018mainline\u2019 kernel (not the Ubuntu fork).", "I have been using lubuntu-16.04.2-desktop-armhf-raspberry-pi.img.xz with no issues.", "Rohan", "Today I am getting undiagnosed issues so I will try using the desktop image and then disable the GUI to have a facsimile of a server image.", "[quote=\u201crohbotics, post:4, topic:1205\u201d]", "\nThe non-server ubuntu-pi-flavor-maker builds are built using a different process, and don\u2019t seem to have this issue.[/quote]", "I can confirm. I have a functioning instance of my LoCoRo project. I started with the Lubuntu image from ubuntu-pi-flavor-maker and disabled LXDE. Then treated like an Ubuntu server image. Everything worked as expected.", "The Ubuntu Bugs thread has demonstrated to me that \u201cofficial Ubuntu support\u201d for the Raspberry Pi is dubious at present and has an uncertain future. When the April drop of Ubuntu 17.04 occurs, things should be clearer one way or another.", "For ROS, it would be best for the community if it supported buildfarm installable packages for a \u201csupported Raspberry Pi operating system\u201d. This translates to Raspbian. I\u2019ve been trying to promote Ubuntu but I have to concede, its not an ideal situation for ROS.", "I have talked with Canonical about the problem of Raspberry Pi support. They told me the lack of work on the ubuntu raspberry pi is do to the focus on ubuntu core. I agree with their logic. There is little reason to run a full version of ubuntu on a RPI.", "I do see the attention to Ubuntu Core. This is why my previous conclusion was to suggest ROS to consider Raspbian or even one of the other fully supported Linux distributions for the Raspberry Pi audience.", "Here is where I see a divergence between ROS and Ubuntu as far as the Raspberry Pi is concerned.", "The majority of Raspberry Pi owners (and the focus of the Raspberry Pi org) is the experimentor, student, tinkerer, maker, learner, creator.", "Ubuntu Core appears to focus on IoT which is more of a commercial direction.", "Unless a lot more packages are constructed as Snaps, it leaves very little usefulness for a large segment of the Raspberry Pi user base. (You can\u2019t just \u201capt-get install\u201d on Ubuntu Core.", "Is ROS considering a focus on Ubuntu Core?", "My personal activity with ROS is more \u201cresearch\u201d and \u201ccreator\u201d and not IoT. None of the Taspbery Pi based projects I\u2019m involved in are looking at Ubuntu Core.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/information-for-those-using-raspberry-pi-ubuntu-xenial-and-ros-kinetic/1205"},
{"title": "Re: Indigo on Raspberry PI 3", "thread_contents": ["Hi,", "Continuing this thread: ", "The RPI3 is 32bit.  Is there going to be a 32bit version of Kinetic for ARM?", "There are Xenial armhf builds. I\u2019m kind of disappointed to hear that it seems that the Raspberry Pi community has not started supporting aarch64 images. Why have the armv8 chip and not use it.", "yes, the Kinetic buildfarm does armhf and arm64 builds for both Jessie and Xenial. It\u2019s a lower priority to support Debian and ARM builds in the initial release, but we do encourage maintainers to fix platform-specific problems that the build farm finds.", "Unfortunately we have only demonstrated the ability to build armhf and arm64 for Xenial and Jessie both. However we\u2019ve tried to pick a covering set by turning on Jessie arm64 and Xenial armhf.", "We can consider changing the supported architectures, however we need to trade off the costs of running the buildfarm. Note that the armhf and arm64 builds take close to an order of magnitude more server time.", "As far as I understand it, Raspbian doesn\u2019t have any builds that target an architecture above armv6 with hard float. (The original Raspberry Pi). They didn\u2019t want to support multiple arch builds, and they don\u2019t want to confuse beginners.", "Other than not wanting to confuse people, the RPI has some reasons to not run 64bit software.", "The Pi 3 only has 1GB of ram, so going to 64bit will consume more of that memory storing pointers.", "The speedup of the clock is enough to justify going to the newer chip, even if the newer 64 bit stuff isn\u2019t used. Just like Pi1->Pi2.", "  does this mean that only 64bit Jessie for the time being?", " for the moment yes.", "Though if what ", " says is right about all the images being armv6 + hard float, the armhf builds are not necessarily raspbian compatible either. Though the Pi 2 can run standard debian armhf binaries according to this: ", "There is a Debian wiki page on this here: ", " with more info on the Raspberry Pi 2 here: ", "RPI3 is different so I hope that they will updated it.", "\nAnyway it works with Ubuntu 14.04 in chroot on indigo.", "We are planning on using an ARM A53 based solution for our products and RPI3 or DB410C are great platforms to use.", "\nhopefully Kinetic will be supported on the RPI3 somehow", "(old thread but some additional background)", "The RPi 3 CPU core was picked because it\u2019s a great 32 bit processor (and  happens to also work in 64bit mode). That said, the 1GB of RAM and the rate at which the hardware is being iterated, there has not been much movement in the Linux community to put effort into an arm64 build.", "I understand the interesting in ROS on Raspbian. That said, we do have a workaround now that Ubuntu Xenial (with and without GUI) is available and supports the RPi3 hardware well.", "It does leave limited options for RPi-like hardware which has focused on Raspbian Jessie as their prefered OS.", "Just adding on, as you mentioned Xenial images, Here is a link to a bunch of Ubuntu 16.04 Pi2/3 images, offering a variety of desktop and non desktop variants.", "We have done what we can to optimise the builds for the Raspberry Pi 2\nand Raspberry Pi 3 but microSDHC I/O throughput is a bottleneck so we\nhighly recommend that you use a Class 6 or Class 10 microSD", "Yes. I\u2019ve responded to a couple ROS Answers posts, suggesting those images. I suggest we continue to them as the starting pion to most. It would reduce the frustration level for many.", "While those images are not perfect for everyone, they are likely the best option for most users on RPi hardware.", "Aside: the RPi3 w/ onboard wifi support is the basis for the LoCoRo (low cost robot) project.", "We got raspberry pi3  running on ubuntu16.04(MATE) with ROS kinetic, but it\u2019s 32bit.", "\nHere\u2019s is the image if anyone need.", "\n", "duckietown-bunny === ![](https://i.imgur.com/Lwgsi3c.png)   ---   a fork from MIT autonomy open-sour", "\n", "\nIt\u2019s original for  project \u201cduckietown\u201d and \"duckietown-bunny\"", "\n", "  Enjoy ", "Do you know if the RPI Camera works?  I am about to try mate 16.04 using your image.", "The Pi cam works on Ubuntu Mate 16.04.", "There is a ros node for it here:", "\n", "raspicam_node - ROS node for camera module of Raspberry Pi", "\n", "The documentation is a touch out of date, but we are working on it.", "Yes with normal raspberry pi CSI interface camera or fisheye camera", "\nHere is how you start it", "\n", "Camera test === Hey Bunny! Wake up! ![](https://i.imgur.com/FuMKr2G.jpg)  #### TODO *\tstart camera n", "\n", "\nThe original project is base on RPI2 see here ", "\nIf have further questions, leave me messages ", "Thank.  I will try it out.", "The RPi 3 CPU core was picked because it\u2019s a great 32 bit processor (and  happens to also work in 64bit mode). That said, the 1GB of RAM and the rate at which the hardware is being iterated, there has not been much movement in the Linux community to put effort into an arm64 build", "So I\u2019ve got my pi 3 running in 64 bit mode with Gentoo. I\u2019m slowly updating ROS  ebuilds to work on arm64, but have not done them all yet or tested ROS compilation on the architecture (because I don\u2019t want to mess up my portage tree, as getting 64 bit mode was quite a hassle).", "That said, I might attempt a 64 bit ROS Gentoo image, and could upload it for everyone if there is demand for it.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/re-indigo-on-raspberry-pi-3/141"},
{"title": "Deep Neural Network on Embedded?", "thread_contents": ["I recently implement couple of algorithms for Deep Learning, which provides fast inference on an embedded devices.", "One of them is called \u2018LCNN\u2019, you can find the original paper here : ", "And I implemented it with tensorflow,", "This codes compress alexnet which takes roughly 150ms or more on a single core cpu,", "to a sparse convolutional layered network which takes 10~50ms on the same environment.", "So\u2026 based on these new technologies, i am looking for an idea to try.", "Like openpose on a robot : ", "Any Thoughts?", ", that\u2019s pretty cool. What embedded platform are you working on? The results are pretty interesting. Well done.", "It\u2019s for snapdragon cpus like smartphones.", "Also I\u2019m working on arm cpus.", "Also, this codes is not optimized for specific cpu architecture, It can be improved further.", "That\u2019s really cool!", "Do you have trained neural nets to go along with it?", "I have alexnet which 20 times faster than the original one. I will add more models. Do you have any particular model you want?", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/deep-neural-network-on-embedded/2604"},
{"title": "Jetson_easy", "thread_contents": ["Hi guys,", "\nIn the last weeks I built the jetson_easy [1] a toolkit to work with NVIDIA Jetson TX1 and TX2 (wiki under construction [2]). This system install and fix locally and remotely the board.", "\nThis script install ROS (Kinetic or Lunar), if you want, set the local workspace and set in your .bashrc the ROS_MASTER_URI and/or ROS_HOSTNAME (Usually setup when you develop on your robot). In the next week I would like to add a new module to automatically install all deep learning frameworks.", "[1] ", "\n[2] ", "This is a screenshot from the prompt GUI:", "\n", "I hope is useful for the community.", "Raffaello", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/jetson-easy/4571"},
{"title": "Compress ros.h / Interacting without ros.h", "thread_contents": ["Dear all,", "\nI\u2019m working with ROS since several months and i\u2019m very satisfied!", "I have still created a small pcb based on a atmega32u4 which should interact with ROS about his native USB port. Unfortunately i have found out ros.h needs a lot space for interacting with publishers and subscribers. Is there any possibility of compress the ros.h library?", "Thanks in advance", "Hello ", "\nUsually, it is not the code by itself that take too much space but the serial buffers.", "\nYou should look at ", " and reduce the size of the buffers as explained in the section ", ".", "You need to modify the ", " template parameters with something like:", "Adjusting the values according to your needs.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/compress-ros-h-interacting-without-ros-h/5838"},
{"title": "ROS2 Embedded SIG meeting #1", "thread_contents": ["Following the current interest on a ROS 2 targeting microcontrollers we have scheduled an online community meeting for next Monday, 5th of November at 16:00-18:00 UTC.", "The meeting will take place on hangouts meet: ", "\n", "The main point of this meeting would be to get some consensus on design and joint efforts on the development.", "Currently, there is an in-progress PR with a draft of a design:", "\n", "\n", "I was unable to make this meeting, are there any plans to post minutes?", "Here you can find the meeting notes.", "\nIf any of the attendees want his names/companies removed from them I can do it.", "05 NOVEMBER 2018 17:00 PM, Hangouts Meet.", "Quick presentations on each of the attendees.", "\nBy turns, each of the attendees introduces themselves. Check Attendees section for the list.", "Summary of the current status of the design.", "\nPR on ROS2 Design:", "\n", "\n", "\nOriginal design doc from OFERA/microROS:", " What kind of devices we are targeting?", " Possible two targets:", "\nBigger devices using the current stack.", "\nSmaller devices using something more like rosserial.", " We are not very far from small devices on OFERA project we are squeezing the sizes with pretty good results (XRCE-DDS client is taking ~4k RAM)", " We are looking at TurtleBot. We don\u2019t think we need a smaller implementation.", "\nThey have one implementation targeting Arduino, extending TurtleBot that is already integrated on Arduino platform.", " May OSRF can help with some optimisations and modularisation on RCL and RMW.", "Ingo & Geoffrey Biggs:", "\nOne of the most significant issues is the statically concept in RCL and RMW.", " We should engage OSRF for ensuring the success of this work. Some layers will need to be modified in future.", "List and review of currently available approaches.", " The current release of OFERA/micro-ROS:", "\n", "\n", "\nProject\u2019s GitHub page:", "\n", "micro-ROS has 21 repositories available. Follow their code on GitHub.", "\n", "\n", "\n", "A ROS Client Library targeted at microcontrollers that will connect to the ROS network using DDS-XRCE. - awslabs/aws-ros-client-library-microcontrollers", "\n", "\nVery thin wrapper over Micro XRCE-DDS with pretty simple basic ROS 2 concepts.", "\nDon\u2019t need to touch ROS 2 core.", "\nHaving a lot of rosserial users, It looks a good idea to have a migration path to ROS 2.", " Is the use case people bringing ROS 2 nodes to microcontrollers or just implementing specific nodes?", " People worrying about minimal impact will do their custom implementation.", "\nPeople on ROS 2 community side, may want the full stack approach.", "\nIf we can get RCL/RMW really small would be the ideal approach.", " H-ROS is other interesting approach using microprocessors. But how small they are targeting?.", " H-ROS uses H-RIM to set a standard information model to be able to plug and play components.", "\nH-ROS would like to integrate microcontrollers.", " We plan to benchmark the memory usage of the provided solutions.", "\nWe think that the messages buffers are probably the biggest consumers.", " Will be Lovely to have measures on current consumption of RMW and RCL", " RTOS is the biggest consumer on the system. In our POC FreeRTOS uses more ram than Micro XRCE-DDS implementation. TCP/IP stack included.", "\nLink to the source code?", " You can select the protocol you want to use under micro XRCE-DDS: TCP, UDP, Serial even personalise yours.", " We use FreeRTOS on XDK, see ", "Organisation and further actions of a joint effort towards embedded ROS 2.", " Trying to get further information on the RCL and RMW implementation.", "\nMaybe engage in a discussion on the size of the layers once we have some data.", "\nRTOS implementation for later.", "\nProvide POC code.", "Provide some demos for memory usage measures.", "\n", " Alternate time approach for setting meeting times.", "\n", " Meets to be set for every two weeks.", "Here is the memory usage of Renesas RX65N implementation. The memory size I discussed at the SIG meeting includes AWS and Mbed TLS which are the big memory consumers. If we don\u2019t have to support the use-case, the memory usage becomes quite small (Use case 1 and 2). Please see the table below. Please note this memory usage could get changed during the course of development.", "For RX65N FreeRTOS code, please see ", "Please see ", " for DDS-XRCE PoC code running on the Renesas RX65N MCU.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["eProsima: Jaime Martin, Borja Outerelo", "Bosch: Ingo L\u00fctkebohle", "Acutronic Robotics: I\u00f1igo Muguruza", "eSOL: Akihiko Tsukuda, Shoji Morita (supporting Renesas, ", ")", "Amazon: Nick Burek", "Renesas: Osamu \u201cMax\u201d Matshushima", "AIST: Geoffrey Biggs"], "url": "https://discourse.ros.org/t/ros2-embedded-sig-meeting-1/6645"},
{"title": "Low level encapsulation of Mavros messages using MAVLink", "thread_contents": ["Hi all,", "I\u2019d like to have a go at implementing a UART based Mavros client / server implementation, The client will be running on a homegrown ARM Cortex F4 flight controller and the server side I plan to implement on a more powerful \u201cCompanion Computer\u201d, probably a Raspberry PI.", "I\u2019m struggling to find any detailed information about how other systems perform the encapsulation with MAVLink as I would like to develop code that I could easily re-use with other systems.", "I now have a basic understanding of ROS but I still have a few moderately fundamental questions with regard to Mavros that I\u2019m trying to find answers for. I have started to have a look though some of the implementing code bases such as PX4. However, there is a lot of code and this is taking a while!", "Below are  a few \u201coverlapping\u201d and pretty basic low level questions about the MAVLink encapsulation that I\u2019m hoping someone can answer, or perhaps point me at some appropriate code or a technical description (I have unsuccessfully looked for this).", "Many thanks!", "Hello,", "I didn\u2019t fully understand what you tried to do. But here is some clue:", "\nMAVROS is just a bridge between ROS messaging and Mavlink.", "About Mavlink usage. The only need message is really the heartbeat as it contains essential status information and implement the mavlink routing feature. Mavlink C implementation already got big helpers function to help you implement the sender and receiver functions.", "Mavlink common.xml implements a set of common usefull message. If those don\u2019t suit you, you can easily create your own set of message \u2026 but you will need to compile MAVROS yourself to include your messages. MAVROS only undestand message from ", "You will find more help here :", "\n", "\n", "It\u2019s trying to say: \u201cPreArm: Compass not calibrated\u201d  This is me trying to read \u201cuseless\u201d heartbeats \ud83d\ude13  At least I can add that Pixhawk also sends warning messages without stream request.  Thanks for sharing!  I\u2019ve been following old tutorials for...", "\n", "Thanks for your reply.", "I understand how MAVLink works and have a good API level understanding of ROS.", "Essentially I\u2019m trying to determine how a serial Mavros bridge works, but at the lowest level. i.e. How to implement a client capable of talking to an other Mavros compatible systems via a serial port using MAVLink as the transport layer. I suspect that it\u2019s straightforward, but it\u2019s difficult to determine precisely without any documentation or by looking though existing code bases like PX4.", "I have now brought a Pixhawk that I intend to setup and use with the existing Mavros tools. Once working, I\u2019ll monitor the serial comms and this will hopefully fill in the gaps in my current understanding of how it works.", "ROS appears to be very well documented at all levels, but as far as I can tell this isn\u2019t the case for Mavros. Once I\u2019ve figured it out I will post a description just in case anyone else ever needs build their own implementation.", "Meanwhile, any low level insights would be gratefully received!", "Mavros only write mavlink message on serial nothing more.", "\nWhat you want is basic mavlink routing. You want to send a message from a mavlink device to another", "\nMavros will connect to only one mavlink ID.", "\nSo you need :", "\nMavros ( id=1,cmpnt=255)< - - uart - - > device (1,1) <\u2013uart\u2013> device2 (2,1) <-- uart\u2013> mavros (2,255)", "\nNormally, mavros filter messages by id via ros plugin api. You can easily add more plugin to handle more message or catch messages from /mavlink_from", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Which MAVLink message ID or IDs are used?", "Are these custom MAVLink messages? i.e. in the range 180 - 229 and thus application specific.", "Do distinct Mavros message get encapsulated as specific custom MAVLink message?"], "url": "https://discourse.ros.org/t/low-level-encapsulation-of-mavros-messages-using-mavlink/7247"},
{"title": "Installing Ubuntu 18.04 arm64v8 on Raspberry Pi 3", "thread_contents": ["Would anyone else like to see a arm64v8 image of Ubuntu 18.04 image for the Raspberry Pi 3 Model B? I gave a good stab at it Sunday afternoon, but got a little lost in the weeds given its been awhile since I made a 14.04 image for my old Raspberry Pi 1, and trying to catch up with the changes of things.", "I have a majority of a one-line install image build script, but just can\u2019t get over irregularities with ubuntu\u2019s server install scripts and patching grub bootloader. My hacked together script thus far:", "\n", "Clobbering of bootstrap scripts for setting up raspberrypi images - ruffsl/raspberrypi_bootstrap", "\n", "My goal was to make a Ubuntu image I could use to test the arm64 ROS2 Boncy binaries on, and do some profiling and testing on; as I didn\u2019t feel like building or cross compiling ROS2 myself. But this has sort of turned into a deeper rabbit hole. Figured I\u2019d share my stalled progress with the embedded folks here, or find out if anyone else already has a working image.", "Other recent related discussions/wikis:", "\n", "\n", "I actually did spend some time getting ROS2 working on the Raspberry Pi 3b+ a few months ago.  I took two different paths to get there:", "Hope this helps a bit; let me know if you need additional information, since I elided my detailed notes here for brevity.", "Any reason to use ubuntu instead of debian ?", "Otherwise there is a debian arm64 for raspberry pi 3 :", "\n", "A 64-bit OS for the Raspberry Pi 3. Contribute to bamarni/pi64 development by creating an account on GitHub.", "\n", "\nI do not test it for the latest pi 3b but there is a fork for it.", "The installation of the OS is straight forward. Then we can install ros2 directly from the ros2 repo :", "\n", "The Robot Operating System, is a meta operating system for robots. - ros2/ros2", "\n", "If it is on any helps\u2026", "This  ", " Xubuntu 18.04 installs and works pretty fine on Raspberry Pi 3 B+", "Follow the instructions here: ", "\n", " The installer is designed to be run from a flash usb drive and installed to another device (SD card, hard drive).", "To make it lightweight, you will have to manually remove all the packages that you don\u2019t need.", "I built a ROS 1 image for Turtlebot 3 on Gentoo that was 64 bit a while back, I\u2019ll link here once I dig up the post.", "I think ", " was attempting to make an Ubuntu image, though, and was hoping for 64 bit.", "I\u2019ll say, however, that 64 bit arm is not necessarily a great thing on the raspberry pi\u2026 The main benefits: you get 16 more registers than 32 bit mode and you get better compiler optimizations (the pi 3 has vectorization, ", "), but you ", " have the < 1 GB of RAM which makes doing most things in a 64 bit system quite difficult\u2026 I think this is one of the reasons the raspberry pi people don\u2019t use 64 bit mode by default.", "Don\u2019t get me wrong: I use my raspberry pi 3 in 64 bit mode, have compiled ROS on Gentoo, and have been able to do a full GMapping demo with Turtlebot3. It\u2019s not useless, and it\u2019s not painfully slow. But doing any memory-intensive thing is awful.", "I have to concur. I don\u2019t see the necessity for 64bit on the Pi3, the downsides outweigh any perceived benefits. FWIW there is also a semi-official Ubuntu Core 18 ", " but for the reasons ", " and more have listed, we haven\u2019t pursued an official release.", "Yes there is need for 64 bit Ubuntu for RPI.", "64 bits are needed because every one around will not continue to develope 32 bit platform version just because there is one 32 bit board that may use it\u2026", "\nRPI is not the only microcomputer with GPIO, there are many \u201cfruit\u201d like boards, that work better, with better hardware, more RAM, possible SSD\u2019s and so on\u2026", "I had to choose another board, because making Ubuntu 64 18.4 server working on rpi is problematic and not much straight forward.", "\nFor my project and production devices we use Odroid H2 , without fighting we can use any distro, and really powerful hardware.", "So if there would be \u201ceasy way\u201d  ready to flash image i would use it. And just check how many people is looking for Ubuntu 18 64 bits server for ARM on forums\u2026 really many.", "For future reference or for others who end up finding this thread, the beginning of this week Ubuntu released preinstalled server images for Raspberry Pi, including a 64-bit ARM image for Raspberry Pi 3.", "The preinstalled-server image allows you to unpack a preinstalled version of Ubuntu onto a target device.", "Additionally, the ubuntu wiki for Raspberry Pi has also been updated to include some more notes and setup guides for hardware acceleration, desktop GUI installation.", "These are not Ubuntu Core images, but the \u2018classic\u2019 deb based image.", "I\u2019ve just tested the ", " image on a Raspberry Pi 3B. Installing and running ROS2 Crystal from the released debian binaries for arm64 from OSRF are working well. The ros2 cli is a little slow, but that just seems to be python on arm in general. I\u2019ve starting testing out turtlebot3 ros2 packages from source, such as the hls_lfcd_lds_driver, and it\u2019d been smooth sailing.", "The only hiccup thus far has been the bluetooth. Thankfully the broadcom brcmfmac drivers for the wifi that come preinstalled are working fine with ", ", but the ", " package seems to be missing. While one can ", ", I\u2019m having trouble maintaining a pared connection using bluetoothctl and a ps4 controller for ros-joy due to missing dependencies. ", " , would you know where I could ticket about the ", " package?", "Hey ", ", sorry for the delay, I was out for a few days. I asked Foundations about this, and they said to please log it right ", ". It is a known issue, but they would appreciate a bug. If you wouldn\u2019t mind linking here once you\u2019ve done so, I can give it directly to them.", "If you wouldn\u2019t mind linking here once you\u2019ve done so, I can give it directly to them.", "I\u2019ve created a bug report for it here:", "No bluetooth on 18.04 for raspi3 arm64", "\n", "I\u2019ve been using this image on some Raspberry Pi robots:", "\n", "(Update 11/2/2018) Updated image with 2018\u201310\u201309 Stretch Lite Raspbian\u2026", "\n    ", "\n", "But it\u2019s a somewhat crippled version of ROS, e.g. no tf and no repo to apt-get install binaries of ros-kinetic-* packages. Building all those fairly standard things from source takes ages on a Pi.", "Also if the above image is installed on a Pi Zero W, the Wi-Fi doesn\u2019t work.", "I would definitely love to see an 18.04 image with full-blown ROS ", "I believe for bluetooth support, you can use the packages from raspbian, ", " (some other packages may be needed). This is how the Ubiquity Raspberry Pi image works, albeit for Xenial armhf.", " Ubiquity Robotics maintains a Raspberry Pi Image with Ubuntu 16.04 + ROS Kinetic available here ", ". You might be interested.", "Rohan", "\nUbiquity Robotics", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["I recompiled all of ROS2 on the 32-bit Raspberry Pi distribution that is the default for Ubuntu 18.04.  This worked fine, with the caveat that you have to build everything sequentially since some things take too much memory.  I ended up using ", ".  The big downside to this approach is that the ROS2 CI doesn\u2019t regularly build or test against 32-bit ARM, so things may not work exactly as expected.", "I switched the Ubuntu 18.04 distribution running on the Raspberry Pi 3b+ over to 64-bit, and then was able to install ARM64 packages.  Unfortunately, this is a bit of a process (it took me about 2 hours to do).  The basic steps are:\n", "Follow the instructions at ", " to install Ubuntu 18.04 32-bit on the Raspberry Pi 3b+ (this is a bit of a process on its own, but just follow through that guide)", "Once you have successfully booted the 32-bit distribution, we can start the steps to switch to 64-bit.  The basic instructions for switching the processor mode and kernel over to 64-bit are also at ", "\n", "After rebooting, you\u2019ll be running a 32-bit userland on a 64-bit kernel.  To switch to a 64-bit userland, you need to manually install all of the ", " versions of the packages and removing the equivalent ", " versions.  I ended up starting with leaf packages and making my way towards core packages, but it may be easier to start the other way around.  In any case, after dealing with some minor fallout from doing that, and rebooting, I had a full 64-bit kernel and userland that I was able to install ROS2 packages arm64 packages on.", "\n", "Please find Mongo DB that is made for ARM and 32 bits - hard to find ? well \u2026 32 bit version was killed a yer or two ago, so if You need good noSQL database You need 64 bit system, same with many other tools.", "\n32 bits are going to go to heaven not because rpi needs it (with 1 gig ram it does not)."], "url": "https://discourse.ros.org/t/installing-ubuntu-18-04-arm64v8-on-raspberry-pi-3/6094"},
{"title": "Debian Stretch + armhf", "thread_contents": ["Is there any timeline regarding when ROS packages would land for armhf (Debian Stretch)?", "After following the usual steps on Debian 9.4 (ARMv7), I\u2019m only getting ", " and related packages instead of ", ". The installation pages for Kinetic, Lunar and Melodic also show no love for armhf.", "Thanks in advance", "There are no plans to support armhf binary builds on debian stretch for kinetic, lunar, or melodic.", "We are only targeting one platform per distro for armhf builds and we\u2019ve picked our most popular platforms the Ubuntu LTS releases (xenial or bionic for the above rosdistros)", "For reference there have been a few related threads. This one appears to be the most relevant.", "I was also trying to install  ROS Melodic on the Raspberrry pi 3.", "\nAdded the stretch main distribution to the sources list, however it seems that it\u2019s unable to find the package.", "\nI\u2019ve also checked the repository, and seems that under the", "\n", "\nlink there is an armhf repository.", "\nSo is the Pi3 supported in the end ?", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/debian-stretch-armhf/4751"},
{"title": "ROS2 Embedded SIG meeting #2", "thread_contents": ["Hi all.", "I am happy to announce that we are planning a second meeting regarding ROS 2 targeting microcontrollers", "We plan to schedule an online community meeting for the week of 14th-18th of January 2019.", "The poll with tentative times and dates will be open till a couple of days before. Deadline for the poll will be 10th January 16:00UTC, and then the results will be published.", "Date and time poll:", "\n", "\n", "\n", "Like the first meeting, it will take place on Hangouts meet: ", "This is the draft Agenda (To be updated, input and proposed agenda points are welcome):", "Changes on ROS 2 crystal on how they affect embedded.", "Memory footprint measurement.", "Hi all.", "The poll with tentative times and dates was closed yesterday.", "\nThese are the meeting details:", " Tuesday, 15th January at 15:00 UTC.", "\n", " Google meet: ", "\n", " (Draft Agenda, to be closed in the following days, feedback and additions are welcome):", "I wasn\u2019t available for this meeting due to a lack of connectivity 10km above Poland. ", " Are the meeting minutes available?", "+1 to ", "\nif available, could you share the minutes?", "Sorry for the delay.", ": Borja Outerelo, Julian Bermudez", "\n", ": Ingo L\u00fctkebohle", "\n", ": I\u00f1igo Muguruza, Juan Flores", "\n", ": Adam Dabrowski", "\n", ": Akihiko Tsukuda, Shoji Morita", "\n", ": Osamu \u201cMax\u201d Matsushima", ": The most significant difference we have notice porting micro-ROS to the new Crystal packages is the change on the rmw implementation initialisation. Now it passes the options from upper layers including what we think it is essentially an allocator instance, so we can create custom allocators from upper layers avoiding dynamic memory allocations in the rmw_implementation.", "\nThe rmw_microxrcedds implementation has been adapted, and a PR is being reviewed. You can check there what changes were needed.", "\n", "\n", ": We might need to look at how micro-ROS is compiled in conjunction with ROS 2 standard packages. No significant changes regarding executors done in Crystal.", ": We have collected ROS 2 Crystal. 2 Projects: A) bring ROS 2 to eSOL\u2019s embedded RTOS, B) Work in conjunction with Renesas to put it into their microcontrollers. It has been done at project A), but has not been done at project B) yet.", ": People may be interested in hearing something else from Renesas work in their microcontrollers and ROS integration.", ": ", "\nFound peak", "Dynamic linking size -t output:", "Static linking size -t output:", "Binary totals (micro-ROS stack):", ": the Interesting point is to get the source of the dynamic allocations. Currently testing the Valgrind massif tool and get the peak allocations. Still an ongoing task.", ": experiencing some issues with realloc calls where a strange behaviour is observed in massif data viewer tool.", ": Still investigation NuttX tools for getting runtime measurements.", ": NuttX and Linux memory measure will be in the default standard library implementation.", ": We are working on a NuttX implementation for RX65N chips. Do you have measured ST32 memory?", ": Made tests on Olimex. Executing basic complete micro-ROS stack with a client:", ": Most of the issues with memory usage reside in the CPP layers.", ": Next TSC meeting will discuss the formation of real-time and safety WGs. Real time working group could be interested in the static memory allocations as well.", ": Can we join?", ": TSC is only open for organisations participating to the ROS 2 core. Working groups are open to the general public.", "In 6-8 weeks", ": Add static compilation of types support to the micro-ROS documentation.", "any plan for next meeting?", "Yeah, the originally planned date has been delayed due conferences and holidays, but we should definitely have another meeting soon. Personally I would suggest end of May/early June, but I\u2019ll talk to Borja and we\u2019ll post some concrete news soon.", "okay good to know, thank you very much for taking care of this thread.", "Next one could be either 6/3 or 6/6. See below;", "\n", "\n", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Monday, 14th January 15:00 UTC", "Monday, 14th January 16:00 UTC", "Tuesday, 15th January 7:00 UTC", "Tuesday, 15th January 8:00 UTC", "Tuesday, 15th January 15:00 UTC", "Tuesday, 15th January 16:00 UTC", "Wednesday, 16th January 7:00 UTC", "Wednesday, 16th January 8:00 UTC", "Wednesday, 16th January 15:00 UTC", "Wednesday, 16th January 16:00 UTC", "Thursday, 17th January 7:00 UTC", "Thursday, 17th January 8:00 UTC", "Thursday, 17th January 15:00 UTC", "Thursday, 17th January 16:00 UTC", "Friday, 18th January 7:00 UTC", "Friday, 18th January 8:00 UTC", "\n", "\n", "\n", "\n", "Changes on ROS 2 crystal on how they affect embedded.", "Memory footprint measurement.", "RAM: 36KB (of 192KB)", "Flash: 383 KB (of 1MB)"], "url": "https://discourse.ros.org/t/ros2-embedded-sig-meeting-2/7243"},
{"title": "Awesome Embedded Linux", "thread_contents": ["For all embedded Linux fangirls/fanboys out there: The ", " list could be helpful to get an overview about potential software components for ROS2 systems running on embedded Linux.", "Wow great site many info at one place", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/awesome-embedded-linux/9452"},
{"title": "Best ARM board for ROS", "thread_contents": ["I would like to get an opinion on what people think is the best ARM board for ROS.", "I have tried the dragonboard, raspberry PI3 and beaglebone black.  beaglebone does not have the horsepower to run ROS (moveit,etc).  I think that a quad core A53 might be the minimum required.", "Anyway comments welcome.", "Shawn", "HI ", ",", "I\u2019ve tried all those and my advice for new projects would be to have a look at the new NVIDIA Jetson TX1 module. IMO it\u2019s by far the best ARM embedded board where to run ROS and friends.", " how is the TX1 compared to the TK1?", "I have used the TK1 myself, and it has the capabilities to be extremely powerful, however all of nvidia images are given out with low power settings so you have to configure it all yourself (i also noticed that it had a issue with IRQ balancing, which till this day I dont believe got fixed)", "Hi,", "Yes,  the TX1 would be a great board (or the TK1).  I should have clarified and said best board under 120.", "\nI am considering Pine64 but I will have to wait and see about it.  I am a bit disappointed by the RPI3\u2019s OS and lack of 64bit support.", "Hi ", ",", "\nI jumped directly to the TX1 so I\u2019m afraid i can\u2019t comment on that.", "Has anyone used an old flagship phone as a \u201cARM target\u201d? I\u2019d like to use some old android phones that still have a good 2GB of RAM + 64-bit ARMv8 that include a swath of radios, sensors, self contained power supply. Buying one retail might be above your $120 mark, but if you have one siting around in a relatives junk droor or with a cracked screen off ebay\u2026", "I know there is ROS for android with ROSJava, but flashing phones with a more common flavor of Linux and treating as a traditional embedded target has always been appealing to me. I think mobile device hardware support is a bit fractured thanks to device manufactures, so I\u2019ve only seen posts with Nexus and Ubuntu Touch, nothing like an old Samsung I have.", "\nRelevant ROS Answers post: ", "I would like to get an opinion on what people think is the best ARM board for ROS.", "I have tried the dragonboard, raspberry PI3 and beaglebone black. beaglebone does not have the horsepower to run ROS (moveit,etc).", "I was hoping to use the BBB for a mobile robot doing things like SLAM, localization, and navigation (move_base). So no need for image/video processing, only spinning LiDAR. From my testing, it doesn\u2019t look adequate even for that, unfortunately.", "How do people feel about the Odroids? ", "ODROID XU-4 is pretty awesome. It has a USB3 host, and if you have a USB3 peripheral that you need to talk to, I don\u2019t think there are many (any?) similarly-sized and similarly-priced options at the moment.", "+1 for the XU-4. It can run a surprisingly serious ROS setup (motion planning, depth image processing). I\u2019ve just bought a C2 as well; haven\u2019t had a chance to try it out yet though.", "spmaniato", "You can use the BBB but for me using MoveIt it the CPU ran around 80-90 percent during planning.  Which is not good.  Using the DB410C or RPI3 it runs around 60-70 percent.", "I have not used an Odroid, but have used SolidRun cubox and Radxa rock and TK1.", "Since you mentioned depth image processing: did you try connecting an Asus Xtion to the XU-4? Does it work?", "Nice discussion with interesting answers.", "Just to mention my experience:", "I also used ROS in rpi2 rpi3, bbb and Odroid XU4 successfuly in several", "\nprojects.", "\nI did not used MoveIt but I can tell that it is enough to support some SLAM", "\nsystems if the algorithms parameters are well tuned for efficiency.", "\nSpecifically odroid is quite powerful and it is able to execute this kind", "\nof heavy applications fluently.", "Kind Regards.", "we have used xu4 with turtlebot with asus camera", "I also used ROS in rpi2 rpi3, bbb and Odroid XU4 successfuly in severalprojects.I did not used MoveIt but I can tell that it is enough to support some SLAMsystems if the algorithms parameters are well tuned for efficiency.", ", have you ever tried running the navigation stack (i.e., ", " + ", ") on a BBB by any chance? I\u2019ve found that, even with relaxed parameters, it cannot handle it. But I may be doing something wrong. (It can definitely handle ", " plus the laser scan publisher and other drivers. It\u2019s ", " that takes it over the edge in my experience.)", "I also like the ODROID XU-4 for using USB 3.0. On the one hand \u2018Intel\u00ae RealSense\u2122 Robotic Development Kit\u2019 is now available. It is fantastic for the user using RealSense or other USB 3.0 device (but a little bit expensive than other SBC). How about it?", "\n", "check our\n3d model\nHigh performance and low power consumption features of the latest tablet technology", "\n", "Yeah, we also used it with an asus xtion. We set the depth resolution very low (QVGA or QQVGA) mainly because we didn\u2019t need the extra pixels. Overall It worked quite well though.", "i tried Pine64+ and installed Ros from source on it ros indigo with ubuntu 16.04", "\nit is very good", "\nyou can download image from", "\n", "PINE64-_ROSINDIGO_Ubuntu16.04lts_image - image for pine64+ installed on it ROS package From source and Distro Ubuntu 16..04 lts", "\n", " It\u2019s great to know that it works for you with Indigo on the Pine64.", "Thanks for taking the effort to share however I have to not recommend people grab it. Binary images of unknown provenance are potential security risks.", "If you wouldn\u2019t mind it would be great if you could share your experience bringing up Indigo on the Pine64 with as much info as you can remember in a new thread in this category. Also did you try using the Debian Jessie builds with Kinetic from debian packages?", "i tried Ubuntu 16.04 LTS with indigo and i will make it for  Kinetic also", "\ni tried  Kinetic with it but i stopped to make meta-ros yocto core-image-minimal for raspberry pi 2 and it works now i will upload it soon also and i will build Kinetic with Ubuntu16.04 LTS", "I have Kinetic running on Pine64 under debian.  works great.  Kinetic is still missing some packages that should be synced in two weeks.", "All of the ARM A53 boards perform similarly to me.  I do like the 96Boards form factor the best", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Intel\u00ae Atom\u2122 x5-Z8350 Processor (2M Cache, 1.44 GHz up to 1.92 GHz) CPU with 64 bit architecture; Quad Core", "Intel\u00ae HD 400 Graphics", "1~4G DDR3L", "USB 2.0 and USB 3.0"], "url": "https://discourse.ros.org/t/best-arm-board-for-ros/152"},
{"title": "RMW-microxrcedds implementation", "thread_contents": ["Hi.", "We have been working on an implementation of RMW using eProsima\u2019s Micro XRCE-DDS.", "\nWe made this as part of OFERA project approach to embedded ROS 2.", "In a nutshell, this approach consists on changing middleware implementation (from DDS to DDS-XRCE) and change the user API (using rclc) for cross-compile all the stack for the microcontroller. Currently, some tests have been done using NuttX over STM32.", "\nApart from that NuttX tests, this packages work on a Linux machine without issues and using either RCLCPP or RCLC, see the provided demos to further information.", "The implementation consists of a set of new packages:", "Sample code using rclc and rclcpp implementations. - microROS/micro-ROS-demos", "\n", "\n", "ROS 2 package using Micro XRCE-DDS Agent. Contribute to microROS/micro-ROS-Agent development by creating an account on GitHub.", "\n", "\n", "Type support for Micro XRCE-DDS. Contribute to microROS/rosidl_typesupport_microxrcedds development by creating an account on GitHub.", "\n", "\n", "RMW implementation using Micro XRCE-DDS middleware. - microROS/rmw-microxrcedds", "\n", "And modifications to the rclc.", "\n", "ROS Client Library for the C language. Contribute to microROS/rclc development by creating an account on GitHub.", "\n", "All these packages work with the existing ROS 2 stack (rcl, rmw, typesupport\u2026).", "\nFrom these packages, rmw and typesupport have tests implemented.", "\nAll should compile using standard colcon tools in a ROS 2 environment, colcon build, colcon test.", "\nYou just need to add these repositories to your ROS 2 workspace.", "For testing purposes, I have attached a file with all the required ROS 2 repositories and micro-ROS specific ones.", "\n", "Once you cloned the repositories, these are the commands you may want to run to try it:", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "Furthermore, you can run Micro ROS packages tests with:", "All these packages are work in progress and will be updated and extend API. Currently, only publish/subscribe API has been implemented.", "\nCurrently working on polishing a NuttX build system.", "Great work!", "Could you give a run-down on the major differences between libraries you have produced and their equivalents from the github/ros2 organisation (where there are equivalents)? I\u2019m thinking in particular of microROS/rclc.", "Hi ", ".", "The correspondence of the libraries with existing ones is:", " <=> ", "\n", " <=>  ", " <=> ", "\nNot really sure about this last one. But, It is just a package with some dummy samples and different likewise \u201chello world\u201d  code.", " does not have equivalent or similar in ROS 2.", "Regarding RCLC. This is just a fork with small modifications. We have some issues with this package while using our cross-compiling toolchain and building on windows. The intention of this fork, besides enabling the compilation, is to expand its implementation to include more of the ROS 2 concepts, thinking on services or timers.", "\nHowever, this rclc expansion could be stopped, as a few days ago I found that RCLC is listed on Crystal roadmap, ", ", so ideally we will embrace that future RCLC.", "Anybody knows something about that RCLC on the roadmap?.", "Hopefully, this answers your questions.", "Hi, ", "eProsima\u2019s Micro-XRCE-DDS(version 1.0.1) requires FastRTPS 1.7.0.", "\nHowever, rmw_fastrtps is not currently in version 1.7.0.", "\nIf I use rmw-microxrcedds, can I use Micro-XRCE-DDS version 1.0.1 without problems?", "Hi ", ".", "rmw-microxrcedds depends on Micro XRCE-DDS Client v1.0.1.", "\nmicro-ROS Agent depends on Micro XRCE-DDS Agent v1.01, so the dependency with FastRTPS 1.7.0 is here, on the agent side.", "\nThis force you to use FastRTPS 1.7.0 on your ROS 2 workspace where you want the micro-ROS Agent running.", "You can check that there is an ongoing pull request to upgrade ROS 2 repositories to that version:", "\n", "\n", "From that you can get Dirk\u2019s list of ros2.repos used for testing:", "\n", "Note the following changes in ros2.repos:", "Fast-RTPS", "rmw_fastrtps", "Hopefully, this clarifies a bit on the dependencies.", "Although, on this repository specific to micro-ROS, there are lists of repositories for agent and client side:", "micro-ROS documentation. Contribute to microROS/micro-ROS-doc development by creating an account on GitHub.", "If you have any other question, I will be glad to help.", "Thanks ", ",", "There are some problems (include path etc \u2026) due to different submodule commit information of agent and commit information of FastRTPS release/1.7.0 branch, but I will leave an issue in eProsima\u2019s Github.", "Anyway, the information you gave me widened the possibilities I could! Thank you!", "It\u2019s nice to see work on interfacing microcontrollers with a standard protocol.", "From the current documentation of eProsima\u2019s Micro-XRCE-DDS, only Windows and POSIX APIs (Linux, Nuttx, \u2026) are supported. Are there plans to support the serial protocol on 8bit Arduinos and bare metal STM32?", "Especially the ATmega328 with it\u2019s 32KB flash and 2KB SRAM (that\u2019s what I call an extremely resource constrained environment) would make a nice demonstration of the DDS-XRCE serial protocol.", "Hi ", "Currently, Micro XRCE-DDS supports defining user-custom transports so it would not be difficult to support new platforms, APIs.", "\nRegarding memory footprint and size, Micro XRCE-DDS could be customised with user configurations so you can tune it to fit in smaller platforms. On our minimal test we measured 2.5KB of SRAM usage, but as I mentioned it could be customized per application.", "Currently or lower-end supported-tested platform is the same as for micro-ROS: STM32L1 Discovery. 256KB flash and 32KB of SRAM.", "Though, We haven\u2019t tested it on 8bits platforms but could be an interesting test.", "\nAre you currently using it on such platforms?.", "\nHave you identified any possible failling or improvement point for such platforms?", " I am primarily interested in using micro-ROS on a bare metal STM32F103 for serial communication with a companion PC. But it would be beneficial if the same serial protocol and agent could be reused as a replacement for ", " to communicate with the widely used Arduino platform.", "\nI.e. if micro-ROS is not capable of running on an Arduino (ATmega328), the ROS community would need to look into alternative approaches like porting ", " to ROS2.", " for STM32F103 depending on the available SRAM, you should not find many issues using micro-ROS.", "\nCurrently, we are targeting STM32L152 as our lower-end devices.", "\nWe are still working on some size issues but will get there eventually.", "For Arduino platforms, to be honest, we haven\u2019t tried it on 8Bit microcontrollers but if it has enough SRAM, it might work but need thoughtful testing. Currently, micro-ROS is going to need a bit of size reduction work but vanilla Micro XRCE-DDS middleware should fit into an Arduino.", "Ideally, micro-ROS underlying middleware implementation, Micro XRCE-DDS, could mimic rosserial behaviour, actually, we have improvements on our roadmap in that same direction, so with the aforementioned Micro XRCE-DDS improvements and if we manage to shrink micro-ROS to fit into an Arduino that will be possible.", "great work! sorry i miss this thread, been a long time.", "i understand agent can be working as \u201cbridge\u201d, right?", "\nand one thing i want to confirm, is there any constraints or limitation on microROS side?", "thanks", "Hi ", "i understand agent can be working as \u201cbridge\u201d, right?", "Right, Agent acts on behalf of the clients on the DDS network.", "is there any constraints or limitation on microROS side?", "What do you mean with \u201cmicroROS side\u201d? If you mean client, there is no strong limitation or constrain apart from the aforementioned ones of SRAM usage and the currently supported platforms, but for the latter, the user can easily port to their platform.", "\nDoes this respond to your question? Or you are thinking about another kind of limitation?", "Awesome work. I have been looking for exactly something like this. I am a bit of a noob, but I will try to use this on my STM32F446RET6 and experiment with different sensors.", "\nWill this be eventually used in ROS2 and can it be ported to ROS1? All the official documentations point to the old repos from 2016ish times and were abandoned.", "yes it does, thanks.", "Hi, ", " I am just curious about your use case. Can you share with us further information?", "Hi ", ".", "Currently, it works with ROS 2 as it relays on DDS for the communications. Porting to ROS1 will need a different Agent implementation, we are working on changes on micro XRCE-DDS side in that direction. We will make that public soon.", "\nmicro XRCE-DDS is the underlying middleware implementation, to clarify.", "All the official documentations point to the old repos from 2016ish times and were abandoned.", "I am not sure which repositories you refer here. Can you point me to them?", "I meant projects that put ROS on a microcontroller with an RTOS other than rosserial. This is what I found after googling a bit:", "\n", "\n", "Also the code from bosch comes up often:", "\n", "A lightweight implementation of the ROS middleware on STM32F4Discovery for interfacing embedded and general-purpose software. - bosch-ros-pkg/stm32", "\n", "The only place I could find any information about microROS is this discourse topic.", "Hi ", "i don\u2019t have any solid usecase for now, sorry about that.", "\nbut off the top of my head, it would be like some nodes running DDS, and for really small \u201cIoT\u201d nodes would use DDS XRCE. Does that answer your question?", "thanks,", "Hi All, (microROS related guys)", "just saying since we are not sure to squeeze out of the resource yet.", "would it be good if we Sony integrate ", " into ", "?", "\nor is there anyone already start working on that?", "any comments and ideas will be really appreciated.", "thanks", "Hi ", ".", "would it be good if we Sony integrate ", " into ", "?", "That will be great, actually.", "\nI am not aware of anybody working on that.", "I see you are using NuttX, that\u2019s already supported so Ideally, you won\u2019t find many hurdles. Anyway, If you need support or have any specific questions; we at micro-ROS, are happy to help.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/rmw-microxrcedds-implementation/6727"},
{"title": "ROS2 Embedded SIG meeting #3", "thread_contents": ["Hi all.", "With a bit of delay from the original intention, I am happy to announce that we are planning our third meeting.", "We plan to schedule an online community meeting for either the 3rd or 6th of June 2019 at 17:00 CEST (UTC+2h)", "The poll for choosing between the 3rd and the 6th will be open till the end of May.", "Date poll:", "\n", "\n", "\n", "Like the other meetings, it will take place on Hangouts meet: ", "Hi all.", "These are the meeting details:", " Monday, 3rd June at 17:00 CEST (UTC+2h).", "\n", " Google meet: ", "\n", " ", "Does anybody have issues with the meeting link?", "\nNEW MEETING LINK: ", "Is anybody else having issues with the meeting link? I only get an error message.", "I cannot join\u2026", "I\u00f1igo", " ", "Hi Borja, I cannot log in. Is the code valid?", "\nMax/Renesas", "03 June 2019 17:00 PM, Hangouts Meet.", "New meeting link: ", "eProsima: Borja Outerelo", "Bosch: Ingo L\u00fctkebohle, Ralph Lange, Jan Staschulat", "Acutronic Robotics: I\u00f1igo Muguruza Goenaga", "Renesas: Max Matsushima", "eSOL: Shoji Morita", "Present to the SIG the work is done for the Kobuki demo and why RCL directly and Micro XRCE-DDS Agent official package release.", "Bosch created an rcl demo on top of well-known Turtlebot 2 robot using rmw_microxrcedds and rclc (WIP in a port to rcl):", "Laptop side: ", "Firmware side: ", "Video at ", "On-going works:", "New Micro XRCE-DDS version (1.1.0) to be released this week, implementing DDS-XRCE 1.0 beta2.", "Micro XRCE-DDS Agent package already pushed to be added into ROS2 repos: ", ".", "Additionally, Acutronic also developed a demo as an example of usage of micro-ROS. It publishes temperature data from an embedded board (Olimex) to a Raspberry Pi.", "micro-ROS temperature publisher demonstration based on Olimex STM32-E407 Board - micro-ROS/micro-ROS_temperature_publisher_demo", "Link with the previous point shows the decision document and explain it.", ". Expose the two paths. RCL and RCLCPP.", "Present build system ideas ", "Improved compilation times and compilation experience for the user.", "Working in an automatic process to generate de microcontroller workspace.", "In the next meeting, we will be expecting more updates.", "Testing and feedback from the community will be appreciated.", "Renesas WIP porting GR-ROSE to NuttX.", "eSOL demonstration with GR-ROSE:", "Next steps", "Discuss the first concept for executors on rcl level, link to new Real-Time SIG", "Who is interested in digging into rclcpp on MCUs?", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["03/06/2019", "06/06/2019", "Port from rclc to rcl", "Adding a laser driver", "Rework build system (see below).", "Video: ", "\n", "Repo:", "\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/ros2-embedded-sig-meeting-3/9189"},
{"title": "ROS2 Embedded SIG meeting #4", "thread_contents": ["Hi all,", "The next Embedded SIG meeting will take place next July 29, at 18.00 CEST.", "We have created a pull that will serve as the basis for discussion in the meeting:", "We will use google hang out for the meeting: ", "Great, I would be there on this time.", "thanks,", "In the meeting on July 29th at 4pm UTC / 6pm CEST / 9am PDT, we also plan to discuss about", "widening the scope of the working group (the poll shall serve as a basis for that discussion)", "introducing a regular schedule (e.g., every four weeks on a fixed weekday)", "Regarding technical topics: We will provide an update on the micro-ROS Dashing Diademata support (cf. ", "). Other technical topics are warmly welcome! Let\u2019s use this thread to compile the agenda together.", "There were questions about the scope of the Embedded SIG. Correspondingly, n this meeting, we will put a big emphasis on this topic.", "Therefore, ", ". Also, please again look at the poll: ", " and try to answer it before the meeting.", "If you\u2019re missing something, please comment!", "Thank you for organizing the meeting. I will join it with my colleague Shoji Morita. He will answer the poll this weekend.", "Ishu Goel (my clolleague at Nobleo) and I are also joining for the meeting tonight. I was wondering what the expected duration of the meeting is?", "Usually we aim for 1 hour. This meeting might be a bit unusual and thus could take longer, but I\u2019ve already heard from at least one person that they are even more time-constrained.", "So we\u2019ll probably time-box it (meaning, we\u2019ll close it after 1 hour and postpone any remaining business to the next, which might then happen rather sooner than later).", "We have met yesterday, thanks to everybody who attended and also those who replied to the poll!", "The main result from the meeting is that we have extended the scope to also include more powerful devices (e.g., those running Linux), and that in the future, we will meet regularly: On every 4th Monday of the month. Exact times are to be announced.", "For more details, see the ", " (131.6 KB)", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", "\n", "SIG Scope: Software, Hardware, etc\u2026", "Organisation of the SIG: Schedule of meetings, organizers, \u2026", "Performance analysis status update", "Micro-ROS Update: Dashing Support, hw platform update"], "url": "https://discourse.ros.org/t/ros2-embedded-sig-meeting-4/9959"},
{"title": "ROS 2 Embedded WG meeting #5", "thread_contents": ["Due to many people being on summer holidays, we\u2019re planning to skip the August meeting, and go for 4th Monday in September instead. So, the suggested date is for the next meeting is", "Monday, the 23rd September, 2019", "\nTentative time: 7am UTC (-> 9am MEST, 4pm JST)", "We said that next time should be more Asia-Pacific friendly. For Europe it\u2019s fine as well, but unfortunately, this means it\u2019s 12pm in San Francisco. I would be open to have another meeting later in the day, when Europe and the West Coast overlap. Let me know if you\u2019d be interested in that.", "We expect to have an update on the work that was done on the rclcpp executor by then (23rd of September). I would like to hear if other people are interested in this topic or not, otherwise we could just discuss the findings internally. I can probably provide more details in the weeks leading up to the meeting and if there is a general interest it could be added as an agenda item.", "Hello", "\nI am a Master\u2019s student in Friedrichshafen ,Germany doing my thesis on micro-ROS. I am waiting for more data in tutorials for implementing it on embedded board. When can we have some updated info on the micro-ROS website? Also can you suggest some ideas to do a Software in the loop testing for the micro-ROS build? maybe with gazebo or like the pendulum demo in ROS2.", "appreciate for taking care of this thread.", "\nactually it is national holiday in Japan, but i will be there.", "thanks,", "\nTomoya", " Right now, we have only rcl ported, and we\u2019ve written a custom executor in \u2018C\u2019. This is a far more \u201craw\u201d experience than using rclcpp, but it works. Our ", " is probably the most up-to-date example we currently have.", "Hi all,", "Finally, the 5th meeting of the Embedded WG will take place next ", ".", "\nThe hangouts meet link: ", "Current agenda items:", "We (", " and I) will join this meeting as well. We made a proof of concept of a static executor for the normal ROS2 stack in C++ (latest dashing release). This executor could be useful for people using A-class embedded boards that can run the normal ROS2 stack. The results we got so far can be found here ", ". The package also provides a docker image that contains the LET executor and some source code to test it. If people are only interested in the LET executor source code that we made, this is available here: ", " .", "We are open to answering questions about either of the packages during the meeting. If there are no questions we will just be attendees.", "The missing minutes:", "\n", " (109.1 KB)", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["micro-ROS Slack announcement", "micro-ROS Benchmarking presentation", "rcl LTE executors"], "url": "https://discourse.ros.org/t/ros-2-embedded-wg-meeting-5/10222"},
{"title": "ROS 2 Embedded WG meeting #6", "thread_contents": ["It is time to have a new Embedded WG meeting.", "Monday, the 25th November 2019", "\nTime:  5pm UTC (6pm CET, 9am PST)", "\nMeeting: ", "You can get meeting notifications in your calendar using the meeting invite group ", "We continue with the idea of rotating times so this time we plan a PST friendly schedule.", "\nThis is a tentative time If you are interested in another time or on a second meeting in a more suitable time for you, post it here.", "\nmicro-ROS update.", "Minutes:", "\n", " (52.1 KB)", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/ros-2-embedded-wg-meeting-6/11492"},
{"title": "ROS2 yocto meta layer", "thread_contents": ["Hi all,", "I would like to start a discussion about how to install ROS2 into a yocto based system", "I tried to use the meta-ros layer from this github repository: ", "My setup was:", "I would like to note that this setup does not work well together, mainly because the meta-ros ROS2 recipes are outdated, so probably those two versions are incompatible with eachother.", "My main question would be, are there more people looking into this?", "Hi ", ",", "We did some work, longe time ago, the repo is outdated: ", "Also, AFAIK there are other companies working to have support for this. Check out: ", "Happy to help you if you needed.", "Regards,", "Hi ", ",", "Thank you for your tip on superflore, I was unaware of this: ", "I guess it does more or less the same as my hand-crafted script (which is still broken so far) ", "Regards,", "\nWindel", " hey! The majority of ROS 2 PR\u2019s into superflore are currently merged into master. Currently, superflore is aiming to push to the ros/meta-ros repository.", " could you please link the necessary resources for ", " to give it a test?", "The bmwcarit/meta-ros is targeted to move to ros/meta-ros soon.", "See this discussion:", "\n", "\n", "Hi ", ",", "This is good news! Does this mean that ros/meta-ros will contain a layer for ROS2 dashing? We would like to try this system out on a yocto based platform in combination with a Windows 10 PC. What are the hurdles to be taken for this to work?", "Today I was able to build rclpy based on my own experiments, but it did not yet work due to python3.5 being the python interpreter on the target.", "If there is a test layer available I could give this a try.", "Is superflore also able to generate the layer, but not commit in docket / git? In other words could you run it locally?", "Regards,", "\nWindel", "Does this mean that ros/meta-ros will contain a layer for ROS2 dashing?", "That is the plan as I understand it!", "Is superflore also able to generate the layer, but not commit in docket / git? In other words could you run it locally?", "Yes! you certainly can.", "You can also just repoint superflore to your own fork of ros-meta using", "We released the recipes for Dashing yesterday.", "Please see ", " for instructions.", "Contact us if you need more information.", " is the new maintainer from LG side.", "We released the recipes for Dashing yesterday.", "And Crystal.", "Sorry for beeing nitpicking, but is there any reason not to separate into meta-ros1 and meta-ros2? Usually one ends up using custom meta layers instead of the original ones because they lack configurability and tend to be bloated. In case everything ros version specific is genered dynamically anyway just ignore this comment. It seems like there are ros version specific recipes but no ros version specific images. It seems like it\u2019s not possible to configure w.r.t. ros versions in the layer.conf file. Probably we could add support for Yocto warrior. (End of wishlist) ", " this is great news! I will for sure try it out. One issue I face right away, is that my yocto version is rocko. The branches on the meta-ros layer are for the thud and morty yocto releases. Is there an option to add the rocko branch as well?", "Another question I have is about python versions. Currently rclpy requires python >= 3.6, whereas morty has python3.5. How is this handled?", "Sorry for beeing nitpicking, but is there any reason not to separate into meta-ros1 and meta-ros2", "We could split the ", " repo into ", ", ", ", and ", " layers. I\u2019ll add it to the ", " in the next revision of the ", " page.", "It seems like it\u2019s not possible to configure w.r.t. ros versions in the layer.conf file.", "The ROS distro to be used is configured by the ", " setting in ", ", which is generated by ", " from a ", " file.", "Probably we could add support for Yocto warrior.", "Contributions from the community are always appreciated.", "Is there an option to add the rocko branch as well?", "Contributions from the community are always appreciated.", "Currently rclpy requires python >= 3.6, whereas morty has python3.5. How is this handled?", "It isn\u2019t. We only claim that the images build and pass the ", ". If ", " doesn\u2019t work when using OE ", ", then should we drop ROS 2 support from this branch of ", "?", "Instead of splitting the repository into meta-ros1 and meta-ros2, I propose to use a more monorepo approach, and use a similar scheme as done in meta-openembedded (", "). What is done here, is a single repository with multiple folders. The folders starting with ", " are seperate layers which can be included seperately.", "In the case of ROS, I would propose the following scheme:", "Create those GIT branches:", "Create those subfolders:", "This will allow users to checkout the correct yocto version of the layer. Subsequently, it will allow them to pick the ros distribution they need by including the proper layer.", "This essentially boils down to splitting the ros1 and ros2 recipes, except it is done in the same repository, with the benefit of being able to share a common layer which is compatible at all times.", "Instead of splitting the repository into meta-ros1 and meta-ros2, I propose to use a more monorepo approach, and use a similar scheme as done in meta-openembedded (", ").", "Right, the monorepo approach seems to be better.", "Create those GIT branches:", "Right, this seems to be common Yocto best practice. For completion: The GitHub branches relate to the branch selection of the meta layer in the ", " then. Note: There are also other layers which create directories specific to Yocto versions like e.g. ", ".", "Create those subfolders:", "Is this approach common Yocto best practice as well?", "This essentially boils down to splitting the ros1 and ros2 recipes, except it is done in the same repository, with the benefit of being able to share a common layer which is compatible at all times.", "Probably I don\u2019t understand what you meant. But isn\u2019t it best practice to avoid duplication by definining classes, recipes, etc. either w.r.t. meta-ros-common, meta-ros1 and meta-ros2?", "Some layers separate also w.r.t. purpose of the recipes, e.g. development like in ", " with ", " directory. Is this approach suitable and how does it fit into the overall approach?", "Is this approach common Yocto best practice as well?", "I don\u2019t know, but it makes sense to me ", " . It seems like most layers are contained within a single repository. At least layer folders should start with the ", " prefix. In this case, I would suggest to create several layers within the repository, all starting with ", ".", "Some layers separate also w.r.t. purpose of the recipes, e.g. development like in ", " with ", " directory. Is this approach suitable and how does it fit into the overall approach?", "The splitting of recipes in for example a ", " folder does not enable you to select these recipes only. All recipes from a layer are included into your build. You can only include layers as a whole. The purpose of this folder is clustering of recipes.", "Probably I don\u2019t understand what you meant. But isn\u2019t it best practice to avoid duplication by definining classes, recipes, etc. either w.r.t. meta-ros-common, meta-ros1 and meta-ros2?", "Thats indeed the idea.  Reduce duplication, by having classes defined in ", " as much as possible. ROS2 specific classes, like the ", " bbclass should go in the ", " layer or even in the ", " layer to reduce the amount of layers.", "Hi ", ", A colleague of mine successfully run ROS2 as Yocto layers on top of Raspberry Pi, actually he runs TurtleBot3. Let me check it with him.", "I managed to get basic ", " working! I used the openembedded-core system (not poky) for this to work. I created a new distro, and included the BSP from my vendor, and the ", " layer from ", ". Some dependencies were missing, and the SOABI python configuration was wrong. I had to patch ", " to include the proper SOABI value is inserted into for example ", ". It was ", ", which causes import errors.", "Hi ", ",", "As ", " mentioned, I\u2019ve been able to get meta-ros crystal working on Raspberry Pi. It required some tweaking to get it to build properly with my setup, but I\u2019ve verified that the demos work correctly, and that the embedded board can interface with a PC running ROS. I\u2019ve also ported the firmware and nodes for the Turtlebot 3, along with the Colcon buildtool, into OpenEmbedded layers. We\u2019re hoping to make these layers public soon.", "Hi all,", "Did someone already manage to use the warrior version of yocto with this layer? I would like to use meta-tensorflow with ros, to use machine learning. At the moment this appears not possible due to the fact that meta-tensorflow is only compatible with warrior, and meta-ros only with thud.", "One benefit of the warrior version of yocto is that it include python3.7, instead of python3.5, so the need to include a python3.7 recipe in the meta-ros layer is then resolved.", "Regards,", "\nWindel", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["imx6 board with a custom vendor yocto image + the meta-ros layer described above", "Host setup: windows 10 with the ROS2 dashing diademata distro.", "rocko", "sumo", "thud", "warrior", "meta-ros2-dashing", "meta-ros2-crystal", "meta-ros1-x", "meta-ros-common", "rocko", "sumo", "thud", "warrior", "meta-ros2-dashing", "meta-ros2-crystal", "meta-ros1-x", "meta-ros-common"], "url": "https://discourse.ros.org/t/ros2-yocto-meta-layer/9643"},
{"title": "ROS2 - embeddedRTPS - RTPS for microcontroller", "thread_contents": ["Hi all,", "I kindly would like to make you aware of embeddedRTPS, our open-source (MIT license) and portable implementation of the RTPS protocol for microcontrollers. Our implementation is based on lwIP and FreeRTOS, which is available for many platforms. Discovery mechanisms are implemented (SPDP and SEDP) and embeddedRTPS is interoperable with FastRTPS for reliable and best-effort endpoints.", "We have been able to port embeddedRTPS to Infineon Aurix, STM32 and Xilinx UltraScale+ R5.", "You can find source code and more information on GitHub: ", "Our implementation is far from complete, as many QoS policies are not supported yet. Nevertheless, I hope that embeddedRTPS could be useful for some of you here.", "Best regards", "\nAlex", "Thanks a lot for sharing ", ", that\u2019s a pretty interesting piece of work!", "Could you maybe advice on the following matters?", "Due to license issues, we can only make source code available for the STM32", "I went through the code and dependencies somewhat quickly and while possibly beyond the scope of your project, the following popped: have you considered offering support for embeddedRTPS on top of POSIX/Linux for development? That\u2019d be extremely helpful to many in this community IMHO and would allow comparison against other existing RTPS solutions out there while enhacing its portability to a wide variety of RTOSs.", "I see that among the dependencies, a) there should not be any issues with Micro-CDR to run on Linux, b) there seems to be some ", " on getting lwIP in Linux (thought it\u2019d be nice to get some other networking stacks, e.g. the Linux one or rtnet)", "great work !!!", "Have performed any benchmark of embeddedRTPS that you could share?", "+1 on this, that would be really appreciated.", "Have performed any benchmark of embeddedRTPS that you could share? If so, are such measurement mechanisms available by any chance?", "Its in their paper: ", "Thank you for your feedback so far. I will try to answer most of your questions", "Have performed any benchmark of embeddedRTPS that you could share? If so, are such measurement mechanisms available by any chance?", "I have updated the repository with round-trip-times for two different setups:", "Measurements are obtained by toggling pins upon sending/reception and using a logical analyser for precise timing measurement.", "I went through the code and dependencies somewhat quickly and while possibly beyond the scope of your project, the following popped: have you considered offering support for embeddedRTPS on top of POSIX/Linux for development? That\u2019d be extremely helpful to many in this community IMHO and would allow comparison against other existing RTPS solutions out there while enhacing its portability to a wide variety of RTOSs.", "That is definitely possible and we have followed that approach during the initial implementation. We used lwIP/FreeRTOS on top of Ubuntu, which also allows for unit testing. I will try to provide code for this setup as well, which will require some restructuring of the repositories. I will have to dig through some local branches.", "We noticed that there was no portable and open-source implementation of the RTPS protocol for embedded systems and we needed one in the context of our project (", "). Especially in the context ROS2 and Adaptive AUTOSAR, we wanted microcontrollers that are unable to run Linux to be first-class participants in the communication network. Especially without having to rely on other platforms to tie them into the rest of the system, which is an issue for safety-critical systems (this is the approach for DDS-XRCE).", "I have mentioned some of the limitations in the repository, and I\u2019m sure there are plenty more things to implement and improve. I will release updates to embeddedRTPS if I make bugfixes or add new features, but I don\u2019t have a formal roadmap for now.", "People are of course welcomed to jump in and help with development. For this purpose, it would be best if I first provide the lwip/FreeRTOS layer on Ubuntu as mentioned above together with some unit tests.", "Especially without having to rely on other platforms to tie them into the rest of the system, which is an issue for safety-critical systems (this is the approach for DDS-XRCE).", "good catch, but i think this is really dependent on situation and use cases.", "quick question, rmw_embeddedrtps is going to be ready for ROS2 user?", "thanks,", "Thanks a lot for all the answers above!", "We noticed that there was no portable and open-source implementation of the RTPS protocol for embedded systems and we needed one in the context of our project (", "). Especially in the context ROS2 and Adaptive AUTOSAR, we wanted microcontrollers that are unable to run Linux to be first-class participants in the communication network. Especially without having to rely on other platforms to tie them into the rest of the system, which is an issue for safety-critical systems (this is the approach for DDS-XRCE).", "Interesting! Agreed. I reviewed your article and you cover nicely past work. There was an attempt in the past to run a full DDS implementation in a microcontroller (", "). This included also RTPS and successfully validated interoperability with Desktop versions however configuration was rather complicated, the overall size was quite big for most microcontroller platforms and latencies weren\u2019t close to the ones you list so it sounds like a great improvement.", "I have updated the repository with round-trip-times for two different setups:", "Measurements are obtained by toggling pins upon sending/reception and using a logical analyser for precise timing measurement.", "Out of curiosity, did you try by any chance:", "There\u2019s a big latency difference and I wonder if it\u2019s because of the use of the FastRTPS in your tests. Such test may add interesting bits.", "Please ping me once you release the \u201clwip/FreeRTOS layer on Ubuntu\u201d if possible. Happy to give it a  try and report back on my experience.", "Our implementation is based on lwIP and FreeRTOS, which is available for many platforms.", "As far as I know FreeRTOS is almost identical to SafeRTOS. What\u2019s blocking someone to make this functional safe?", "I\u2019m not familiar with SafeRTOS, but embeddedRTPS only uses some rudimentary features of FreeRTOS (basically thread/mutex functionalities). As long as these functionalities are available in SafeRTOS, it should not be complicated to make embeddedRTPS work on top of SafeRTOS.", "Making the internals of embeddedRTPS functional safe is probably a greater endeavour. I assume you mean compliance with, e.g. MISRA C++? AFAIK there are some free MISRA compliance checkers, but I haven\u2019t had a chance to try them out.", "SafeRTOS is almost API compatible to FreeRTOS. The differences are explained in an ", ". Using SafeRTOS instead of FreeRTOS should Not be a big deal. Of course embeddedRTPS is not compliant to IEC61508-3. But someone could fork and make it compliant. The same way how Apex.AI did with ROS2.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Have performed any benchmark of embeddedRTPS that you could share? If so, are such measurement mechanisms available by any chance?", "In the repo it\u2019s mentioned that", "Could you share maybe a bit more about your goals and objectives with regard embeddedRTPS? Do you have an open roadmap for it? If someone wanted to jump in and help, how would best she/he do it?", "2x Infineon Aurix running embeddedRTPS", "STM32 running embeddedRTPS and Intel NUC running eProsima FastRTPS.", "Could you share maybe a bit more about your goals and objectives with regard embeddedRTPS? Do you have an open roadmap for it? If someone wanted to jump in and help, how would best she/he do it?", "2x Infineon Aurix running embeddedRTPS", "STM32 running embeddedRTPS and Intel NUC running eProsima FastRTPS.", "2x STM32 running embeddedRTPS"], "url": "https://discourse.ros.org/t/ros2-embeddedrtps-rtps-for-microcontroller/12501"},
{"title": "SBS (Smart Battery System) SMBus over USB?", "thread_contents": ["Hi all, this isn\u2019t ", " ROS-related, but I\u2019m trying to integrate a SBS laptop battery into a ROS-based robot I\u2019m building, and it\u2019s been a difficult road. Wondering if anybody here has had any experience with this and could share their perspective.", "I\u2019ve had minor amounts of luck with a few approaches", "I\u2019m hoping to discover a fairly \u201cout of the box\u201d solution to reliably retrieve data from the SMBus. The built-in state of charge measurement, and other metrics, is really attractive from these smart batteries. However, I don\u2019t have a lot of experience implementing these protocols on microcontrollers, so it\u2019s fairly daunting to try and get it working reliably.", "Once the communication is working, I\u2019m looking forward to making a node to talk to the SMBus communication layer and publish BatteryState messages", "For the curious I am currently using the following battery and charger from RRC - they\u2019re a bit pricey but seem really nice", "\n", "4S1P Standard-Batteriepack RRC2054 mit 14.40V/3.45Ah/49.70Wh. H\u00f6chste Performance, weltweit zugelassen, direkt verf\u00fcgbar. Entwicklungskosten & Zeit sparen!", "\n", "\n", "RRC-PMM240 Lademanagement-Modul als integrierte L\u00f6sung zum Laden unserer Standard-Batteriepacks. Mit 240W max. Ausgangsleistung & 82W max. Ladeleistung.", "\n", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Arduino using ", ", which let me speak SMBus (Wire library doesn\u2019t format communication correctly for smbus) - but the library seems to not handle the multi-master situation well and freezes up the communications quickly", "I\u2019ve also tried this little project ", " which also seems to freeze up on me"], "url": "https://discourse.ros.org/t/sbs-smart-battery-system-smbus-over-usb/12836"},
{"title": "About the Embedded category", "thread_contents": ["This category is to discuss methods to bridge to, integrate, and otherwise incorporate embedded systems in the Robot Operating System ( ROS, ", " )", "This category is replacing the old mailing list: ", " as the forum for the ROS SIG Embedded: ", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/about-the-embedded-category/136"}
]