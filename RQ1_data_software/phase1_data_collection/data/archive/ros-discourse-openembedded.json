[
{"title": "Published revision 41 of Superflore OE Recipe Generation Scheme (meta-ros)", "thread_contents": ["This revision contains new milestones for ", " and ", " support, as well as a new milestone for restructuring ", " into sublayers (and a number of other changes).", "The document is ", ". Its change log is ", ". A \u201crich diff\u201d of the changes made since the previous revision is ", ".", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/published-revision-41-of-superflore-oe-recipe-generation-scheme-meta-ros/10472"},
{"title": "Published revision 11 of OpenEmbedded Build Instructions (meta-ros)", "thread_contents": ["This revision announces a forced push to ", " containing numerous changes: in particular, support for building the \u201ccore\u201d portion of ROS 1 ", " and regenerated recipes for ", " based on its 2019-09-05 release.", "The document is ", ". Its change log is ", ". A \u201crich diff\u201d of the changes made since the previous revision is ", ".", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/published-revision-11-of-openembedded-build-instructions-meta-ros/10609"},
{"title": "Published revision 42 of Superflore OE Recipe Generation Scheme (meta-ros)", "thread_contents": ["This revision contains a new milestone for the initial support for ROS 2 ", ", more changes for layer version 3, and has been updated for the recent (forced) push to ", ".", "The document is ", ". Its change log is ", ". A \u201crich diff\u201d of the changes made since the previous revision is ", ".", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/published-revision-42-of-superflore-oe-recipe-generation-scheme-meta-ros/10611"},
{"title": "Published revision 12 of OpenEmbedded Build Instructions (meta-ros)", "thread_contents": ["This revision announces that ", " now supports building images for the TurtleBot 3 Waffle Pi under ROS 1 ", " and for per-device configuration when using webOS OSE images.", "The document is ", ". Its change log is ", ". A \u201crich diff\u201d of the changes made since the previous revision is ", ".", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/published-revision-12-of-openembedded-build-instructions-meta-ros/10730"},
{"title": "Published revision 13 of OpenEmbedded Build Instructions (meta-ros)", "thread_contents": ["This revision announces that ", " now contains a greatly improved re-implementation of the per-device confirmation scheme. It also contains tweaks to the ROS 1 and TurtleBot 3 documentation.", "The document is ", ". Its change log is ", ". A \u201crich diff\u201d of the changes made since the previous revision is ", ".", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/published-revision-13-of-openembedded-build-instructions-meta-ros/10845"},
{"title": "Tagging ros/rosdistro.git", "thread_contents": ["Would it be possible to tag the commit in ", " from which new ROS distro releases are made? This way, we can eventually have ", " use read from it instead of ", " and thereby have the versions of the ROS packages in ", " exactly match those listed in the release announcements (eg, Dashing Update 1: ", ").", "It\u2019s possible to do, but it is another step in the process of doing a release.  It\u2019s also somewhat removed from where the actual packages are, which is why I sort of think ", " is a better place to get the data from.  What\u2019s the actual problem you\u2019ve run into with using ", "?", " ", " any thoughts here?", " accidentally posted before finished.", "\n", " finished my post.", "Would it be possible to tag the commit in ", " from which new ROS distro releases are made?", "I\u2019ve wanted to do this for a while and the main thing that has prevented me from doing so is that it\u2019s not on my release checklist so by the time a sync comes around it slips my mind. Second to that is the fact that I\u2019ve never formally brought it up, just casually. So thanks for taking the time to post.", "I think it would be reasonably good to tag the sync state of the ros/rosdistro repo like we have been doing for the ros2/ros2 repository containing ros2.repos: ", ".", "This would be the responsibility of the ROS release manager colloquially \u201cROSBoss\u201d for a given release and would occur just before starting the \u201csync to main\u201d job. Some care may need to be paid to make sure that if concurrent changes are being made to different rosdistros that the release state doesn\u2019t become muddled but no guarantees should be made about the state of other rosdistros tagged in a release for one specific one.", "Another minor advantage to tagging ros/rosdistro is that this also provides a reasonable snapshot of the rosdep db at the time of the release. This snapshot ", " reliable for reproducing a rosdistro as bloom releases will be run on earlier iterations of the db and can even be run with non-canonical rosdep sources. But it does provide downstream packagers with a reasonable set of waypoints for forensic investigation of rosdep if a superflore run fails due to rosdep resolvers.", "which is why I sort of think ", " is a better place to get the data from.", "We don\u2019t have separate release copies of the rosdistro cache either. So the moment after a sync is performed, if new releases are then merged into the rosdistro repo the rosdistro caches are potentially also divergent from the rosdistro as just synced.", "The rosdistro cache also includes package.xml data for packages in the rosdistro whereas the distribution.yaml does not. Does superflore make use of those cached package.xmls or does it always pull from release repositories?", "We certainly could set this up. It\u2019s extra information, but I\u2019d like to understand a little bit more about your use case to know if I think this is what I\u2019d recommend.", "In our current models the majority of users are using the debian packages, and as such the syncs end up being effectively synchronized batch releases to the community. However the mechanics of it are actually mostly artifacts of the debian build pipeline. The other thing is that the syncs don\u2019t actually represent the state of the rosdistro at the time of the sync. They represent the aggregate results of the buildfarm\u2019s attempted builds. For example if Package Foo has been updated but the updated package fails to build, the sync will have the old package Foo, until such time as a package Bar that Foo depends on invalidates it, then Foo will dissapear. The current release announcements actually come from the debian repository state and not from the rosdistro and reflect the above sort of artifacts, and consequently don\u2019t achieve your goal of having the same state.", "Overall the reason that we have the syncs is that we don\u2019t have a good way to test things prior to a release. We have the prerelease tool, which does catch a lot. But with newer source based builds coming online such as Gentoo and OpenEmbedded they could relatively easily consider running a test build in the pull request for a new release. We\u2019ve also wanted to turn on more comprehensive automated prerelease tests in the rosdistro PRs, but we haven\u2019t had the time or resources to do that and we\u2019ve relied on the maintainers to run the appropriate prerelease tests.", "I think it\u2019s a great idea to work towards having consistency across the different platforms, but I\u2019d rather see us work toward having the rosdistro become more authoritative and deemphasize the results of the syncs. If we can improve our QA process for releases the syncs could even be deprecated.", "Sorry for the delay in responding \u2013 I\u2019ve been on vacation.", "Does superflore make use of those cached package.xmls \u2026?", "Yes.", "The other thing is that the syncs don\u2019t actually represent the state of the rosdistro at the time of the sync.", "By \u201csyncs\u201d, you mean what generates ", ", correct? Is there some commit of rosdistro that exactly matches what\u2019s in a release announcement, even if it\u2019s not HEAD at the time that it\u2019s made?", "The current release announcements actually come from the debian repository state \u2026", "Could a ", " be generated from the debian repository state at the time of the release announcement and preserved? If so, then we could point ", " at it and thereby generate recipes for the exactly the same package versions.", "Could a  ", "  be generated from the debian repository state at the time of the release announcement and preserved?", " Could this be done for the recent releases of ", ", ", " and ", "? Or are there copies of  ", " squirreled away that match the release announcements?", "Could a ", " be generated from the debian repository state at the time of the release announcement and preserved?", " Could this be done for the recent releases of ", " , ", " and ", " ? Or are there copies of ", " squirreled away that match the release announcements?", "We currently do not have the ability to generate a rosdistro cache from the state of the debian repository. It would require a script to scrape the apt repositories for the versions than take the state of the rosdistro file and munge it with all the versions detected in the apt repo.", "As in my above comment I believe that that actual result is not a meaningful state. I would suggest it might be better to simply snapshot the rosdistro at the time of the release. Until we start tagging this can found by just using the closest commit to the sync for finding the state. The state of the apt repos should be a very close approximation of the rosdistro except for things that aren\u2019t building.", "Related, we don\u2019t store any history of the cache. It\u2019s literally a cache, designed to optimize querying of the rosdistro content. Everything inside of it is just a cache of existing content. However it\u2019s relatively costly to collect that information from the federated package ecosystem compared to how often you want to query it which is why we host the cache publicly and have the tools accelerate their queries using the cache.", "If you have any checkout of the rosdistro you can generate the cache for that exact configuration using the command ", ". That\u2019s all we do on the buildfarm with the HEAD of master on ros/rosdistro and then push it to a public host.", "If you have any checkout of the rosdistro you can generate the cache for that exact configuration using the command ", " .", "Somewhat related: this is actually what we do in ", ", where we use it to generate ", " files \u201cfrom the past\u201d to recreate versions of ROS packages as they were at a certain point in time (or actually: close to a certain point in time).", "However it\u2019s relatively costly to collect that information from the federated package ecosystem compared to how often you want to query it which is why we host the cache publicly and have the tools accelerate their queries using the cache.", "Exactly because of this we do have a repository with a nr of ", "s (", "), which will be either used directly, or a starting point to create a new cache.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/tagging-ros-rosdistro-git/9750"},
{"title": "A proposal for a Superflore OE Recipe Generation Scheme", "thread_contents": ["Hello Everybody,", "We at LG are working on extending the work initiated by ", " on ", " in order to automatically generate buildable Bitbake recipes of ROS2 index packages, focusing on the latest ROS 2 and OpenEmbedded/Yocto releases.", "We\u2019ve come up with a ", " and ", " and would like to invite the community to review, contribute to it and provide feedback.", "We are trying it now and converting the ROS 2 recipes used by ", " to the automatically generated ones in order to validate the functionality and the workflow.", "We\u2019ll be more than happy to have a call and discuss everything.", "\n", "\n", "An extended platform release manager for Robot Operating System - lgsvl/superflore", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", " ", " ", " ", " ", " ", "ping ", " and ", "Hello Everybody,", "We\u2019re happy to submit our initial pull requests for extending the ", " OpenEmbedded support.", "We\u2019ve successfully converted the ROS 2 recipes used by ", ", built and executed it well.", "While we continue progressing towards the core and full ROS 2 Crystal build, we\u2019d like to invite you for reviewing the pull requests below:", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "Tagging ", " ", " ", " ", " ", " ", " ", " ", "Thank you Everybody!", "OpenEmbedded is now a Tier 3 supported platform (", ") and the development will proceed further on a new ", " under ROS organization (", ").", "Many thanks to everybody who contributed to reaching this milestone. Cheers!", " Wondering if there\u2019s any progress here for Eloquent?", "Our current plan is to introduce support for ", " after the migration of ", " to layer version 3 and the addition of support for the OE-Core ", " release \u2013 see Milestones 8 -> 10 ", ". Now that we\u2019re back from ROSCon and IROS, we\u2019ll able to make more rapid progress on this and intend to have Eloquent support available when it\u2019s released.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", " We successfully migrated ", " from manually crafted ROS 2 recipes based on Bouncy to automatically generated recipes by superflore and tested it on Rpi3 hardware;", "\n", " We successfully built a basic roscore ROS 2 Crystal image with Yocto 2.6 Thud release and ros2cli works well when doing basic testing under qemu;", "\n", " We\u2019re working on getting a full build of ros-world ROS 2 Crystal + Yocto Thud;", "\n", " We can now see ", " published to the ", ". As soon as its ", "/cache gets populated more we\u2019ll also proceed to build it.", "\n", " We successfully migrated ", " from manually crafted ROS 2 recipes based on Bouncy to automatically generated recipes by SuperFlore and tested it on Rpi3 hardware;", "\n\u25cb ", ": generated recipes for Crystal ROS 2 release + Thud. Working on BeanBirdBot;", "\n", " We successfully built a basic roscore ROS 2 Crystal image with Yocto 2.6 Thud release and ros2cli works well when doing basic testing under qemu;", "\n", " Built (", ") an extended set (~275 packages) from ROS 2 Crystal index on Yocto 2.6 Thud release;", "\n", " We\u2019re working on getting a full (missing ~75) build of ROS 2 Crystal index + Yocto Thud and finalizing some nuances of the recipe generation scheme;", "\n", " As soon as dashing ", "/cache gets populated more we\u2019ll also proceed to build it."], "url": "https://discourse.ros.org/t/a-proposal-for-a-superflore-oe-recipe-generation-scheme/8401"},
{"title": "Published revision 43 of Superflore OE Recipe Generation Scheme (meta-ros)", "thread_contents": ["This revision specifies an updated recipe generation procedure that uses a ", " generated locally from a given commit of ", ". It also contains revisions to the milestones, in particular, adding support for ", " is now to be done before adding support for OE-Core ", ".", "The document is ", ". Its change log is ", ". A \u201crich diff\u201d of the changes made since the previous revision is ", ".", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/published-revision-43-of-superflore-oe-recipe-generation-scheme-meta-ros/11480"},
{"title": "Published revision 14 of OpenEmbedded Build Instructions (meta-ros)", "thread_contents": ["This revision has clarifications to the instructions which should make things clearer for those unfamiliar with OpenEmbedded. It also announces that ", " has been force-pushed and now contains recipes regenerated from the 2019-09-30 release of ", " and the 2019-09-19 release of ", ". In addition, the commits in the branch have been rearranged and squashed, and those that are ", "-related have been dropped.", "The document is ", ". Its change log is ", ". A \u201crich diff\u201d of the changes made since the previous revision is ", ".", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/published-revision-14-of-openembedded-build-instructions-meta-ros/11562"},
{"title": "Published revision 44 of Superflore OE Recipe Generation Scheme (meta-ros)", "thread_contents": ["This revision updates the document for the many changes introduced by ", " layer version 3, the first phase of which will be pushed in the next day or two. It also contains noteworthy changes to the milestones.", "The document is ", ". Its change log is ", ". A diff of the changes made since the previous revision is ", ". (GitHub is unable to render the usual \u201crich diff\u201d of the changes.)", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/published-revision-44-of-superflore-oe-recipe-generation-scheme-meta-ros/11876"},
{"title": "Drop support for Crystal from meta-ros?", "thread_contents": ["With Crystal support ending this month, how would you feel if we dropped support for it as part of the next push to ros/meta-ros (for ", ")? Please respond by the end of 2019-12-05.", "We\u2019ve decided to defer dropping support for Crystal until ", ".", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/drop-support-for-crystal-from-meta-ros/11774"},
{"title": "Published revision 15 of OpenEmbedded Build Instructions (meta-ros Milestone 8 reached)", "thread_contents": ["This revision announces that ", " is now at ", ":", "If you have been building from the ", " branch, please start again from scratch as soon as you can. To allow you to transition, a branch ", " has been created from the previous ", ". Its files will not be changed nor its commits rebased.", "The document is ", ". Its change log is ", ". A \u201crich diff\u201d of the changes made since the previous revision is ", ".", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["The ", " layer has been split into sublayers and the webOS OSE integration subliayer split off into a separate repo ", ".", "\n", " and its configuration files are now in a separately-rooted branch ", ".", "\n", " no longer needs to be set in ", "; however, ", " still must be (until Milestone 12).", "The image names have been simplified.", "It should be easier to use ", " without using ", "."], "url": "https://discourse.ros.org/t/published-revision-15-of-openembedded-build-instructions-meta-ros-milestone-8-reached/11903"},
{"title": "Published revision 45 of Superflore OE Recipe Generation Scheme (meta-ros)", "thread_contents": ["This revision adds generating the ", " recipes for its recent 2019-12-14 release to ", " as well as other minor changes.", "The document is ", ". Its change log is ", ". A \u201crich diff\u201d of the changes made since the previous revision is ", ".", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/published-revision-45-of-superflore-oe-recipe-generation-scheme-meta-ros/12025"},
{"title": "Announcing meta-ros support for Eloquent (Milestone 9)", "thread_contents": ["The recipes for the initial 2019-11-22 release of Eloquent have been added to the ", " and ", " branches of ", " and ", ", completing ", ".", "A new revision 16 of the ", " updated for Eloquent has been published. Its change log is ", ". A \u201crich diff\u201d of the changes made since the previous revision is ", ".", ", with recipes updated for the latest releases of all four of the supported ROS distros, will land shortly.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/announcing-meta-ros-support-for-eloquent-milestone-9/12028"},
{"title": "Announcing meta-ros support for the December 2019 ROS distro releases (Milestone 10)", "thread_contents": ["Support for the December 2019 releases of Melodic, Crystal, Dashing, and Eloquent has been added to the ", " and ", " branches of ", " and ", ", completing ", ".", "A new revision 17 of the ", " updated for this has been published. Its change log is ", ". A \u201crich diff\u201d of the changes made since the previous revision is ", ".", "This will be the last milestone with Crystal support because it has reached its EOL.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/announcing-meta-ros-support-for-the-december-2019-ros-distro-releases-milestone-10/12207"},
{"title": "Meta-ros to be built for Raspberry Pi 4 instead of Raspberry Pi 3", "thread_contents": ["Milestone 11 will introduce support for OpenEmbedded release series newer than ", " and migrate webOS OSE to version 2.x. This means that ", " will be able to be built for Raspberry Pi 4. In order to reduce the number of combinations of  OpenEmbedded release series and ", "-s for which we do builds, we intend to replace building for ", " with building for ", ". However, we won\u2019t do anything that knowing prevents others from building for Raspberry Pi 3.", "If this change will cause you hardship, please respond on this ", " by the end of 2020-01-17.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/meta-ros-to-be-built-for-raspberry-pi-4-instead-of-raspberry-pi-3/12306"},
{"title": "meta-ros2 dashing diademata yocto layer", "thread_contents": ["Hi all,", "I would like to use a meta-ros2 layer with the last ros release. Is somebody aware of an existing implementation?", "For convenience I tried to create a script which generates most of the recipes from the github release page, but I was not able to get it to work yet. ", "Regards,", "\nWindel", "Note that this page might be of interest to the curious reader: ", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/meta-ros2-dashing-diademata-yocto-layer/9642"},
{"title": "Pre-announcement: a new home for meta-ros under ROS organization", "thread_contents": ["Hi Everybody,", "At a ", " by the owner ", " , we\u2019re pre-announcing the intent to move ", " from ", " to the ROS organization under ", ".", "It\u2019ll be maintained based on recipes generated automatically by ", " with manually created metadata as specified ", ".", "Thank you to all that contributed to reaching this milestone!", "Cheers!", "Dear all,", "I started developing and maintaining the OpenEmbedded layer, meta-ros, back in January 2013 [1, 2]. Thanks to the help of various users and co-maintainers, we could provide a solid OpenEmbedded layer over years and slowly increase features and package support in the layer.", "Unfortunately, I could never establish the wider use of meta-ros within the company that supported by me for this work (maybe this will happen in the future, though?), but the maintenance of this layer was always considered worthwhile to be continued based on the fact that it could be done as a small side project work to my daily business activities that I am taking care of. Furthermore, various users stepped up to join maintaining the layer, making the maintenance much more fun than doing it alone and I would like to thank all of those maintainers for their work.", "A year ago, I started creating a branch of the kinetic release and published some early versions of that on my personal branch. However, as it happened, I could not yet finish that branch to meet my personal quality expectations to be considered mergable into the main repository.", "Then around ten months ago, I also started various other small side projects and my attention turned a bit away from meta-ros.", "At last. at some point in the past, the CI setup that a maintainer had setup was torn down and my build setup for the meta-ros layer broke and in my side project here, I really did not find the time of consecutive days to get that back up running again, which finally rendered me incapable of even testing pull requests.", "However, many users have been using and continuing developing meta-ros in various different directions. To consolidate all this work from those users in one common place backed up with a good maintenance and quality assurance, I suggested to move the repository currently in the bmwcarit organisation to the ros organisation.", "I hope that the user base around the OpenEmbedded ROS layer is strong enough for new maintainers meta-ros to step up and to continue to maintain the repositories to fit the users\u2019 expectation.", "Given the current circumstances, I must admit that I need to retire my maintainership on meta-ros, which I simply could do well in the last few months anyway. I hope a group of developers find a good setup to continue the maintenance in the future.", "If I do get back to find some time, I will certainly contribute to meta-ros with what I can  offer on coordination, review, discussion and technical work, e.g., hopefully getting the kinetic branch into a good fully working state and merge it into the main development branches.", "Beyond meta-ros, my other work around Enabling Linux in Safety-critical Applications (Project ELISA, ", ") might eventually also happen to impact the ROS community and I certainly happy to continue to contribute to the ROS community when these chances arise.", "[1] ", "\n[2] ", "Thank you to all of you for your interest and support around meta-ros. We would not been at this point with the current development and activities (including generation with superflore) if you would not have contributed with what you did.", "I hope that the future development will continue to provide good OpenEmbedded support for ROS to all users out there.", "Best regards,", "Lukas", "specified ", "Target of link has moved to ", ".", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/pre-announcement-a-new-home-for-meta-ros-under-ros-organization/9392"},
{"title": "Building meta-ros for Intel Architecture", "thread_contents": ["Hello everyone,", "I\u2019ve recently been working with the meta-ros layer, and I\u2019ve been able to get it up and running on a Raspberry Pi running Wind River Linux. So far, I\u2019ve ported the Turtlebot 3 software, ROS performance tests, and Colcon buildtool to new layers, and these should hopefully be made public soon.", "I have now been attempting to build meta-ros for the AAEON UP board. I\u2019ve been trying to get it working with as few changes to meta-ros as possible, but I\u2019ve run into an issue: while ", "{libdir} is /usr/lib64, which results in a number of build-time issues.", "I was hoping I could see if anyone else has tried to build meta-ros on Intel architecture, and whether you\u2019ve run into this same problem. Clearly there are a number of simple but hacky fixes that could solve this, but I figured it would be a good idea to highlight this issue on a public forum, so that a more robust solution could potentially be integrated into the official meta-ros layer.", "UPDATE:", "\nIt turns out this problem is a little bit more complicated than I originally assumed. Due to the inconsistency in the way different packages handle library inclusions, simply packaging all libraries installed under /usr/lib will not fix the issue. For example, some modules which depend on a library that gets packaged into /usr/lib will only look in /usr/lib64, and vice versa. It looks like the only blanket solution is to manually change the board tune config files to use /usr/lib as the lib directory instead of /usr/lib64. I dislike having to do this, as it could complicate 64-bit vs. 32-bit library distinctions, and may cause system issues. For now, though, this fix will get meta-ros working on x86 architecture.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/building-meta-ros-for-intel-architecture/9826"},
{"title": "Anyone using roslaunch to load remote nodes?", "thread_contents": ["Hi", "Is anyone using roslaunch remote ? If so what are your git status\u2019s ?", "\nI based every thing on Yocto branch ", ".", "When I ecxecute a rosluanch file to launch some nodes on remote machines I get", "there must be some inconsistencies in the checked out versions and branches I am using.", "But what is the right combination of things ?", "\nwhat is working for you ?", "python-pycrypto  is not present in meta-python before  a625494863b70f13ca29b4b0322fbfd5a8a073d9@meta-openembedded", "\nand that commit is not yet present in branch: ", "I prefer to stay on the ", " branch since it\u2019s the current Yocto version.", "\nI tried a checkout of master@meta-openembeded but that spawned a zillion python errors", "BR. Lars Larsen", "here is my git status\u2019s:", "ROSLAUNCH will use the local scripts. At least, everything is working properly, and you are informed of the problem.", "First, try to install pycrypto via pip.", "If pip do not find it for your target, take the source and compile it for your target, make a packet and spread it across your devices.", "thanks, but that is  not an option for me.", "\nI\u2019m working with an embedded system, there is not such thing as installing on the target", "\nI need a complete distributable image on build.", "\n-L", "thanks, but that is  not an option for me.", "\nI\u2019m working with an embedded system, there is not such thing as installing on the target", "\nI need a complete distributable image on build.", "\n-L", "If you think so, then you have to redo your software without pycrypto.", "if you are using Yocto, then, it is a linux distribution. Probably using the Intel Edison. You can cross-compile the library or compile it directly on the Edison.", "If you do not understand what I am telling, then change your board and take a more flexible board like an Odroid or a RPi.", "Hi Alexis", "I understand you,  but - there is NO compiling or installing on the target, all building must be handled by bitbake.", "\nJust grabbing an other board is not an option either, the hardware is a  prerequisite, an Intel Atom PC-board MACHINE=genericx86.", "I\u2019m trying to work out an entire new framework for an existing product, and trying to employ ROS to gain some flexibility, I ran into this problem when experimenting with roslaunch off remote nodes.", "It is roslaunch  that employ  pycrypto when  SSH\u2019ing to the remote node, so I kind\u2019a can\u2019t redo that part.", "I hope there is  a combination of  git commits  that works, or am I stepping in to uncharted land here ? ( I doubt it though !)", "\n-L", "\nPS: as a side note: Using roslaunch with local nodes works like a dream, so maybe I should just drop the  idea of remote launches ?", "Check out UP board for an x86 Atom. It was a solid choice for my ROS", "\nproject.", "Hi Mario", "\nthanks,", "\nI don\u2019t have any freedom in choosing hardware, it has been done elswhere in the organisation, I must make do with what I have", "\n-L", "Remote roslaunch requires both ", " and ", " to be installed in order to use SSH.", "I think the best course of action would be to do something similar to what ", " did in ", " commit, but for ", " and ", ".", "thanks,", "\nthat\u2019s an obvious way,", "\nI will look into that", "\n-L", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["What are you doing ?", "Is it advisable to back port python-pycrypto ?", "or hack my way out of it with a .bb or  .bbappend ?"], "url": "https://discourse.ros.org/t/anyone-using-roslaunch-to-load-remote-nodes/1564"},
{"title": "Published revision 40 of Superflore OE Recipe Generation Scheme (meta-ros)", "thread_contents": ["The document is ", ". Its change log is ", ". A \u201crich diff\u201d of the changes made since the previous revision is ", ".", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/published-revision-40-of-superflore-oe-recipe-generation-scheme-meta-ros/10298"},
{"title": "Published revision 10 of OpenEmbedded Build Instructions (meta-ros)", "thread_contents": ["This revision announces that ", " now contains a fix to enable the Ethernet connection when running webOS OSE images on the B+ model of the Raspberry Pi 3.", "The document is ", ". Its change log is ", ". A \u201crich diff\u201d of the changes made since the previous revision is ", ".", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/published-revision-10-of-openembedded-build-instructions-meta-ros/10360"},
{"title": "NOTICE: meta-ros[morty-draft] is going away on 2019-08-23", "thread_contents": ["See ", ".", "I\u2019ve just deleted it. RIP.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/notice-meta-ros-morty-draft-is-going-away-on-2019-08-23/10323"},
{"title": "Where should ROS packages be located on OpenEmbedded images?", "thread_contents": ["Please add your thoughts to the ", " by 2019-08-30.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/where-should-ros-packages-be-located-on-openembedded-images/10420"},
{"title": "Are there ROS packages whose nature is such that they would never be run on an actual robot?", "thread_contents": ["Please add your thoughts to the ", " by 2019-09-04.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/are-there-ros-packages-whose-nature-is-such-that-they-would-never-be-run-on-an-actual-robot/10470"},
{"title": "Proposed meta-ros support policy for OpenEmbedded release series", "thread_contents": ["In order to keep the number of combinations of ", "-s, ROS distros, and OpenEmbedded release series for which we must do builds to a reasonable value, we propose adopting this support policy for OpenEmbedded release series:", "When a new ROS distro is first released, ", " are created for the OpenEmbedded release series that have a Support Level of ", " as shown on ", ".", "When an OpenEmbedded release series moves to the ", " Support Level, ", " are dropped, except for those for ROS distro-s which are LTS, eg, Dashing, Melodic.", "The OpenEmbedded release series used by the build of webOS OSE currently being used is always supported, even if it no longer has a Support Level of ", ", ie, ", " always exist. When webOS OSE moves to a new OpenEmbedded release series, if its previous OpenEmbedded release series does not have a Support Level of ", ", {", " are dropped.", "When a ROS distro reaches its EOL, ", " and its ", " sublayer are dropped.", "Please comment by the end of 2020-01-17 on this ", ".", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/proposed-meta-ros-support-policy-for-openembedded-release-series/12307"},
{"title": "Is the rebasing of meta-ros branches causing you grief?", "thread_contents": ["Our current plan is to stop rebasing ", " and ", " (and to rename them ", " and ", ") as part of ", ". However, if rebasing them is causing members of the community to curse us, it would behoove us to do it sooner. What do you think? Please respond on the ", " by 2019-01-24 00:00 UTC.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/is-the-rebasing-of-meta-ros-branches-causing-you-grief/12412"},
{"title": "Published revision 46 of Superflore OE Recipe Generation Scheme (meta-ros)", "thread_contents": ["This revision adds support for OpenEmbedded release series ", " and not yet released ", " to the support for ", " already part of ", ". It also announces that the support policies for OpenEmbedded release series and ", "-s have been codified ", " and various other changes, including a placeholder milestone for ROS 2 ", " support.", "The document is ", ". Its change log is ", ". A \u201crich diff\u201d of the changes made since the previous revision is ", ".", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/published-revision-46-of-superflore-oe-recipe-generation-scheme-meta-ros/12658"},
{"title": "Announcing meta-ros support for webOS OSE 2.2 and OpenEmbedded release series warrior, zeus, and dunfell (Milestone 11)", "thread_contents": ["Support for webOS OSE 2.2 and the OpenEmbedded release series ", " and ", ", as well as the under development ", ", has been pushed to ", ", completing ", ".", "A new revision 18 of the ", " updated for this has been published. Its change log is ", ". A \u201crich diff\u201d of the changes made since the previous revision is ", ".", "Hi great work. I will test it with poky soon.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/announcing-meta-ros-support-for-webos-ose-2-2-and-openembedded-release-series-warrior-zeus-and-dunfell-milestone-11/12689"},
{"title": "About the OpenEmbedded category", "thread_contents": ["The goal of the ROS Layer for OpenEmbedded Linux is to create a layer to cross-compile ROS and set up a Linux & ROS infrastructure for various embedded systems. In the end, setting up a ROS infrastructure for an embedded system should be as easy as currently for a Ubuntu system.", "In collaboration with the ROS core developers, our secondary goal is to improve the ROS build system and the ROS packages, such that they can be cross-compiled without further ado.", "Furthermore, this code could serve as a good starting point for others that are interested in packaging ROS, e.g., for Gentoo, as OpenEmbedded Linux and Gentoo are related to some extent.", "\nThe project is open-source and available at ", ". Feedback and contributions of any kind are welcome.", "This is a migration of the ", " For earlier discussions please see those archives.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/about-the-openembedded-category/666"}
{"title": "Meta-ros forwarding setup", "thread_contents": ["If everything works correctly this will be the first message forwarded to meta-ros from this forum. Following up ", ".", "I\u2019ve setup forwarding from ", " to the old mailing list. Please join ongoing discussions ", ".", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/meta-ros-forwarding-setup/685"},
{"title": "A Warm Welcome to the OpenEmbedded Category on discourse.ros.org", "thread_contents": ["Dear meta-ros users,", "Tully Foote has successfully integrated the meta-ros mailing list previously hosted on google groups into the ", " discussion forum, and we will continue to discuss topics related to meta-ros on ", ".", "If you still receive this post over the google groups meta-ros mailing list, please take one minute to register on ", " and join the discussion on the OpenEmbedded category.", "At some time within the next few months, around end of this year, we will stop forwarding ", " posts to the meta-ros google groups mailing list. So join now, rather than miss discussions later ", "Best regards,", "Lukas", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/a-warm-welcome-to-the-openembedded-category-on-discourse-ros-org/728"},
{"title": "Support for Robots in meta-ros", "thread_contents": ["Dear meta-ros users,", "in the past, I have been contacted in private if meta-ros could include the kobuki_base packages.", "So far, there were no recipes for specific robots in meta-ros, such as the kobuki, turtlebot or PR2, mostly because I do not have any robot at my desk. However, I could spend some time creating the recipes. If there are no major issues to cross-compile the package, the recipes should be easy and quick to get done.", "Hence before getting started on that activity, I have two questions:", "We will of course start with the recipes for the robot that is most useful for the majority of the meta-ros users.", "Please let us know here, so that we do not duplicate our efforts.", "Best regards,", "Lukas", "Hi Lukas,", "I think it is a good idea to include robots, specially those used by many people as the Turtlebot. In the case of my company, we did a workaround to avoid writing recipes for the Turtlebot as we just wanted to do some quick tests.Having these would have been useful.", "However, I am not sure whether it should be included in the same meta-ros repository. On one side I think it makes sense, to avoid further synchronization problems, but I do not see any hardware-specific recipe in the repo.", "Best,", "\nJavier V. Gomez", "Dear Javier,", "thanks for your reply. From your post, I am confirmed that recipes for the turtlebot are a good starting point. Let\u2019s see what others think.", "To your question whether to include the recipes in the same meta-ros repository. I would stay with the pragmatic solution to include the recipes in the repository as long as they do not strictly require or modify any global changes in layer\u2019s configuration (which I currently do not foresee).", "\nIf all recipes are in one repository, it simplifies the configuration management compared to maintaining several repositories that depend on each other. The meta-ros community is not so large after all. Maintaining all content in one repository would not make the content and number of changes so large that we cannot handle the maintenance work efficiently.", "Best regards,", "Lukas", "Dear all, dear Javier,", "If you have been following the current development on the master branch of meta-ros, you might have noticed that we now finally provide a number of recipes for the kobuki robot.", "We provide recipes for 103 packages, including all packages from ecl_tools, yujin_ocs, rocon, kobuki_core and kobuki.", "We tested that all of those packages build and I checked that all runtime dependencies are declared as defined in the package.xml. However, we never checked if all of those tools and packages run on a cross-compiled image. So, we ask the potential users to report if there are any further issues that we are not aware of.", "As my spare time admits, I will continue to work on providing all recipes for turtlebot. A work-in-progress state is provided on the wip-turtlebot branch in my personal meta-ros fork. The currently most challenging part is to get openni2-camera cross-compiling. The speed of progress on that overall activity will however be largely driven by the number of user requests for turtlebot. Currently, some meta-ros users and contributors are asking for assistance on other interesting topics for meta-ros. So, progress on turtlebot support is currently not on my personal priority list.", "Best regards,", "Lukas", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Are you interested to have support for a specific robot?", "Have you already developed some recipes for some robot?"], "url": "https://discourse.ros.org/t/support-for-robots-in-meta-ros/729"},
{"title": "Cross compile with toolchain file", "thread_contents": ["Hello,", "\nI\u2019m using meta-ros which works great !", "\nThe next step for me is to cross compile my catkin_ws without bitbake. I want to use the toolchain.cmake file and cross compile my complete workspace. Has anyone did this before?", "Best regards Hunk", "Hi Hunk!", "If you succeed with cross-compiling your catkin_ws please drop a line to this thread about your experience.", "BR,", "\nDima", "Hi Hunk, hi Dima,", "The bitbake cross-compilation tool provides an option to build a complete SDK for cross-compiling. For this to work, the setup in meta-ros must be changed in a few places, so that the SDK support also works with the catkin build tool; this is however some non-trivial engineering work. I believe some users, namely dominiquehunziker (that is his github name), had this working in the past, but we did not merge that in mainline repository. Currently, there is some effort by Minipada to revive that effort, update the past state and try to merge this into the mainline repository. It will however be still quite some work and needs some time. The current pull request ", " points to the latest discussion. The title should not confuse you, being able to compile on the target is a simpler task than the SDK support, but when we changed meta-ros so that we can compile on the target, we hope that we are step closer to the SDK support as well.", "Of course, any help and assistence is highly appreciated, even if it just testing it on other machines and with another slightly different setup.", "Lukas", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/cross-compile-with-toolchain-file/1781"},
{"title": "Meta-ros Kinetic runtime issue with roscore", "thread_contents": ["Hey everyone,", "I\u2019m adding ros-meta to a Yocto/OpenEmbedded build of a Linux distribution for a custom Xilinx Zynq based camera board and it looks like I\u2019m running into some runtime dependency issues when running roscore.", "I\u2019m using the experimental kinetic distribution of ros-meta at:", "My bblayers.conf file looks as follows:", "Added the following line to by ", " file:", "Used the following command to create my own image.", "Build completed without any errors.  Created an SD card including the kernel", "\nand file system that includes ROS.", "On the booted Xilinx Zynq based system running the Linux environment I just built, I\u2019m configuring ROS Kinetic with the", "\nfollowing:", "I have the following problems running roscore.", "From what I can find on ROS Answers, it looks like defusedxml was as a fairly recent dependency added to ROS Kinetic.  I assume this dependency probably didn\u2019t make it into the meta-ros dependencies.  Any suggestions on how I go about adding it to the Yocto/OpenEmbedded build of the system?", "Thanks,", "Mike", "Hey Mike,", "Nice to hear that the \u201ccustom Xilinx Zynq based board\u201d is still going ", "Defusedxml is a python package that was added to facilitate adding security to ROS, as it provides protection against a bunch of different XML attacks. This is part of the ", " effort to add some security and hardening to ROS.", "Anyway to get roscore to run, have you tried adding ", " as a dependency here: ", "I have only done some looking around at OpenEmbeded stuff, and never got around to actually using it so I am not sure if this is the \u2018right\u2019 way to fix this, or if it would even work.", "Out of curiosity what is the size of the image that comes out the build process? I would think it would quite small relative to a Ubuntu image.", "Rohan", "Hey Rohan,", "I resolved this issue by adding the following recipe for defusedxml to:", "The contents of the recipe is:", "Then adding a dependency to roslaunch_1.12.2.bb for this python module.", "The following commit is a complete fix.", "The resulting image file for the entire Linux OS including roscore is about 47MB in size which is considerably smaller than an Ubuntu image.  However, this is for the absolute minimum user tools and ROS install.", "Mike", "Hi Mike,", "I am interested in doing something similar using a Microzed, but honestly don\u2019t know where to even start, can you point me to some good resources, so I might be able to do the same?", "Thanks!", "Hi Qnetjoe,", "I would propose that you start as follows:", "Get an understanding of yocto and bitbake following the Yocto Quick Start:", "\n", "\nAfter stepping through that document, you should be able to build and start a small Linux image in the qemu emulator.", "Build and run an image with ROS for the qemu emulator following the instructions at:", "\n", "Build and run a minimal image for the Microzed board, using the microzed configuration provided", "\nin the meta-xilinx layer at:", "\n", "\n", "\nBy the way, I found this by searching on ", ",", "\nand it quickly linked me to:", "\n", "Combine what you learned in Step 2 and Step 3, and build an image", "\nwith ROS for the Microzed board. When combining, you will probably need", "\nto choose the build configuration that is a compromise between the build", "\nconfigurations you used in step 2 and in step 3. This will then probably need", "\ncertain adjustments in meta-ros.", "Here some further advice:", "Get a build machine with a lot of CPU power, RAM and a SSD disk to", "\nbuild images much quicker. You will not get away with some laptop", "\nand some Linux virtual machine. when bitbaking the images.", "Report issues you encounter on the meta-ros github issue tracker. Please", "\nalways provide at least the build configuration you use, and possibly even", "\nthe bblayers.conf file, so that others can reproduce the reported issue.", "I hope this helps.", "Lukas", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/meta-ros-kinetic-runtime-issue-with-roscore/1407"},
{"title": "Using ROS in commercial OpenEmbedded environment?", "thread_contents": ["Can someone suggest resources (web links, blogs, books, etc\u2026) that discuss the implications of running ROS in a commercial product.  Specifically, a commercial product running a Yocto/OpenEmbedded derived custom Linux distribution.  Although, a ROS product based on a commercial distribution of Linux would likely have all the same issues.", "I realize there is a whole spectrum of issues that might be involved.  A few of which might be: handling ROS version issues, ROS system configuration, open source license management and compliance, build and testing management, and then the more nitty-gritty stuff that might be tweaked in packages to better support commercial use where customers expect things to just work without a lot of tweaking on their own.", "I have a feeling a lot of the service and industrial robots that are using ROS are solving these types of issues on their own, but I am wondering if there is a watering hole on the web where people concerned with these issues gather to share knowledge and best practices so ROS support from a variety vendors looks more unified from an end-customers standpoint.", "Thanks,", "Mike", "Hi Mike!", "I\u2019m neither ROS nor OpenEmbedded expert, but I\u2019ve spent some time working with both projects and my gut feeling is that there\u2019s maybe just a couple of companies using ROS on top of OpenEmbedded in production internally at the moment. I\u2019m pretty sure nobody builds real commercial products or something that goes beyond a research projects. And I know what it takes to build a product (In my previous life I worked on the integration system used to build Nokia N9).", "I guess the best way to find out what people are concerned about is to have a look at the programs of ROS (and ROS Industrial) conferences. You\u2019ll see that the majority of ROS users are researchers happy with Ubuntu as a baseline for ROS.", "BR,", "\nDmitry", " - this is something that I am interested in as well.", "Dmitry, thanks for the response.", "For good historical reasons, ROS seems strongly focused around Ubuntu as a base platform, but Ubuntu isn\u2019t really suitable platform for actual embedded products intended to work in a ROS ecosystem.  Its akin to placing an aircraft carrier nuclear power plant into a speed boat.  I\u2019m very happy and grateful to see that others had already blazed the trail on getting ROS working over OpenEmbedded as it at least sets a direction and makes the integration possible, even if it is not easy.", "I\u2019m just at the beginning of this process, but I\u2019ll be happy to share my experience with others as our development progresses on a commercial product based on ROS running on an OpenEmbedded-based custom Linux.  Hopefully I\u2019ll find others on a similar journey with which to compare notes.", "Mike", " I can not say much about ROS on OpenEmbedded. But can give you some advice on OpenEmbedded/Yocto for product development. We are using Openembedded for about 4 years for our camera firmware development. I kow none other system which provides you the services OpenEmbedded do.", "\nWe do automatic builds based on Jenkins and create full software update packages bundled with our application software.", "Best,", "\nChristian", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/using-ros-in-commercial-openembedded-environment/1428"},
{"title": "New version of meta-ros for kinetic distribution", "thread_contents": ["Dear all,", "Besides the more commonly tested and maintained (one could say ", ")  master branch of meta-ros for the ROS indigo distribution on ", ", I keep an experimental local branch for the kinetic distribution. I have rebased it to the current master, updated and adjusted the recipes to get most recipes working again.", "It is now published on my local github repository at:", "I have tested to build it, and currently, most packages build without issues. The packages that fail on kinetic are tracked in the meta-ros issue tracker.", "Feel free to use it if you like to work with the kinetic distribution.", "However, please remember that this is an experimental local branch:", "\nFirst, do not expect that this branch has been tested with many different build configurations, so possibly, your build configuration could cause build failure we are unaware of. Second, this branch is work in progress, and hence, the commits of this branch will be rebased and modified, and the git history will change in a non-monotonic way in the future.", "\nNevertheless, go ahead and try this branch and report issues if you encounter them.", "I already plan to merge this kinetic branch (or a branch that has evolved from this one) into the main repository, and maintain two branches for indigo and kinetic. Before I do this, there are still a few open topics that I would like to have working on in the current master branch of meta-ros before we split the meta-ros repository is two branches.", "Best regards,", "Lukas", "Great stuff ", ", i just posted quickly about ", ". Let me know if you\u2019re interested in contributing or have feedback about it.", "Cheers,", "Hi!", "I am planning to set up a system with yocto and ros kinetic. I will probably need to add some recipes, (i.e. socketcan_interface), which I would like to share, if they meet quality requirements and are welcome. Is ", " the right starting point? Or will there be a merge back to the bmwcarit repo in the ", " future?! Any other hints?!", "Thanks,", "Matthias", "Hi Matthias,", "Yes, you can go ahead and open pull requests (as I believe you already did); I will review, test and merge them there. As I was kind of indicatingin my first mail, I am maintaining the kinetic branch in parallel until more of less these two issues are solved:", "all the build issues that are still open with the kinetic branch are resolved. That is ", " & ", " on ", ". It might just be an hour of work looking at those recipes, but I tried to resolve it in ten minutes and then gave up and deferred it to a point where I would more time or more users asking for it.", "the pull request ", " to meta-ros is fully tested with the different supported scenarios, we have scripts in place that can test the features that ", " provides continuously in our CI. We then can finally merge it in the master branch.", "I think once we have got those two open issues solved, we can actually split the current development in two branches, an indigo branch and a kinetic branch, and maintain both of them.", "Both issues are not really difficult (at least I believe so), but they might require a week of work on that and so far no one has stepped up to do that and I am unfortunately too busy to find a week of time to do focussed work on meta-ros.", "In the past, I was also concerned about the maintenance effort of two branches, as we did not have a CI in place, Fortunately, ", " has built a great CI solution for meta-ros and now testing pull requests to the branches is much easier and fully automatic. So, this issue I was concerned about is already solved and we can actually maintain two branches with reasonable effort now.", "Best regards,", "Lukas", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/new-version-of-meta-ros-for-kinetic-distribution/2833"},
{"title": "Distribution layers for ROS", "thread_contents": ["Which distribution layers", "\ndo you guys use from the ", "? Which could work with a BeagleBone Black and ROS1? Which could work for the BBB and ROS2? Thanks in advance", "Here\u2019s the relevant part of my ", ":", "meta-ros is tested against the master branch of OE-core, but should work with the latest release too. I guess BBB is supported out of the box. In Ostro [1] we didn\u2019t use any additional BSP layer for BBB, but did have some additional kernel patches. Check this layer [2]", "For ROS2 you may have a look at this pull request to meta-ros [3] and check this topic ", ".", "[1] ", "\n[2] ", "\n[3] ", " Thanks for the hint. I did not know about ostro-os before. Seems fun. Hopefully I find some time to play around with it. I followed the discussion about the ROS2 meta layer. Has someone used it with an open source meta-layer already in general, not specific to the BeagleBone Black? (I am interested in the BeagleBone Black, RaspberryPi, etc. because it is easier to get people involved with these boards.)", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/distribution-layers-for-ros/3355"},
{"title": "ROS 2 Layer for OpenEmbedded Linux", "thread_contents": ["Happy to announce that we\u2019ve open sourced a set of recipes to get ROS 2 for OpenEmbedded Linux.", "Code is available at ", " and released under GPLv3.", "This awesome! Any particular reason for choosing GPLv3 instead of MIT? Perhaps picking the latter would just make it easier to get it integrated into meta-ros (which is licensed as MIT, much like OpenEmbedded\u2019s core recipes). Also, given that these are build recipes, maybe there\u2019s not much of benefit in using GPLv3.", "Thanks Victor (and Erle)!", "Hey ", "!", "We don\u2019t have any particular concern about changing the license.", "We\u2019d like to spread its use and would love to get contributions, if you and the community believe that changing to MIT would benefit those purposes\u2026 we hear you. Certainly, matching meta-ros original license makes sense as well.", "Let\u2019s see what others think about it.", "Thanks for your honest response and for considering whether to change or not the license. I don\u2019t think there\u2019s anything wrong with GPLv3 per se, but given that most OpenEmbedded layers (meta-beagleboard, openembedded-core, meta-96boards, etc.) have very liberal licenses (MIT/X11, BSD) I wondered if there was an actual reason for picking GPLv3.", "Hi Victor,", "here just two comments:", "Did you already have a look at the content of this pull request ", "? Is it done identical? Or can we merge those two developments to a best solution of those two in your repository?", "Concerning the license, I chose MIT just as most layers did use MIT when I started meta-ros. I think more important than the license of the metadata, is actually this further important remark on the license: \u201cAll metadata is MIT licensed unless otherwise stated. Source code included in tree for individual recipes is under the LICENSE stated in each recipe (.bb file) unless otherwise stated.\u201d This allows others to take your patch files and contribute and merge them back into the main development without further legal considerations.", "Best regards,", "Lukas", "Hello ", ",", "Did you already have a look at the content of this pull request ", "? Is it done identical?", "First time looking at it. Wish this would\u2019ve been available back in May when we started with it ", " .", "\nFrom quick code to the commits, i can see that the PR you refer to is from August. ", " started however in May. I asked ", " to review the code and here\u2019s the feedback provided:", "Main differences are:", "Or can we merge those two developments to a best solution of those two in your repository?", "I wouldn\u2019t say they are identical though but we\u2019re happy to explore this in more detail. We\u2019ll create another branch at ", " exploring the differences. Evaluate both and push the one that gives best results to our master branch. ", " I\u2019m happy giving you maintainer rights to ", ".", "License-wise:", "I wondered if there was an actual reason for picking GPLv3.", "From my (humble) experience with licensing, private companies, for obvious reasons, tend to contribute back more when code is licensed under GPLv3. (Speaking as part of a private company) I\u2019d expect meta-ros2 to be rather popular for quite a few private companies so the license was placed with that in mind.", "\nThat said, again, happy reconsidering the license if it creates a hurdle.", "Hi Victor,", "I see you\u2019ve created the ", " branch with my version of ", ". How was the evaluation? Are you still working on the layer?", "Regarding the license\u2026 Potential users asking me about my plans on ", " because they prefer it over meta-ros2 and the more permissive license is what seems to be the most appealing thing to them.", "I see you\u2019ve created the develop-ament branch with my version of ament.bbclass. How was the evaluation? Are you still working on the layer?", " is probably the best person to answer this.", "Regarding the license\u2026 Potential users asking me about my plans on ", " because they prefer it over meta-ros2 and the more permissive license is what seems to be the most appealing thing to them.", "As pointed out before, we\u2019re open to reconsider the license if that\u2019s going to encourage third parties to contribute. Can you connect me with those potential users so that we can take it into account and discuss it with them? Feel free to make the connection through ", ".", "Hi ", " and ", "I see you\u2019ve created the develop-ament branch with my version of ament.bbclass. How was the evaluation? Are you still working on the layer?", "I didn\u2019t spend too much time with that project. But, actually I have some changes that are not pushed to that branch. Its true that meta-ros2 needs some work. I have pending to update meta-ros2 to the latest release of ros2, that a good moment to test the new ", ".", "Also I need to review the dependencies between recipes, I am missing some of them.", "During the next weeks I will resume the project.", "Regards.", " Ok, replied by email.", " That\u2019s a good news!", "I\u2019d also suggest to clean up the repo a bit and to drop unused code and files like ", " or ", ".", "I\u2019d also suggest to clean up the repo a bit and to drop unused code and files like .", " or ament_no.", "My bad, time ago I didn\u2019t realize that the ", " was incomplete.", "I will take a cup of coffee and fix all those errors ", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", "\n", "The ament.bbclass ", " Our ament.bbclass depends on the system\u2019s ament which calls to cmake (I was expecting to change that) and the ", "\u2019s depends directly on cmake and meta-ros classes.", "The rest seems rather similar."], "url": "https://discourse.ros.org/t/ros-2-layer-for-openembedded-linux/2835"},
{"title": "Catkin_make error building package on machine after image install", "thread_contents": ["Hey all,", "I am trying to build a package on the machine after I generated the image. I wanted to have it build with bitbake but had issues with external dependencies not building properly with BitBake so they have to be installed on the machine.", "catkin_make fails with error:", "running ", " results in:", "I\u2019m sure I\u2019m missing something important related to installing python-empy but from what I can see with the recipes it should be installed with the packagegroup-ros-comm.", "Any help is appreciated.", "I know that ", " recently ran into something similar here: ", " you might want to follow up there.", "Hi,", "Building further ROS packages on the target has not been implemented in meta-ros yet. These two issues point out the problems that some users had that tried it in the past:", "\n", "\n", "\n", "Since then, no one has actually tried to do this, but we have been working on proper SDK support (nativesdk support in the bitbake tool chain), and the patches of this pull request below might help for your use case as well:", "I actually just published my development branch of that pull request that I adjusted and rebased to the current master:", "I did some minimal testing of that branch so far, but I don\u2019t know if it resolves your use case.", "Let us know if these patches already resolve the issue for you, or which further problem you encounter. I actually don\u2019t know if building ROS packages on the target is easy to get working or involves a lot of patching of the catkin build tool.", "Lukas", " I fixed the empy issue by modiftying the ", " exported in ", ". You can see that change ", ", ", ",", "Thank you for your replies. I will read into your suggestions further and let you know how it goes. I am currently working on a workaround to allow me to build the package using bitbake instead of on target. If it does not go well I will be swinging back to this method.", "Thank you,", "\nJoe", "I am currently working on a workaround to allow me to build the package using bitbake instead of on target.", "If this package you\u2019re compiling has been released, there\u2019s a good chance you can use ", " to generate the recipe. I\u2019ve been working on automating the Open Embedded releases so they can parallel the Gentoo releases.", "While things are not quite there, they are close. I\u2019m not an expert, so any ideas as to what is blocking me would be great. You can find my current status on the issues for ", " of ", ".", "The end package I am trying to build is not released. I am very much in the beginning of working with Open Embedded so I would not be of much help, but I am looking to get more involved in general. As for my progress, if it were not for the use of [OpenEXR v2.2.0|https://github.com/openexr/openexr] and [OpenVDB v2.1.0 |https://github.com/dreamworksanimation/openvdb] the package would build with less trouble. I did manage to get the workaround to work and the package built using BitBake. I will be investigating how to clean up the current build process, but for now this will do for the intended demo.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/catkin-make-error-building-package-on-machine-after-image-install/3549"},
{"title": "Superflore & Open Embedded", "thread_contents": ["Hey!", "I\u2019ve been working on getting ", " to generate bitbake recipes for OpenEmbedded.", "This will allow for automated installer generations for an entire ROS distribution (given that the dependencies exist).", "Currently, you can see the experimental ", " generation on my fork of ", ".", "There\u2019s a few issues at the moment, however. I can\u2019t seem to get the ", " directories to install in the image, nor can I get the ", " folder from ROS root to be present in the image.", "I\u2019m sure this is just a variable I failed to set, but all input is welcome!", "Another question I\u2019d like some feedback for is the location of different distributions. My current opinion is to put each ROS distro on its own branch, so as to avoid collision of recipes. If anybody has any other suggestions here, please let me know!", "I\u2019ll post back with a ", "-importable repos file so you can try and replicate the image I\u2019ve been working on easily.", "Hi,", "thank you for that contribution.", "First, some general remarks to your superflore tool:", "You should have a look at these three scripts that already can generate recipes:", "I actually never tried to use these scripts to generate recipe files, but from my review, I believe they generally work but with certain limiting assumptions of the repository structure, and probably do a good job if you are willing to tweak the generated recipes a bit more with some manual effort.", "Furthermore, the pull request ", " is providing a script for updating recipes. In the future, once the pull request is merged, we will continue to use and extend that script for the maintenance activities.", "Your remark \u201cgiven that the dependencies exist\u201d actually points out the current blocker for most recipe generation: Certain (non-ROS packaged) dependencies have no recipes yet, and they are sometimes quite difficult to write. Here just two examples:", "From my experience maintaining meta-ros for five years by now, creating the recipe files for meta-ros might be some manual (repetitive) work and it seems to be an issue at first, but in the long perspective, creating the recipe is just a simple one-time effort anyway whereas often the time-consuming activities are to find when recipes break due to upstream changes in meta-oe and meta-openembedded. For that, you just need to dig into the issue, no tool can help you there.", "Of course, I still hope that superflore helps us to include more recipes in the layer and can be useful for the maintenance of recipe version updates when the distribution is sync-ed once a month.", "Now, second to your specific questions:", "The ros.bbclass (", "), lines 30 to 60, state what is packaged from the build/install in which package, e.g., the main package, the dev package etc. It might be that you need to adjust the paths after you modified the catkin tool. To have the cmake and include folder in the image, you probably need to include the dev package in the image recipe.", "I also believe it is best to have one branch for each ROS distro in meta-ros. I would like to first merge the currently open pull requests, especially the update-script and the sdk support and then we can split it into three branches, indigo, kinetic, lunar, if we get all the recipes work in these branches.", "Lukas", "You should have a look at these three scripts that already can generate recipes:", "I actually used these scripts when I wrote the ", ".", "Certain (non-ROS packaged) dependencies have no recipes yet, and they are sometimes quite difficult to write.", "It would also be nice to get ", " keys to resolve these dependencies. As for dependencies that don\u2019t already exist, I run into them from time to time with Gentoo (though most ", " exist in the gentoo repository).", " I\u2019ve had some real progress here with respect to catkin.", "At the moment, I think the main issue is some sort of python pack linkage.", "I don\u2019t quite have the Open Embedded experience to debug this yet. Do you have any idea as to what could be wrong here?", "Hi ", ",", "I am sorry but I don\u2019t think I can really help you there. A wild guess from the log is that a catkin-native dependencies is missing somewhere, but I think the problem is more difficult than just that.", "If you look at the git history of the catkin.bbclass (", "), you will notice that although I am the maintainer of meta-ros, I actually contributed only very few changes (and more general refactoring) to the catkin.bbclass. The currently best expert for the catkin.bbclass would actually be Dmitry.", " Can you possibly help here?", "Lukas", "Hi,", "IIRC the real catkin code comes from the ", " recipe which ", " depends on. The original ", " adds ", " as a dependency. The ", " from the lunar branch seems to miss it.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["I never got openni-camera2 to cross-compile (", "), and", "some other users were discussing to add rtabmap, but they ran into issues with the dependencies as well (", ").", "\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/superflore-open-embedded/3579"},
{"title": "Status and maturity of OE and ROS", "thread_contents": ["Hi there. We\u2019re looking at implementing ROS from the ground up to replace the charging, control, and motion capabilities of our robotic camera. While I have a few years of experience supporting creating BSPs and recipes for yocto, I have yet to play with ROS. I wanted to gauge the current functionality of ROS in yocto/OE. Seems like for meta-ros the Igloo release is fully in master, there are experimental branches to support Kenetic, and then there is another parallel effort using superflore to automatically generate a ROS distribution for use in OE.", "We\u2019re hoping to get up an running for our commercial product and shipping within a month. While we have tools and automation in place for yocto, are we better off reinventing our tools and automation for Ubuntu instead of sticking with yocto giving our timeline.", "Happy to help test or get these working under yocto, just curious which branch or release I should focus on first.", "You say you have no experience with ROS and you want to use it for a commercial product that ships in under four weeks?     That is a rather impressive goal.", "If you are pressed for time you\u2019d be best to take the road well traveled, the one where the potholes are mostly smoothed over and where there are others who you can ask for help.  ROS on Ubuntu on PC hardware is the easy path.", "With a very tight schedule I think \u201crisk reduction\u201d is the way to think.", "Using Yocto is risk reduction to me. We already have plenty of tools that leverage yocto and openembedded. Going to Ubuntu involves reinventing the wheel from a package selection, base os, monitoring, and automation standpoint. Not to mention the package size, loss of package control, tight integration, and overinflated size of the base OS that we lose just by using it. Should be only a few weeks at most to integrate ROS layer in OE, whereas redoing everything in ubuntu, puts this out to months for implementation.", "Anyway, anybody have any thoughts of maturity and functionality of the openembedded layers available? Or do we reinvent or wheels in place for Ubuntu as Chris has suggested.", "I think Chris was mostly commenting on:", "We\u2019re looking at implementing ROS from the ground up [\u2026] I have yet to play with ROS, [\u2026] We\u2019re hoping to get up an running for our commercial product and shipping within a month.", "Irrespective of the build/deployment infrastructure that you end up going with, that seems like a short time.", "As meta-ros maintainer for five years by now (time flies like an arrow), I obviously have a strong bias for meta-ros. So, I probably cannot give you an unbiased advice on using OpenEmbedded or Ubuntu. Furthermore, I have not maintained an Ubuntu ROS system for five years.", "I assume you are well aware of the strong and weak points of OpenEmbedded and The Yocto Project. So, I will just point out the current status of meta-ros:", "We offer recipes for about 200 ROS packages (all basic packages are covered). If that is enough for you, you might quickly get your full product ready. If you need OpenBLAS or OpenNI2, you will face some challenges. Some users are working on that for some time as it seems (visible on the github forks), but they did not provide pull requests yet.", "We have a CI system running that checks each pull request against the current master of openembedded-core and meta-openembedded, but we currently do not check on regular basis on a public system if the latest commit always works with the latest master commit of its dependent layers. We also try to keep changes backwards-compatible, but we do not test and maintain specific branches for Yocto releases. All other testing is really just other users (and me) test-building the recipes on a regular basis. If you want to improve the situation concerning CI testing, ", " and I can provide all information of our testing infrastructure.", "SDK support is still not merged yet, but some users have experience with it; but I could not find time to test it. If that is important to you, let me know and we can move this topic forward together  in the main-line repository.", "I know that ", " and his company explored the use of meta-ros a few years ago in 2013/2014, and he decided to build their embedded systems with Ubuntu. He might provide you reasons why he ultimately decided for Ubuntu.", "Also, here is an interesting comparison from ", " at ROSCon 2014 (again, from the developer around ROS ARM Ubuntu, so possibly biased in the other way):", "\n", "3.87 MB", "\n", "I hope that helps.", "Which ROS packages do you need? What features do you need? Which qualities do you expect?", "Help is certainly appreciated; I have a long list of topics, but probably it is best to know what would be important to you and move those things forward collaboratively.", "Lukas", "Hi!", "if you already have experience in yocto, stick with it. It is the ", " way to make a product with ros. Especially, because it is much more easy to get a realtime kernel, which you will need at some point, if you aim to place your product in the automation industry (and you don\u2019t want it to suck).", "I am working with meta-ros (kinetic) and I find it quite useful!", "Regards,", "Matthias", "Thanks for the votes of support. I would agree with using HorstLocal, and appreciate the feedback and support bulwahn in providing an updated layer to utilize kenetic. I have imported in the latest experimental branch, and things work well thanks to the large community effort around it. Now to clean up the disk space to get it all to compile.", "Using Yocto is risk reduction to me. We already have plenty of tools that leverage yocto and openembedded. Going to Ubuntu involves reinventing the wheel from a package selection, base os, monitoring, and automation standpoint. Not to mention the package size, loss of package control, tight integration, and overinflated size of the base OS that we lose just by using it.", "So, I probably cannot give you an unbiased advice on using OpenEmbedded or Ubuntu.", "Could one not use OpenEmbedded and ROS with kind of ", " (", ")\u2026", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "The indigo branch is maintained and kept in sync with the ROS distribution release updates.", "The kinetic branch is experimental (well, just a few packages maintained in indigo don\u2019t run yet on kinetic, but I did not move that to 100% completion yet) and it is not kept in sync with the release updates at the moment, again due to limited time for maintenance and as there isn\u2019t any user asking loud enough for proper maintenance and support of kinetic.", "The lunar branch is an experimental branch from ", "; I do not know its current state, but I think it is probably also close to 100% completion of all 200 packages cross-compiling, but not completely there yet.", "\n", "\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/status-and-maturity-of-oe-and-ros/4404"},
{"title": "Call for testing: testing the SDK feature in meta-ros", "thread_contents": ["Hi all,", "a few months ago, Dominique Hunziker provided a pull request to the meta-ros main-line repository, which adds support for the SDK feature and allows users to compile on the target system.", "I already merged a few commits from this pull request that just cleaned up various recipes in meta-ros and recently, I also included some changes from ", " that made Dominique\u2019s pull request work properly with the python3 feature (ROS_USE_PYTHON3 = \u201cyes\u201d).", "So now, the remaining commits for this feature are ready to be finally merged. I rebased them and opened a new pull request here:", "I already tested the building all packages in meta-ros, i.e., ", ", with and without ", " on the recent master.", "\nSo, I know that the basics work as before, and to me personally, that is sufficient to merge it.", "However, I cannot find the time to actually test these new features, because I am busy with other activities. Still I know that these features are important to a number of meta-ros users.", "Hence, I need now some help testing these features from users that are either actively using those features already or already asked about those features in meta-ros in the past or might need them in the feature.", "My plan is to collect user feedback in the next two weeks. If we do not identify any blocking issues that require improvements with this pull request in the next two weeks, I would then merge these features in meta-ros.", "Best regards,", "Lukas", "Hi all,", "I did not get any feedback from anyone to my Call for Testing two weeks ago. Is there someone who needs this feature and has at least some time to test it now?", "Lukas", "Thanks to all the developers and users testing the nativesdk support, namely dominiquehunziker, Minipada and flplv (that is their github names).", "We now merged this feature and the indigo branch (master) should now provide basic nativesdk support. Next steps will be to include some further extensions that Minipada created and that must go through some review and testing, and to provide a new kinetic branch that is based on the current master with the nativesdk support (this is currently work in progress on my side).", "Lukas", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/call-for-testing-testing-the-sdk-feature-in-meta-ros/4466"},
{"title": "Looking for meta-ros Maintainers", "thread_contents": ["Dear all,", "I am looking for users interested to act as meta-ros maintainer.", "Within the last few months, various users have been contributing additions to the meta-ros layer and I would be happy to share the maintainer role with another person to have a second opinion on pull requests, and to take care when I am not immediately available.", "If you have doubt that you are the right person to be a meta-ros maintainer, consider these questions:", "If you answer most of those questions with yes, please consider to  volunteer as meta-ros maintainer. Note that the amount or size of your past contribution to meta-ros is not so important for being a maintainer.", "The main (minimal) activity would be to review and test pull requests together with me, to answer questions on the OpenEmbedded ", " topic, and to take care of the issue tracker (adding observed issues, removing duplicates, etc.). This minimal activity usually only takes roughly one hour per week.", "Of course, as part of maintaining meta-ros, you can do more and ensure it works with the current master and the Yocto Project releases, help new users to get started with meta-ros, or get more involved in current improvements of the meta-ros layer.", "If you are interested to help out, please post it here or send me an email and I can grant you full maintainer access to the current meta-ros repository.", "Best regards,", "Lukas", "Hi,", "\nI am a ROS Newbee but an advanced Openembedded/Yocto user. I plan to use meta-ros for my next project. I am not sure if this enough for an maintainer, but I am planning to fix some of the open issues on github. A while ago I added support for the ifm O3D3xx line of 3D ToF cameras to my private ", " fork.", "Hi Christian,", "currently, Dmitriy Rozhkov from Intel and me are actively maintaining the meta-ros", "\nlayer, but for sure, further helping hands for maintaining are welcome.", "As advanced OpenEmbedded/Yocto user, I assume you know the difficulty of", "\nmaintaining an application layer while the upstream development in OpenEmbedded-Core", "\nand the meta-oe layer move forward.", "\nCertainly, I foresee that you, with your experience, can also provide some good input", "\nto make catkin and meta-ros recipes build on the image, and support yocto\u2019s SDK", "\nfeature.", "To make sure that your maintenance work is also profitable for your goals,", "\nI would propose to start with merging the O3D3xx recipes into the main-line meta-ros", "\nrepository. Just open a pull request and we will review and test your", "\nproposed recipes.", "You will find all open tasks in the github issue tracker. Feel free to comment on", "\ntopics that you would like to take over, either by doing or by instructing others,", "\nthat are already involved in the effort of the specific tasks.", "Best regards,", "Lukas", "currently, Dmitriy Rozhkov from Intel and me are actively maintaining the meta-ros", "\nlayer, but for sure, further helping hands for maintaining are welcome.", "Perfect, I\u2019ll build a complete image and check if I can fix some of the open issues and warnings.", "As advanced OpenEmbedded/Yocto user, I assume you know the difficulty of", "\nmaintaining an application layer while the upstream development in OpenEmbedded-Core", "\nand the meta-oe layer move forward.", "\nCertainly, I foresee that you, with your experience, can also provide some good input", "\nto make catkin and meta-ros recipes build on the image, and support yocto\u2019s SDK", "\nfeature.", "In the past I\u2019ve concentrated on the latest release branch of Yocto. At work we do continues intergration, so this is maybe an option to keep track of the master branches.", "Related to catkin, yes this is indeed a topic I am interested in. Providing the users to cross compile with the Yocto project or compiling on the target is a must have.", "To make sure that your maintenance work is also profitable for your goals,", "\nI would propose to start with merging the O3D3xx recipes into the main-line meta-ros", "\nrepository. Just open a pull request and we will review and test your", "\nproposed recipes.", "Related to the O3D3xx recipes, I was thinking to provide an extra layer, but some of the dependencies like PCL are not available in meta-oe at the moment. I\u2019ll create a pull-request when back home.", "You will find all open tasks in the github issue tracker. Feel free to comment on", "\ntopics that you would like to take over, either by doing or by instructing others,", "\nthat are already involved in the effort of the specific tasks.", "Best,", "\nChristian", "I\u2019m interested in porting Melodic to meta-ros. Do you have a tutorial on how to adapt the current indigo recipes to other versions?", "Hi Lucas,", "unfortunately we do not have a tutorial or extensive instructions on that yet, but I am happy to guide you through this. In fact, I was thinking about providing melodic myself, but I am currently still working on getting a new version on kinetic ready. So, it is good that you want to address melodic.", "I suggest the following approach:", "checkout my \u201ckinetic-experimental-v4-work-in-progress-v1\u201d branch; that is a snapshot of the latest kinetic branch that I am still working on.", "update the ROSDISTRO and a few more places from kinetic to melodic.", "run update-recipes.py (with my preliminary script-improvement patches) to produce all recipe updates", "run ", " and fix all build issues.", "clean-up all your commits", "For 1., you can look at the commit:", "You will simply need to update those places to melodic.", "For 2., use the preliminary patches, which you can see at my branch \u201cscript-improvements-work-in-progress-v1\u201d, to update-recipes.py, to obtain the bash commands to generate the recipe update commits.", "For 3., expect many packages to fail, many are probably simple issues,but only a few are really difficult to address.", "I recommended to start your work on top of my kinetic-experimental-v4-work-in-progress-v1 branch, as I already resolved all except for one build issues for kinetic.", "It would be best if you can share your branch on your fork in github, then I can have a look, test and help you with the build issues you encounter.", "If you need any further help, let me know.", "Lukas", "bulwahn,nice to meet you!", "\nI am a ROS Newbee  I plan to use meta-ros for my next project. I am not sure if this enough for an maintainer,And I also have  more question. Should we fork a new issues about unmanned ship? thanks ,my email: guokunnpu#", ".", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Do you continuously use the master branch of meta-ros?", "Does current project work foresees that you will using meta-ros for the next few months or next year?", "Do you have a basic understanding of bitbake recipes and know how to write them?", "Do you have some spare time for maintainer activities?", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/looking-for-meta-ros-maintainers/973"},
{"title": "Python trouble", "thread_contents": ["Hi", "I need a little assistance in hunting down an error in my  ", " usage", "\nroswtf keep reporting \u201cmportError: No module named importlib\u201d", "This is clearly a missing python dependency somewhere, but where ??", "I made my own packagegroup to pull in the ros components i want on target", "BR  Lars Larsen", "\nquoted files below:", "The ", " module is a part of the standard library in python3 (also available in python2.7). You may want to check correctness of your python installation or ", ".", "Thanks I figured that out to,", "on my desktop and build machine importlib resides in /usr/lib/python2.7/importlib", "\nwhich i guess is the standard location", "\nbut it is missing on target", "My PYTHONPATH on target is ok.", "I do not actively include any python into  my build.", "\nI rely solely on what meta-ros will bring onboard, via depend statements and clearly a depend is missing.", "\nbut which one will bring on importlib?", "The standard library is a part of python. I guess the recipe for ", " (and probably the one for ", " too) needs something like", "added to it.", "I solved it !", "\nOr rather I  hacked my may to a working solution.", "\nthis is clearly not the right, kosher solution, but I\u2019ve been hunting it to long, to spend more time.", "I did:", "\nmake a bbappend to roswtf", "\nand adding", "RDEPENDS_${PN} += \u201cpython-importlib\u201d", "-Lars", "It\u2019s better to add this line to your local.conf", "\nor", "\n", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/python-trouble/1439"},
{"title": "ROS on an Intel Aero/Yocto", "thread_contents": ["Greetings,", "I am trying to get a ROS install on an Intel Aero Compute board that is distributed with a yocto platform.  I\u2019ve tried two different approaches.  One approach is the cross-compilation method mentioned here:", "\n", "However, after setting up the environment an attempting to ", " I get an error that says:", "\n", "I\u2019ve done a bit of searching, but I haven\u2019t been able to determine a reasonable solution.", "The second method I\u2019ve attempted is a source installation:", "\n", "Since the compute board has a dev envorment this seemed reasonable.", "\nUnfortunately,  ", " cannot determine the OS.  I\u2019m not sure which OS would be the most suitable.", "Anyway, any solution on continuing down either path would be appreciated.", "Dear ", ",", "you have posted a question on ROS Discourse, that is for news and general discussion about ROS.", "\nKind of like the \u201cros-users\u201d of ", ".", "As you have a question: ", " and ", "Discourse is not the right place.", "\u2013 Thilo", "Thank you- I discovered that tidbit after posting but could not remove the item!", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/ros-on-an-intel-aero-yocto/7055"},
{"title": "Does https://github.com/bmwcarit/meta-ros support Yocto2.6?", "thread_contents": ["I want to build meta-ros on yocto2.6. Can somebody confirm if ", " support Yocto2.6?", "OpenEmbedded Layer for ROS Applications. Contribute to bmwcarit/meta-ros development by creating an account on GitHub.", "\n", "\nI can not guarantee that all package is working. but this git can be built and bootable with Yocto2.6.1.", "\nThere are some modification to use this.", "If you still need more information, e-mail to me.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["downgrading boost library.", "delete or fix some recipes that has invalid git address."], "url": "https://discourse.ros.org/t/does-https-github-com-bmwcarit-meta-ros-support-yocto2-6/8321"}
]