[
{"title": "Migration of ros-sig-mav to discourse.ros.org Aerial Vehicles category", "thread_contents": ["Hi Everyone,", "As many of you may already be aware we\u2019re migrating ROS Sigs to ", ". It\u2019s ros-sig-mav\u2019s turn. Many of you already have accounts setup over there, you can just watch the new category Aerial Vehicles. If you do not already have an account please sign up and watch the Aerial Vehicles category.", "This SIG now has a cateogry Aerial Vehicles: ", " I have finished my drafts of the proposed standard interfaces for aerial vehicles and will be kicking off the discussion on the new forum.", "During the transition I\u2019ve setup the ros-sig-mav mailing list to receive notifications from discourse from the category, however direct posting to the mailing list is now disabled.", "Tully", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/migration-of-ros-sig-mav-to-discourse-ros-org-aerial-vehicles-category/286"},
{"title": "Initial position of the quadrotor", "thread_contents": ["Hi, I have initialized the position of the erlecopter quadrotor over a one meter high base, but I don\u2019t know how to initialize the GPS on this position.", "\nDoes anyone know how to solve it?", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/initial-position-of-the-quadrotor/1697"},
{"title": "Certification", "thread_contents": ["While I would not expect ROS to be FAA certifiable on its own, I am wondering if any users have ROS implementations that have gone through the FAA certification process.  If so, I would like to get some insight into lessons learned, things to watch out for, etc.  Basically I am trying to get a sense of the potential certifiability of a ROS implementation on large unmanned aerial vehicles.", "Based on my own experience with certification (not of a ROS system), i think it would be very cost-prohibitive to certify a ROS 1-based system.", "You might have an easier time with a ROS 2-based system. The software development process has been better tracked.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/certification/1891"},
{"title": "Network library for Team of UAV's", "thread_contents": ["Hi, I hope all of you doing well, I am currently working on Team of UAV\u2019s for observing moving targets. can any body suggest me any networking library for communication of team of UAV\u2019s to plane their paths.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/network-library-for-team-of-uavs/2406"},
{"title": "Autonomous Selfie Drone by Crazyflie using Deep Learning Models", "thread_contents": ["Post retracted at the request of the author due to business-related sensitive information contained in this post.", "The information is expected to be re-announced with more information in the future with more details.", "Hi, nice project ", "Is all the processing done on a jetson tk1?", "We implement this on a Linux box with more power and then port it for Jetson TX2.", "Running on Tk1 might be possible if we rewrite some code for arm 32bit and low gpu power.", "(Also, we plan to optimize this for embedded board without gpus. )", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/autonomous-selfie-drone-by-crazyflie-using-deep-learning-models/2414"},
{"title": "Gapter: Research and Education Drone with ROS", "thread_contents": ["Gaitech is proud to announce the release of its educational drone: Gapter, a shortcut for Gaitech Copter.", "Gaitech is proud to announce the release of its educational drone: Gapter, a shortcut for Gaitech Copter.", "\nGapter is an unprecendanted drone with was carfeully designed to meet the requirements of researchers, students and teachers as an educational and research aerial platform.", "\nIt supports Robot Operating System (ROS), the MAVLink protocol, and the mavros wrapper layer between ROS and MAVLink.", "Gapter EDU support Robot Operating System. ROS Users can easily develop applications with Gapter using ROS. In addition, an educational ROS package with several demos was developed for Gapter.", "Furthermore, Gapter Supports Arduilot and the MAVLink Protocol. It can be easily controlled using MAVLink ground stations such as QGroundControl and Mission Planner and to define autonomous missions either through Internet or Telemetry devices.", "Gapter can also be connected to Internet using 3G or 4G connection. This allows you to control anywhere and anytime through the Internet.", "From hardware perspective, Gapter is based on the Pixhawk autopilot and reenforced with an embedded computer Odroid XU4, which is proven to be more powerful than other single board computers, like Raspberry PI, typically used in other drones.", "For computer vision and obstacle avoidance application, Gapter comes with a 3D vision sensor with two stereo camera and to a laser range finder used to avoid obstacles and navigate more safely.", "This is in addition to  a comprehensive documentation and software packages that allows a user to easily start working and developing with Gapter.", "Gapter is an innovative platform for research and education.", "\nFor more information, please contact us at ", "Where can I buy this kit?", "please contact gapter at ", " and we will follow up with your request.", "\nAlso, please see our offer here", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/gapter-research-and-education-drone-with-ros/1663"},
{"title": "PICA: Drone Made to Learn ROS with MCU and FPGA", "thread_contents": ["If you are a new learner of ROS and want to own your R&D drone? Do you want to learn ROS along with MCU and FPGA? PICA would be the choice for you to experience science, research and education all together on one plate form. PICA is specially designed for Research and development and it would give you a thorough insight of ROS. In a very short period of time you can be skillful in the field of ROS Robotics. PICA is a highly capable platform for Unmanned Aerial Vehicles. PICA is packed with serious processing and computing power, deploying an advanced FPGA, MCU and on-board computation module. The Education Package would give you full access to a learning environment. It has tutorials and instructions inside, and could help you to leap a quick start towards robo-science.", "Gaitech Robotics have also a perk for the customers, to support the consumer, there are learning courses available, which includes not only the hardware training but also software drills will be available.", "PICA is now available on ", " !", "Hello,", "Nice to see a new drone open source! Is your autopilot new or based on PX4 or ArduPilot ?", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/pica-drone-made-to-learn-ros-with-mcu-and-fpga/2542"},
{"title": "Mapping and obstacle avoidance with IR, sonars and a radar sensor", "thread_contents": ["Hi,", "We are constructing an hexacopter drone and we would like to set simple mapping and obstacle avoidance with some IRs, sonars and a radar sensor. Almost all the libraries we have seen (hector, mrpt_slam) use ladars and/or the information processing is slow for a drone. In addition, is there any library to get the position changes of the drone using only an IMU? Do you have any suggestion on how to start? We are a little bit lost since we have never used ROS before.", "Thanks in advance! ", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/mapping-and-obstacle-avoidance-with-ir-sonars-and-a-radar-sensor/2716"},
{"title": "ROS quadcopter with waypoint from custom GPS", "thread_contents": ["Hi Everyone", "I\u2019m having a hard time to find a complete solution to the following -", "\nI want to simulate quadcopter in Gazebo+ROS wherein I can define waypoints (GPS based) for an autonomous flight using different GPS sensor (the sensor differs in its noise parameters).", "I came across the following packages and tools -", "\nhector-quadcopter (not clear if I can define waypoints)?", "\nhector-gazebo-plugins (here I can define IMU and GPS sensors, exactly what I want, but can I use this with hector_quadcopter package? or any other robot model with waypoints?)", "\npx4 SITL (", ") wherein I can define waypoints using MAVROS as well as send sensor data using MAVROS, but seems a lot of work to modify data (from hector-gazebo-plugins possibly) to MavLink message format.", "Any other solutions that I might have missed? Or is any of the above solution more feasible than the other.", " is another gazebo based simulator which you can try.", "\nIf you only care about simulation, the hector or the rotors simulators would be best, but if you eventually want to fly a real robot, it might be better to use the PX4 SITL since that uses the same interface that would be used on a real robot.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/ros-quadcopter-with-waypoint-from-custom-gps/5282"},
{"title": "[Elsevier Book] Call for Chapters: Unmanned Aerial Systems: Theoretical Foundations and Applications", "thread_contents": ["I am pleased to inform that Prof. Azar and I are editing a book with Elsevier entitled", "The main reason for editing this book is the increasing demand for unmanned aerial systems and the exponential growth and evolution of UASs in the last couple of years. In this book, we aim at providing a unique reference of the state-of-the-art research and development of unmanned aerial systems to be an essential resource from researchers, instructors, and practitioners.", "This book is expected to be published by Elsevier by Oct. 2020. It will appear under the Advances in Nonlinear Dynamics and Chaos series.", "The book is open to a wide area of hot and recent research topics, which we are sure that your contribution will be of great added value.", "For more information about the book and the submission process and deadlines, please refer to the attached call for chapters or visit the CFP webpage ", ".", "We would appreciate it if you can send us a confirmation of contribution and prospective titles at earliest.", "Should you have any questions, please free to contact us.", "Thank you", "Anis Koubaa", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/elsevier-book-call-for-chapters-unmanned-aerial-systems-theoretical-foundations-and-applications/10903"},
{"title": "Proposed standard interface for aerial vehicles in ROS", "thread_contents": ["Continuing the discussion of developing standard messages for flying vehicles I have iterated on our last discussion: ", "And have put together two REP pull-requests that I would like feedback on.", "The first one is an ", " which defines conventions for interacting in larger spaces", "\nThanks to ", " for the early feedback on that PR.", "The second is a ", " trying to pull together a standard set of messages", "I\u2019ve done my best to survey the messages that already exist and tried to reuse existing messages whenever possible.", "If you have high level discussion topics we can discuss them here. For anything specific please feel free to comment directly ", ".", "Thanks, Tully, for your attempt to standardize interfaces for aerial vehicles!", "I added some comments to the ", " directly, mainly about the addition of a velocity control layer and optional fields in pose and other commands.", "Another important aspect that should IMHO be covered in the REP in one way or the other is the exact meaning of altitude/height/elevation as specified in commands and state feedback. Depending on how altitude is measured and controlled the results can be quite different if there is no standardized way to specify the altitude mode explicitly whenever a z position is involved:", "The difference between exact altitudes and pressure altitudes might be out of scope in this document and the height above ground could be covered by range measurement messages like ", ", but I think the question of the reference level  (MSL/WGS84 vs. local reference frame) should be somehow covered, e.g. by defining different names for the map frame depending on whether its origin is at a local reference altitude (the default), MSL or WGS84.", "(I had to obfuscate the links because I cannot add more than 5 in discourse).", "\n(edited to add links in. Once your trust level goes up the link limit will increase.-- ", ")", "+1 for a clear, consistent definition. I recommend  \u201cmeters above the WGS-84 ellipsoid\u201d. Note that ", " explicitly specifies ", " that way.", "We had a similar discussion a few years back during ", ". The consensus was that we needed a consistent ", " definition. Various systems might need to convert that canonical value to and from other representations (above MSL, above ground level, different ellipsoids, etc.), but it would just be too confusing for multiple packages and nodes to figure out which type of value the message intends.", "While a different answer could be crafted specifically for aerial vehicles, that seems unwise.", " ", " thanks for the feedback.", "As you both mentioned the definition of altitude is something that needs to be clearly defined. My initial reaction is that it\u2019s not necessary to discuss since we\u2019re talking about tf coordinate frames with everything measured in meters. However I think that what we\u2019re actually talking about is more about standards about defining map frames. And possibly we could extend our effort to develop standard map frame naming conventions to convey some of this information. And probably also want to recommend a standard to use for these common global reference frames. ", " suggests picking the WGS-84 ellipsiod as the default earth referenced map zero altitude. That seems find by me, anyone else have a different suggestion?", "For example when setting up map frames they could be named or labeled to clearly indicate their external references if different from the default.", "For pressure altitude there\u2019s two ways it could be approached. The simplest would be to ignore it and make your best estimate of the true altutude. However it does have a long track record as being a very good way to coordinate flying vehicles since barometers are much more precise than they are accurate. With that said and since the pressure altitude is approximately a fixed offset based on the uncertainty in the atmospheric barometric pressure, it actually fits well into the model we have developed with the map and odom frames for ground navigation. You can navigate locally in the precise frame (pressure altutude/odom) and are continuously running a background process to estimate the drift of the precise frame to the externally referenced frame (map/ground).", "For the height above ground I think that\u2019s getting into an obstacle map representation and out of scope for this discussion.", "I would not recommend the WGS84 ellipsoid altitude. What is used in reality is always AMSL.", "Thanks for all the feedback.", "I\u2019ve made noteable updates to the ", " to address topics such as transitioning between maps, clarify map coordinate frame conventions and also clarify potential intermediate coordinate frames such as pressure altitude between odom and map.", "These clarifications I think resolve most of the comments from reviewers and make this close to ready.", "I\u2019ve also updated the draft of ", " based on comments here and inline in the pull request.", "I also fleshed out the datatypes in the document for greater clarity.", "I see two comments for which there\u2019s not a clear resolution.", "\nFirst is the chose of using vehicle native commands, attitude and yaw pitch roll rates, vs the very highly abstracted 1st and 2nd derivatives of position only. (comments ", " And slightly related to that is the choice of naming which parallels the derivatives of position but does not match the datatypes in the current proposal.", "If you have thoughts please follow up here on this thread. I plan to merge the pull request still in draft form so that people can see the graphics rendered when reviewing without downloading it and generating their own content. Once we have more direction for the next steps we can reopen an new PR to modify the draft.", "Is that really true? My observations are:", "From the feedback in the REP 147 ", " we\u2019ve iterated.", "I have merged it in draft status such that people can read it more easily and especially see the diagrams easily. Please take a read through it here: ", "I think we\u2019re close to a consensus here. There\u2019s one ", " about UTM representations and another about the altitude representation.", "I\u2019m not sure there\u2019s a need to directly mention this connection in the REP. I suspect it will be a common use case that we implement tools to help with but I\u2019d propose not to call it out in the REP.", "During the review we switched to standardize on MSL by default.", "Most GPS units seems to give the altitude above the ellipsoid and also have the geoid correction available.  Since the geoid correction can vary in quality it is the ellipsoid value that is probablu most accurate.", "\nData available about altitude specify what geoid it is using. For example KML uses EGM96.  But the data available in Sweden uses RH2000 which used the geoid SWEN08_RH2000 which is not exactly the same as the one used in EGM96.", "Certainly most GPS units use WGS84 as their datum as that\u2019s the native units of the GPS system.", "\nI found a great list of datums on NOAA\u2019s website: ", "If you\u2019re not using GPS however the main reference is MSL. And that is what the bodies like the FAA use for altitudes. If you don\u2019t consider GPS to be your primary", "There\u2019s a very detailed paper about accuracy of different representations from the FAA ", "There\u2019s a good representation on page 9 of the geoid with gravitational anomolies which change MSL.", "\n", "\nIn that you can see that the differences can range for -100m to +60m.", "Where the geoid represents MSL, and the ellipse is the datum like WGS84. There\u2019s a good illustration on page 8.", "With this understanding I think that using MSL will make a lot more sense for applications that are near the sea level or on the ground. It\u2019s not very intuitive if you take the example of a boat on the ocean to display it at -100m or +60m in altitude.", "And for use cases where you are not using GPS as a source and dead reckoning based on maps and a known starting position, possibly with a barometer, using your known starting altitude as a reference is much easier.", "That said since we know that most vehicles will be using GPS we should make sure that converting from the WGS84 datum is easy/built in. And I think that won\u2019t be too much of a problem as we\u2019ll already be converting GPS\u2019s native polar coordinates to local euclidean approximations anyway.", "Thus I\u2019d suggest we stick with using MSL as the default altitude representation.", "What do you mean by MSL?  Do you mean the WGS84 geoid which uses EGM96?", "Can you really do the conversion from WGS84 ellipsoid to WGS84 geoid accurate and fast on computers with limited resources?  What we use know for this requires us to download big datafiles to do the conversion.  The conversion done by GPS units uses a small tabla stored in the GPS and is probably not as accurate.", "Well, so long as it is well specified what is used and that all the drivers for sensors like GPS outputs the same unit I suppose it does not matter so much what is used.", "Will the definition of GeoPoint and NavSatFix be changed then or how will that be handled?", "From ", "Following ", " and ", "\u2019s comments above I\u2019ve revised it to use the very simple cmd_vel and a new very similar Twist for acceleration.", "I would vote for using the stamped message variants for the rate and acceleration interface, too.", "Rationale: Even in a real-time context and without querying tf a vehicle can check the ", " and interpret the commands accordingly. A velocity command in the real body frame is quite unusual for multirotors because you do not want to climb or descend while flying forward only, independent of the current roll and pitch angle. You could argue that in this case the velocity command could be given in a fixed frame, but the vehicle\u2019s yaw angle should still be respected to determine what \u201cforward\u201d is, without the need to update the command continuously to align with the latest yaw estimation (which might not even be available). This control mode would correspond to standard flight modes like ", " or ", ". Having a header frame_id would be one good way to determine the desired control mode, next to a dedicated MAV message with an enum-like field for this purpose. I don\u2019t think a separate control mode switch interface would be wise - the command messages should have a clearly defined meaning and be self-contained (e.g. for playing back from recorded data). In Hector we used to call the frame with the same origin as ", " but roll and pitch set to zero the ", " frame, but I do not really like this name and would prefer something like ", ".", "The header timestamp might be useful to measure delays in the command and control link and a vehicle should ignore commands that have a non-zero timestamp but are too old.", "For fixed-wing aircraft it might be more appropriate to command the forward velocity in body frame.", "+1 for using the more abstract standard messages. I think it is quite straight-forward to translate them to less abstract messages like MAVLink as advocated by ", ", but the conversion function might already depend on the exact type of vehicle and/or auto-pilot in use.", "In my opinion it is nice that REP 105 recommends that the map frame is aligned with north, east and mean sea level if such global reference information is available, but this should not be enforced or even identified with a UTM frame. Afaik most mapping frameworks assume that the map frame is under their control and the robot always start at the frame\u2019s origin with z set to 0. Also visualization tools like rviz would require some usability patches if robots spawn at positions far away from the origin and the map frame would be the only appropriate drift-free reference frame. The current draft of REP-105 also states that there might be other guidelines for defining the map frame, like aligning it with structures in the environment.", "What I would propose is to introduce another frame between the ", " and ", ", which could be UTM or any other local ENU frame. It would be the task of a node like the ", " to choose an appropriate ", " frame and publish a static transform from ", " to ", " and a correction transform from ", " to ", " (or another intermediate frame), so that the GNSS antenna\u2019s frame is at the measured coordinates in the map. Unfortunately this transform is not fully defined by a only GNSS measurement because it does not carry absolute yaw information and the map frame could rotate freely around the GNSS antenna. In order to solve this we would need yet another frame, e.g. ", " which shares the origin with the map frame and enforces ENU alignment:", "Some of those frames could be identified if the respective information are unknown, e.g. ", " and ", " if the vehicle has no absolute orientation information. In this case, viewed from a earth-fixed frame like ", " or ", ", the map frame would rotate around the robot while the robot is moving in the map frame and the GNSS node tries to keep it at the measured GNSS position. It might also be possible to come up with a node that estimates the fixed ", " to ", " rotation from the robot motion and its location in an earth-fixed frame without the need for a calibrated magnetometer.", "I also share the concerns of using AMSL as an altitude reference and tended to vote for the WGS84 geoid, mainly for the reasons already mentioned above:", "On the other hand compatibility with MAVLink (see ", ") is also a good argument, but in this case it should be considered to change the definition of the sensor_msgs/NavSatFix message, too. Is this possible without breaking the MD5 sum? This would enforce all GNSS drivers to either publish AMSL altitude as given by the receiver or do the geoid correction themselves. I think the current implementation of ", " is handling altitude incorrectly because it adds the geoid height (field 11 of the NMEA GGA message) to the altitude already converted to AMSL (field 9 of the GGA message) according to the NMEA specs found at ", ".", "I think ", "\u2019s boat on the ocean visualization example is not relevant here because even MSL is still a theoretical reference. It refers to the ", " sea level and does not take into account tidal changes. The ", " or the ", " frame as proposed in the previous section would solve this problem by providing a local earth-fixed reference frame which can be at any desirable altitude, depending on whether the ", " has a non-zero altitude relative to ", " or not. Only the ", " to ", " transform would contain the absolute altitude relative to either WGS84 or MSL.", "Hmm, probably there is no right and wrong answer to this question. +1 for MSL.", "Will the definition of GeoPoint and NavSatFix be changed then or how will that be handled?", "Anyone can open a review to change them, if desired.", "I personally will oppose that proposal. Those definitions have been in general use for years without complaint, until now. They were agreed to after more review than this discussion (so far).", "Changing the meanings of the data could break existing systems in subtle and undetectable ways. If we really want different semantics, we should define new messages, provide tools to translate back and forth, and then convince the ROS community to adopt them.", "What do you mean by MSL?  Do you mean the WGS84 geoid which uses EGM96?", "Can you really do the conversion from WGS84 ellipsoid to WGS84 geoid accurate and fast on computers with limited resources?  What we use know for this requires us to download big datafiles to do the conversion.  The conversion done by GPS units uses a small tabla stored in the GPS and is probably not as accurate.", "Well, so long as it is well specified what is used and that all the drivers for sensors like GPS outputs the same unit I suppose it does not matter so much what is used.", "Sorry I misinterpreted your previous comment to be suggesting the WGS84 Ellipsoid. With some more reading I think that the WGS84 geoid using EGM1996 is our best standard to approximate MSL.", "The best reference for EGM1996 I found: ", " has a table of corrections and a short reference fortran implementation for interpreting them. That could easily be converted or wrapped to make available for easy use.", "For the computational complexity there\u2019s 15 minute grids which for the whole world are about 9MB when uncompressed and expressed as ascii in 64 thousand lines. With just text compression it drops to 5MB I think with binary representation it would drop significantly. I see what looks to be a binary format which is only 2MB.", "I\u2019ll update the REP to call out EGM1996 as the reference altitude. And we should make sure to import the reference conversion methods.", "I would vote for using the stamped message variants for the rate and acceleration interface, too.", "Yeah, the header is valuable for being self contained, and does give a lot of flexibility. If the program is unable to do the transform it can reject/skip the goal. And hopefuly have good fallback behavior. The nav stack has had this sort of behavior where it would not accept a goal in the robot frame as it would never be achievable. (Like a rabbit with a carrot tied to a stick on it\u2019s back.) In this case we could have different semantics.", "What I would propose is to introduce another frame between the earth and map, which could be UTM or any other local ENU frame. It would be the task of a node like the navsat_transform_node to choose an appropriate local_enu frame and publish a static transform from earth to local_enu and a correction transform from local_enu to map (or another intermediate frame), so that the GNSS antenna\u2019s frame is at the measured coordinates in the map. Unfortunately this transform is not fully defined by a only GNSS measurement because it does not carry absolute yaw information and the map frame could rotate freely around the GNSS antenna. In order to solve this we would need yet another frame, e.g. map_enu which shares the origin with the map frame and enforces ENU alignment:", "I agree that having these intermediate frames are likely going to be valuable in usage. But I\u2019ve shied away from making them part of the standard and just called out that there may be intermediate frames that are implementation specific, in the paragraph ", " Since there are so many potential intermediate approaches I\u2019d like to suggest defering trying to standardize that until we have more experience.", "Will the definition of GeoPoint and NavSatFix be changed then or how will that be handled?", "For this I agree with Jack that we shouldn\u2019t change these. In particular they are in the lat/lon/altutude and we should make sure that we have good standard conversions going from that into our Euclidean map frame. But if you\u2019re working in pure GPS data avoiding the overhead of the corrections, raised as a concern above, is valuable. The WGS84 ellipsoid is the most native datatype for a GPS fix.", "Edit: REP 105 update: ", " in the ", "\nREP 147 update: ", "I also share the concerns of using AMSL as an altitude reference and tended to vote for the WGS84 geoid, mainly for the reasons already mentioned above:", "I think you meant WGS84 ellipsoid here.", "Sorry I misinterpreted your previous comment to be suggesting the WGS84 Ellipsoid. With some more reading I think that the WGS84 geoid using EGM1996 is our best standard to approximate MSL.", "I was actually suggesting to use the WGS84 Ellipsoid since that is what is used in NavSatFix and GeoPoint.", "In our UAV system I have gone back and forth between what to use. First I used the WGS84 Geoid as the altitude if nothing else was specified.  But then I started to use GeoPoint and then I switched to WGS84 Ellipsoid as the default thing. And I though that worked better.", "Also MavLink I thinks is outputting the wrong altitude in the NavSatFix message.  So I am not sure that the documented semantic of the NavSatFix message is respected everywhere,", "For applications with multiple UAVs that need to tell each other about their position we have standardized on using GeoPoint and GeoPose.", "Also MavLink I thinks is outputting the wrong altitude in the NavSatFix message.  So I am not sure that the documented semantic of the NavSatFix message is respected everywhere,", "I am sure there are several examples that do not follow the standard. I even know of one device that outputs NAD-83 when receiving a differential correction, but switches to WGS-84 otherwise. That kind of complexity is better left to the device driver so other downstream ROS components can ignore it.", "So, the driver you mention probably has a bug which should be reported as an issue. For many applications those differences are not that significant, but eventually someone will notice and care about it.", "For applications with multiple UAVs that need to tell each other about their position we have standardized on using GeoPoint and GeoPose.", "That is the why we chose to use a minimal number of representations for those messages. They are not always optimal, but they make sharing between systems and components much cleaner.", "I\u2019ll update the REP to call out EGM1996 as the reference altitude. And we should make sure to import the reference conversion methods.", "I am not sufficiently experienced with aerial vehicles to understand the reasons for picking that over the simpler WGS-84 ellipsoid.", "So, please add a rationale, plus an explanation of the difference between ellipsoids and geoids (many readers probably won\u2019t understand that distinction).", "Ok, I guess we\u2019re kind of trying to determine whether the slightly more complex default is better and whether it will lead to easier to understand frames.", "However thinking about it now basically this default is going to be used in the case that there\u2019s no prior data, and thus the simpler version (Ellipsiod) makes sense. Picking the simpler solution will mean that more applications will choose to use a custom zero level appropriate for their application. Whether it be sea level, or most likely ground level at their starting point home base.", "As this is just a decision for the default w/o any other data then sticking to the simplest solution seems better actually. Does this logic make sense to everyone else? Assuming it does I can update the draft again as such.", "We\u2019re kind of deep ending on the map frames. Is there any other topics that people want to raise about the proposals?", ":", "\nI  am not sufficiently experienced with aerial vehicles to understand the reasons for picking that over the simpler WGS-84 ellipsoid.", "\nSo, please add a rationale, plus an explanation of the difference between ellipsoids and geoids (many readers probably won\u2019t understand that distinction).", "I would not call myself an expert, but I will try:", ":", "\nAs this is just a decision for the default w/o any other data then sticking to the simplest solution seems better actually. Does this logic make sense to everyone else? Assuming it does I can update the draft again as such.", "I never had a strong opinion on that point. In agree that most applications will probably not care about the difference and define their own custom zero level. But ellipsoid (WGS84) is not necessarily simpler in the sense of being more carefree or less computationally expensive. It depends on the source of the data and with what other altitude sources the data is linked to or fused with.", "Perhaps a recommendation to use MSL according to the EGM96 geoid as a reference whenever applicable and the requirement to clearly specify the reference (like in ", ") whenever a node publishes absolute altitude is enough for REP-105? Subscribers who care about the difference should provide a parameter to specify whether the altitude input is relative to the geoid or the ellipsoid and do the conversion themselves (or by using a library like ", " or ", "). Documentation and raising awareness is probably more important here than full interoperability and to enforce an eventually costly and complex conversion at the publisher\u2019s side. A future extended version of the ", " message could contain the geoid height as an optional field, following the pattern of the ", " message, which simplifies the conversion at the subscriber\u2019s side if the source (GNSS receiver) provides both.", "\nWe\u2019re kind of deep ending on the map frames. Is there any other topics that people want to raise about the proposals?", "I am happy with the current draft or REP-105, that leaves it open whether the ", " frame itself is directly geo-referenced and/or aligned or whether some other intermediate frame(s) between ", " and ", ", so that ", " would be only indirectly geo-referenced if the transformation is known. Or is \u201cMap Conventions\u201d meant as a subsection specific for the ", " frame?", "In the near future it is probably unrealistic and too disruptive to adapt common mapping/localization packages like GMapping, AMCL or hector_slam and odometry drivers in a way that they publish a ", " transform that takes into account the geo-referenced altitude and orientation, even if it might be known from GPS, magnetometers or other sensors. As a consequence, the map frame as it is known today will stay at more or less the robot\u2019s elevation and has an arbitrary but constant orientation, which also avoids the need to update visualization tools to cope with large vertical offsets between the map frame and the robot.", "Thanks for the helpful clarifications.", "When I described the WGS-84 ellipsoid as \u201csimpler\u201d,  I meant having fewer terms in the equations. That seems helpful, especially for ", " (and hence the ", " frame).", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["altitude above WGS84 ", " ellipsoid (GNSS altitude)", "altitude above MSL ", " (e.g. GNSS altitude + ", ")", "altitude above a local reference point (closest to what ", " would be in the map frame)", "pressure altitude ", " relative to ", " or ", ", which might be different from altitude above MSL or local reference point if the atmospheric conditions deviate from the standard atmosphere", "height above ground at the current location of the aerial vehicle (e.g. measured by a sonar, laser or radio altimeter)", "Most GPS units seems to give the altitude above the ellipsoid and also have the geoid correction available.  Since the geoid correction can vary in quality it is the ellipsoid value that is probablu most accurate.", "Data available about altitude specify what geoid it is using. For example KML uses EGM96.  But the data available in Sweden uses RH2000 which used the geoid SWEN08_RH2000 which is not exactly the same as the one used in EGM96.", "consistency with ", " (", ")", "eventual problems with poor quality of built-in geoid correction in GNSS receivers and/or costly calculations (", ")", "No other sensor can directly measure the altitude in MSL. Barometric altimeters need an external pressure reference anyway, which could either be the local QNH (referenced to MSL), the known elevation at startup (MSL or WGS84) or  GNSS (MSL or WGS84). The altitude representation is simply determined by what is used as a reference. A fusion algorithm could take care of the geoid correction and publish the result in WGS84.", "The WGS-84 ", " is mainly used as a reference in satellite navigation systems because it simplifies the description of the satellites\u2019 orbits and the trilateration process in the receiver.", "The height above the WGS84/EGM96 ", ", or MSL, is used for practically all other use cases:", "Elevation information in printed maps or ", "\n", "Services like the ", " or ", " and related exchange formats (", ")", "Pressure altitudes derived from barometric pressure in combination with the local ", " and the ", " (altimeter)", "\n", " like restricted airspaces (unless specified above ground level AGL or as a ", ")", "\n", ", a data exchange protocol and library that is widely used by open-source and commercial autopilots and ground stations for aerial vehicles"], "url": "https://discourse.ros.org/t/proposed-standard-interface-for-aerial-vehicles-in-ros/287"},
{"title": "About the Aerial Vehicles category", "thread_contents": ["This category is a place for discussions about aerial vehicles. There is a growing community of people using ROS on aerial vehicles.", "This category aims to be a place where people can discuss best practices, standardization, and any other topics relevant to flying in the ROS ecosystem.", "This is an evolution of the ROS SIG MAV ", " mailing list. There are archives there of the old conversations, and for continuity posts to this category will be forwarded to that mailing list.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/about-the-aerial-vehicles-category/284"}
]