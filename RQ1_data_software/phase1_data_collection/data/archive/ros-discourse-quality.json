[
{"title": "ROS Quality Assurance Working Group next meeting", "thread_contents": ["Dear ROS community,", "The next ROS quality assurance working group is to be held tomorrow Thursday the 7th at 6PM GMT. The meeting details below:", "To join the video meeting, click this link: ", "Otherwise, to join by phone, dial +1 414-909-6660 and enter this PIN: 560 025 943#", "Regards,", "\nAdam", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/ros-quality-assurance-working-group-next-meeting/7759"},
{"title": "ROS Quality Assurance Working Group Feb. 2019 Meeting Notes", "thread_contents": ["Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Actions from last meeting (Adam)", "Update on the QA Dashboard implementation (Matt Droter)", "Discuss next iteration initiatives\n", "Energize Continuous Integration", "Quality Hub", "Formalize the code ownership process", "Onboarding process for core and non-core community members", "\n", "Presentation of a code analysis tool Phys (John-Paul Ore)", "The action was for me to contact Dirk Thomas and ask him to recommend some ROS 2 repositories to run a pilot for code review. Dirk suggested these repositories:\n", "ament/ament_lint", "ros2/rcl", "ros2/rclcpp", "ros2/ros2cli", "\n", "Matt Droter provided an update to the group on the ongoing work to implement the QA Dashboard. Nicolas Limpert and Matt Droter are working on the Buildfarm integration. The prototype of the dashboard is available in this link: ", "\n", "2019 initiatives were discussed briefly:\n", "Energize Continuous Integration", "Quality Hub", "Formalize the code ownership process", "Onboarding process for new comers", "\n", "John-Paul Ore presented Phys(", ") to the group. The link to slides below: ", "\n", "Gijs to raise PRs for ROS2 repositories", "Adam to ask Andrzej Wasowski to summarize the scope and intent of \u201cEnergize Continuous Integration\u201d and circulate it to the group in preparation for next meeting."], "url": "https://discourse.ros.org/t/ros-quality-assurance-working-group-feb-2019-meeting-notes/7786"},
{"title": "ROS Quality Assurance Working Group March 2019 Meeting Notes", "thread_contents": ["Gijs raised PRs against these repositories:", "It has been discussed to contact the maintainers of these repositories to kick off code review.", "Matt Droter provided an update to the group on the ongoing work to implement the QA Dashboard. Nicolas Limpert and Matt Droter are working on the Buildfarm integration. The repository details: ", "Discussion:", "Actions from the meeting:", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Actions from last meeting (Adam)\n", "Gijs to raise PRs for ROS2 repositories", "\n", "Update on the QA Dashboard implementation (Matt Droter)\n", "Nicholas, Gijs and Matt have been building the solution for the QA Dashboard. Matt will provide an update in the progress.", "\n", "Discuss next initiative, Energize Continuous Integration.\n", "ROS CI is an \u201copt in\u201d service. We suggest to query the ROS repositories to identify packages that have not opted in and contact their maintainers to understand their decision. We need to increase the adoption of CI and encourage them", "Improve \u201cbad badges\u201d: We suggest to query ROS packages with \u201cbad badges\u201d and contact their maintainers to persuade them to enhance the badges.", "\n", "\n", "\n", "ament/ament_lint", "ros2/rcl", "ros2/rclcpp", "ros2/ros2cli", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "For the QA Dashboard, we discussed whether the feature should be an \u201copt in\u201d or \u201copt out\u201d. The advantages and the consequences of both options have been discussed. There was a consensus amongst the group to opt for \u201copt out\u201d with a gradual roll out.", "The errors produced by Haros have been discussed. Andrzej suggested himself, Adnre Santos, and Gijs meet to go through these errors, and come up with a proposal.", "\n", "\n", "\n", "Adam to organize a meeting with ROS2 maintainers to discuss the launch of code review.", "Andrzej to arrange a meeting with Gijs and Andre to discuss Haros errors (by the 1st of April)", "\n"], "url": "https://discourse.ros.org/t/ros-quality-assurance-working-group-march-2019-meeting-notes/8223"},
{"title": "Talk by ALIAS ROBOTICS on Performing a security assessment over ROSIN packages", "thread_contents": ["Dear ROS Community,", "During the next ROS Quality Assurance Working Group meeting, we organized a talk by ALIAS ROBOTICS. Brief description below:", " Performing a security assessment over ROSIN packages.", " In this talk we will talk about the process that we follow at Alias Robotics for assessing the ROSIN manufacturer codebase, by using both static and dynamic analysis tools. This methodologies can be exported to other ROS packages, in an effort to create a secure codebase.", "The talk will happen during the first 30 mins of our monthly meeting in May the 2nd 2019. If you like to attend the meeting and the talk, leave me your email and I\u2019ll send you the invite.", "Adam", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/talk-by-alias-robotics-on-performing-a-security-assessment-over-rosin-packages/8704"},
{"title": "Rosmap: A tool for large-scale analysis of ROS-Packages", "thread_contents": ["Hi everyone!", "Since we found that often times we used non-indexed packages (i.e Packages that are not indexed in the ", ") while implementing our research projects, we wanted to figure out how many of these packages are out there, and whether their quality differs significantly compared to packages that are indexed.", "To accomplish this, we created a tool called ", " which gathers all repositories that can be found on the index, as well as many non-indexed packages, and gathers data about their popularity, dependencies and some obvious code-defects.", "We think that this tool might be useful for researchers and interested individuals looking to get a more representative corpus of ROS Packages, which - based on our findings - should contain more packages that are a little rougher around the edges.", "In addition to the tool, we published a paper back in Febuary at the IEEE International Conference on Robotic Computing 2019 titled  ", ", which goes more into detail describing the differences between non-indexed packages and indexed packages.", "You can find the tool, as well as usage documenation ", ".", "I would appreciate any kind of feedback! If you encounter any issues while using the tool, please don\u2019t hesitate to create an issue on Github, and I will try to address it ASAP!", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/rosmap-a-tool-for-large-scale-analysis-of-ros-packages/9015"},
{"title": "ROS Quality Assurance Working Group May 2019 Meeting Notes", "thread_contents": ["This is the meeting notes for the month of May, which occurred the 2nd of May at 6PM GMT.", "We have changed the format of our meeting. The group decided to include a 30 mins talk in every meeting followed by 10 mins for questions and discussions. The agenda below:", "ALIAS ROBOTICS talk. The ", ".", "After the talk and the discussion, Gijs presented an overview and an update on the work progress of the QA Dashboard.", "How do you call into these meetings?  Thanks.", "Leave me your email, I\u2019ll add you to the distribution list.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Talk by ALIAS ROBOTICS (30 mins). Details below", "Discussion and questions (10 mins)", "QA Dashboard updates and discussion (20 mins)"], "url": "https://discourse.ros.org/t/ros-quality-assurance-working-group-may-2019-meeting-notes/9041"},
{"title": "Software Reports", "thread_contents": ["The ROS Safety group suggested adding another test to HAROS (", "):", "Is the idea to extend HAROS with safety and security tests?  Or does each group make their own report?", "I approve the idea of adding CBMC to HAROS. It provides many useful checks on its own, but, if I remember correctly, sometimes you might have to annotate your programs with a few assertions and assumptions to get additional benefit.", "I am also curious as to how people would like to approach this integration (running only a few standard checks versus something more customized).", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Bounded Model Checker for C and C++ programs - ", "\n"], "url": "https://discourse.ros.org/t/software-reports/9441"},
{"title": "Next ROS Quality Assurance Working Group Meeting for June 2019", "thread_contents": ["Dear ROS community,", "The next ROS QA working group meeting will take place the 6th of June at 6PM GMT. This instance will include a talk by Ruffin White. The agenda and the talk\u2019s details are below:", " Security and Usability: Designing Secure Tooling That Roboticists Can Use", " Security and usability are often paradoxically portrayed as a zero-sum trade off, particularly in traditional computing; where favor of one is assumed to the detriment of the other. Yet the truth is often more nuance; especially so for cyber physical systems. In many regards, security and usability in robotics are intertwined, and should instead be thought of as a positive-sum game; where the deficiency of one aspect may deprive potential from the other. This talk will focus on how to improve the security for robotic systems by improving the usability of SROS2 tooling, and by extension the development and verification processes adopted by ROS users.", "Please let me know if you like to add anything to the agenda.", "The last couple meetings we had quality issues with Meet Google. I suggest to try Google Hangout this time.", "I got few requests for sharing my slide after the talk. I\u2019ve since then added a little more text to allow them to stand a bit more on their own, although for anyone who may have missed the meeting, I\u2019d encourage checking out the references for more context. See slideshare:", "\n", "As discussed during the meeting, this is the link to Haros Github ", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Talk by Ruffin White (30 mins). Details below", "Discussion and questions (10 mins)", "Energize Code Review in ROS: Discuss the ROS2 pilot (20 mins)"], "url": "https://discourse.ros.org/t/next-ros-quality-assurance-working-group-meeting-for-june-2019/9338"},
{"title": "Next ROS Quality Assurance Working Group Meeting for August 2019", "thread_contents": ["The next Quality Assurance Working Group meeting in taking place the ", ". The details below.", " Raising the Bar on Robotics Code Quality", " Tooling and Methodology for Robotics Software Teams building critical ROS 2 Applications.", "BTW, you can insert date ", " and times ", " inline with posts so they render wrt. reader time zones:", "Discourse Update - New Fancy Feature  With great honor, I would like to introduce you to a pretty big feature that has been introduced into this community!   Meet my new girl \"Date.\"   This new feature is going to be huge as it can be used for...", "\n    ", "Hi, I\u2019d like to join this meeting.", "At the meeting, I want to ask about the current status of the code metrics dashboard which was presented at ", " last year.", "I am currently working in a ROS-based joint project funded by the Japanese government. The code quality of ROS packages is one of our big concerns. So I got an interest in the \u201cMake ROS package quality visible\u201d work.", "I also asked a ", " on ROS Answers and found out that the buildfarm doesn\u2019t support code analyzer on it.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Talk by Thomas Moulard from AWS (30 mins). Details below", "Discussion and questions (10 mins)", "Energize Code Review in ROS: update on ROS2 pilot (10 mins)", "Discuss next quality initiative (10 mins)"], "url": "https://discourse.ros.org/t/next-ros-quality-assurance-working-group-meeting-for-august-2019/10024"},
{"title": "August 2019 Meeting Notes and Thomas Moulard Talk's slides link", "thread_contents": ["We experienced an issue joining the meeting when the meeting reached 10 attendees. I\u2019m investigating the issue and looking for other alternatives (other than Google Hangouts).", "Talk by Thomas Moulard from AWS (30 mins). Details below", "Discussion and questions (10 mins)", "Energize Code Review in ROS: update on ROS2 pilot (10 mins)", "Discuss next quality initiative (10 mins)", " ", ".", "\nRidhwan provided an update on the progress of updating the PR templates for ROS2 repositories subject to the pilot of code review. The ROS2 repositories subject to the pilot listed below:", "The PR templates for these repositories gone through few updates iterations. It is expected after one additional iteration, the updates will be merged.", "\nThe question whether another initiative should be started was asked to the group and discussed. There was a consensus that we should focus on getting the current in-progress initiatives (i.e. \u201cMaking ROS Quality Packages visible\u201d and the Code review for ROS 2) implemented first before commencing other initiatives.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "ament/ament_lint", "ros2/rcl", "ros2/rclcpp", "ros2/ros2cli"], "url": "https://discourse.ros.org/t/august-2019-meeting-notes-and-thomas-moulard-talks-slides-link/10167"},
{"title": "Next ROS Quality Assurance Working Group Meeting for Oct. 2019", "thread_contents": ["Dear ROS community,", "This next ROS QA working group will take place on  ", ". The agenda below:", ":", "\n==============Conference Bridge Information==============", "You have been invited to an online meeting, powered by Amazon Chime.", "=================================================", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Update on the QA Dashboard initiative", "Update on Code Review for ROS2 pilot for these repositories:\n", "ros_comm", "ros_control", "navigation", "ROS2 rcl_cpp", "ROS2 actionlib", "\n", "Discuss next quality initiative"], "url": "https://discourse.ros.org/t/next-ros-quality-assurance-working-group-meeting-for-oct-2019/10806"},
{"title": "ROS Quality Assurance Working Group October 2019 Meeting Notes", "thread_contents": ["\nAdam Alami (facilitator of the meeting)", "\nAkihiko Tsukuda", "\nAndrzej Wasowski", "\nJohn-Paul Ore", "\nMatt Droter", "\nMax Krichenbauer", "\nVictor Lopez", "i did not catch up when this meeting was held, was there any announcement?", "\nespecially interested in ROS2 rclcpp and actionlib.", "thanks,", "\ntomoya", "We do announce our meetings one week prior to the meeting. This is the link ", "Alternatively, I can add you to the distribution list if you like to attend the meeting in next months, just pin me your email.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Update on the QA Dashboard initiative", "Update on Code Review for ROS2 pilot for these repositories:\n", "ros_comm", "ros_control", "navigation", "ROS2 rcl_cpp", "ROS2 actionlib", "\n", "Discuss next quality initiative", "\n", ": This initiative is coming to completion for ROS 1. The back end is live and the front end (the ROS wiki component) development is completed. A PR to get the front end merged will be raised shortly (estimated next week).", "\n", ": The development of this initiative has commenced for ROS 2. The back end is progressing well. The discussion of this work shall continue Monday during the QA Dashboard meeting (a meeting dedicated to ROS QA Dashboard).", "\n", ": The pull request to add the PR template to the selected ROS 2 repositories has been reviewed and ready to be merged. One issue was put forward for discussion to the group. The last item in the checklist (i.e. \u201cWhile waiting for someone to review your PR, please consider reviewing \u2026\u201d) is not actionable and it has been proposed to convert it to a comment instead of a checkable item. The group supports Ridhwan Luthra suggestion to make it an actionable item where the author of the PR supply a link or the name of the PR she/he reviewed.", "\n", ": There was a consensus amongst the group to defer the discussion of the next QA initiative to the next month.", "Andrzej Wasowski to take the group for a social drink during ROSCon 2019. Adam Alami to organize for the event."], "url": "https://discourse.ros.org/t/ros-quality-assurance-working-group-october-2019-meeting-notes/10891"},
{"title": "Next ROS Quality Assurance Working Group Meeting for November 2019", "thread_contents": ["Dear ROS Community,", "The next ROS Quality Assurance Working Group meeting will take place: ", ". The agenda below:", "Agenda:", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "it is really hard to join from Asia Pacific Time, hopefully you would share minutes for that.", "Yes, this is a problem we have been experiencing! I don\u2019t know what the solution is? We definitely do not like to exclude participants from Asia. However, I\u2019ll raise this issue with the group for discussion.", " I use, and which the ROS 2 TSC also uses. If you want a completely fair balance you need to have three time slots spread about eight hours apart that you rotate through. How far to go needs to be decided based on your participants but don\u2019t forget to consider ", " participants, i.e. people who might participate in the future but definitely will not if only bad meeting times are available.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Update on the QA Dashboard initiative", "Update on Code Review for ROS2 pilot for these repositories:", "Discuss next quality initiative (Please, bring some ideas to discuss)"], "url": "https://discourse.ros.org/t/next-ros-quality-assurance-working-group-meeting-for-november-2019/11334"},
{"title": "Remote access tutorial extremely insecure", "thread_contents": ["This tutorial:", "\n", "Encourages new comers to support remote ROS access via PortForwarding. This is tremendously insecure and directly exposes ROS systems to simple drive by attacks on the internet. This is highly in-advisable to the point we should probably pull that section entirely. I am of-course hesitant to delete wiki content, but its clear we need to review Tutorials for security implications.", "How should we go about improving security documentation?", "For that tutorial in particular I think a boxed security warning at the top should be sufficient.", "As to documenting security issues around ROS 1.x, I would suggest asking the security working group to make a recommendation.", "As to SROS I not familiar enough with it yet to make a recommendation either way. Perhaps the security WG has more insight.", "Huh, I\u2019ve never seen that tutorial. Looks like it was added a year ago or so. I agree, it at the very least needs a large warning up there. I\u2019d rather see it rewritten to use ", " or ngrok or something similarly temporary, but then it moves away from the paper it\u2019s touting. I wouldn\u2019t consider SROS a solution in this case.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Should we flag/tag potentially insecure guides such as this?", "Do we need to improve documentation of the security issues around ROS 1.x?", "Should we advise SROS usage in these types of use cases instead?\n", "Is SROS easy enough for new comers that this is viable?", "\n"], "url": "https://discourse.ros.org/t/remote-access-tutorial-extremely-insecure/11403"},
{"title": "Next ROS Quality Assurance Working Group Meeting for December 2019", "thread_contents": ["Dear ROS community,", "The QA Working Group for the month of December will take place ", ".", "Agenda:", " 188 ROS bugs later: Where do we go from here?", "\n", " What kinds of bugs do programmers encounter when developing ROS applications?", "\nAre those bugs unique to ROS? What can we do to avoid them?", "\nTo answer these questions, we have been conducting a joint industry-academia effort over", "\na two-year period to systematically identify and forensically analyse 188 bugs across 9", "\nROS packages from diverse projects. In this talk, we share our experiences, discuss our", "\nfindings, and propose a small set of simple interventions that can improve the quality of", "\nyour ROS applications today.", "Please, let me know if you like to add item to the agenda for discussion?", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "Thanks ", " for managing ", " , how shall we join the meeting?", "Please find below a couple of suggestions for the discussion in case you consider them appropriate:", "Thanks!", "Thanks Victor,", "I omitted including the conference details. I edited the post to include the conference details. I also added your suggested items to the agenda.", "Dear all,", "Some of us are having problem logging into Amazon Chime. Will switch to Google Hangout. The link below", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Talk by Dr. ", "\n", "Discuss how we can accelerate the review and merge of the current initiatives:\n", "QA Dashboard. ", " to the pending PR.", "The CI Badge for ", ". ", " to the pending PR.", "The list of pending PRs for review. ", " to the pending PR.", "\n", "Discuss next quality initiative.\n", "Gijs proposed a warning message for outdated ROS packages Wiki pages.", "HAROS for ROS 2", "Quick introduction to quality flaws identified while researching on security", "\n", "HAROS for ROS 2", "Quick introduction to quality flaws identified while researching on security"], "url": "https://discourse.ros.org/t/next-ros-quality-assurance-working-group-meeting-for-december-2019/11697"},
{"title": "Display 'Continuous Integration' badge on index.ros.org", "thread_contents": ["Hi everyone!", "In order to get more input on a ", ", I\u2019d like to start the discussion here as well.", "The idea is to display a badge on rosindex package pages that illustrates the status similar to the one currently displayed on wiki pages.", "\nHere is a screenshot of the current PR:", "\n", "Information shown on mouse-over / hover / as tooltip:", "\n", "What I would like to know is", "\n(A) everyone\u2019s opinion ", "(B) how to deal with packages that don\u2019t have a  ", "  on the doc server - which are quite a lot.", "\nThe wiki code just seems to give them a CI badge anyways.", "\nI thought this was a bug / missing feature and made it look for the  ", " .", "What should be the expected behavior for packages that are on the build farm and have build success or failure recorded in their  ", " , but no  ", "  for their repo?", "Right now, the flow is:", "\n(1) check for  ", "  (package-base)", "\nIf none is found, show \u201cNo CI\u201d bagde.", "\n(2) check for  ", "  (repository based)", "\nIf none is found, show simple CI badge with no additional information.", "\n(3) parse  ", "  for additional information and display extended badge with test results if available.", "Please let me know your opinion.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/display-continuous-integration-badge-on-index-ros-org/11821"},
{"title": "Contribution Suggestions Page (index.ros.org)", "thread_contents": ["\nPeople who are willing to contribute in ROS may not know where to start.", "\nLikewise, when meeting people and convincing them to contribute, you might not have a place to direct them to where their contribution is needed and welcome.", "\nAdd a page to ", " that lists open issues and PRs where help is needed or reviewers are invited.", "\n", " is parsing the github repos of packages on a regular basis, so extracting this information and putting it into a static list does not add much overhead.", "\nThe list can use labels such as ", ", ", " or ", " to filter and prioritize issues / PRs. A positive side effect of this could be an increased motivation to maintainers to use standard labels.", "\nThe list can also be sorted by the language used (C++ or Python) so that people can choose according to their own skill.", "The PR is open at ", "Here is a screenshot of the current version:", "\n", "\n", "Please let me know what you think.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/contribution-suggestions-page-index-ros-org/11822"},
{"title": "Reproducing Cyclone DDS benchmarks made by iRobot", "thread_contents": ["Hi ROS Developers,", "\nat ", " we made a rosject containing everything ready to apply the ", " to Cyclone DDS. It works for ROS2 Eloquent.", "The rosject contains the tests already installed, as well as Cyclone DDS. We also provide full documentation about how to launch the tests and get the results.", "Here the rosject: ", "\nClick on the link to launch the rosject", "Related to that, if you are interested in the interview I made to Joe Speed from ADLink (the company behind Cyclone DDS) for the ROS Developers podcast, where he explains about those results and much more, listen to it here: ", "(I think this post belongs to the ", " category because it is showing a tool to reproduce results, which can be directly applicable to quality assurance. Please correct me if I\u2019m wrong).", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/reproducing-cyclone-dds-benchmarks-made-by-irobot/11861"},
{"title": "Showing 'age' of ROS wiki content", "thread_contents": ["I\u2019d like to post a request-for-comments for the following PR against ", ":", "Our very active member ", " has submitted this PR following a suggestion I made to the SQWG some time ago to see whether we could improve the situation regarding outdated content on the ROS wiki.", "This suggestion was based on my personal experience with questions on ROS Answers posted by (new) users about unclear or incomplete (or sometimes even incorrect) instructions or information on ROS wiki pages, combined with the results of one of the earlier community-oriented studies performed in the ROSIN project (which showed that newcomers are particularly frustrated by the fact that it\u2019s almost impossible to figure out whether a source of information is still relevant (be it a wiki page, tutorial or blog post)).", "As a first approach, the PR implements an extension to the wiki which shows a notice at the top of the wiki page whenever the ", " property is older than some configurable threshold. Like so:", "This is of course just an example.", "As this is just simple thresholding, it\u2019s not too sophisticated, and one of the comments by ", " was very valid (from ", "):", "I am pretty sure there are numerous pages which haven\u2019t been touched for years but their content is still as valid / relevant / up-to-date as it needs to be. And also some pages might have recently been touched for minor changes but still contain outdated content", "The main problem is of course the fact that to do this properly (ie: determine whether content is still relevant), understanding of both the content ", " the state-of-the-art would be necessary (something not very easily captured in 25 lines of Python). In essence, this would require humans to be part of the process.", "While it would be great if we could all keep the ROS wiki up-to-date, the past years have shown this to not happen. Including humans all the time seems infeasible.", "The idea however of this simple PR would be to add at least ", " indication of potentially outdated information, under the assumption that with a project as active as ROS, the fact that a wiki page hasn\u2019t been edited in (say) 2 years does indeed mean there is a relatively high chance that at least ", " things may not work any more as they are described or documented.", "Such a notice does of course not really solve the problem (as for that a human would need to update the page and correct any issues), but instead of not showing anything (by which we implicitly state the page as-is documents the current state of things and everything ", "), we at least acknowledge the fact that things could have changed ", " we warn the reader that he should be aware of this.", "I\u2019d like to ask people here to comment on the PR and voice their opinions.", "It would be great if we could figure out some solution, especially also because of the ROS 1 -> ROS 2 migration, which will probably mean we\u2019ll see more-and-more content becoming stale in the near future.", "\u201cVerified for melodic\u201d badges could also be a way, I think ubuntu wiki uses those? Can and probably should be combined with the age warning. This would also allow for a very legitimate reason to \u201creset\u201d the age.", "Another suggestion: is it possible to search for old/outdated pages? Possibly weighted by relevance (hit counter)? This would allow highly motivated people to quickly find the worst offenders.", "The idea however of this simple PR would be to add at least ", " indication of potentially outdated information", "How about doing exactly what the title of this post says: \u201cShowing \u2018age\u2019 of ROS wiki content\u201d? But with no implication that a certain age automatically means \u201coutdated\u201d. Then the reader is aware how old the information is and can make their own decision as on any other website on the internet.", "the fact that a wiki page hasn\u2019t been edited in (say) 2 years does indeed mean there is a relatively high chance that at least ", " things may not work any more as they are described or documented.", "I disagree with that statement and if necessary can easily come up with numerous pages which clearly disprove this heuristic. Whatever the chances for being outdated are - marking pages which are not outdated with such a note will make readers even more confused imo.", "Thank you all very much for your comments!", "I understand that a clear statement (\u201cthis page is outdated\u201d) cannot be made from the last-edit date.", "\nBut if we only display the date without any context, I\u2019m not really sure if that helps the reader in any way. It\u2019ll just take up real estate on the page.", "So my suggestion is to change the text to:", "\n", "My reasoning is this:", "(1) This PR only applies only to package pages, not to tutorials or general ROS information.", "(2) If a package is still being maintained, that means that the maintainer is still looking at it at least once a year, even if nothing changes. Usually there should be at least a minor version update once a year to adjust to changing versions of tools etc. or at least answer the questions asked by users.", "(3) If the package is updated or at least checked, it would be \u201cstandard operating procedure\u201d to also check and update the wiki page. At least to increase the version number or add another user\u2019s question to the \u201cFAQ\u201d.", "(4) Not keeping the version in the wiki up-to-date or not sharing solutions to user\u2019s common problems is not so good. The maintainer should receive a friendly reminder.", "(5) Automated reminders (if they are even possible in the wiki system) are likely to be ignored. We love robots but in the end, we value human interactions higher. So a message from a human will have more effect. Doubly so because it is someone genuinely interested in the package. So the maintainer will be motivated as he sees that his package is still being actively used.", "(6) Sorry if I offend people, but in my humble opinion a maintainer who does not at least once a year spend 5 minutes to check on his documentation, and who does not want to be contacted by users asking about his package should not be considered a \u201cmaintainer\u201d. If he\u2019s too busy (understandably) then he should find someone else or marked the project \u201cabandoned\u201d, because matter-of-fact it is.", "I\u2019m new to this community so please excuse if my views don\u2019t reflect reality or offend anyone.", "\nPlease let me know what you think so I can learn better how to help improve the situation.", "I\u2019m not convinced this is a good idea. The date of the last edit is a poor indicator of how complete and relevant a wiki page is. There are plenty of packages that are still maintained and work fine but are not under active development (i.e., the ROS API is stable), so there is no need to update the wiki page. On the other hand, there are also plenty of new packages with shoddy documentation. As a maintainer, I\u2019d prefer to get emails (or better: GitHub issues) pointing to specific flaws in the documentation than just \u201chey, I got this warning message telling me to ask you if the documentation is still up-to-date. Is it?\u201d.", "Also, by my guesstimate, for every 10 users that run into a problem, there\u2019s at most 1 who actually contacts the maintainer. A warning like this would probably just create the impression that 90% of the documentation on the wiki is outdated, and newbies would be more confused but not feel confident enough to actually contact the maintainer, so the maintainer wouldn\u2019t even be aware of this problem.", "I\u2019m new to this community so please excuse if my views don\u2019t reflect reality or offend anyone.", "Welcome to the community and thanks for making it better! I don\u2019t think anyone will be offended by suggestions (and actual pull requests) for improvements.", "As an aside: You are absolutely correct that there is often a mismatch between the documentation on the wiki and the actual code. In recent years, I\u2019ve moved most documentation of my packages from the wiki to the GitHub README. This makes it easier to actually keep documentation and code in sync.", "\u201cVerified for melodic\u201d badges could also be a way, I think ubuntu wiki uses those? Can and probably should be combined with the age warning. This would also allow for a very legitimate reason to \u201creset\u201d the age.", "Another suggestion: is it possible to search for old/outdated pages? Possibly weighted by relevance (hit counter)? This would allow highly motivated people to quickly find the worst offenders.", "I really like both of these suggestions. Especially the \u201cVerified for melodic\u201d badges would provide a great motivation to completionists like me to actually go over every wiki page, check it and add the badge!", "As a maintainer, I\u2019d prefer to get emails (or better: GitHub issues) pointing to specific flaws in the documentation than just \u201chey, I got this warning message telling me to ask you if the documentation is still up-to-date. Is it?\u201d.", "I understand that. Then maybe a wording like ", ", so people understand that it may be outdated but won\u2019t actually send an email until they actually have problems.", "About the ", ", I don\u2019t understand the logic.", "\nIf you say that being old doesn\u2019t mean it\u2019s outdated, then why are they considered \u201cworst offenders\u201d?", "\nNow instead of warning the actual users of the package (who have an interest and maybe some insight), you have highly motivated zealots who contact maintainers because their pages are outdated.", "About the ", " , I don\u2019t understand the logic.", "\nIf you say that being old doesn\u2019t mean it\u2019s outdated, then why are they considered \u201cworst offenders\u201d?", "\nNow instead of warning the actual users of the package (who have an interest and maybe some insight), you have highly motivated zealots who contact maintainers because their pages are outdated.", "I wasn\u2019t aware that this discussion only applies to \u201cpackage-related\u201d wiki pages and was thinking more along the up-keeping of general information that does not have a clear maintainer.", "Then maybe a wording like ", " , so people understand that it may be outdated but won\u2019t actually send an email until they actually have problems.", "I like that wording better than the previous one.", "About the ", " , I don\u2019t understand the logic.", "\nIf you say that being old doesn\u2019t mean it\u2019s outdated, then why are they considered \u201cworst offenders\u201d?", "Ha, you got me there. ", " Actually this was a quote from ", "\u2019s post. I read it in the context of his badge proposal, to help people who want to update the wiki find the best candidates to check.", "To expand a bit on the badge idea - I couldn\u2019t find anything like this on the English Ubuntu wiki, but the German ubuntuusers wiki has a box at the very top of each page that translates to \u201cThis article has been tested on the following Ubuntu versions: * Ubuntu 19.10Eoan Ermine, \u2026\u201d. For example:", "In my opinion, this conveys much more useful information to the user than a warning based purely on the last edit date.", "They also have a meta page that automatically lists all untested articles: ", " (where \u201cuntested\u201d means that it\u2019s not marked as tested on any of the currently supported Ubuntu versions (16.04, 18.04, 19.04, 19.10)). This is to encourage users to find articles in need of testing and mark them as \u201ctested\u201d where appropriate, or update them.", "\nThank you for the input.", "\nI\u2019ve changed the message accordingly, but for the badges I feel this would be a different PR.", "\nIf you can gather enough support to get such a PR reviewed and accepted, I can work on implementing.", "\nWhat do you think?", ": Since you specifically asked me for my opinion: It hasn\u2019t changed. I still believe that this PR does more harm than good - having warnings pop up on most of the wiki pages based on an arbitrary metric will only confuse users without providing much benefit. From the comments there and on the ", ", several others seem to share my concerns. Sorry for being so blunt - I\u2019m grateful that you are working on making the wiki better!", "for the badges I feel this would be a different PR.", "\nIf you can gather enough support to get such a PR reviewed and accepted, I can work on implementing.", "I\u2019m not sure how I would go about gathering support. I\u2019ve already stated my support, and ", " was the one that suggested the badges, so I\u2019d count him in the \u201cpro-badge\u201d team as well. ", " Maybe some of the others that have commented here and on the GitHub PR could state their opinion on the badge idea? (", ", ", ", ", ")", "No worries, thanks for the straight answer.", "\nI don\u2019t know if it\u2019s a good or bad idea myself. I just implemented it because as part of my work for the ROS QA working group, where ", " suggested it and the other members supported it.", "What I meant by support is if you can (if the implementation is deemed acceptable) merge it or can lobby for the merge.", "\nI already have a couple of open PRs that are just being ignored (not rejected, just ignored), so this time I\u2019d like to know before starting to work on it. ", "What I meant by support is if you can (if the implementation is deemed acceptable) merge it or can lobby for the merge.", "I can\u2019t merge it, since I\u2019m not a maintainer of ros-infrastructure.", "I already have a couple of open PRs that are just being ignored (not rejected, just ignored), so this time I\u2019d like to know before starting to work on it.", "That sounds like a good idea, so let\u2019s have the discussion before the implementation. Since the proposed change affects all ROS users, it would be good to have a thorough discussion anyway. Maybe you should create an issue for this on the ros-infrastructure GitHub repo and post the link here to invite comments from the community?", "Maybe you should create an issue for this on the ros-infrastructure GitHub repo and post the link here to invite comments from the community?", "I would greatly prefer someone else can do it. It\u2019s not my idea, I don\u2019t understand the community around it,  and it\u2019s not up to me to decide if this is ", " work.", "\nSo if ", " or ", " or ", " or you could start the conversation, that would be much appreciated.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/showing-age-of-ros-wiki-content/11806"},
{"title": "ROS Quality Assurance Working Group December 2019 Meeting Notes", "thread_contents": ["\nAdam Alami (facilitator of the meeting)", "\nDr. ", "\nGijs van der Hoorn", "\nJohn-Paul Ore", "\nMatt Droter", "\nMatt Robinson", "\nMax Krichenbauer", "\nRidhwan Luthra", "\nV\u00edctor Mayoral Vilches", "Agenda:", "Thanks for the report ", "!", "We ran out of time. We couldn\u2019t discuss these two items:", "Too bad we couldn\u2019t have time for this ", " . Regarding HAROS, I wanted to call for additional input on anyone trying this actively. We are starting to (as pointed out in a previous meeting) and would be happy to share our experiences if anyone\u2019s interested.", "Regarding the second item, I understand it might be of less interest to the group given the fact that is mostly security-related (though quality and security interconnect in some cases). Would it make sense to try again this second item in the next telco? A 15-20 min slot would be enough to share a few bits of our work there. We\u2019ve made an effort to align with ROSin robusts\u2019 work so in a way, it follows from Chris\u2019s talk.", "Definitely. Will dedicate 15 mins to both items in next meeting.", "Fantastic! We will prepare accordingly then.", "Hi V\u00edctor,", "(Sorry if this is hijacking the topic a little)", "Regarding HAROS for ROS 2, I would like to add here that Max Krichenbauer submitted a PR some time ago which adds support for ROS 2 workspaces. This is already available in the current release.", "Hi Victor,", "\nSorry for the late follow-up and sorry we didn\u2019t have time to talk about this anymore last Thursday.", "As Andre already pointed out, I\u2019ve been working on making HAROS \u201cROS2-ready\u201d.", "Apart from the PRs that allow it to find ROS2 packages,", "\nthere is also a ROS2 (ament) linter package in development:", "\n", "Contribute to esol-community/ament_lint development by creating an account on GitHub.", "\n", "\nWith this, you can simply add ", " as a test dependency, and HAROS will be automatically installed in an appropriate virtual environment and run to analyze your code.", "\nIt\u2019s still under development, but should already work for both ", " and ", " packages.", "Could you please let me know why you\u2019re interested in the topic? Than I can make sure that future development will cover your use case.", "Best regards,", "\nMax", "I am glad to see ", " 's talk being circulated more widely. It is a great piece of work and deserves a wider audience. The ROSCon videos should be up shortly, but I think this work could have a lot of impact as a blog post. It would be great if the original authors would be able to summarize their work in document so we could point new users to it. I might be able to find a platform to publish the work on if that were to happen.", "I would like to know what needs to happen with respect to the Wiki last edited PR. Is there anything I can do to help gather requirements?", "I would like to know what needs to happen with respect to the Wiki last edited PR. Is there anything I can do to help gather requirements?", "Thank you!", "\nI think it would need a reviewer and of course more people voicing their opinion either in favor or against it.", "\n", "\n", "Thanks, ", "! I don\u2019t think that we had considered summarising the work as a blog post / a concise document for ROS developers, but that seems like a brilliant idea that we should definitely prioritise ", " If you could help us to publish such a document, that would be fantastic!", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Talk by Dr. ", "\n", "Discuss how we can accelerate the review and merge of the current initiatives:\n", "QA Dashboard. ", " to the pending PR.", "The CI Badge for ", ". ", " to the pending PR.", "The list of pending PRs for review. ", " to the pending PR.", "\n", "Discuss next quality initiative.\n", "Gijs proposed a warning message for outdated ROS packages Wiki pages.", "HAROS for ROS 2", "Quick introduction to quality flaws identified while researching on security", "\n", "\n", " : The ", " to the talk slides.", "\n", " :  We discussed the various reasons why our PRs are not attended, reviewed and merged. One of the reasons we discussed is not engaging the community adequately and socializing the QA initiatives. We decided to make a \u201cCall for comments\u201d posts for all our initiatives. The posts will call for people to comment and contribute to the PRs discussions.", "\n", " : This initiative was discussed. The conclusion is that a community consultation should continue in order to have precise requirements of what it needed to happen in order to address the problem.", "We ran out of time. We couldn\u2019t discuss these two items:\n", "HAROS for ROS 2", "Quick introduction to quality flaws identified while researching on security", "\n", "\n", " and ", " to post in the QA Forum \u201cCall for Comments\u201d for the pending initiatives\u2026", "HAROS for ROS 2", "Quick introduction to quality flaws identified while researching on security"], "url": "https://discourse.ros.org/t/ros-quality-assurance-working-group-december-2019-meeting-notes/11824"},
{"title": "Next ROS Quality Assurance Working Group January 2020", "thread_contents": ["Dear all,", "The QA Working Group meeting for January 2020 will take place ", ". The agenda below:", "Please contribute to the review of our current initiatives:", "\n", "Can I make a proposal, that if we have some extra time, that we also discuss this REP?", " unfortunately I will be on vacations and won\u2019t be available to join this meeting. May I suggest replacing me with ", "\u2019s proposal. Aligning on this seems pretty relevant IMHO.", "Also, a few corrections:", "I never intended to \u201cintroduce HAROS for ROS 2\u201d, as described by ", ", there\u2019s already prior work and my intention was to drive a bit the discussion, understand the experience of others so far and share ours. Not much to present from our side so far.", "V\u00edctor Mayoral Vilches ", " will introduce \u201cquick introduction to quality flaws identified while researching on security\u201d (10 mins)", "With this I essentially intented to present some of our recent work on ", ". We made a presentation two weeks ago in ROS Industrial Conference and describe it briefly at ", ". This is a funded effort which we\u2019ll continue with. I will reach out and try get another spot later next year ", "Cheers,", " and ", ", I changed the agenda accordingly.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Talk by Guido Schaefer and Arne Felgentr\u00e4ger from ", " (20 mins for the talk followed by 10 mins questions and discussion)", "\nTitle: Open source scanning for ROS packages", "\nTalk description: Presentation of the problem in product development by using open source in ROS when heading towards software deliveries with the obligation of fulfilling all license terms. Method and result of open source scanning of the ROS core.", "Ridhwan Luthra ", "  will present a potential quality initiative to improve the ROS packages Wiki pages (10 mins)", "Discuss ", " (15 mins)", "Briefly discuss to move the meeting to 1PM GMT to make the timing more friendly for participants from California and West coast USA. (5 mins)", "QA Dashboard. ", " to the pending PR.", "The CI Badge for ", ". ", " to the pending PR.", "The list of pending PRs for review. ", " to the pending PR.", "V\u00edctor Mayoral Vilches ", " ill introduce HAROS for ROS2 to the group for discussion (10 mins)"], "url": "https://discourse.ros.org/t/next-ros-quality-assurance-working-group-january-2020/12013"},
{"title": "REP-2004: Package Quality Categories", "thread_contents": ["Was just opened by ", " on ", ":", "With previous discussion here:", "Seems like a topic that would fit here in this category.", "Indeed, but it is a draft pr because I haven\u2019t gotten around to reformatting it yet from where I copied it from. So if you\u2019re reviewing it now, please keep that in mind. I was going to post on discourse when I had fixed it up but I\u2019ll post again here when I\u2019ve done that.", "Of course.", "I just wanted to make sure the ", " community was aware of this PR and the discussion.", "I\u2019ve posted some comments on the PR.", "I have added some of my thoughts and comments and some suggestion on potential quality badges/levels in the REP-2004 thread, for others to consider.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/rep-2004-package-quality-categories/11988"},
{"title": "Bosch ROScan Talk Slides", "thread_contents": ["In the last ROS Quality Assurance meeting, we had a talk from Bosch on ROScan. This is the ", " to the slides.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/bosch-roscan-talk-slides/12399"},
{"title": "Next ROS Quality Assurance Working Group February 2020", "thread_contents": ["Dear all,", "The ROS Quality Assurance Working Group will take place ", ". The meeting agenda below:", "\nTwo ROS 2 initiatives have been merged recently thanks to the effort of ", " and ", " . I suggest to discuss the impact of these tow initiatives and how we can leverage them to enhance quality.", "I also suggest to discuss pending initiatives and how we can accelerate their implementation.", "\n", "Perhaps we should add this paper to the agenda for the next meeting: ", "Has the QA WG discussed/reviewed the proposed REP-2004 previously?", "\n", "\n", "Also where I could I review previous WG meeting notes?", "Yes, we discussed it briefly last month. All our meeting notes are available ", ".", "I missed yesterday\u2019s meeting, but was the guidelines paper discussed already? I think it\u2019d be really cool to have ", " as a speaker for the regular presentation slot in an upcoming meeting.", "No the paper was not discussed. Happy to invite ", " for a talk in April.", "Thanks for inviting, I will be glad to present the guidelines in the next meeting.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["CI Badge for ROS2: The aim of the badge is to display the test results of the CI service. This objective is to encourage maintainers and packages authors to use the CI service and write more tests. This is the ", " to the pull request which shows examples of various scenarios.", "Pull Requests review: Max ", "  suggested to make contributing more obvious and visible to community members via the package webpage in the ", ". He suggested to add a \u201cContributing\u201d sections to ROS 2 packages webpages with tiles to link to the lists of PRs and issues that requires help. This is a ", " to an example and this is the ", " to the PR.", "QA Dashboard.  ", " to the pending PR.", "Code review for ROS 2. ", " to the pending PR."], "url": "https://discourse.ros.org/t/next-ros-quality-assurance-working-group-february-2020/12571"},
{"title": "Guidelines on how to architect ROS-based systems", "thread_contents": ["Hi all,", "\nin collaboration with researchers of the Carnegie Mellon University and the Vrije Universiteit Amsterdam, we defined a set of 49 guidelines about how to architect ROS-based systems. You can find the guidelines and the steps we performed for extracting them ", ".", "Since we are just starting to do this kind of research on ROS, any possible feedback is ", " welcome!", "\nWhat do you think about this kind of research? Do you find it useful? Is there some other aspect of ROS which you think is worth this kind of activities?", "The full dataset we used for extracting the guidelines from GitHub repositories is available ", ".", "Thanks!", "Ivano", "This is absolutely fantastic. Would you be interested in presenting your results to the quality working group?", "These guidelines are stunning. Thanks a lot for sharing.", "Many thanks for sharing this! I read the whole paper and found lots of useful information! I will allow to share it on ", " as I\u2019m sure many people will find it useful.", "Here are some things I think I would find useful mingled with some suggestions:", "Many thanks for putting this together!", "Hi Katherise, sure, please let me know when it will be and I will check if I can manage to participate.", "Thanks for the invitation!", "Many thanks for sharing this! I read the whole paper and found lots of useful information! I will allow to share it on ", " as I\u2019m sure many people will find it useful.", "Here are some things I think I would find useful mingled with some suggestions:", "Many thanks for putting this together!", "Thanks Mateusz!", "\nIt\u2019s a pleasure to be included in the Weekly Robotics mailing list.", "About your mentioned points:", "External packages: I agree, this may also create maintainability issues since then you need to manually check if the added packages have been updated, right?", "This shouldn\u2019t be too much of an issue actually:", "The second bullet is also less of a problem when using Git submodules, but I tend to not use those (for various reasons).", "Comment/suggestion: this would be a great post for ", " category, instead of here in ", ". You could consider moving the post there.", ": could you perhaps also say a bit more on the repository selection process? The paper doesn\u2019t seem to explain how you selected the initial set of repositories (ie: before you started pruning).", "External packages: I agree, this may also create maintainability issues since then you need to manually check if the added packages have been updated, right?", "This shouldn\u2019t be too much of an issue actually:", "The second bullet is also less of a problem when using Git submodules, but I tend to not use those (for various reasons).", "Right, it all makes sense, thanks Gijs for the hints.", "Comment/suggestion: this would be a great post for ", " category, instead of here in ", ". You could consider moving the post there.", "Yes, indeed, it started as an announcement and it is becoming a full discussion now ", ": could you perhaps also say a bit more on the repository selection process? The paper doesn\u2019t seem to explain how you selected the initial set of repositories (ie: before you started pruning).", "Sure. The initial set of target repositories has been defined by reusing two other research contributions:", "Thanks again for the suggestions!", "Many thanks for the launch files paper! Will definitely have a look at it!", "External packages: yes, if you use submodules then you need to manually sync them with upstream, especially if there are some interesting developments in there for you.", "Bagfiles: I know that chossing \u201ctop platforms\u201d in unbiased manner is a challenge but maybe you can select them based on number of stars in the repo? Or you can be biased and say: these platforms do everything correctly in our view, check out examples of their raw data.", "I\u2019m now realizing that the bagfile data project I\u2019m proposing might not necessarily be fit for a research project but having something similar to ", " but for Robotics could be very interesting. ", " maybe OpenRobotics could lead such effort? I\u2019d be up for writing a chapter on some platform if this was to become a thing.", "Sorry I went even more off topic here ", "Many thanks for the launch files paper! Will definitely have a look at it!", "External packages: yes, if you use submodules then you need to manually sync them with upstream, especially if there are some interesting developments in there for you.", "You are welcome! And thanks for the clarification on the external packages.", "Bagfiles: I know that chossing \u201ctop platforms\u201d in unbiased manner is a challenge but maybe you can select them based on number of stars in the repo? Or you can be biased and say: these platforms do everything correctly in our view, check out examples of their raw data.", "In empirical software engineering there are many ways in which this bias may be controlled. For example, ", " is a paper about the do\u2019s and dont\u2019s related to the treatment of third-party GitHub repositories for scientific purposes.", "I\u2019m now realizing that the bagfile data project I\u2019m proposing might not necessarily be fit for a research project but having something similar to ", " but for Robotics could be very interesting. ", " maybe OpenRobotics could lead such effort? I\u2019d be up for writing a chapter on some platform if this was to become a thing.", "Sorry I went even more off topic here ", "This is ", " interesting for me (and for my research group) and we are definitely willing to help and put effort in this!", "Awesome paper, thanks!", "This is probably in the paper and I just missed it, but do you have any recommendations on the best way to document the system architecture? The paper says:", "\u2026 documented architecture (i.e. the system is described in terms of nodes, services, topics, and their configuration).", "Are these best described in a single README file or as ROS node graphs with text descriptions or do you have some other example of great architecture documentation that the rest of us can follow?", "Is there one particularly excellent architecture that could be used as a starting point for most other robot architectures? Perhaps something like the Niryo One five layers architecture of external communication, command, motion planning, control, and hardware? Or are most robots unique enough to require independently designed architectures? Thanks!", "The robot operating system (ROS) is ", " de-facto standard for robotic software.", "I can\u2019t wait for this to be published for me to be able to cite that zinger.", "Thanks Peter, here are my thoughts on your points.", "This is probably in the paper and I just missed it, but do you have any recommendations on the best way to document the system architecture? The paper says:", "\u2026 documented architecture (i.e. the system is described in terms of nodes, services, topics, and their configuration).", "Are these best described in a single README file or as ROS node graphs with text descriptions or do you have some other example of great architecture documentation that the rest of us can follow?", "My experience with this study is that people document the architecture of their systems in a very heterogeneous way, ranging from raw node communication graphs, to box-and-line diagrams done in Powerpoint, etc. Actually, in the dataset I collected a direct link to each Architecture documentation, you can refer to the \u201cSA documentation\u201d column ", " and explore.", "About recommendations, I think that the best architectures (in terms of documentation) are the ones combining a graphical representation (of both nodes, topics, and pub/subs) and a textual description of the main responsibilities of each node. Personally, I also like those in which you have a high-level architecture description at the beginning and then details are provided in a top-down fashion, such as in ", ".", "Is there one particularly excellent architecture that could be used as a starting point for most other robot architectures? Perhaps something like the Niryo One five layers architecture of external communication, command, motion planning, control, and hardware? Or are most robots unique enough to require independently designed architectures? Thanks!", "This is difficult to say. I think it is doable to have some kind of reference architecture for robots belonging to specific domains (e.g., delivery robots, or industrial arms), but it really depends on the requirements and regulations of each domain. If we want to be generic and cover all application domains, maybe the Niryo One layered architecture is a good candidate, but I doubt it will be able to cover all possible needs. Funnily enough, in these weeks I am working with a group of researchers between Italy and Sweden on a generic platform for (1) specifying reference architectures of arbitrary application domains (e.g., delivery robots) and (2) automatically checking the compliance of specific architectures against the reference architecture of their domain. I will keep you posted about it, if you are interested ", "Cheers!", "Ivano", "Funnily enough, in these weeks I am working with a group of researchers between Italy and Sweden on a generic platform for (1) specifying reference architectures of arbitrary application domains (e.g., delivery robots) and (2) automatically checking the compliance of specific architectures against the reference architecture of their domain. I will keep you posted about it, if you are interested", "I would be very interested, thanks!", "The MoveIt documentation looks fantastic. I imagine it takes a lot of manual work to make it look that nice. Do you think it is possible to generate system architecture documentation automatically, even if it does not look quite that good, in a standardized way that makes it easy to compare architectures and subsystem compatibility? Maybe something like rqt_graph. I do not know how much could be determined statically and how much would need runtime information. Or does proper documentation require high level information that you cannot get from a set of packages alone? It seems like if you have enough information to check the compliance of an architecture then you would have enough information to automatically create documentation for it.", "Maybe something like rqt_graph. I do not know how much could be determined statically and how much would need runtime information.", "Here goes another shameless plug.", " is able to extract the computation graph statically - to some extent.", "An automatic documentation generator is something I have been meaning to do for a while, but never got the opportunity. I might have some time in a couple of months.", "Andr\u00e9 Santos", "Hi Peter,", "\nas soon as we will publish the paper I will come back to you with a copy of it. ", "About the automatic generation. There are approaches and some of them are pretty cool (see Haros by Andr\u00e9 in his other message), but the problem is still very hard, specially with ROS where the \u201carchitectural connectors\u201d emerge only at run-time, basically when you publish/subscribe to specific topics. Interestingly, in ROS it is \u201cfairly simple\u201d to identify the main components of the architecture, but the connects are difficult to extract.", "And yes, it could be fantastic (also for us, researchers) to have a standard notation for representing the architecture of robotics systems and to be able to compare architectures across systems, types of robots, and application domains. This would open up for large-scale studies where we could extract even more details information from the system, even more than architecting guidelines!", "HAROS is able to extract the computation graph statically - to some extent.", "HAROS looks really interesting thanks! Do you have plans to extend it to ROS 2? Could it work with just vcstool yaml files or does it need more information in its configuration files?", "Interestingly, in ROS it is \u201cfairly simple\u201d to identify the main components of the architecture, but the connects are difficult to extract.", "Would the ", " help with extracting all of the necessary connections between components?", "Do you have plans to extend it to ROS 2?", "Not right now, although a few community members have contributed in that regard.", "\nIn a few months I might get into another project which, likely, will require ROS 2 support at some point.", "Could it work with just vcstool yaml files or does it need more information in its configuration files?", "It does need its own YAML files with a little extra information, unfortunately. That is also something I want to address whenever I have the time to start working on v4.0.", "Btw, thanks for sharing that PR with the Node IDL! I had no clue it was a thing, and it might be useful for HAROS, since I already have a similar mini language going on.", "Btw, thanks for sharing that PR with the Node IDL! I had no clue it was a thing, and it might be useful for HAROS, since I already have a similar mini language going on.", "Please do review that PR, we\u2019re developing the code behind it now. It sounds like we have similar interests, and I\u2019d love to make sure your use-case is empowered.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["I\u2019d be very interested to learn about the depth of launch files used in the analyzed projects. Quite often we have launchfiles including other launchfiles. Wonder what is the maximum depth that can be found in the wild", "I\u2019d also mention some guidelines on adding external packages. Ideally we want to list them as dependency and make rosdep handle it for us but sometimes packages are not released or we need to fork them in which case submodules are helpful (what I usually use but I know some people use some other repo managers)", "What would be a killer for me is if someone took top 5-10 \u201ctop repos of platforms\u201d and recorded bag files with representative data. I think this would be very useful for \u2018good practices\u2019 as you can quickly see how the whole stack works what kind of sensor data is provided and in what format etc.", "I\u2019d be very interested to learn about the depth of launch files used in the analyzed projects. Quite often we have launchfiles including other launchfiles. Wonder what is the maximum depth that can be found in the wild", "I\u2019d also mention some guidelines on adding external packages. Ideally we want to list them as dependency and make rosdep handle it for us but sometimes packages are not released or we need to fork them in which case submodules are helpful (what I usually use but I know some people use some other repo managers)", "What would be a killer for me is if someone took top 5-10 \u201ctop repos of platforms\u201d and recorded bag files with representative data. I think this would be very useful for \u2018good practices\u2019 as you can quickly see how the whole stack works what kind of sensor data is provided and in what format etc.", "Launch files: there is a paper from 2015 about how ROS launch files are developed, see it ", "\n", "External packages: I agree, this may also create maintainability issues since then you need to manually check if the added packages have been updated, right?", "Bag files recording: this is a very good idea and it is technically doable. I am wondering about how to (i) choose the \u201ctop platforms\u201d in a replicable and unbiased manner and (ii) how to generate scenarios which are \u201crepresentative\u201d of the common usages of those platforms. I will think about it in the coming days.", "worried about continuity (ie: external repositories disappearing): ", " and point to your fork", "worried about reproducability (ie: avoid tracking moving upstreams): specify versions (ie: commits/tags, not branch names) in scripts/", "/", " files (avoid using scripts for seeding workspaces btw)", "worried about continuity (ie: external repositories disappearing): ", " and point to your fork", "worried about reproducability (ie: avoid tracking moving upstreams): specify versions (ie: commits/tags, not branch names) in scripts/", "/", " files (avoid using scripts for seeding workspaces btw)", "\n", ": it is an analysis tool for scanning dependencies among ROS packages in GitHub, GitLab, and Bitbucket. The first step of the analysis tool consists in performing queries in those three platform and look for repositories taggeg with the ROS topic. Also, rosmap checks the official ROS Index in the rosdistro-repository and considers all repositories mentioned in there as well. In my research I am using rosmap only for the search step.", "\n", ": it is a database (either as MySQL or mongodb) containing a periodically-built mirror of all projects\u2019 metadata in GitHub. I am querying GHTorrent by selecting all repositories which are either tagged with the \u201cROS\u201d topic or their name (or description) contain the \u201cROS\u201d substring. ", " you can see the specific SQL queries I performed in GHTorrent."], "url": "https://discourse.ros.org/t/guidelines-on-how-to-architect-ros-based-systems/12641"},
{"title": "Compare the running architecture with the designed architecture in CI", "thread_contents": ["Hi ROS community,", "we are building a quite complex ROS system at StreetScooter.", "\nFor our industrialization we want to be sure that the running architecture fits to the designed architecture.", "One way to ensure this is to use code generators like this one:", "\n", "\nThis systems engineering approach is used in many industries, but in my view it kills creativity and system understanding by to much abstraction.", "\nAlso this papyrus does not seem to work stable.", "So I would like to discuss another approach:", "In this way we can keep the consistency between designed and implemented architecture to a certain level.", "\nWhat do you think about this? Do you see better or other ways to maintain consistency?", "Hi Tobias,", "\nIn the past few years I have been working on ", ", a framework for static analysis of ROS systems, as part of my PhD thesis. As of version 3.0, it is able to extract an architectural model of the system by parsing the source code (as if compiling it).", "This extraction process is not perfect nor complete, but it should handle many common cases in C++, and I\u2019ve had external help in implementing a Python equivalent (still under evaluation).", "It should be possible to use HAROS for the kind of checks that you seek (i.e., ", "), with the advantage that the feedback is returned without running the system.", "Of course, coupling this with runtime tools, such as you mention, further boosts your confidence in the implemented product.", " FYI your first link is currently a 404. I will say my general experience with eclipse isn\u2019t positive, and piling on hard contract requirements is a surefire way to kill developer creativity.", "At a high level it would appear that the architecture you propose should work. It will be a bit heavy handed as if you wish to change the system configuration you\u2019ll need to update both your template and your code. An alternative is that you generate a fingerprint and fingerprint delta at each commit/release so you at least have visibility of how things changed, when, and why. This might get you most of what you want without being as heavy handed. I would also suggest that if you undertake this effort you make sure to report your progress / results to the quality working group.", ":", "\nI will dig into HAROS. It was already on my list but not in terms of architecture consistency.", "\u201cAs of version 3.0, it is able to extract an architectural model of the system by parsing the source code (as if compiling it).\u201d", "\nI did not know HAROS can do that but I will try it out with our ROS1 Stack. I also see a merge for ROS2 support.", ":", "\nWhat you are proposing has already been implemented in our development in some way. We have a tool called \u201csystemstamp\u201d that collects all kind of system data like network config, nodes, OS versions,etc\u2026 to create a fingerprint of our robot system. This helps to track changes between the different development teams on the systems. We also want to add this finger print on every issue that is created to identify the system status when a issue occurs. Our ring recorder for bagfiles is also connected to this. The combination of Issue, Issue Bagfiles and system fingerprint enables us to evolve the robot over time between multiple parties. I will join the architecture workshop to give and get feedback on this topics.", "Maybe It would be interesting to create a common community driven GraphML template, parsing and system finger print creation. This would make it easier to work within the community on an consistent ROS architecture.", " ROS2 support is still in its early stages, contributed by Max Krichenbauer. It is mostly to identify the new workspaces. I have not implemented the parsers for the ROS2 API yet.", "Feel free to PM me if you cannot set it up for some reason (it needs more extensive documentation).", "There is ", " for Java. As far as I know Java is the only language with a tool that allows to define rules for the architecture and to ", ". Probably there are concepts one could adapt\u2026", "Is that an open source tool, or an internal tool?", "It is just a python internal script interacting with a Gitlab repository representing your system states. It reads a fingerprint from the documentation of robot and describes its system state.", "\nDepending on your system it could be different states you want to track starting with your deployment script, network configuration, os configuration, firmware, xacro, functions stacks and many more. All this can be tagged in a single repository using git submodules, git-repo or rosinstall.", "An open source tool for reading such information into a standard way for ROS2 would definitely be a good idea in combination with an architecture design representation.", "This systems engineering approach is used in many industries, but in my view it kills creativity and system understanding by to much abstraction.", "For what it\u2019s worth, a model-based approach is close to being the expected approach in many industries using software because it introduces the necessary engineering formality that you don\u2019t get in going straight from mind to code. Whether the tools we currently have to do it are good enough is a separate topic that I don\u2019t want to discuss here. ", "I think the model-based approach is just one way to reach the formality you are talking about.", "\nThe question is how you can iterate through a development model like the v-model fast, consistent and still \u201cagile\u201d?", "\nThis discussion should definitely not go more into detail about this topic, but I thing extended continuous integration practices could help here a lot.", "Let\u2019s keep to the question \u201cHow to check the running against designed architecture by CI ?\u201d that is also a formality for many developers but I thing it can help a lot to create a common understanding for everyone involved in the product.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Create a GraphML based template for a flowchart that displays nodes, topics and services.", "Design your architecture based on this template flowchart.", "Create a fingerprint for your robot with tools like: ", "\n", "Create a CI test, that reads data from your design documents and compares it with the fingerprint of the running ROS architecture."], "url": "https://discourse.ros.org/t/compare-the-running-architecture-with-the-designed-architecture-in-ci/12663"},
{"title": "Synchronous request to service in callback results in deadlock", "thread_contents": ["When somebody tries to call a service in a callback, for example:", "a deadlock immediately occurs. This is a very easy mistake to make. The only thing \u201cpreventing\u201d this mistake from being made is a docstring in ", ".", "More should be done to prevent this, such as:", "Thoughts on this?", " for updating tutorials", " : ", " does not have an equivalent API for synchronously sending a request to a service. ", " shouldn\u2019t need one either. It feels like ", " was introduced to workaround the inconvenience of how ", " doesn\u2019t have a blocking ", " similar to C++'s ", " .", "That\u2019s not intentional, see:", "I\u2019d also propose that we support recursive spin, which will require work on our part, but could be possible, or as someone suggested on one of the issues, provide a styles like ", ".", "Also, here\u2019s an issue proposing a synchronous method for rclcpp::Client: ", "Also, here\u2019s an issue proposing a synchronous method for rclcpp::Client: ", "+1 for this and for the action server (which\u2026 probably shouldn\u2019t be used as frequently, but its an easier introduction into the concept)", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", ": The tutorials and examples only show the use of ", ". If the synchronous ", " API is to exist as a feature on the same tier as ", ", there should be official tutorials and examples to warn against incorrect usage. Right now, the only resources online that are somewhat relevant to this topic are maybe some questions on ROS Answers (such as ", " and ", "). And/or", "\n", ": ", " does not have an equivalent API for synchronously sending a request to a service. ", " shouldn\u2019t need one either. It feels like ", " was introduced to workaround the inconvenience of how ", " doesn\u2019t have a blocking ", " similar to C++'s ", ".", "request->b = 3;", "\n", "while (!client->wait_for_service(1s)) {", "  if (!rclcpp::ok()) {", "    RCLCPP_ERROR(node->get_logger(), \"Interrupted while waiting for the service. Exiting.\");", "    return 0;", "  }", "  RCLCPP_INFO(node->get_logger(), \"service not available, waiting again...\");", "}", "\n", "// TODO(wjwwood): make it like `client->send_request(node, request)->sum`", "// TODO(wjwwood): consider error condition", "auto result = send_request(node, client, request);", "if (result) {", "  RCLCPP_INFO(node->get_logger(), \"Result of add_two_ints: %zd\", result->sum);", "} else {", "  RCLCPP_ERROR(node->get_logger(), \"Interrupted while waiting for response. Exiting.\");", "}", "\n", "rclcpp::shutdown();", "return 0;"], "url": "https://discourse.ros.org/t/synchronous-request-to-service-in-callback-results-in-deadlock/12767"},
{"title": "Performance Testing in ROS 2", "thread_contents": ["Hi Everyone,", "We have attempted to write a white paper with the goal of explaining how to do fair and unbiased ", " based on the performance testing framework that we have built at ", " and the experience that we have gathered in the past 1.5 years.", "In the paper, we first explain the factors that influence the performance of ROS 2 and the importance they have in performance evaluation of the system. Next, we present a standardized test setup and discuss a working implementation of an end-to-end performance testing system that will guarantee an unbiased, and reproducible evaluation.", "Please find the link to our blog post on the paper here: ", "Any possible feedback is very welcome. We would love to know if you find information in this paper useful, anything which we can improve and other suggestions.", "Thank you !", "Divya Aggarwal", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/performance-testing-in-ros-2/12900"},
{"title": "Next ROS Quality Assurance Working Group March 2020", "thread_contents": ["Dear all,", "The ROS Quality Assurance Working Group will take place  ", " . The meeting agenda below:", "Talk by Geoffrey Biggs ", " Details below:", " Autoware.Auto: Building reliable open-source software for autonomous driving", "\n", " This presentation will describe Autoware.Auto, the next generation of Autoware. Autoware.Auto improves on the original Autoware (now known as Autoware.AI) by building on top of ROS 2, following a dependable software development style, and greatly improving the test coverage. It will also discuss future plans and directions to achieve higher quality despite the range of contributors, such as cloud-based simulation in the CI pipeline and staged contributions.", "I also suggest to discuss pending initiatives and how we can accelerate their implementation. Katherine Scott ", " to report on the roadblocks holding the merger of these PRs.", "I also suggest discussing the continuity of the group. I ", " wouldn\u2019t be able to facilitate the group on ongoing bases. Either an alternative facilitator or alternate the facilitation amongst the group members?", "\n", "FYI that meeting time is during the ROS Industrial conference so I won\u2019t be able to make it. However, I would love to make a quick pitch for the QA WG in my talk. If anyone has projects they would like me to mention please let me know.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["QA Dashboard. ", " to the pending PR.", "Code review for ROS 2. ", " to the pending PR."], "url": "https://discourse.ros.org/t/next-ros-quality-assurance-working-group-march-2020/12914"},
{"title": "About the Quality Assurance category", "thread_contents": ["A dedicated place for quality assurance discussion, where we can explain, promote, develop and discuss QA practices, techniques and tools. This is for everybody, from the quality enthusiast, who cares about quality of ROS, to a community member who has a question or feedback. Here, you can get help about QA practices and processes, discuss ROS quality and contribute to ongoing ROS QA initiatives and activities, and provide feedback on the ongoing QA work.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/about-the-quality-assurance-category/3597"}
{"title": "ROS Code Review Guide", "thread_contents": ["We compiled a mini code review guide. The link below", "Any feedback or comments are welcomed.", "I made a pull request with some changes.", "The pull request has been merged. Thanks", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/ros-code-review-guide/6386"},
{"title": "ROS Quality Assurance Working Group October 2018 Meeting Notes", "thread_contents": ["Static analysis", "Regarding this, OSRC for ROS 2 and we internally use ", ".", "We also wrote an ament plugin for it: ", ".", "It does cost money but we can really warmly recommend it. It finds really lots of defects and it is easy to work with (as part of your compilation process) unlike some other tools like e.g. Coverity.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Discuss how to finish the work on the Quality Dashboard (Making ROS Quality Visible)?", "Discuss how to kick off the code review pilot?", "Update on the Static Analysis", "Start off the discussion on the \u201cMaintenance Issue\u201d initiative. Will brainstorm solutions for the issue.", "Quality Dashboard:\n", "Andr\u00e9 Santos managed to enhance the GUI based on the working group feedback. The latest version available in this link ", "\n", "We discussed the quality dashboard. These are some feedback and decisions:\n", "User Rating should be removed for the time being. Due to some infrastructure constraints, we decided to delay the implementation of User Rating.", "We would like to display the date of the last two releases. For example, in the prototype, we would like the dates of v0.7.5 and v.0.7.4 to be displayed.", "For the QA Score, we decided to research further existing practices and literature on how to derive such score. For the moment, we do not have a formula to deduce the score.", "\n", "\n", "Code review\n", "We compiled a code review guide. We asked Moveit and rviz to pilot code review. We hope to see code review taking place in these repositories.", "\n", "Static analysis\n", "ITU hired a part time resource to commence the scanning of ROS packages. The Tool selection is in progress.", "\n", "Maintenance issue:\n", "There are two aspects to this issue: (1) orphan packages and (2) resourcing issue (not enough maintainers). Will continue the discussion in this subject next meeting.", "\n", "ITU hire a part time resource to commence the scanning of ROS packages. The Tool selection is in progress"], "url": "https://discourse.ros.org/t/ros-quality-assurance-working-group-october-2018-meeting-notes/6434"},
{"title": "ROS Quality Assurance Working Group November 2018 Meeting Notes", "thread_contents": ["Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Update on the QA Dashboard (Making ROS Quality Visible)", "Actions from last meeting", "Start off the discussion on the \u201cMaintenance Issue\u201d initiative. Will brainstorm solutions for the issue.", "Quality Dashboard:\n", "Matt Droter did not had time to finish the work on the Quality Dashboard.", "I conveyed to the group the result of my research on quality metrics rating. I searched for a visual rating of software quality, i.e. how to rate software quality using a star rating method? There is no specific literature that provides a formula to derive such rating.\n", "We decided as a group to descope the stars rating of packages for the time being. This requirement will be revisited in the future.", "\n", "\n", "Code review:\n", "Gijs raised a PR to amend rviz PR template for the code review pilot.", "We discussed to add an additional repository to the pilot. These repositories were discussed:\n", "ros_comm", "ros_control", "navigation", "ROS2 rcl_cpp", "ROS2 actionlib", "\n", "We decided to go ahead with ros_comm repository and contact Dirk Thomas with the suggestion.", "\n", "\u201cMaintenance issue\u201d:\n", "We picked up the discussion on the topic of maintenance.\n", "I proposed to discuss a funding model for maintenance. This suggestion was questioned as it implies that money will address the issue.", "I was asked how other communities manage to get maintainers and how they are different than ROS? I discussed that the underlying participation motivation for ROS contributors differs fundamentally from other communities. While the ROS community contributors are passionate about innovation, but not necessarily the output quality, other community direct their passion to both innovation and the quality of the output. Other opinions and ideas have been discussed:\n", "The motivation for quality is a cultural issue in the ROS community.", "If it is a cultural issue then entry barriers should be eased to facilitate the entry of new comers with diverse interest (i.e. quality, documentation, etc.)", "\n", "\n", "\n", "Agenda for next month meeting:\n", "I suggested to spend next month session to do some reflection on the group work.\n", "It has been a year since the group has been established and it\u2019s an opportunity to reflect in our work process, achievements and areas of improvements. Any feedback and suggestions for the community are welcomed.", "\n", "\n"], "url": "https://discourse.ros.org/t/ros-quality-assurance-working-group-november-2018-meeting-notes/6767"},
{"title": "Integration testing in ROS (2)", "thread_contents": ["We are currently working on a library of algorithms for autonomous (", ") driving based on ROS 2.", "For this library we detailed how we do unit and static analysis testing: ", " and are quite happy with it.", "What we would like to improve though is an integration testing. As a first step we consolidated (", ") and documented how integration testing is being currently done for ROS 2: ", ".", "However there are several problems with ", " described integration_test framework:", "To improve upon above we would like to propose the following improvements", "Secondly, we would also like to propose and get your thoughts on the additional types of unit and integration tests to be written.", "Fault injection tests", "\nThese tests aim at increasing the code coverage by introducing fault into the code path, in particular error handling code path which are rarely executed in normal tests.", "There are three potential places where faults can be injected in runtime:", "If fault injection test is adopted, testing code must be removed in release. Otherwise it could be utilized to perform attack.", "Random input tests", "\nROS 2 nodes are tested against independent random input data. The output, if it exists, doesn\u2019t have to be meaningful as long as the program handles it correctly. If an unexpected exception arises then it means there\u2019s a fault in the program. Random input tests are also used to avoid biased testing.", "Chaos tests", "\nIn distributed systems, chaos tests are introduced to test the system\u2019s capability of withstanding turbulent conditions in production. It\u2019s could be both hardware or software based test. It works best on systems with redundancy.", "Property based-tests", "\nAlso named as QuickCheck. Property is here defined as a ", " (", "). With property-based tests, developers don\u2019t specify the test samples. Instead they write the rule of test and tools will generate the test samples automatically and randomly.", "Example:", "\n", "Very good article about ", " in Go.", "Mutation tests", "\nCertain statements of code are changed to check if the test can find the error. This can simulate typical coding mistakes like wrong operator or variable name.", "Types of mutation tests:", "Good resource: ", "\nA C++ mutation framework: ", "I do not have experience with ROS 2, but your points regarding integration testing sound valid.", "Do above tests make sense?", "Yes, at least for the major part. I have been working on random testing and property-based testing myself, at the node/integration level, although for ROS 1.", "I had this idea of expanding mutation testing in ROS, in which the ROS primitives could be mutated themselves in a meaningful way (i.e. redirecting topics, messing with queue sizes, changing callback functions to a simple ", " or ", "), although I am not sure how useful that would be in practice.", "Is it possible to pack them all into one single framework?", "Is there any advantage to packing all these different kinds of tests into a single framework? It could prove hard to do so in a way that is intuitive for the user.", " could you provide some input here since you are currently doing integration tests for navigation stack?", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["The tested components cannot be started in a deterministic sequence since ", " is being used", "The framework lacks the ability of an orchestrated startup and coordinating of different components", "There is many flaky tests and it is hard to attribute flakiness to either bad tests, unreliable testing framework or CI system that does not provide guarantees.", "Move integration_test framework to roslaunch2. This should take care of the deterministic startup and state transitioning within the nodes.", "Determine whether a test needs certain guarantees (e.g. timing). In yes it should then probably run on the dedicated hardware, and if not, a cloud CI like ", " is OK. This should eliminate the concept of flaky tests. Tests should either be passing or failing.", "Add more automated debugging tools to the framework, eg., tshark for network packets capturing, perf, memory tools, valgrind and other tools for profiling.", "\n", "\n", "\n", "Data source, where the data is collected. Eg. simulated sensor failure, corrupted data or duplicate data.", "Communication. Eg. UDP packets get lost, duplicated or order of arrival are reversed.", "System hardware, eg. memory data corruption, unstable time source or memory allocation failure.", "\n", "\n", "\n", "\n", "\n", "\n", "Start the whole stack and define a \u201csteady state\u201d as normal behavior.", "Introduce some real world possible failures like disk full, power outage or network going down.", "Test if the services of other components can be uninterrupted or switched to redundancy.", "\nThe harder it is to disrupt the steady state, the more confident we are at the robustness of the system. If weakness is uncovered, now we have a concrete target to improve.", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "Statement mutation:", "\nCut or paste some lines of code. Most likely it wouldn\u2019t compile. This is highly manual rather than automated.", "Value mutation:", "\nValues of primary parameters are modified.", "Decision Mutation", "\nControl flow is reversed.", "\n", "\n", "Do above tests make sense?", "Are any particular flavors of tests missing?", "Is it possible to pack them all into one single framework (we struggle with this thought honestly)?", "What other use case do you have that need better integration and unit testing?", "Are there other integration testing framework from non-robotics world worth to inspect?"], "url": "https://discourse.ros.org/t/integration-testing-in-ros-2/6859"},
{"title": "Next ROS Quality Assurance Working Group Meeting", "thread_contents": ["Dear ROS community,", "The next ROS QA Working Group meeting is taking place the 11th of Oct. 2018 at 6PM GMT.", "If you wish to participate and you are not already in the circulation list, then, send me your email, I\u2019ll forward the invite.", "Thanks", "\nAdam", "  Can I get an invite to future meetings?", "ratliffchrisb @ ", "Thanks", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Discuss how to finish the work on the Quality Dashboard (Making ROS Quality Visible)?", "Discuss how to kick off the code review pilot?", "Update on the Static Analysis", "Start off the discussion on the \u201cMaintenance Issue\u201d initiative. Will brainstorm solutions for the issue."], "url": "https://discourse.ros.org/t/next-ros-quality-assurance-working-group-meeting/6336"},
{"title": "ROS Quality Assurance Working Group December 2018 Meeting Notes", "thread_contents": ["Quality Dashboard:", "\n1. Matt Droter is currently running some test to assess the performance of Haros and identify any potential risks on the buildfarm resources.", "Code Review:", "Reflection on the last year work:", "Actions:", "My personal thoughts with regards to MoveIt contributors don\u2019t review other PRs:", "\nIt took me a long time to feel like I understood MoveIt enough to contribute,  and it definitely takes longer to be able to understand someone else\u2019s contribution, especially if it\u2019s in a part of the code that you aren\u2019t familiar with. MoveIt\u2019s a very big project, so this happens pretty frequently: personally, I don\u2019t feel like I have enough knowledge to review anything outside of MoveIt Core and the OMPL interface, and don\u2019t do so often.", "However, I think the biggest problem is that it\u2019s not clear how to review a PR when you ", ".  While some comments in reviews are algorithmic or performance based, I think you could say that 30-50% of a code review is subjective, given that there are a lot of equally valid ways to do the same thing. Personally, I\u2019d rather not review a PR with some advice, only for that advice to contradict the advice of the maintainers (or anyone else with more experience than me) when they review it and end up confusing first time contributors.", "In general, It\u2019s not clear how to help the maintainers the best when reviewing. Maybe there should be a section in CONTRIBUTING about reviewing other PRs, what to focus on, what to leave to the maintainers for codebase consistency, etc.", "These are good points you raised. And inline with what other contributors conveyed to me.", "\nRegarding documentation, we put together a mini ", ". Please, have a look? Any feedback is appreciated.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Update and discussion of the progress on ongoing initiatives (i.e. QA Dashboard, Code review)", "It has been a year since this group was established. It is time to reflect upon our work and make some improvements", "\n", "\n", "\n", "\n", "We selected 3 repositories for a pilot of code review\n", "ros-comm: We raised a PR to add a PR template. The PR has not been merged yet.", "rviz: We raised a PR to add a PR template. The PR has not been merged yet.", "Moveit: The PR has been merged few weeks ago. However, few PRs have been reviewed as suggested by the checklist, i.e. \u201cWhile waiting for someone to review your request, please consider reviewing another open pull request to support the maintainers.\u201d\n", "I was asked to investigate why contributors do not review other PRs in the Moveit repository.", "\n", "\n", "\n", "\n", "\n", "The process:\n", "Overall, the group is happy with the process. We agreed in some few changes:\n", "Agree on a fixed day on the month to meet, instead of sending the Doodle vote every month. Hence, we will vote on which day of the month we will meet. This is the Doodle link ", "\n", "The group seem to be happy with me facilitating the meetings. In case I\u2019m not available, I\u2019ll nominate someone to facilitate the meeting.", "\n", "\n", "The progress:\n", "The group acknowledges that the progress is modest. This due to mainly two constraints: quality is a \u201cdifficult subject\u201d in the ROS community and there is lack of contributors to our initiatives. We struggle to find ROS contributors to help.", "\n", "\n", "\n", "\n", "Investigate why moveit contributors do not review other PRs while waiting for their PR to be reviewed (Adam).", "Send out a Doodle link to vote on which day of the month to meet (Adam).", "\n"], "url": "https://discourse.ros.org/t/ros-quality-assurance-working-group-december-2018-meeting-notes/7045"},
{"title": "Sanitizing and Fuzzing Tutorials", "thread_contents": ["At the ", " there was an interesting presentation and demonstration by Adam Alami and Zhoulai Fu. They mentioned sanitizing and fuzzing (fuzz testing) as additional techniques to improve code quality. However, on the ", " there is no information on these topics yet. Are you aware of existing tutorials on these topics? If not, what are good references / starting points to start using these techniques in ROS?", "There is also ", "Are you aware of existing tutorials on these topics?", "In case you want to fuzz Python (CPython) on the source code level there are some ", ".", "There is also ", "There are some ", " with potentially additional functionality. However in case someone wants to add further data generation functionality please take a look at ", " and consider the approach discussed instead of adding explicit data generators (what\u2019s done in the project forks).", "I was hired by ITU for a 2 month project to test ROS with the sanitizers.", "\nI wrote together a small report about our experiences and findings:", "\n", "\n", "This was a temporary project that ended now, but I\u2019m still happy to answer any questions.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/sanitizing-and-fuzzing-tutorials/7126"},
{"title": "sudo usage in rosdistro packages", "thread_contents": ["Hi!", "I\u2019m currently working on a dependency bug checker that runs on ROS packages and tries to detect missing dependencies.", "\nI\u2019ve detected a few bugs in bash scripts in packages where a dependency run in the script is not specified as ", " in ", " files.", "\nI verify every parsed command against a list of default commands available in a base ROS distribution, which leads me to my question regarding best practices in bash scripts in ROS:", "On various internet sites (ie. ", ") ", " should never be used inside scripts, but scripts should instead be run using ", " and commands in the script can then be assumed to run with elevated privileges. I detect a lot of ", "\u2019ing which I have labelled as an error so far, mainly due to ", " not also not being available when running packages in the official docker ROS image, which makes every single package with ", " in shell scripts error out when running ROS in docker.", "My question is then:", "Thanks for any answers in advance.", "I don\u2019t know the use cases you may be finding for ", " to be needed. Could you give a few examples? It may be easier to reason and maybe create these best practices.", "The only reference to best practices I found is here: ", " (linked from ", ")", "I have scanned the source of all packages found in the ", " found in the ", " GitHub repository.", "The following scripts contain ", ":", "Those scripts seem to mainly do:", "For 1) Hmm I don\u2019t know how the ROS packaging works so to know if we can have a standard way of doing this from a ROS package straight from the CMakeLlists.txt", "\nFor 2) & 4) I guess that is more of a manual step?", "\nFor 3) it could be either asked to be done manually or (as I found ", ") use a local database.", "A compromise could be to add a check if already running with super user rights to the scripts, something like", "Just wanted to point out ", " by Mike Purvis about how udev rules may/should be installed by packages. Not sure this directly translates to packages being built/installed locally, though.", "Just wanted to point out ", " by Mike Purvis about how udev rules may/should be installed by packages.", "Nice, I didn\u2019t know about that!", "Not sure this directly translates to packages being built/installed locally, though.", "When installing a package from source, the udev rules have to be installed manually. It turns out that ", " uses the technique you mentioned above to install the udev rules from the binary package, and the ", " script is provided for users that build from source.", "To come back to the original question by ", ": I would label ", " in scripts as a warning, not an error. There are instances where ", " inside a script would be very bad (e.g., when that script is executed from the CMakeLists), and I can\u2019t think of a case where it cannot be avoided, but in some instances it\u2019s relatively harmless.", "Thanks for the answer! ", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["What is the best practices regarding using sudo in bash scripts contained in a ROS package?", "Don\u2019t use sudo in wrapper packages.", "Don\u2019t require manual system wide installations.", "\n", " at ", "\n", "\n", " at ", "\n", "\n", " at ", "\n", "\n", " at ", "\n", "\n", " at ", "\n", "Add/delete udev rules", "Create/Start/Stop a daemon", "Create user/deal with a database (postgresql)", "Using tcpdump (for velodyne)"], "url": "https://discourse.ros.org/t/sudo-usage-in-rosdistro-packages/7188"},
{"title": "ROS Quality Assurance Working Group meeting minutes April 2018 Meeting", "thread_contents": ["ROS Quality Assurance Working Group meeting minutes April 2018 Meeting", "\nTime: 3 p.m. UTC", "\nWe still working on the first initiative, \u201cMaking ROS Packages quality visible\u201d. We identified a ", " to use (display for each package). We defined most of these metrics in a google doc. Currently, the list contains over 20 metrics. We need to prioritize which metrics to implement first. During this meeting, will went through these metrics and assign an implementation priority (i.e. High, Medium and Low).", "\nDuring the meeting participants voted a priority for each metric. Please refer to the ", " for the vote results. The list of metrics and the voted priority listed below:", "CI Badge", "Static Analysis", "Dynamic Analysis", "Testing", "Documentation", "Open issues report", "User Rating\t\tMedium/High", "Other", "We will be moving to implement this initiative and we seeking help. We calling for volunteers to assist in the implementation of this initiative, \u201cMaking ROS packages quality visible\u201d. Please, get in touch if you like to help?", "Hello Adam,", "\nI\u2019d like to participate, I\u2019d like to participate, but I have some questions. How shall the work be done, do we have any guidelines, repositories?", "\nAre owners of topics already working on them? All high priority ones already have owners, I wouldn\u2019t mind working on less priority ones though, but it\u2019s not really clear on \u201cwhere to start\u201d", "Hi David,", "Thanks for asking. Your questions should clarify further.", "Owners are not necessarily the persons who would do the implementation, i.e. development. I put the \u201cowner\u201d in order to have someone to investigate the metrics and propose a definition \u2026 The ownership for now  is temporary until we found people who have the skills to do the implementation.", "We looking for people who would help in the development work to display these metrics. Once we have enough volunteers, we will meet and kick off the work. The implementation team will meet outside the QA working group as it has a specific mandate.", "So far you the first volunteer. Others may join from the working group. Once we have another volunteer we can meet sometimes in May to kick off the work?", "The work shall start in high priority metrics.", "Hello Adam,", "I\u2019d like to participate, I\u2019d like to participate, but I have some questions. How shall the work be done, do we have any guidelines, repositories?", "For ", " there is the repository ", " which implements the lowest level functionality for property based testing (allows fuzzy testing as well). If you already used ", " and want to contribute you could already have a look into it. You can find the contribution guidelines in ", "Hello, Adam,", "Like David, I also have some questions about the metrics, such as which coding standards are you considering for coding style violations? Were these details discussed already, or are they open for a future meeting?", "Hi,", "We haven\u2019t discuss those granular details yet. You have been in touch with Andrzej in this regard. If you willing to assist then we should get together sometimes in May to kick off the discussion.", "Thanks", "\nAdam", "I have been looking into the list of metrics, and I would like to point out that some metrics are listed under different names, but have the same meaning in practice (i.e. they are repeated).", " is usually a synonym for ", ".", " is often equivalent to ", ".", "If under this project these entries have different meanings, I would like to know.", "We discussed the same thing; but we were not sure! So, we left the duplicates until the implementation to decide which ones to descope.", "Please, for the ones you think duplicate strikethrough and write a note to explain your decision.", "I deployed the initial release of hypothesis-ros v0.1.0 on pypi. Refer to the package announcement:", "Awesome. Nice work. +1", "Well done. Thanks for your effort.", " ", " Thx. It was my pleasure.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "Build\tHigh", "Unit Tests\tHigh", "Unit Test Coverage [%]\tHigh", "\n", "\n", "\n", "Code style violations\tMedium", "Logic errors and warnings\tMedium", "Cyclomatic complexity\tLow", "McCabe complexity\tLow", "Afferent coupling\tMedium", "Efferent coupling\tMedium", "\n", "\n", "\n", "Clang AddressSanitizer and LeakSanitizer\tHigh", "\n", "\n", "\n", "Fuzzy testing by \u201cchaos node\u201d\tLow/Medium", "\n", "\n", "\n", "Comment to code ratio\tLow", "Documentation coverage\tMedium", "Package/Library Status (lifecycle)\tHigh", "Existence of a roadmap\tMedium", "Existence of readme\tLow/Medium", "Wiki page quality/completeness\tMedium", "Tutorial availability\tMedium", "\n", "\n", "\n", "Number of closed issues\tLow", "Time to close issue\tLow/Medium", "Activity on issues\tMedium", "Other status (eg: wont-fix, etc.)\tLow", "Number of open issues\tLow", "\n", "\n", "\n", "\n", "\n", "Maintainability Index\tLow/Medium", "Depth of Inheritance\tLow", "Class Coupling\tHigh/Medium", "Lines of Code\tLow", "Cyclic includes\tMedium/Low", "\n", "Testing", "\n1. Fuzzy testing by \u201cchaos node\u201d Low/Medium"], "url": "https://discourse.ros.org/t/ros-quality-assurance-working-group-meeting-minutes-april-2018-meeting/4473"},
{"title": "Revising the gtest tutorial", "thread_contents": ["I decided to bite into our gtest tutorial at ", ". This looks like a larger job, as the tutorial is much less developed than the other top-level testing tutorial, which I already revised.  I expect this will take several weeks - I will have to find time to try out things, and fix things that are outdated. Times is scarce, thus the slow speed.", "I will start by moving it (and redirecting) to Quality/Tutorials/* and work in there. Of course, I will try to always keep a relatively usable version when leaving it off for a few days.", "I do have some questions for more knowledgeable folks down here:", "What is ", " and ", "? Both seem to be (almost) empty pages that wiki knows about and asks whether they need to be moved as well.  They look as some auto generated stuff, and I am wondering whether, if I move them, they will be recreated again. Or are they some legacy stuff that should simply be deleted? Delete? Move along?", "The rosbuild part of the tutorial concerns me as well. I am too young a ROS user to be able to update.  And I don\u2019t care so much right now for learning rosbuild. What should we do about it? Can someone help by adjusting this in about a month? Or should we drop maintaining it?", "I decided to bite into our gtest tutorial at ", ". This looks like a larger job, as the tutorial is much less developed than the other top-level testing tutorial, which I already revised.  I expect this will take several weeks - I will have to find time to try out things, and fix things that are outdated. Times is scarce, thus the slow speed.", "That\u2019s great. While you\u2019re looking at it though, try to make the tutorial about the ROS specific aspects and link out to other upstream gtest tutorials for the core gtest concepts instead of reproducing them.", "What is ", " and ", "? Both seem to be (almost) empty pages that wiki knows about and asks whether they need to be moved as well.  They look as some auto generated stuff, and I am wondering whether, if I move them, they will be recreated again. Or are they some legacy stuff that should simply be deleted? Delete? Move along?", "The Troubleshooting and Review pages are not completely auto generated, but are auto linked to the header if they are present. They have templates for them if you create the page. The TroubleshootingTemplate just helps start a list with reasonable formatting. The Reviews page is left over from the older ", " used at Willow Garage. It hasn\u2019t been used really since then. Much of that process was used on the old wiki and the Review pages were found to be slowing down the wiki and often would overshadow formal documentation in search results. Much of that content predates the use of github and other platforms with pull requests and review processes available. It\u2019s likely that all of the QAProcess should be cleaned up. As an example the gtest Review page was made to propose creating a ROS package for gtest, but clearly we\u2019ve chosen to use the upstream version now so that proposal from 2009 is not particularly useful now and could be cleared out.", "Since the Troubleshooting page had zero content I just deleted it.", "The rosbuild part of the tutorial concerns me as well. I am too young a ROS user to be able to update.  And I don\u2019t care so much right now for learning rosbuild. What should we do about it? Can someone help by adjusting this in about a month? Or should we drop maintaining it?", "We should not delete the rosbuild content, but I wouldn\u2019t suggest spending much time to update it to new practices as we are not planning to spend time updating the rosbuild toolchain.", "I\u2019m exploring how to use ROS for doing physical integration testing, a mix of automated and manual testing on a real robot. Getting to know gtest/rostest from the documentation has not always been a smooth experience. Please let me know if you need any help in creating the tutorials, as I would gladly contribute from what I have learned.", " Sligthly of topic but probably helpful:", "As long as performance of the test infrastructure is not critical for you (in most cases not the case) and the effect of Pythons GIL on multi-threading is no issue for you (usually not the case as well) or could be workaround with multiprocessing (unfortunately limited by the machines # of \u201creal\u201d processors) I would recommend to use ", " for \u201cphysical integration testing\u201d instead. As it is a Python only framework it integrates way better with other tools/infrastructures.", "I consider ", " and ", " suitable for \u201cROS node/nodelet unit testing\u201d only so far. In case several ROS nodes/nodelets are executed (in production) on a single machine they can be suitable for \u201cROS node/nodelet integration testing\u201d as well. As soon as ROS nodes are executed (in production) on \u201cphysically separated\u201d machines w.r.t. to application context ", " and ", " is a rather bad fit (because \u201ctoo far\u201d from production).", "However I am open for productive disagreement/feedback ", "Thanks for your advice. I agree with you that when possible, writing these integration tests in a language such as Python will be much quicker than using C++/gtest.", "In the context of our (research) project, we want to create a (ideally language agnostic) framework for specifying tests with pre-conditions, invariants and post-conditions. These conditions would be verified using both intrinsic data from the robot and data from an external sensing system such as a laser scanner, rgbd-camera or mocap. It\u2019s likely that neither ", " or ", " will be of much use, as we are interested in contributing towards better tools within ROS for constructing these kind of tests.", "In the context of our (research) project, we want to create a (ideally language agnostic) framework for specifying tests with pre-conditions, invariants and post-conditions. These conditions would be verified using both intrinsic data from the robot and data from an external sensing system such as a laser scanner, rgbd-camera or mocap.", "That sounds cool. I wish you good project outcomes.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/revising-the-gtest-tutorial/4588"},
{"title": "ROS Quality Assurance Working Group July 2018 Meeting", "thread_contents": ["The ROS Quality Assurance Working Group meeting for this month will take place Friday the 13th at 3PM GMT.", "\nIf you not already part of the group and wish to participate, leave me your email and I\u2019ll send you the invite.", "Thanks", "\nAdam", "I would love to particiapate, here is my email", "\n", "Hello Alami, please add me to this group.", "\nMy email id: ", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/ros-quality-assurance-working-group-july-2018-meeting/5317"},
{"title": "ROS Quality Assurance Working Group July 2018 Meeting Notes", "thread_contents": ["Hi,", "These are the meeting notes for July 2018.", "The agenda for the meeting was:", "Discussion:", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Update from Andr\u00e9 Santos on the implementation of \u201cMaking ROS Quality Visible\u201d", "Discuss and vote on the Code Review initiative. Last meeting, two options have been discussed: (1) a dedicated Wiki page or portal for code review with a reward system for the reviewers (similar to the Karma system), (2) Each time someone submit a pull request, he/she is asked to review another pull request.", "Andr\u00e9 Santos provided an update on the extension of Haros to capture the quality metrics. The work is progressing well. However, we need to agree on the output of these quality metrics.", "The output (the GUI to display these metric) has been discussed. Andr\u00e9 will design a prototype for the group to review next meeting.", "The user rating portion of the \u201cMaking Quality visible\u201d was discussed. This will be done outside of Haros. Currently, the Wiki does not have functionality to build this feature. Hence, we need to investigate how to do it. Matt Drotter volunteered to investigate and report back to the group next meeting.", "\u201cEnergizing the code review\u201d initiative was discussed. Both option were debated. Option 2 was voted overwhelmingly as the favorite to implement. Most participants Highlighted its simplicity to implement compared to option 1."], "url": "https://discourse.ros.org/t/ros-quality-assurance-working-group-july-2018-meeting-notes/5432"},
{"title": "Pytest support for ROS / rostest", "thread_contents": ["Hello everyone,", "I want to stir some interest in supporting pytest for ROS. ", " is a very popular unit testing framework for Python.", "In my opinion, pytest is far easier to use than Python unittest and nosetests supported by ROS as of now. My personal experience says the easier something is to do, the likelier it is to be done. As we are talking about unit tests, an essential part of professional software development and QA, I think it\u2019s even more important here. I have outline more about why this is necessary in a ", "The easiest way to support pytest within ROS is to use a new test runner that wraps pytest and extracts the JUnit XML output. Here is my attempt at doing that ", "ROS seems to pick up the test data very well. However, I noticed that failing tests still don\u2019t trigger a failure when running rostests (but the log/terminal output shows the error). I would appreciate any input on why this is the case.", "I joined the ROS community a few months ago and I want to make my first contribution to the project. So please let me know how if you think this is a good idea and how I can proceed.", "Alex", "BTW: Congratulations on winning the Austrian Open Source Award 2017 with Machinekit ", "Great to see an initiative like this in testing! A few questions after a glance:", "In your ", " you said:", "The really great thing about pytest is that it really makes unit testing easy and quick. To shorten you feedback loops I recommend you to clearly distinguish between unit tests and ROS node or integration tests.", "After reading the blog, I didn\u2019t quite get how ", " makes  unit testing \u201ceasy and quick\u201d. I mean it looks like it does, but did you find it easier and quicker than ", " / ", " that ROS is ", "? I\u2019m simply curious, as ROS allows to run unit testing by ", " as well as integrate it into Node testing.", "ROS seems to pick up the test data very well. However, I noticed that failing tests still don\u2019t trigger a failure when running rostests (but the log/terminal output shows the error). I would appreciate any input on why this is the case.", "Not sure what you mean by \u201cROS seems to pick up the test data very well\u201d. But I\u2019d agree the test result is not the easiest to read. In your particular case, have you tried ", "?", "After reading the blog, I didn\u2019t quite get how pytest makes unit testing \u201ceasy and quick\u201d. I mean it looks like it does, but did you find it easier and quicker than nosetests that ROS is already integrated with? I\u2019m simply curious, as ROS allows to run unit testing by nosetests as well as integrate it into Node testing.", "I should have elaborated on this. I have only tried ", " for testing parts of Machinekit. From what I know it just extends Python unittest, which is not great after all. ", " also supports test functions (no need to write a complex test runner class), which is great. However, ", " seems to be a lot easier when it comes to writing and fixtures. Additionally, it makes great use of assert, including meaningful error messages. Writing pytests feels in my opinion just more natural and pythonic.", "Not sure what you mean by \u201cROS seems to pick up the test data very well\u201d. But I\u2019d agree the test result is not the easiest to read. In your particular case, have you tried catkin_test_results?", "Actually looks good. I just wondered why it does not \u201ccrash\u201d or abort with an error message when the tests are run. But I\u2019m not that familiar with ROS yet.", "Actually looks good. I just wondered why it does not \u201ccrash\u201d or abort with an error message when the tests are run. But I\u2019m not that familiar with ROS yet.", "I\u2019m afraid I\u2019m not sure what you mean, but you don\u2019t want the whole chain of tests to stop in the middle just because of a single test case failed, do you? I agree that the output can be improved to be more intuitive though.", "Apparently ", " seems to be getting popular. It would be nice for it to be integrated into core library so that we can use it without defining special dependency etc (AFAIUC, your current approach requires a special test runner script). Would you interested in going further down this road (if so I\u2019d definitely like to help)?", "I concur that ", " feels \u201ceasier\u201d / more natural to use (obviously a subjective point). It certainly is more actively being developed and offers more features through the numerous available plugins. For ROS 2 we are using ", " over ", " for a while for these reasons.", "The new build tool ", " also invokes Python tests with ", ". Since ", " is capable of running tests written for ", " this is usually compatible with exiting tests.", "There are three parts to Python unit testing to consider:", "I think the three parts are fairly independent from each other. E.g. using ", " you can run the tests of a ROS package with ", " even though they use ", " / ", " API.", "It certainly is more actively being developed and offers more features through the numerous available plugins.", "In the Python web dev domain pytest is the standard tool for testing distributed systems. If one wants to get an idea about in what non public projects it could be used I suggest to read about the history of the pytest initiator (Holger Krekel).", "I would help out in adding pytest support in ROS1.", "The ", " package is ready. I just created a PR for the Kinetic release: ", "The PR has been merged. ros_pytest is now available as package!", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["the API used to write unit tests", "the tool used to perform the testing of a package", "the tool used by ", " internally"], "url": "https://discourse.ros.org/t/pytest-support-for-ros-rostest/4990"},
{"title": "ROS Quality Assurance Working Group - August 2018 Meeting", "thread_contents": ["The ROS Quality Assurance Working Group meeting for this month will take place Thursday the 16th at 3PM GMT.", "\nIf you not already part of the group and wish to participate, leave me your email and I\u2019ll send you the invite.", "Thanks", "\nAdam", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/ros-quality-assurance-working-group-august-2018-meeting/5691"},
{"title": "On (git) branching strategies", "thread_contents": ["Hi all,", "Motivated by the discussion I started ", ", or similar threads like ", ", I\u2019m gonna fire this thread.", "First of all, I reckon that a maintainer chooses the way that best fits his/her needs to maintain a repository. So I\u2019d like to avoid pointing at particular cases where something\u2019s happened or not, how often or not\u2026 I rather have a discussion regarding pros and cons of git branching strategies within the ROS community practices.", "Currently, in most of ROS repositories, one sees this approach:", "Where a new ", " branch is created for every ", " candidate. That requires the maintainer to create this branch, and be aware of the latest branch created to accept PRs or continue developing.", "The most critical thing to me is that, newer releases are not guaranteed to have bug fixes / new features. For instance, in the figure above, if ", " gets accepted on ", " for any reason, then it needs to be manually ", " ported to ", ", that is, from an older version to a newer version, which does not seem right. No matter how often this might happen, there is the possibility that it might.", "Another minor issue is, I think in some repositories the branch is created only if there is a change to make and there is a new available release, or even because the maintainer just stopped creating branches. In that case, if a repository has not changed since, say ", ", and no one has PRed since, then usually the latest branch in the repository is that one, even when the same version of code exist for, say ", ", via apt-get, which doesn\u2019t seem right either or might lead to confusion.", "An alternative would be:", "Where there is a ", ", say ", ", ", ", or ", ", something you readily identify as the branch to target PRs to by default for new stuff. Maintainers still need to tag / branch for a new release, but at least they don\u2019t need to worry about which is the ", " branch and coordinate PRs.", "A small big difference about this strategy w.r.t. the one before is that, if ", " is again a bug fix, newer releases will have it ", ", no need to be aware of any latest branch to accept PRs, or wait for a branch to be created because it\u2019s better to target it to the a newer release. Development and releases are decoupled this way. Moreover, one can still back port to older releases, and if it happens that one needs more work to do that, one can still add stuff to older release branches. The concept of pre-release tags is clearer to use in this strategy too.", "For the record, I know this is not a new idea, there are a bunch of repositories out there being maintained like this, hence the motivation of the post, it makes me wonder why most of ROS repositories choose the first strategy.", "Any thoughts?", "Thanks for starting this. It\u2019s an interesting topic, but also one I feel is almost impossible to reach some sort of consensus on, as it appears it comes down as much to personal preference as it does to some objective measure of \u2018being better\u2019 (do a search on Git branching strategies, there are hundreds if not thousands of results.", "The most critical thing to me is that, newer releases are not guaranteed to have bug fixes / new features. For instance, in the figure above, if ", " gets accepted on ", " for any reason, then it needs to be manually ", " ported to ", " , that is, from an older version to a newer version, which does not seem right. No matter how often this might happen, there is the possibility that it might.", "You also described this example workflow in ", " and I feel it\u2019s brought as describing a common practice, but I\u2019m not convinced it is.", "My experience is that PRs are expected to target the newest development branch and are then selected for backporting if it makes sense. PRs not targeting the latest branch will either be retargeted or rejected. At least, this is what I see in more \u2018mature\u2019 repositories. ROS being as distributed / federated as it is, this may be different for the repositories that you see often.", "Managing things this way seems to already be rather close to what you are suggesting (single development line: latest branch, PRs target that by default, backporting, and \u201cadd stuff to older release branches if required\u201d).", "For the record, I know this is not a new idea, there are a bunch of repositories out there being maintained like this, hence the motivation of the post, it makes me wonder why most of ROS repositories choose the first strategy.", "\u201cmost repositories\u201d is a rather vague statement, which makes it hard to verify. I know you didn\u2019t want to point to any repositories in particular, but perhaps this topic would become more actionable if we had at least some numbers (\u201conly 10 out of 100 repositories examined do this\u201d ) or specific examples that clearly don\u2019t or do things like this.", "My experience is that PRs are expected to target the newest development branch and are then selected for backporting if it makes sense. PRs not targeting the latest branch will either be retargeted or rejected. At least, this is what I see in more \u2018mature\u2019 repositories. ROS being as distributed / federated as it is, this may be different for the repositories that you see often.", "This is indeed my experience as well, but many repositories still have ", ", ", " and ", " branches, even if only one of them is used to accept PRs. I found this confusing in the past and it\u2019s still bugging me from time to time.", "The correct ", " branch changes all the time. With most non-ROS projects the workflow for making a PR is simple: update master, branch off, fix stuff, send PR. With most ROS projects you first have to check what the right ", " branch is to split off from. Once you get used to it, it\u2019s not so much of a problem. But I know it was confusing to me at the start.", "A small tweak here could make a big difference I think: remove the ", " prefix from the release branches, and have one ", "/", " branch that targets the latest supported ROS release for a specific project. This is much closer to a regular git workflow, so it should lower the entrance barrier for new developers.", "I agree with ", ", I was quite confused at the beginning about using/contributing to a hydro-devel when the current version is kinetic. After some time you realize that the branch name basically encodes the level of backwards compatibility. But my first reaction was to think this is orphaned/stale code.", "\nBut I think this is mainly a communication issue, not a work flow or organizational one.", "Thanks for your inputs.", "\u2026almost impossible to reach some sort of consensus on, as it appears it comes down as much to personal preference as it does to some objective measure of \u2018being better\u2019 (do a search on Git branching strategies, there are hundreds if not thousands of results.", "True, so it seems like it worth the discussion.", "My experience is that PRs are expected to target the newest development branch and are then selected for backporting if it makes sense. PRs not targeting the latest branch will either be retargeted or rejected. At least, this is what I see in more \u2018mature\u2019 repositories. ROS being as distributed / federated as it is, this may be different for the repositories that you see often.", "\u201cmost repositories\u201d is a rather vague statement, which makes it hard to verify. I know you didn\u2019t want to point to any repositories in particular, but perhaps this topic would become more actionable if we had at least some numbers (\u201conly 10 out of 100 repositories examined do this\u201d ) or specific examples that clearly don\u2019t or do things like this.", "I couldn\u2019t query github by branch names, since only the default branch is indexed, though that wouldn\u2019t explain the strategy either. And if you consider that other platforms like bitbucket or gitlab are also used, yes, I agree it is really hard to verify. However, I think we can agree that it is a very common practice in ROS repositories to use the first strategy, for either trunk or leaf projects, otherwise there wouldn\u2019t be point to talk about, right?", "I didn\u2019t want to point at repositories because I wanted to be abstract about the discussion. But certainly examples help to illustrate the issue, and support the statement: \u201cit can happen\u201d. I already gave you one example on the ", " repository.", "And, with all due respect to maintainers, just happened in the ros-controls project too, for instance: ", " just got merged on ", " with a new feature that would be good to have in further releases. And the ", " branch is already there. So the ", " branch does not have this commit, it will need to be added manually at some point, or a rebase of the ", " branch too, which in this strategy is not a good idea either, I believe.", "The correct ", " branch changes all the time. With most non-ROS projects the workflow for making a PR is simple: update master, branch off, fix stuff, send PR. With most ROS projects you first have to check what the right ", " branch is to split off from\u2026", "Precisely my question: Why don\u2019t ROS projects choose the ", " version? Which IMO is not only good to lower the barriers for new devs as you say later, but it is also safer.", "But I think this is mainly a communication issue, not a work flow or organizational one.", "Also true, but what I\u2019m interested in is on what are the benefits of using the first strategy above, because on the contrary, I think is not safe for the issue I illustrated before.", "I\u2019ve been maintaining repositories for quite a while in the ROS world and have had my perspective change considerably. A big part of that is just reducing scope to that which I can practically and reliably maintain / document. That\u2019s kind of taken me full circle back to a very regular devel/release style:", "I find this communicates the purpose of each branch effectively with minimal fuss. People know then where and what they should PR to (features to devel, bugfixes to the release), what distro they need for any branch (no need to document). They can also quickly grokk when feature changes occur across distros - don\u2019t bump your version just because the distro bumped. Another key point is that the root url to anything in your repo will never change (as it would if you changed your default branch to -devel for every ros release).", "Example:", "One downside with this is that you can\u2019t support users who wish to contribute features for a distro that you\u2019ve already moved on from (i.e. not supported by \u2018devel\u2019). At the end of the day though, supporting that is complicated, prone to error and there are good reasons in the software world why this is rarely done (be sure you have the cycles to do so).", "Just a comment about the popularity of the approach. I think that the ", " model ", " describes in his post is what in general software engineering is called Trunk-Based Development. These days it is quite popular for companies which are trying to practice DevOps, in fact there is a website dedicated to it: ", "It is also referred to in books such as Accelerate as being \u201ccorrelated with higher delivery performance\u201d (Humble, Forsgren, Kim, 2018). Of course, that should be taken with a pinch of salt given that what works in IT might not necessarily work in robotics (nor do I completely trust their research approach).", "I have been looking through many repositories to try and learn how the workflow is done since I am trying to do it for my packages as well. I agree with ", ", having multiple ", " branches is very difficult to understand (at least that is my personal view).", "\nAre there examples of repositories that use something closer to the trunk-based development workflow or something closer to how ", " provides? I would really appreciate to have more information on that.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Only ever one \u2018devel\u2019 branch, all other branches are releases", "The README in the devel branch communicates what distro it is currently (unofficially) supported on", "Bugfixes only on release branches, PATCH version bumps only, always tag every version", "Reflect the distro it is used on in the name of the release branch", "Reflect the MAJOR.MINOR version number in the name of the release branch as well"], "url": "https://discourse.ros.org/t/on-git-branching-strategies/4785"},
{"title": "ROS tests with robot description", "thread_contents": ["What is the best way to write tests that require a robot description? Are there any simple xacro files for testing or even a parametrizable robot description?", "An example of such a test would be a ROS node which collects the current joint state and represents them in a model for use in a model view. This node requires the robot description to know about the available joints and then is updated frequently with joint_states messages.", "This sounds like what ", " is for.", "If you\u2019re not aware, rostests are basically launch files, but launched by a special ", " wrapper that is specifically intended to be able to test nodes in a (mini) application context.", "Populating the ", " parameter (or any parameter really) is done in exactly the same way as you would in a regular launch file.", "This node requires the robot description to know about the available joints and then is updated frequently with joint_states messages.", "The rostest could also start a second node that generates those joint states.", "Edit: perhaps interesting: ", ".", "Yes I\u2019m aware of rostest and also about the possibility of loading a robot_description via launch file.", "However, what I\u2019m looking for is some kind of \u201cstandard\u201d robot description that can be used for testing.", "My apologies. I\u2019d somehow completely missed you were actually asking about/for a suitable xacro/urdf for testing, instead of how to test.", "Are there any simple xacro files for testing or even a parametrizable robot description?", "I\u2019m not entirely sure I understand what you are asking for, but nodes such as ", " include a nr of small urdfs that are used in the tests that accompany it. See ", ". The test suite for ", " is another: ", ".", "I am not sure if this is what you are looking for\u2026 but I created generic xacro files for testing description of different components in our lab.", "I call this script with different parameters from a roslaunch test file. this is just test for parsing and if you want one can test also the description in rviz.", "If you want to test robots with non-static joints you could use something like this:", "I hope this can help you further\u2026", "Thanks, that\u2019s what I was looking for. Can I find the ", " package somewhere?", "You can download a version of this ", " here.", "I deleted all meshes and urdf files since they are currently not public.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/ros-tests-with-robot-description/5696"},
{"title": "ROS Quality Assurance Working Group meeting minutes Kick Off Meeting - 10/01/2018", "thread_contents": ["ROS Quality Assurance Working Group meeting minutes Kick Off Meeting", "\nTime: 9 a.m. UTC and 5 p.m. UTC", "Participants:", "\n9 a.m. UTC Group", "5 p.m. UTC Group", "Notes:", "\nROSIN quality assurance (QA) initiatives were discussed. Below is a summary of the discussion. The following problems and solutions were discussed:", " (31.0 KB)", " (15.3 KB)", " (70.1 KB)", "Problem: There is a lack of a centralized source for community quality assurance practices, knowledge, and collaboration.", "Problem: The quality of packages is not visible.", "Problem: Inconsistent practice of code review", "Problem: Recruiting maintainers is a \u201creal problem\u201d for ROS and ROS-I. This has led to an increasing number of orphan packages. This is a capacity issue within the core team. The team is struggling to attract new maintainers. The team capacity does not reflect the maintenance effort required. This is also applicable to non-core packages. There is a lack of willingness to contribute to packages\u2019 maintenance. It is a challenge to attract and retain new maintainers.", "On maintaining orphaned packages", "Recruiting more maintainers", "I recommend using the github tools for code reviews.", "GitHub is where people build software. More than 28 million people use GitHub to discover, fork, and contribute to over 85 million projects.", "Where can I get informed about future meetings of this initiative?", "I\u2019ll send you the Doole link for next meeting to your email. I have your email. I believe I sent you for the first meeting.", " ah, I see. Yes, I got a doodle inquiry, but did not respond. So probably that\u2019s why I didn\u2019t get the result\u2026", "In the future, I\u2019ll know to respond. For me personally, I would welcome getting the meeting date in any case, regardless of whether I responded or not, but I can see how other people might feel differently.", " I don\u2019t know if I\u2019m still on time to be included in the next meetings, but I\u2019m also interested and glad to help if possible.", ", you more than welcome. Just send me your email and I\u2019ll include you in the next invite.", ", I\u2019ll make sure you get all the invites.", "Can I get invite too please: ", ".", "thx, D.", "Im interested in the meeting too. ", "Cheers,", "\nJihoon", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Adam Alami", "Akshay\tJain", "Andrzej Wasowski", "Geoffrey Biggs", "Kei Okada", "Adam\tAlami", "Aaditya Saraiya", "David Bensoussan", "Dirk Thomas", "Gijs van der Hoorn", "Ian McMahon", "Luca Marchionni", "Matt Droter", "Shaun Edwards", "Victor Lopez", "\n", "\n", "Solutions:\n", "Quality Hub: Would inform about existing practices and would be a central \u201cgo-to\u201d place for QA knowledge sharing (documentation of QA practices)\n", "Discussion:\n", "Make the content of the website educational and easy to digest.", "The content should capture the knowledge most engineers do not already have.", "The website should be incorporated into the existing infrastructure (i.e., Wiki, ROS Answers).", "\n", "\n", "Quality Discourse: A dedicated QA forum\n", "Discussion:\n", "A chapter was created for Quality Assurance.", "\n", "\n", "\n", "\n", "\n", "\n", "Solution:\n", "Make ROS packages\u2019 quality visible.", "\n1. Discussion:\n", "A \u201cQuality Stamp\u201d was suggested. We can use a script (leverage existing Github feature) to generate the stamp.", "Enforce the stamp creation in the distribution process.", "\n", "\n", "\n", "\n", "\n", "Solution:\n", "Energize the code review process.\n", "Discussion:\n", "It was recommended to use the combination of a tool and peer review.", "It was suggested to create a website (i.e., similar to ", ") dedicated to code review.", "Motivation was discussed. What would motivate community members to do code review? A reward system similar to the \u201cKarma\u201d system was discussed.", "Review and update the current standards.", "Possibly provide tutorials on how to review a pull request.", "\n", "\n", "\n", "\n", "\n", "\n", "Solutions:\n", "Propose and implement a funding model for the maintenance activities.", "Organize periodic campaigns to recruit new maintainers for both core and non-core packages.", "Define an onboarding process for both core and non-core community members.", "Document the onboarding process, including online educational materials (i.e., tutorials).", "Implement the onboarding process.", "Formalize the code ownership process.", "\n1. Discussion:\n", "Reward maintainers with Github Bounty.", "Identify a sustainability strategy.", "The possibility of using ROSIN FTPs to finance maintenance was discussed.", "\nLinks:", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/ros-quality-assurance-working-group-meeting-minutes-kick-off-meeting-10-01-2018/3664"},
{"title": "Better Tagging of Issues to increase community involvement", "thread_contents": ["Enabling the community to solve the open issues is a big metric to measure how involved a community is. If most of the issues are solved by a small number of developers in a package, it either means the community is passive or they find it intimidating to contribute. This can happen without the package maintainers wishing otherwise.", "I\u2019ve seen a lot of repositories tag their issues with", "This doesn\u2019t take much time/effort on the part of maintainers and has potential to increase contributions from the wider community. Moreover, it would help people who might want to organize Bug-Crushing parties or Hackathons to aid in development efforts. This does come with an increased burden on the maintainer as well as accepting that the labels might not be 100% correct, esp for Technical Difficulty and Time to Implement.", "Right now, there is no community-wide guideline regarding this, but I\u2019ve seen a lot of ROS packages add labels to keep track of their issues. I feel it\u2019d be better if we all started doing that, both while writing the issues (Community and yes, Github doesn\u2019t have such a feature, but we can mention as much as possible while creating it) as well as while reading them for the first time (Contributor/Maintainer).", "I hope we can gather some suggestions on what more can be done to make the issues list a less daunting and more inviting place. I\u2019m sure there are a lot of good practices for issues such as maintain a list of feature requests as issues, create smaller easily digestible issues from larger issues, etc.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Technical Difficulty: Low, Medium, High", "Time to Implement: < 1 Hour, Few Hours, Few Days, A Long Time", "Request to Audience: Beginners Only (This preserves non-critical issues in case the main team is busy), Up For Grabs, Help Wanted, etc.", "Category: Bug, Enhancement, Feature Request", "Progress: In Progress, Almost Completed, Not Yet Started (implied)"], "url": "https://discourse.ros.org/t/better-tagging-of-issues-to-increase-community-involvement/3839"},
{"title": "Documentation for maintainers", "thread_contents": ["Most of the documentation for ROS packages falls under these broad categories:", "Mostly, people use them to answer their Why, What and How questions, and ", ". However, it is not sufficient to encourage people to join a package as a maintainer. For that, people need to understand how the code is designed and, why is it the way it is. If we reduce the amount of time a person has to grok to understand the layout, it will take less time for the person to contribute patches which wouldn\u2019t cause issues a release or two down the lane. Most of the contributors who start with small bugs face the issue of steep learning curve for a foreign code base.", "This requires a documentation somewhere on the level of Docstrings, but dealing more to the concerns of a maintainer than a user. This might even ease changing maintainers as well as maintain packages which become orphans. This practice is already popular in the wider open source community.", "As always, I\u2019m eager to know your views on the topic and am open for questions and discussion.", "Replying here as a developer: for me the biggest blockers here are ", " and ", ".", "It\u2019s not that I don\u2019t want to write such high-level overview documentation - I have it already anyway, if only on a whiteboard or piece of paper, it\u2019s the time and effort it takes to get it into a usable and digestible form and then publish it somewhere.", "Doxygen and Sphinx (to name some examples) can be used to create really nice documentation, and some of it is highly automated, but anything at a higher abstraction level than functions/methods/classes I believe is still the responsibility of the developer.", "I know this is a bit of a lame response / excuse (as it\u2019s ", " \u201cwe didn\u2019t have time\u201d), but unfortunately it seems to be a reality that should probably be dealt with.", "Perhaps tooling to support this process (both automating creation as well as publication) could go a long way.", "I know the author of ", " is working on after-the-fact model extraction from sources (see last slides of ", "). Something similar - but a bit more low-level - is ", " by ", ". Lacking any MDE tools, recovery after-the-fact may be a strategy that can help reducing effort.", "Replying here as a developer: for me the biggest blockers here are time and effort.", "Replying here as developer: documenting is no fun!", "Replying here as tester: wtf shall I expect if I shall design or write test for that?", "Solution: Let your boss decide what to prioritize ", "Real solution: We recently had that discussion as well. Usually both roles care mainly about the public high level view (in the first case its because you forgot what you designed/implemented half a year ago, in the second case its even worse because you could know nothing about the package yet). Then it depends on how broad the public API and how complex the public behavior is. If its quite narrow it shouldn\u2019t be a problem to \u201cquick and dirty\u201d sketch some high level diagrams (whatever lightweight UML like format suites the situation) with some GUI tool (usually faster than using ", " or something similar). I like the ", " because it encourages to use \u201cbusiness context\u201d diagrams as well.", "Replying here as a developer: for me the biggest blockers here are time and effort.", "Solution: Let your boss decide what to prioritize ", "I get the tongue-in-cheek, but I believe the problem is even bigger here: ideally a solution works both when there actually ", " a boss, and when there isn\u2019t.", "The latter is \u2013 at least for now \u2013 probably still more common in the large, federated and sometimes completely unconnected ROS developer population.", "I like the ", " because it encourages to use \u201cbusiness context\u201d diagrams as well.", "This is a really nice example, but it looks like putting something like that together took a really long time.", "How about we start with something low-effort such as adding hand-drawn design diagrams + annotations and some bullet points but allow the developer to achieve anything above this level (which could be UML ", ")? It\u2019d obviously be better if the diagrams are drawn on a tablet compared to clicked off a whiteboard, but we should take whatever we can get without stressing the developers.", "There is literally no need for generating diagrams using dot or in LaTeX, but some format of documentation which keeps up with code and doesn\u2019t lag behind is preferred since this isn\u2019t describing the API usage, but the design which is prone to changes (the level which Sphinx and Doxygen don\u2019t generate automatically)", "As for time and effort, it\u2019s a double edged sword. No documentation (and tests) saves development time till the project exceeds an abstract threshold of complexity, and then lack of documentation costs time. Maybe we can start by working on projects the developers are already feeling the effects of lack of documentation?", "I\u2019m not sure where we can publish such images (not because they are dirty, but rather ros wiki vs github wiki)", "Wishful thinking: Maybe someone can improve Pix2Code so we can use the images to create UML diagrams from images.", "I get the tongue-in-cheek, but I believe the problem is even bigger here: ideally a solution works both when there actually is a boss, and when there isn\u2019t.", "I don\u2019t want someone to get this wrong. But I think in a company neither the \u201cdeveloper\u201d nor the \u201ctester\u201d role (independent of the fact if these roles are executed by the same person or not) has the authority to decide something like that on some bigger scope (e.g. company scope). Usually company guidelines which are commonly agreed on handle decisions like that (after considering possible implications).", "The latter is \u2013 at least for now \u2013 probably still more common in the large, federated and sometimes completely unconnected ROS developer population.", "Speaking as a community member I would consider (1) package guidelines before (2) working group guidelines (for several packages) before (3) general community guidelines as starting point to loot for information like that.", "This is a really nice example, but it looks like putting something like that together took a really long time.", "I totally agree that using all diagrams in any cases makes no sense.", "Speaking as a community member I would consider (1) package guidelines before (2) working group guidelines (for several packages) before (3) general community guidelines", "IMO, this is the correct order. Do you have any packages to start emulating the guidelines from? It would be really nice to have a few (2) or (3) level guidelines as a starting point for new packages and developers.", "I was working today to kick off ", " and I was reading this wondering what should be the first tutorial to move to our not-yet-announced place-to-go for quality resources.", "Reading the above, I was thinking whether there is a guide describing how to document a package? Is there? I found these:", "None of these explains or hints what is a good ROS package documentation.  What questions should a package author answer in his wiki entry?  What are the good examples? What are good style elements for documenting a package?", "And there is the ", " that provides a lot of guidance.", "And there\u2019s a set of wiki pages under the ", " including:", "There is a lot of outdated information there as well that would be good to clean up. All the Stack references. And a lot of the workflows and Process pages are mostly out of date/unused since they are pre github etc.", "In general for good examples, I\u2019d recommend looking at core packages.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["In-code comments // Hello there", "Docstring (or generated by docstrings) /** ", " Kenobi ! **/", "External (eg: a webpage, say a wiki, or ros website or gitbook or readthedocs or something similar)"], "url": "https://discourse.ros.org/t/documentation-for-maintainers/3838"},
{"title": "Maintaining and releasing orphaned packages", "thread_contents": ["As we proposed in the ROSCon 2017, we\u2019re interested in how we can maintain and keep releasing orphaned packages.", "I have created REP regarding this issue at  - ", ", hope this will help when we discuss  the item \u2018Formalize the code ownership process\u2019 and I\u2019m willing to hear any feedback on this idea.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Original discussion] ", "\n", "Ros wiki pages: ", "\n", "ROSCon 2017 talk: ", "\n"], "url": "https://discourse.ros.org/t/maintaining-and-releasing-orphaned-packages/3929"},
{"title": "Chaos testing tool for Docker", "thread_contents": ["In case you are deploying/running functionality (e.g. nodes) with Docker it can be worth looking at ", ". pumba is a \u201cChaos testing and network emulation tool for Docker\u201d which enables killing/pausing/stopping/removing containers and introducing delay/loss/corruption into network traffic.", "Would you have any examples of how to setup tests with this?", "Might be nice to create a example package (using ", " or something) that shows how this can be used.", "On thing that might reduce the value of testing with ", " is that the middleware in ROS 1 was never really designed for anything but \u2018perfect\u2019 networks. Performance of a node graph drops really quickly when things like lossy links are introduced, and there\u2019s not much user-level code can do to improve that.", "For ROS 2 this is definitely a nice tool.", "On thing that might reduce the value of testing with netem is that the middleware in ROS 1 was never really designed for anything but \u2018perfect\u2019 networks. Performance of a node graph drops really quickly when things like lossy links are introduced, and there\u2019s not much user-level code can do to improve that.", "For ROS 2 this is definitely a nice tool.", "Right. I wanted to post in the \u201cNext Generation ROS\u201d category first. However as it is related to testing I ended up here. As the command line interface is quite simple I saw no need to add a tutorial. Are there ROS2 specifics which would make a tutorial reasonable?", "Are there ROS2 specifics which would make a tutorial reasonable?", "Being able to reproduce say some of the benchmark results shown here with pumba would be cool:", "\n", "860.51 KB", "\n", "\n", "The project aims to provide a framework for ROS2 benchmarking. ROS2 communication characteristics can be evaluated on several axes, quickly and in an automated way. The project also serves to compa...", "\n", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/chaos-testing-tool-for-docker/3918"},
{"title": "ROS Quality Assurance Working Group meeting minutes - Feb. 2018 Meeting", "thread_contents": ["ROS Quality Assurance Working Group meeting minutes - 9th of Feb. 2018 Meeting", "\nTime: 5 p.m. UTC", "The result of the vote:", "The Quality Assurance group members were asked to vote on the priorities of the ROSIN initiatives. The result of the vote was presented and discussed.", "The results of the vote: The ROSIN initiatives were ranked as follows:", "Discussion:", "Quality Stamp: Making ROS package quality visible", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Adam Alami", "Aaditya Saraiya", "Andrzej Wasowski", "David Bensoussan", "Dejan Pangercic", "Dirk Thomas", "Gijs vd. Hoorn", "Jihoon\tLee", "Jose Luis Rivero", "Kunal Tyagi", "Matt Droter", "Matt Robinson", "Shaun Edwards", "Shawn Schaerer", "Thomas Denewiler", "Victor Lopez", "The result of the votes on ROSIN quality assurance initiatives", "\u201cMake ROS packages\u2019 quality visible\u201d", "\n", "\n", "\n", "\n", "\n", "\n", "Make ROS packages\u2019 quality visible", "Appoint ownership for ROSIN QA initiatives", "Energize the code review process", "Implement a code scanning method and tool", "Maintenance issues", "Continuous Integration", "Quality hub website", "Formalize the code ownership process", "Onboarding process for core and non-core community members", "Model in-the-loop testing", "Implement a continuous improvement process", "Automated unit test generation", "Quality discourse", "QA promotion events", "Model Driven Development (MDD)", "\n", "\n", "\n", "Actionable initiatives were voted with higher priorities. The message seems to be \u201cLet\u2019s get broken things fixed first.\u201d Some group members were disappointed that MDD received a lower score. The direction given seems to be to \u201cmake what we have now visible\u201d then improve the process.", "These initiatives need to be defined.", "Making packages\u2019 quality visible is something that the community has been requesting for a while.", "The community has a split opinion regarding MDD. Some are passionate about it, while others have little experience with it.", "The priority may change once the quality of packages become visible.", "Going forward, we will be discussing these initiatives one at a time:\n", "Each group meeting will be dedicated to a particular initiative in order of priority. The community perspective through the working group will be discussed. Then the implementation of the initiative (How and Who) will follow.", "\n", "\n", "\n", "\n", "\n", "Discussion:\n", "current CI badge was discussed. Currently, there are three badges displayed, depending on the state (the", "\nway the package is registered with ROS Build) of the package. The Build Farm currently generates test statistics files that the wiki uses to generate the badges (", ").", "Other perspectives:\n", "The ability to display the test failures and display the details of the failed tests. If there are failures, then what type of failure is it? If the test succeeds, then what was the test?", "There is a plan to display the results of a code scanner.", "For someone unfamiliar with the package (other than the author), how can she or he assess the magnitude of the failure? It may be obvious to the maintainer, but to an external user, it may not make sense.", "Display test coverage not only for CI service but for other types of tests (i.e., Unit Test, Integration Testing, MIL, HIL, etc.). This will show how much coverage the code has.", "Display a link to a static analysis tool run. This will provide visibility into the internal code quality. ", " was discussed as a candidate for static analysis.", "Generate statistics about the package, for example, the number of issues logged against the packages, how long the issue has been open, etc. These metrics are available in GitHub.", "What kind of metrics do we have now? What other metrics can we display? Which of these metrics can we automate and display (make visible)? Generate a list of available metrics and conduct an analysis of the possibility of using each metric as a quality indicator.", "The \u201cquality stamp\u201d puts the user in a position to make a judgement call based on what has been made available.", "The ability to record a \u201csoft review\u201d provides community members with the ability to review and comment on packages\u2019 quality. Sometimes metrics may not be the best way to present the quality of a particular package.", "\nUser feedback along the lines of Amazon\u2019s user feedback can be helpful.", "Add information about memory leaks since packages sometimes have memory leak issues. Users interested in robustness will look at metrics such as memory leaks and segfault.", "Different users have different needs. New users of ROS may be more interested in documentation, while an industry user may be more interested in the robustness of a package.", "The documentation coverage. Currently, the wiki badge states, \u201cDocumented,\u201d but it does not say exactly how much of the code is documented. It would be helpful to display the percentage of the code being documented. This would help new users. There are tools available to analyze the level of documentation compared to the number of functions available in the code.", "The decision is to document the current available metrics and possible future metrics and to discuss this in the next group meeting. As a group, we will discuss which ones are valuable. We will also prioritize the implementation of these metrics in the quality stamp.", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/ros-quality-assurance-working-group-meeting-minutes-feb-2018-meeting/3971"},
{"title": "Design By Contract", "thread_contents": ["What do you think about adding \u201cDesign By Contract\u201d functionality to ROS?", "\u201c", " is an approach for designing software. It prescribes that software designers should define formal, precise and verifiable interface specifications for software components, which extend the ordinary definition of abstract data types with preconditions, postconditions and invariants.\u201d ", "\u201cDesign By Contract (DBC)\u201d can dramatically decrease the effort during software integration and dramatically increase the overall system reliability.", "\u201cDesign By Contract (DbC)\u201d is a built-in feature of many recent programming languages. Usually the verification of these interface specifications is supported on different levels of abstractions during \u201cdebug\u201d builds at runtime. ", " supports runtime checking of contracts on the interface, the class and the (member) function level for example:", "On the class level the caller of a member function ensures defined preconditions. When the preconditions are fulfilled the member functions guarantees proper functioning and defined postconditions. Invariant checks ensure that an object remains in a valid state during runtime. The validity of the internal state (e.g. class members) is checked after the execution of the constructor, before the execution of the destructor, before and after the execution of a public member function. [Cehreli, Ali: ", ", IngramSpark, 1st edition, 2017, p. 218 and 386 or ", "]", "In ROS one could think of node level contracts w.r.t. \u2026 (impact of DbC on timing):", "Checks w.r.t. to timing could be heavily impacted by the prrocessing overhead of checks for complex message types. However in some circumstances (comparably low processing overhead due to checks) they could at least give some rough estimate w.r.t. to \u201cdynamic\u201d node dependencies.", "My two cents.", "\nIt sound to be a good idea, if a missing requirement genrate a warning, rather than an assertion/exception.", "Some of the things you described seems to be related more to Quality of Services, rather than Design by Contract, but I might be wrong.", "The more I learn modern C++, more I realize that the best \u201ccontracts\u201d can be usually implemented using \u201cstrong types\u201d.", "\nI am in favour of using something similar to ", " in ROS messages, some kind of metadata attached to the topic itself that is NOT transmitted every time and is immutable.", "But I am aware that this is another topic\u2026", "I have often put some thought into providing such an idea over the years, but I\u2019ve never come close to putting in enough effort to actually do it. ", " I\u2019d love to see such work move forward so I\u2019m happy to see someone putting in the work!", "Having said that, I think that it would be a major effort to achieve for ROS 1, but quite doable for ROS 2 because many of the things you want to establish as the \u201ccontract\u201d for a data-flow-based software component can be implemented using the DDS QoS policies. It would need some thought put into how and where to specify the contracts and then how to translate that into QoS settings. On from that things get more complicated. DDS provides facilities to be informed when a QoS policy has been violated, but how to respond to that is probably going to be very application specific. (In classical Eiffel-style DbC, the contracts are essentially asserts that raise exceptions when violated at run time.)", "This can be done using the DDS ", " QoS policy.", "This could be done in the message IDL and an assert in the topic publish API. There has been occasional talk in ROS 2 discussions of adding allowable ranges to the IDL, but I don\u2019t think it\u2019s gone anywhere. However if it is going to be node specific it would probably be better done purely in the topic publish API, with a node declaring when it sets up the publisher what allowable ranges the message can hold. This would be fine for run-time checks, but it would make it a lot harder to check contracts statically than having them in the IDL. I think that the need for a unique message definition for every node would be too prohibitive to put contracts in there, though. Other than perhaps things that everyone agrees are sensible for that particular message.", "This can also be done using the DDS ", " QoS policy.", "Same comment as for the publishing side above.", " QoS policy again.", "Now we\u2019re getting close to Eiffel-style DbC. These can be done now by putting asserts in your service callback, but what you really want is a way to notify the caller that there was a problem fulfilling the service call due to a contract violation. This would probably require extending the way services are implemented.", "The RPC over DDS specification, which was finally published in April this year and hopefully the OSRF\u2019s DDS vendors will rapidly support, does not provide any QoS policies specific to services (only ways to specify existing QoS policies on a per-interface level). Therefore ROS2 would need to decide how to deal with contract violations themselves.", "Same as above.", "Again same as above.", "So the things that you are requesting are doable in ROS 2 using a combination of the ", " QoS policy and adding some features to the API for specifying pre- and postconditions. I do not think it would be a huge level of work, but there would need to be a focus on how the API will work to make it clear what is happening, and making sure that the performance is both minimal and zero-able (i.e. all checks can be turned off).", "The more I learn modern C++, more I realize that the best \u201ccontracts\u201d can be usually implemented using \u201cstrong types\u201d.", "Design by contract encompasses more than can be specified using strong types. It includes the behaviour of the function called. Even in a language where functions strictly have no side effect, there are parts of this that cannot be expressed by ensuring the types are correct, unless every function takes and returns types unique to that function that exactly define its input and output spaces. For functions that do have side effects (such as class methods) and situations where the side effects are the whole point (many service calls and many data-flow-based nodes), types will not cover everything you want to check.", "I am in favour of using something similar to boost::units in ROS messages, some kind of metadata attached to the topic itself that is NOT transmitted every time and is immutable.", "I think that this would be a useful feature. Adding units to data is a powerful way to catch a common class of potentially fatal errors, and it can be done in a way that has minimal impact on performance.", "Re-posting here because replying from email breaks\u2026", "IMHO There are many many known ways to improve software quality in general, and ROS in particular, but many limiting factors, mostly the lack of resources ( including each and everyone motivation and time ).", "So I think the focus should be on applying the software development methodologies that are most likely to bring big benefits with relatively little investment, picking from the list of already proven existing software systems in other areas.", "The contracts as described seems to be a \u201cweak\u201d version of a specification + model checker (check ", ") that could also be integrated with a ROS system, but the effort required for the potential users is probably prohibitive\u2026", "Before doing contracts, I would first focus on proper, static (since message structure is static), strong, typing (despite the default weak/dynamic typing of the supported languages, it is doable using existing libraries, like for ", " and ", " - and even ", ").", "My personal top two wishes are :", "static&strong typing for ROS message fields (typing helps, and even more when things are distributed). It s a first step\u2026 later we could do much more, like add external dynamic typechecker that can check communication during execution (for types, contracts or stronger formal systems)", "erlang VM integration ( ROS messages as a port, communicating with speed number crunching C++ code, and able to use the erlang VM for all the distribution concerns ) - especially for ROS1.", "I have often put some thought into providing such an idea over the years, but I\u2019ve never come close to putting in enough effort to actually do it. ", " I\u2019d love to see such work move forward so I\u2019m happy to see someone putting in the work!", "I have my roots in the domain of embedded software development. Most languages used there like C/C++ are lacking a built-in support for \u201cDesign By Contract\u201d (one exception is e.g. Ada) and try to compensate the lack e.g. with coding standards suggesting to define the interfaces in a \u201ccontract\u201d like manner as part of the built-in code documentation. But in comparison with language built-in support all these measures are very weak. To get to the point\u2026 this topic is keeping me busy for quite a while ", ".", "Having said that, I think that it would be a major effort to achieve for ROS 1, but quite doable for ROS 2 because many of the things you want to establish as the \u201ccontract\u201d for a data-flow-based software component can be implemented using the DDS QoS policies. It would need some thought put into how and where to specify the contracts and then how to translate that into QoS settings. On from that things get more complicated.", "ROS is a new technology for me. But after reading a bit about the ROS2 design I thought the proposal for \u201cDesign By Contract\u201d would fit better into the ROS2 design GitHub repo than into ROS1 (and ", ") in the first place. Unfortunately I do not know enough about ROS2 to implement something reasonable on my own yet. However I am very interested in contributing code if it is ensured that it is no waste of time. (Means contributing code w.r.t. some reasonable up-front design.)", "This can be done using the DDS DEADLINE QoS policy.", "I will dive deeper into DDS and QoS policy the near future.", "DDS provides facilities to be informed when a QoS policy has been violated, but how to respond to that is probably going to be very application specific. (In classical Eiffel-style DbC, the contracts are essentially asserts that raise exceptions when violated at run time.)", "(In D one can decide whether to use \u201cassert\u201d, \u201cstatic assert\u201d or \u201cenforce\u201d checks. \u201cassert\u201d checks throw an AssertError which is no Exception but an error during runtime. \u201cstatic assert\u201d checks do the same but at compile time. Both are usually enabled during debugging only.", "\n\u201cenforce\u201d checks throw exceptions at runtime which which can be handled and are most suitable for public interfaces.)", "This could be done in the message IDL and an assert in the topic publish API. There has been occasional talk in ROS 2 discussions of adding allowable ranges to the IDL, but I don\u2019t think it\u2019s gone anywhere. However if it is going to be node specific it would probably be better done purely in the topic publish API, with a node declaring when it sets up the publisher what allowable ranges the message can hold. This would be fine for run-time checks, but it would make it a lot harder to check contracts statically than having them in the IDL. I think that the need for a unique message definition for every node would be too prohibitive to put contracts in there, though. Other than perhaps things that everyone agrees are sensible for that particular message.", "Unfortunatelly I do not know much about IDL as well right now. From a conceptional point of view the possiblility for static checking considering a single source of specification should be favored. Considering the \u201cstatic\u201d behaviour of the node interface only the IDL seems suiteable for me. What do you mean \u201cif it is going to be node specific\u201d exactly? In case of exotic node topic message types?", "Will \u201cdynamic\u201d aspects like the \u201cguaranteed\u201d publish rate of topics is gooing to be defined in the IDL as well? If so then the IDL could be a suitable place for these kind of contract information in the first place as well. However if one thinks further about situations where the \u201cguaranteed\u201d publish rate shall not be constant but dependent on the node state during runtime (in common if the behavior of the node depends on its state during runtime) the IDL seems not that suitable anymore.", "Now we\u2019re getting close to Eiffel-style DbC. These can be done now by putting asserts in your service callback, but what you really want is a way to notify the caller that there was a problem fulfilling the service call due to a contract violation. This would probably require extending the way services are implemented.", "In case a \u201cstrict\u201d contract check (analog to D \u201cassert\u201d checks throwing errors) would fail one as programmer should be notified somehow about that (e.g. logger). In case of \u201cweak\u201d contract checks failing (analog to D \u201cenforce\u201d checks throwing exceptions) the caller should be notified directly.", "The RPC over DDS specification, which was finally published in April this year and hopefully the OSRF\u2019s DDS vendors will rapidly support, does not provide any QoS policies specific to services (only ways to specify existing QoS policies on a per-interface level). Therefore ROS2 would need to decide how to deal with contract violations themselves.", "I will dive deeper into DDS and QoS policy the near future.", "So the things that you are requesting are doable in ROS 2 using a combination of the DEADLINE QoS policy and adding some features to the API for specifying pre- and postconditions. I do not think it would be a huge level of work, but there would need to be a focus on how the API will work to make it clear what is happening, and making sure that the performance is both minimal and zero-able (i.e. all checks can be turned off).", "I consider the possibility to \u201cdisable\u201d performance overhead essential as well. The possibility to keep performance overhead minimal would depend on the communicated data type to a great extend I guess. I would love to contribute.", "The contracts as described seems to be a \u201cweak\u201d version of a specification + model checker (check TLA+) that could also be integrated with a ROS system, but the effort required for the potential users is probably prohibitive\u2026", "Yes, it\u2019s specification and model checking. If the effort required for the potential users is prohibitive depens heavily on the domain and environmental conditions they are acting in. I think one should give every possible user as much optional technical possibilities to work with as possible. If users make use of the concepts offered is their choice.", "Before doing contracts, I would first focus on proper, static (since message structure is static), strong, typing (despite the default weak/dynamic typing of the supported languages, it is doable using existing libraries, like for C++ and Python - and even LISPs).", "I agree that static strong typing is very important. However from an integration point of view I wouldn\u2019t consider \u201cDesign By Contract\u201d less important. DbC helps to avoid \u201chigher level\u201d interaction issues in addition to typing issues. But as DbC would require many features to be most effective w.r.t. to effort static strong typing could probably be achieved faster.", "[\u2026] I think one should give every possible user as much optional technical possibilities to work with as possible. If users make use of the concepts offered is their choice.", "Freedom-", "-choice supporters would probably disagree with you here.", "From a maintenance pov this is also not a very popular sentiment.", "I am one of those \u201cFreedom-from-choice\u201d supporters ", "Freedom-from-choice supporters would probably disagree with you here.", "From a maintenance pov this is also not a very popular sentiment.", "I am one of those \u201cFreedom-from-choice\u201d supporters ", "I am a freedom-from-choice supported as well ", " . I would stick to freedom-from-choice w.r.t. all \u201cinternals\u201d of a framework. However from a framework user perspective it is probably not always possible or reasonable to beeing forced to define contracts in practice.", "For everyone which is interested to get hands dirty: There is a ", ".", "Before doing contracts, I would first focus on proper, static (since message structure is static), strong, typing (despite the default weak/dynamic typing of the supported languages, it is doable using existing libraries, like for C++ and Python - and even LISPs).", "I am interested in this topic as well. But I would prefer to discuss only DbC in this thread. If you can convince me that I prioritize it higher than DbC I will be with you ", "This does not fit into this thread as well but what is the benefit of erlang VM integration?", "This can be done using the DDS DEADLINE QoS policy.", "For more information about the DDS DEADLINE QoS policy refer to page 95 in the ", ".", "Unfortunatelly I do not know much about IDL as well right now. From a conceptional point of view the possiblility for static checking considering a single source of specification should be favored. Considering the \u201cstatic\u201d behaviour of the node interface only the IDL seems suiteable for me. What do you mean \u201cif it is going to be node specific\u201d exactly? In case of exotic node topic message types?", "This relates to the way the message definition language is used in ROS. It defines data types, not node interfaces. Contracts are much more likely to be specific to node interfaces than to the messages, which are intended to be generic and highly reusable. Because ROS doesn\u2019t currently have a node interface definition language, there is not yet a suitable place to specify contracts.", "Furthermore, some contracts may be specific to a particular implementation of a node, and so wouldn\u2019t fit in a node interface specification intended to be reused by many different implementations (although then I would argue that the nodes with different contracts should not be considered interchangeable and so should be using different interfaces).", "Contracts aim is to enforce complex dynamic properties of a system.", "\nTypes aim is to enforce simple (usually) static properties of a system.", "Therefore I am of this point of view : ", "\nNotice how the complexity increase from top left to bottom right.", "So, before trying to do something complex (which means heavy maintenance, and likely to be unused until it is perfectly optimized), I would focus on the doable, lighter side of things.", "I also agree with ", " and would like first to see more strict enforced message types, before thinking about their combination in an IDL, how this would behave dynamically, and how to enforce some behavior and prevent others\u2026", "\nRight now the message field type is too ambiguous (\u201cnode N can subscribe to a message M with a field int, but actually there will ever be only even numbers there\u2026\u201d except the developer of N don\u2019t know that, unless he goes through the code of all nodes publishing M)", "This does not fit into this thread as well but what is the benefit of erlang VM integration?", "Don\u2019t try to reinvent the wheel, reuse 30 years of expertise in distributed system programming. There are already a bunch of people working on these questions in a distributed setting, and some tools available : ", "By the way, isn\u2019t this thread some kind of ", ". Which problem exactly are you planning to solve with DbC ?", "Always nice to see another Erlang fan! That language is such a pleasure to program in.", "would like first to see more strict enforced message types, before thinking about their combination in an IDL, how this would behave dynamically, and how to enforce some behavior and prevent others\u2026", "Right now the message field type is too ambiguous (\u201cnode N can subscribe to a message M with a field int, but actually there will ever be only even numbers there\u2026\u201d except the developer of N don\u2019t know that, unless he goes through the code of all nodes publishing M)", "Some would say that this is one thing contracts are meant to check\u2026 but I think that depends on where you draw the line between what is a contract and what is the type. But I think you are correct in saying that this sort of information really needs to be available and checkable. It is helpful to have in documentation but far more beneficial to developers (and safer) for it to be automatically checkable.", "Types/Contracts : In my mind, \u2018Design by Contract\u2019 was an informal concept/practice introduced a few years ago because type systems of most languages at that time was insufficient to guarantee correct program behavior. But it is fundamentally the same thing\u2026", "\nExcept that we have researched ", " for a while now, whereas \u2018", "\u2019 is probably not what you would expect after learning about DbC\u2026", "These days I am following ", " and ", " to ", " ", ".", "Contracts aim is to enforce complex dynamic properties of a system.", "Types aim is to enforce simple (usually) static properties of a system.", "That summarizes the difference between types and contracts. And that is exactly about why I didn\u2019t propose types here: In my experience the hard to find defects tend to have their root cause in implicit, incomplete or missing definitions of the dynamic characteristics of here in ROS, node interactions.", "This relates to the way the message definition language is used in ROS. It defines data types, not node interfaces. Contracts are much more likely to be specific to node interfaces than to the messages, which are intended to be generic and highly reusable. Because ROS doesn\u2019t currently have a node interface definition language, there is not yet a suitable place to specify contracts.", "Unfortunatelly that is exactly what I found out when looking into the ROS2 sources. One could add deadlines for topics that (a) do not change or (b) do change over node runtime they could be (a) defined and/or (b) updated via the rmw C API which wrapps the DDS DynamicData API or the statically generated DDS functionality from the IDL definitions. However as you said: The interface considers the aspects of the message description languages IDL only, not a node description language. And a node description language would be required to add functionality which would be most benefitial.", "By the way, isn\u2019t this thread some kind of X-Y problem. Which problem exactly are you planning to solve with DbC ?", "That\u2019s right. The question should be: \u201cHow can I prevent from introducing defects into/detecting defects in distributed ROS systems which have their root cause in the dynamic interaction of several ROS nodes?\u201d I am biased and did not propose ", " because that seems hard to implement for distributed systems. DbC or actually model checking based on kind of a node description language seems to be cheaper to me.", "I might be stating the obvious here, but still worth reminding everyone I think\u2026", "How can I prevent from introducing defects into distributed ROS systems which have their root cause in the dynamic interaction of several ROS nodes?", "Don\u2019t build a distributed (==multiprocess) system if you don\u2019t ", ". Programming language elements (functions, classes, libraries, packages) are made for composing correctly in all sorts of ways, and there is usually theoretical background, tooling, conventions, processes, to help you satisfy the cognitive biases you didn\u2019t know you had. No distributed software system that allows you to control the distribution graph, has anything equivalent to that currently. ROS is no exception (actually erlang might be the only exception).", "\nExample : A whole part of Operating System design is to ", ", and most recent OSes are ", " ? This is opposed to the features suitable for a distributed system, which by definition needs process cooperation, and where controlling when each process can be interrupted, or not, is really useful. In one process, in one language, all these problems vanish.", "If you have to build a distributed system, congratulations, you are doing distributed system research. This is not robotics and there is a different set of assumptions coming along in that context.", "\nExample : most existing and widely-used distributed software systems rely on the fact that a message, a unit of computation \u201ctask\u201d, is atomic and ", ". That requirement usually cannot be met in a robotic platform, because of side effects on the real world, the whole point of it. Painful lesson after a year working on ", " - .", "For the rest of us having to do both distribution and real world side-effect, I feel the most promising way, is still ", ". But, as far as I know, it is still a software research topic on its own.", "Regarding ROS, the best bet is likely to integrate/interface/implement ROS with the existing programming language that provide the feature that you need, instead of trying to integrate \u201cthat awesome language feature\u201d into ROS (because it implies re-implementation and proactive maintenance from ROS community for something that is not purely robotics related)", "For DbC, I\u2019m thinking if you get around implementing a Eiffel-based ROS interface/integration/implementation, you might find some interesting changes needed in ROS itself, even in REPs, in order to make that possible without compromising ", ". I\u2019m thinking these changes would likely be worth it for ROS, especially in the long run.", "\nDisclaimer: I\u2019m currently following the same path with Python, improving how ROS integrate with it along the way, and finding basic problems where I didn\u2019t expect to\u2026", "But ultimately, writing a \u201csolid\u201d software project is a matter of computer science and software engineering expertise, so general software theory, knowledge and tools apply there. It\u2019s not a problem specific to robotics, and therefore robotic science and tools (like ROS) are not focusing on it.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["if node is topic publisher (postcondition checks)\n", "(\u201cguaranteed\u201d topic publish rate)", "\u201cguaranteed\u201d topic message type values", "\n", "if node is topic subscriber (precondition checks)\n", "(\u201cexpected\u201d topic reception rate)", "\u201cexpected\u201d topic message type values", "\n", "if node is service server\n", "(\u201cguaranteed\u201d service response time) (postcondition check)", "\u201cexpected\u201d service request message type values (precondition check)", "\u201cguaranteed\u201d service response message type values (postcondition check)", "\n", "if node is service client\n", "\u201cguaranteed\u201d service request message type values (postcondition check)", "\u201cexpected\u201d service response message type values (precondition check)", "\n", "if node is action server\n", "(\u201cguaranteed\u201d feedback transmission delay after goal request has been received) (postcondition check)", "(\u201cguaranteed\u201d result transmission delay after goal request has been received) (postcondition check)", "\u201cexpected\u201d action goal message type values (precondition check)", "\u201cguaranteed\u201d action feedback message type values (postcondition check)", "\u201cguaranteed\u201d action result message type values (postcondition check)", "\n", "if node is action client\n", "(\u201cexpected\u201d feedback message delay after goal request has been transmitted) (precondition check)", "(\u201cexpected\u201d goal message delay after goal request has been transmitted) (precondition check)", "\u201cguaranteed\u201d action goal message type values (postcondition check)", "\u201cexpected\u201d action feedback message type values (precondition check)", "\u201cexpected\u201d action result message type values (precondition check)", "\n", "if node is topic publisher (postcondition checks)\n", "(\u201cguaranteed\u201d topic publish rate)", "\n", "\u201cguaranteed\u201d topic message type values", "if node is topic subscriber (precondition checks)\n", "(\u201cexpected\u201d topic reception rate)", "\n", "\u201cexpected\u201d topic message type values", "if node is service server\n", "(\u201cguaranteed\u201d service response time) (postcondition check)", "\n", "\u201cexpected\u201d service request message type values (precondition check)", "\u201cguaranteed\u201d service response message type values (postcondition check)", "if node is service client\n", "\u201cguaranteed\u201d service request message type values (postcondition check)", "\u201cexpected\u201d service response message type values (precondition check)", "\n", "if node is action server\n", "(\u201cguaranteed\u201d feedback transmission delay after goal request has been received) (postcondition check)", "(\u201cguaranteed\u201d result transmission delay after goal request has been received) (postcondition check)", "\u201cexpected\u201d action goal message type values (precondition check)", "\u201cguaranteed\u201d action feedback message type values (postcondition check)", "\u201cguaranteed\u201d action result message type values (postcondition check)", "\n", "if node is action client\n", "(\u201cexpected\u201d feedback message delay after goal request has been transmitted) (precondition check)", "(\u201cexpected\u201d goal message delay after goal request has been transmitted) (precondition check)", "\u201cguaranteed\u201d action goal message type values (postcondition check)", "\u201cexpected\u201d action feedback message type values (precondition check)", "\u201cexpected\u201d action result message type values (precondition check)", "\n", "\n", "\n", "\n", "\n", "erlang VM integration ( ROS messages as a port, communicating with speed number crunching C++ code, and able to use the erlang VM for all the distribution concerns ) - especially for ROS1.", "\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/design-by-contract/2405"},
{"title": "Input validation as a metric for quality", "thread_contents": ["Security and robustness is a major concern to a lot of folks in ROS community. Keeping this in mind, I propose that sanitation and validation of inputs (and possibly outputs) be considered as a strong metric for calculating the quality of a package. Here are some of my thoughts:", "In order to increase security and robustness, as a first step, we can start with checking inputs from", "Some kinds of data require sanitation because they are constrained however, those constraints aren\u2019t explicit such as range (input to switch case, pixel values, euler angles), mathematical relationships (quaternions), internal structure (URL, compressed octree maps) among others.", "Ensuring the constraints are met in the input is important because of the ", " nature of topics and parameters. The lack of good command line argument parsing tools for C++ (an important language in the community) and the allure of using command line for passing arguments can result in an unstable configuration. As a result, some packages are only a key-stroke away from either crashing or worse propagating the error onwards to other packages.", "As a community, we should create packages that can handle erroneous inputs gracefully by", "I expect URL parsing to mostly be an issue in the near future with the increase in packages providing nodes to communicate over the internet [2]. However, others are a concern right now, especially during debugging. We can send erroneous input from command line tools which offer no validation (eg: default values for quaternion are [0, 0, 0, 0]).", "The effect on performance, code complexity, development effort is expected to be minimum with an assured increase in overall robustness of the software stack. Moreover, a lot of packages already adhere to the best practices like this.", "I\u2019d like to confess in advance that I don\u2019t know how to enforce or detect violations automatically, or even what all would constitute a violation of ", " since it might be a non-exhaustive list. Having said that, I\u2019m eager to know your views on the topic and to answer, clarify and discuss.", "Thanks", "\nKunal Tyagi", "[2]: By then, hopefully, the issues are resolved in the upstream libraries", "There is some discussion related to input validation here:", "There is some discussion related to input validation here:", "In the meanwhile I summarized considerations about \u201cDesign by Contract\u201d (which relates to input and output validation, could also be used for consistency checking on the node/nodelet level) and how it could be applied to ROS in one of my fun projects ", ". It didn\u2019t reach \u201cimplementation phase\u201d. Don\u2019t assume any progress in implementation\u2026 I decided to retire that project and continue with a project in ROS2 whenever I find some time and motivation ", " However the projects ", " is probably a shorter read than the thread.", "I\u2019d like to confess in advance that I don\u2019t know how to enforce or detect violations automatically, or even what all would constitute a violation of input validation since it might be a non-exhaustive list. Having said that, I\u2019m eager to know your views on the topic and to answer, clarify and discuss.", "The ", " points to a project where Python ", " is used for property based testing in ROS1. That would be a possible way to verify violations.", "It could be even easier to integrate with ROS2 because the ROS2 infrastructure supports ", " out of the box with ", ". Python ", " integrates with ", " out-of-the-box. If you search in the ", " you will find out how it integrates with ", ". (BTW: ", " is legacy\u2026)", "Having an DBC sounds the best way forward, however, for a lot of languages, libraries/standard don\u2019t exist to implement packages in such a fashion. I think with ROS2, we\u2019ll be seeing packages in a number of different languages (at least Go, Rust, and C apart from Python, C++ and Lisp).", "As such, I have a few open ended questions. How can we", "Since DBC implementations are immature, and we should start somewhere so as to enable simpler on-boarding of packages to DBC paradigm. I like the idea of using Python hypothesis to create simple test nodes for other packages to run and test against.", " for all major ROS packages with a message, we should add Python nodes to read and send messages (pre-defined types) to test the assumptions for that message. This helps people test if their system is resilient to wrong inputs by writing output tests themselves (following examples is easier than doing it from scratch).", "Maybe make this a standard practices so people can call relevant functions from the message package to test the assumptions themselves for their messages. (This might result in the same code being written multiple times in multiple language or writing the code in C for inter-operability)", "This also enables a debug launch method where people can launch these nodes to check if their packages are sending the correct data during normal run-time operations or run these nodes against a rosbag.", "As such, I have a few open ended questions. How can we", "I don\u2019t know if scoring is reasonable.", "You want DbC checking enabled in development/integration versions of the software only (not in production versions). E.g. compiled programming languages with built-in support implement this with conditional \u201cinjection\u201d of the DbC logic during compile time. \u201cBy throwing a compiler switch, Contracts code can be enabled or can be withdrawn from the compiled code.\u201d (", "). C++17 supports DbC as well (", "). I don\u2019t know if it is implemented in C++ compilers already and how. (If the language does not have built-in support the \u201cmanual\u201d conditional \u201cinjection\u201d of DbC logic is a potential source for errors. This applies on the ROS level as well.)", "I feel that a package with the correct checks on input and output would increase the robustness of any system it\u2019s used in. I really like knowing that none of my nodes can seg fault or show undefined behavior, no matter what you throw at them. This is hard and time consuming. In order to incentivize such practices in the community, we need to reward the packages which aspire for a higher standard for stability as well as inform the wider community about them.", "The ", " tag in the README of a repository gives me a little more confidence in a foreign codebase. A ", " tag increases my confidence but a ", " doesn\u2019t. A well-documented README (or similar file) ensures me that the developer wants other to use the package and has documented it\u2019s correct usage and failings. These anecdotal feelings without any fact make me think that a score for robustness is reasonable.", "Robustness is an abstract concept, but is influenced by a lot of factors. Resilience to random inputs (fuzzing) is one of them. Lack of seg-faults is another. There are a variety of factors, each with a different weight to a different segment of user. First step in increasing robustness is always ensuring you only accept the correct input and deliver the correct output. As a result, the first step towards a badge of robustness would be to have a badge related to Input and Output validation. It can be a simple ", " sticker or a ", " sticker or something a more complicated than that (if that\u2019s possible).", "I would be using Contracts to mean something to validate input/output against.", "It depends on the overall application context", "I completely agree with this. It\u2019s upto the user to choose the correct contract. Contracts can\u2019t be one-size-fits-all. Moreover, there is little reason not to parametrise the contracts. User might want to choose a lower and upper bound on acceleration along x-axis and y-axis and a total acceleration magnitude constraint. We can\u2019t know it in advance. However, we can know that for sensor_msgs/NavSatFix.position_covariance_type, there are only a fixed range allowed, and this can be an example of standard contract. User might include a run time check (only option if the node is in say, python) or a compile time check. We shouldn\u2019t limit the options either way. Providing contracts only to a certain language would change the capabilities of ROS as well as the results people expect in different languages.", "I think contracts would be like messages. ROS would provide a few standard contracts, but users would be free to combine a standard contract provided by ROS as they wish or write their own to suit their needs. Just like how users might use the Imu message or want to create a new Imu message without orientation or a new message with pressure.", "built-in support implement this with conditional \u201cinjection\u201d of the DbC logic during compile time", "I\u2019ve seen people use modified asserts and logging methods which activate based on the compile type (Debug, Release, ReleaseWithDebugInfo). There\u2019s no reason why it shoudn\u2019t be similar for contracts. This is what makes me skeptical of the contract proposal for C++.", "The user should be able to use the contract how ever required. It could be compile time or run time.", "\nCompile time would require using extra libraries or creating new macros or wait for future standard support. But this approach isn\u2019t language agnostic. For run time support, leveraging DDS might be a good option.", "C++17 supports DbC as well", "On a related note, ", " doesn\u2019t have contracts.", "In many cases the interface data types are too complex to define what \u201cvalid\u201d data is", "This is the issue with not only many sensor_msgs (among other messages from visualization_msgs, etc.), but also configuration parameters and dynparams for nodes. This doesn\u2019t mean we can\u2019t do something for the simpler messages or simpler checks.", "We can add simple contracts, specially the conditions ones written as comments in the messages (number of points is width*height. It\u2019s a straight path to segmentation fault in Python as well as C++ without this simple check). In fact, the initial contracts would be simply whatever checks people already use.", "I personally feel contracts shouldn\u2019t rely solely on compile time DbC because it restricts people from using a language the rest of the logic would be best written in.", "Sidenote: Any form of implemented contracts would need to be integrated with ", " command line interface or with the message type itself. Or else the user might face trouble diagnosing the reason the messages (from command line) aren\u2019t doing what they are supposed to do, and hunting down contracts in every subscribing node might be a headache. If contracts are good, but tooling doesn\u2019t exist, people wouldn\u2019t use them. If they are bad (the interest in DbC would like to say otherwise ", " ), they might as well not exist in the library.", "I really like knowing that none of my nodes can seg fault or show undefined behavior, no matter what you throw at them.", "To detect seg faults one usually runs the production code with a dynamic analysis tool (like e.g. ", ", ", " consider ", " or ", " (", ").", "To check against seg faults on the ROS level you would have to check if there is any response from the node (the test runner should not crash) after throwing some input at it. To generate as much as possible different input (for fuzzy testing) you would need some ROS level property based testing framework.", " uses property based testing ", " and ", " to generate input data for tests. The same approach could be used to generate input data for ROS nodes. However the ROS1 test frameworks would need (significant) modification/extension to get the data into test cases. (In case I am wrong please correct me!)", "Thanks for pyros. It looks like it can be the base of \u201cfuzzy testing\u201d.", "We should decouple pyros-dev capabilities depending on which package the message belongs to (right now the core code is tightly coupled with std_msgs). It\u2019d make it easier for people to write tests (parametrised) for their custom messages", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Subscribers and service servers", "Command line", "Parameter server", "checking range of inputs either against constants (defined in the message)", "using robust libraries like OpenCV which guarantee trimming of input to within acceptable ranges", "using mathematical constraints, such as by normalizing quaternions on input", "range checking while creating data-structures from compressed messages", "using compatible libraries for dealing with URL (", " Each library has a different quirk in URL parsing)", "score a given implementation (say on a scale of 0 being no contract to 5 being a contract with no assumptions left unchecked).", "handle trade-offs: Lots of package owners might face the issue of increase in latency in order to increase their score from say 4 to 5. As a result, we might want to categorize types of assumptions so the highest priority ones affect score more than one with a low priority.", "create guidelines regarding what a contract must have or better (next point)", "create a general guideline for all languages which stays applicable with/without a DBC support. This will enable a C package to adhere to the guidelines as easily as a Python package", "find out the major issues in integration between packages as a starting point for the previous points (some issues faced by me have been mentioned in passing but I\u2019m by no means a good representation of ROS community)", "score a given implementation (say on a scale of 0 being no contract to 5 being a contract with no assumptions left unchecked).", "\n", " If e.g. data input/output to a ROS node/nodelet is considered valid or not depends in many cases on the application the node/nodelet is used in and cannot be defined in the node/nodelet scope in a generic way. Consider a node wrapping an IMU. The data types are simple (", "). If e.g. the accelerations are beyond the hardware specification it is pretty obvious that the output (e.g. published topic) is invalid. An application level node/nodelet which uses the IMU nodes data as input could validate it. For a generic node which uses the IMU nodes data as input, lets say to stabilize the pose of a drone, the \u201cvalidity\u201d of the input would depend on the overall application setup and capabilities (IMU node, \u201cstabilization\u201d node, motor control node, etc.). The acceleration input would be considered invalid above levels which would lead the overall setup to fail in stabilizing the drone pose.", "\n", " E.g. consider a node/nodelet providing or consuming the ", " data type\u2026", "handle trade-offs: Lots of package owners might face the issue of increase in latency in order to increase their score from say 4 to 5. As a result, we might want to categorize types of assumptions so the highest priority ones affect score more than one with a low priority.", "create guidelines regarding what a contract must have or better (next point)", "See comment about \u201cscoring\u201d ", ". I think it is just possible to recommend what a contract should have (if reasonable)."], "url": "https://discourse.ros.org/t/input-validation-as-a-metric-for-quality/3732"},
{"title": "Undefined Behaviour in C/C++", "thread_contents": ["If you are interested in learning about undefined behavior in C/C++ and how to live with it this ", " is a must-read. Recordings of the corresponding CppCon 2017 presentation \u201cUndefined Behavior in 2017\u201d can be found here ", " and here ", ". The presentation slides can be found ", ".", "This ", ". Not the best reference but some starting point\u2026", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/undefined-behaviour-in-c-c/4030"},
{"title": "What quality metrics do we need to make packages quality visible?", "thread_contents": ["During our last Quality Assurance Working Group meeting, we decided to list and start the discussion around the quality metrics we need to make package quality visible. I listed below the metrics we discussed during the meeting:", "As a community, we need to discuss and agree on:", "As discussed previously, ROS package page already list several of the following data. It\u2019d be great if we bring it under a certain topic rather than scatter these everywhere. I\u2019ve made a list of items which can be used to define the metrics, suggestions are welcome. This list will be dynamic. I\u2019ll edit (and repost if required) based on future discussions. I\u2019ve also created some groupings. Corrections welcome.", "CI", "Documentation", "For issues, we\u2019ll need to access the host (Github, bugzilla) API regarding", "Meta information at package level:", "NB: This isn\u2019t an exhaustive list or even a final list. I\u2019ve compiled it based on past discussions.", "Current questions:", "To ensure testability of C++ packages (also if there are no tests yet but shall be added in the future) the following metrics could be added to the static analysis list:", "Dynamic Analysis", "Fuzzy testing (in the most basic form) is not really dynamic analysis because the entities are considered as black box (not white Box).", "For ROS2 proceeding of \u201cros2fuzzing\u201d is kind of blocked right now", "Future (in no specific order)", "\nDesign / Concept", "but could be way easier than in ROS1 then\u2026", "Current questions:", "Coupling: on what levels apart from those provided by Doxygen/Sphinx? Is there a free tool for that level?", "It would be possible to show efferent coupling on the package level  by parsing ", ", etc. in ROS1 ", " files. For ROS2 packages one could parse ", ", ", " in ROS2 ", " files. From this information one could generate some kind of ", " (as far as I know HAROS works on the workspace level only) does\u2026 this could be combined with the packages \u201cquality summary data\u201d (HAROS package coloring). By combining data gathered from public packages one could get information about afferent coupling as well\u2026", "Fuzzy testing (in the most basic form) is not really dynamic analysis because the entities are considered as black box (not white Box)", "Should Fuzzy testing be moved to a different block containing black-box fuzzing as a sub-component? (Check updated list)", "Could you please correct me if I\u2019m wrong about black-box fuzzy testing:", "Would node-specific behavior such as accepting messages in strictly increasing time order be included in black-box testing? This obv uses a small but nonetheless inner knowledge of how a node should work.", "IMO, white-box fuzzing might be helpful in checking corner cases like a typical test but more on the lines of model-based testing, ie. developed specially for the package or node, specially for non-infrastructure packages. On the other-hand, black-box fuzzers would be generic and their use would involve minimal (one or a few lines only) involvement by the maintainers.", "could be way easier than in ROS1", "As for development, I think ROS2 with node-lifetimes would make such testing both simple and a necessity. However, a generic fuzzer on the messages, services (and actions) without lifetimes would be similar for ROS1 and ROS2 unless my assumptions are wrong. ", "\npyros-dev should make the testing more or less similar, right?", "Afferent and efferent coupling at package level is already calculated (by the doc jobs on the buildfarm) and shown on the ROS wiki. They are shown in the ", " box to the right of the ", " section of each package that has a doc job.", "See the page for ", " for example:", "Could you please correct me if I\u2019m wrong about black-box fuzzy testing:", "For fuzzy testing in the ROS \u201cnode\u201d Level hypothesis could be used to generate messages, services and parameters according to \u201ccommons\u201d or standards. Usually application specific customization of these \u201csearch strategies\u201d is required. (That is the really challenging part of getting reasonable data.) It cannot be used to check output.", "Would node-specific behavior such as accepting messages in strictly increasing time order be included in black-box testing? This obv uses a small but nonetheless inner knowledge of how a node should work.", "What do you mean with \"accepting messages in strictly increasing time order \"? In the ROS \u201cnode\u201d level one could e.g. generate a list of subsequent topic messages which could be thrown at the node then. If you care e.g. more about state-based behavior of a node hypothesis support for state-based testing could be more suitable.", "IMO, white-box fuzzing might be helpful in checking corner cases like a typical test but more on the lines of model-based testing, ie. developed specially for the package or node, specially for non-infrastructure packages. On the other-hand, black-box fuzzers would be generic and their use would involve minimal (one or a few lines only) involvement by the maintainers.", "state-based behavior of a node hypothesis", "Yes. And to clarify, I meant checking the Header part in messages, and dropping all messages whose Header.time is less than previously received. This was a simple message based state that a node can exhibit and I chose this because it appeared as a simpler choice. My bad.", "And you\u2019re right about fuzzing and it\u2019s limitations. I was talking about making fuzzing+dynamic analysis easier for maintainers to provide a simpler but robust enough platform for testing compared to a completely model-driven approach.", "Afferent and efferent coupling at package level is already calculated", "The problem (in my opinion) with current method is this is a constant depth graph. As such there might be a case that a package A might be rendered useless because of license incompatibilities caused by it\u2019s dependency on package B. Finding out packages at different levels would be useful and the current list method can be modified to show a graph. A graph also helps to choose the package with minimum proliferation of dependencies in case of two or more similar packages. I do concede that the average ROS user would not be affected by this issue as much a company. (Also, I\u2019ve noted above that this list is what should be displayed, not what wiki is lacking. Current info on wiki isn\u2019t lacking per-se, it\u2019s just spread around a bit)", "PS: I don\u2019t think I\u2019ve said this before, but please inform me if I appear confrontational. I find it hard to choose the right sentence structures and \u2026 sometimes things go downhill", "Afferent and efferent coupling at package level is already calculated", "The problem (in my opinion) with current method is this is a constant depth graph. As such there might be a case that a package A might be rendered useless because of license incompatibilities caused by it\u2019s dependency on package B. Finding out packages at different levels would be useful and the current list method can be modified to show a graph. A graph also helps to choose the package with minimum proliferation of dependencies in case of two or more similar packages. I do concede that the average ROS user would not be affected by this issue as much a company. (Also, I\u2019ve noted above that this list is what should be displayed, not what wiki is lacking. Current info on wiki isn\u2019t lacking per-se, it\u2019s just spread around a bit)", "I was a bit vague in my reply: the data used to render those dependencies on the ROS wiki is available from the buildfarm (stored on the ", " host, see ", " for an example). It\u2019s true that the ", " box shows only a single level, but following those ", " files to an arbitrary depth is trivial and would enable you to compute recursive dependencies as well.", "Note that there are several tools that already do this, but then not based on files on the ", " host: the various ", " commands can compute recursive afferent and efferent coupling of packages for you (see the ", ").", "PS: I don\u2019t think I\u2019ve said this before, but please inform me if I appear confrontational. I find it hard to choose the right sentence structures and \u2026 sometimes things go downhill", "Don\u2019t worry, I\u2019m Dutch.", "And you\u2019re right about fuzzing and it\u2019s limitations. I was talking about making fuzzing+dynamic analysis easier for maintainers to provide a simpler but robust enough platform for testing compared to a completely model-driven approach.", "In the library level it should not be that hard to combine fuzzying + dynamic analysis (as long as the code has no dependencies which would require mocks, tests are not run on-target on \u201csmall\u201d scale embedded systems, etc.).  Especially if you do not consider integration with ROS1 catkin. In the \u201cnode\u201d level it is more challenging I guess\u2026 not only because of dependencies of a \u201cnode\u201d under test. There will probably never be a generic one-fits-all solution.", "PS: I don\u2019t think I\u2019ve said this before, but please inform me if I appear confrontational. I find it hard to choose the right sentence structures and \u2026 sometimes things go downhill", "It is the same for me as well. I am German and I write better than I speak ", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["CI Badge", "Documentation", "Open issues report", "Result of static analysis run", "Type of Tests (i.e. Unit Test, MIL, CI, etc.)", "Unit Test coverage", "Users reviews", "Issues history statistics", "Memory leak", "We need to define each of these metrics", "What other metrics should we use?", "What are the sources of these metrics?", "Build [Pass/Fail]  \u2014> Basic data from the CI tool", "Unit Tests [Pass/Fail] --> This might require more granularity because some tests are more important. Doing this might be possible for some core packages", "Unit Test Crash --> Apparently CI tools can detect and report this already, we just need to showcase it", "Unit Test Coverage [%] --> A diagram showing code test coverage with pass/fail spots like a heatmap (Is there any free options? codecov? ", " has a sample of what it could look like)", "Static Analysis\n", "Code Quality (", ")", "Number of Coding Standard errors", "Cyclic includes (for c++ using ", ")", "Cyclomatic complexity (possible tool: ", "). --> There might be an existing tool already. Need to check", "\n", "Dynamic Analysis\n", "Clang sanitizers (Address, UB, Memory, Leak, Thread) --> ", ", multi-builds required is a cmake hassle", "\n", "Testing\n", "Integration tests, maybe model-based testing\u2026 --> Discussion in progress", "Fuzzy testing by \u201cchaos node\u201d \u2014> Being discussed along with contracts in ROS. Maybe use pyros-dev or similar tools??", "\n", "Status (Maintained, Orphaned, etc.)", "README (not all packages do. Repository != package)", "Wiki (Github/GitLab, etc. if the content isn\u2019t on ROS wiki)", "Getting Started (Tutorials & Debugging Common Bugs)", "Sphinx/Doxygen links", "Link to Tagged Questions from answers.ros (as an FAQ)", "Other resources like photo/handdrawn/generated (", ") UML diagrams, etc", "User rating/review (maybe for tutorials also, eg: How helpful is this)", "Number of open issues", "Time to close issue", "Activity on issues", "Other status (eg: wont-fix, etc.)", "Efferent coupling: parse ", " file", "Afferent coupling: get dependencies from the list of packages on wiki", "Quality summary data ala HAROS", "How to visualize the results? (use CI tool or use raw data and other tools to visualize: depends on CI offering)", "Integration tests", "HAROS: What all data to show? ", ", Dependencies of package, packages that depend on this package, etc. There is lots of data, but limited to workspace.", "Coverage for documentation?", "Low Priority: Model-in-loop or hardware-in-loop tests", "File bugs after running HAROS? Makes sense only for categories with 0 false-positives", "Cyclic includes: Can limit (white box) testing of packages. Can be checked with ", " (static analysis).", "McCabe complexity (often called differently): Can make (white box) testing of packages practically impossible. Some standards recommend not to raise the upper threshold value of 15. Can be checked e.g. with ", ".", "Efferent coupling (on various levels of abstraction): Describes the degree of dependency of an entity under analyzation on other entities (e.g. on the class level: on which/how much other classes does the class under analyzation depend on). Further info ", ". I don\u2019t know if there are free tools which are capable of reporting this metric.", "Afferent coupling (on various levels of abstraction): Describes the degree of dependency of other entities on the entity under analyzation (e.g. on the class level: which/how much other classes depend on the class under analyzation). Further info ", ". I don\u2019t know if there are free tools which are capable of reporting this metric.", "Fuzzy testing by \u201cchaos node\u201d \u2014> Being discussed along with contracts in ROS. Maybe use pyros-dev or similar tools??", "Python-based launch with stable API, introspectable, optional XML frontend", "\n", "\n", "Efferent: dependencies for object being analyzed, useful to check possible external causes causes of a failure", "Afferent: dependencies of object being analyzed, useful to check what all would break if API changes", "\n", "It would be similar to using hypothesis (python package) to create messages and checking output", "It would have templates for different message-types, not for node-specific requirements. Eg: Range input for float message, 3 different ranges for acceleration, etc.", "It would be similar to using hypothesis (python package) to create messages and checking output", "It would have templates for different message-types, not for node-specific requirements. Eg: Range input for float message, 3 different ranges for acceleration, etc.", "I don\u2019t think that you can replace model based testing with fuzzying.", "You have to customize data generators for most packages anyway to get reasonable data I guess. (You don\u2019t want to evaluate a lot of false positives in a manual manner.)", "As far as I know all fuzzy testing tools in the source code level consider the classes, functions, etc. as black box. (In best case they provide state-based fuzzying as well which may be of value in case you have e.g. classes with internal state.). However you could combine it with dynamic analysis which would make it in overall white box testing. That seems be done quite often\u2026"], "url": "https://discourse.ros.org/t/what-quality-metrics-do-we-need-to-make-packages-quality-visible/3985"},
{"title": "ROS Quality Assurance Working Group meeting minutes - March 2018 Meeting", "thread_contents": ["Two instances have taken place this month. The first was the 7th and the second was the 14th", "A list of quality metrics was presented for discussion. The list was compiled based on ", " ", ". The objective is to define a set of metrics to use in order to \u201cmake ROS packages quality visible\u201d.", "These quality metrics have been discussed:", "A decision has been made to put the list into a google document (", ") and share it with the group to allow people to contribute to the list development.", "We invite people to take initiative and contribute to the development of spreadsheet. Your contributions will make it happen!", "Hi,", "I would like to contribute to this working group in the future. Kudos for the initiative!", "My 2 cents is that it would be useful to prioritize our quality metrics. A list of 29 elements might be intimidating for people which are doing the transition from \u201cit just works\u201d to professionally written code.", "I guess we can approach it in the 80/20 rules, ie. 20% of this recommendation can already solve 80% of typical issues.", "Clang sanytizers and Unit Test for example are extremely powerful best practices, IMHO.", "Davide", "I agree, it is an ambitious list. We should prioritize and have an iterative approach to the implementation. We should also think of the audience of these metrics, i.e. How they may interpret these metrics?", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", "\n", "\n", "\n", "Build", "Unit Tests", "Unit Test Crash", "Unit Test Coverage [%]", "Code style violations", "Logic errors and warnings", "Cyclomatic complexity", "McCabe complexity", "Afferent coupling", "Efferent coupling", "Clang AddressSanitizer and LeakSanitizer", "Fuzzy testing by \u201cchaos node\u201d", "Comment to code ratio", "Status", "README", "Wiki", "Getting Started", "Other resources", "Number of closed issues", "Time to close issue", "Activity on issues", "Other status (eg: wont-fix, etc.)", "Number of open issues", "User rating (Star rating and feedback)", "Maintainability Index", "Depth of Inheritance", "Class Coupling", "Lines of Code", "Cyclic includes", "\n", "\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/ros-quality-assurance-working-group-meeting-minutes-march-2018-meeting/4226"},
{"title": "Quality guide for ROS2", "thread_contents": ["You can find a ", " now. A point to note is the dependency of various quality attributes on general design considerations which will be addressed in a ", ". Both guides use a pattern format for efficient knowledge communication/transfer.", "Do you have any particular direction in mind you want to take these pages? Are you looking for community contributions?", "Sure. I encourage everyone to contribute. I just wanted to get something started when I stumbled over these first patterns a while ago.", "Thanks, certainly a useful effort. I am reading through this.  I think the goal appears somewhat similar to ", " (which is a project we are starting to work on). A number of thoughts/questions.", "It is not clear (yet) for me how ROS2 wiki will be organized (is it going to live on github?).", "Perhaps ", " and ", " should be maintained as sister websites linking-to-each other. OTOH, I think there will probably be large aspects of ROS quality that will be independent of ROS1 vs ROS2 division.  So I am a bit lost on how should we organize ourselves. I am particularly concerned with duplication of work, maintenance effort, and also decreased visibility if we distribute too much.", "Do you have any particular direction in mind you want to take these pages?", "To stick to a pattern format for a single \u201csuggestions/recommendation\u201d is the only thing one should consider right now w.r.t. contribution. (More and more books adapt to this format\u2026 even if you don\u2019t always recognize it. E.g. all the \u201ccookbook\u201d style books implement a lightweight kind of easy to read pattern format.) As soon as a reasonable aount of patterns have been collected they can be categorized for easier navigation. In my experience there are usually more than 1 categorization scheme but this can be addressed e.g. if one uses different categorization schemes as table of content style referencing. E.g. there could be a categorization scheme according to \u201cquality attributes\u201d (reliability, security, etc.) which could reference some same patterns as a categorization scheme \u201csoftware development lifecycle\u201d (requirement engineering phase, design phase, implementation phase, etc.).", "Thanks, certainly a useful effort. I am reading through this.  I think the goal appears somewhat similar to ", " (which is a project we are starting to work on). A number of thoughts/questions.", "Thanks. My intent for a ROS2 specific quality guide was to start something which is from a technical point of view specific to ROS2. I also wanted to avoid to create a second ROSIN quality hub website with a lot of background information because it could prevent potential readers (especially developers!) from reading more than the first view lines until they realize \u201cthere\u2019s nothing technical in there which I am interested in\u2026 I better watch out for some tutorials\u201d.", "It is not clear (yet) for me how ROS2 wiki will be organized (is it going to live on github?).", "I don\u2019t know as well. I placed it there because it was most reasonable for me back then when I started to add the patterns. However from a contribution/maintenance point of view ", " (not straight-forward to add images/diagrams, etc.).", "Perhaps ", " and ", " should be maintained as sister websites linking-to-each other. OTOH, I think there will probably be large aspects of ROS quality that will be independent of ROS1 vs ROS2 division.  So I am a bit lost on how should we organize ourselves. I am particularly concerned with duplication of work, maintenance effort, and also decreased visibility if we distribute too much.", "Yes, from my perspective a single entry point for both, ROS1 and ROS2 would be ideal. There is already divergence of various sources already (ROS1 wiki QA sites, ROSIN quality hub) which we should somehow cross-reference and merge if required.", "Another question is how to address different ROS2 user groups/domains packages are used in, applications packages are used in w.r.t. recommendations for quality related activities. (A lot of recommendations are just reasonable for the industrial domain.)", "Recommendations could e.g. be coupled to the ROS industrial package ", ": Experimental, DEVELOPMENTAL, PRODUCTION. (", " is e.g. EXPERIMENTAL.) This would allow to recommend activities with relation to the development state of a package.", "ADDITION:", "In my experience it is especially challenging to define activity recommendations w.r.t to the application software is used in. The higher level SW design and the idiomatic level can be heavily impacted by this. Developing a good approach which enables iterative migration to avoid the need for major re-factoring of software is challenging. We can probably discuss about this challenge in the upcoming \u201cROS Quality Assurance Working Group meeting - April 2018\u201d?", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/quality-guide-for-ros2/3926"},
{"title": "ROS pkg quality metrics: analysing ROS wiki pages", "thread_contents": ["This post fits in with the current topic \u201cMaking package quality visible in ROS\u201d which is being discussed in the quality working group meetings.", "This post is about analysing wiki pages for packages that provide nodes. Other types of packages will most likely need other types of analysis and / or metrics.", "It\u2019s doubtful whether we can actually assess the quality of a wiki page for a ROS package (as that would most likely require an understanding of the text), but looking at some of the tools available, I have the impression that we might actually be able to say at least ", " quantitative about a wiki page.", "First: it turns out there are actually (at least) two pages on the wiki that say something about what a good quality wiki page should contain, or at least what a wiki page consistent with other pages should contain:", "Most of this is style related: use consistent naming, try to avoid introducing new styling / markup / layouts, etc. Analysing / checking this might be possible with recent deep learning techniques, but I\u2019ll skip that for now. Things that should be (I believe) machine checkable without too much work are:", "This will be up for discussion, but a \u201cgood enough\u201d wiki page of a package should probably contain at least the following sections (not necessarily in this order):", "Checking for this is not too difficult: MoinMoin provides access to page contents through the ", ". As MoinMoin pages are plain text files stored on disk, it should also be possible to check them directly (with a script running periodically fi).", "A properly documented package should list the ROS API for all provided nodes. This ROS API consists of:", "All of these can be documented using a provided ClearSilver template (", ") and they should be documented per node (see ", ").", "Similar to checking for sections, presence of all of these should be checkable, either via the ", " class or scanning the page source on disk directly.", "Some examples of pages that document the ROS API of their nodes (in no particular order):", "To make sure that the ", " of a node\u2019s ROS API is documented, it could be extracted using suitable queries against ", " reversed ", " of a package and then checked against the ", " template parameters provided on the wiki page.", "None of the above is currently checked by the wiki, the buildfarm or any automated system.", "There are some tools that automate generating ROS wiki pages. One example is ", " by ", ".", "Good idea! How can this be implemented? I.e. Where to display the analysis results? How and when to run the query? \u2026", "How can this be implemented?", "I can think of two possible approaches:", "The first would seem to incur quite some overhead on the wiki server, which iiuc already suffers.", "The second could be part of a task run by the buildfarm. The output could then be placed on the ", " or ", " machine, a MoinMoin macro/plugin would then only need to parse the result (probably some yaml file), which would be much lighter.", "Decoupling the analysis from MoinMoin would probably be a good idea anyway, as it would increase the reusability of this for ROS 2 documentation. You could say that doesn\u2019t really matter though, as the approach described above is tied to MoinMoin anyway (ClearSilver template, looking for sections in pages, etc).", "A disadvantage of a task on the buildfarm would be increased load there, and the possibility of stale information being used by whatever renders the results (as the jobs would be periodic).", "And just for future reference, a potentially relevant paper on assessing quality of comments in source code:", "Steidl, Daniela & Hummel, Benjamin & J\u00fcrgens, Elmar. (2013). Quality analysis of source code comments. IEEE International Conference on Program Comprehension. 83-92. ", "I would say that I feel doing something like this is out-of-scope for this effort.", "I prefer the MoinMoin option (my subjective opinion) as it is decoupled from the Buildfarm. My rational is, the analysis (output) doesn\u2019t fit in the scope of the Builfarm.", "Well \u2026 the buildfarm already runs jobs that generate the ", " (which show the status of packages across the various ROS releases), documentation jobs (that generate the yaml manifests used by the ", " wiki macro) and a few other jobs that don\u2019t directly build software.", "This analysis could be part of a job that analyses more quality aspects of registered packages, or it could be a stand-alone job.", "I can think of two possible approaches:", "a MoinMoin macro/plugin that gets called each time a page is rendered", "\na stand-alone script that gets run periodically", "The first would seem to incur quite some overhead on the wiki server, which iiuc already suffers.", "Running any sort of analysis on the wiki server at render time is definitely a non-starter. That content is viewed way more often than it changes.", "Somewhat as a corollary the wiki is designed to be easily and openly edited without significant structure. Many of the things that are already referenced are auto generated. It might be worth exploring auto generating more of the content, rather than finding way to enforce that the content is captured in the free form wiki content.", "the wiki is designed to be easily and openly edited without significant structure", "One of the ideas is that prescribing structure (ie: freedom ", " choice) would lead to improved readability and usability of the wiki (this is already done with the ", " box and the ", "). As you\u2019re probably aware, structure helps as it allows visitors to form habits (ie: quickly assess state of something as it\u2019s easy to compare to others).", "An added benefit of prescribing structure is that it makes analysis easier/possible. And with analysis comes the possibility for gamification, which is something that appears to work well for/in other projects/contexts.", "It might be worth exploring auto generating more of the content, rather than finding way to enforce that the content is captured in the free form wiki content.", "Auto-generation would certainly help, but as I wrote above, enforcing some minimal content might be equally as effective.", "One of the ideas is that prescribing structure (ie: freedom from choice) would lead to improved readability and usability of the wiki (this is already done with the Package Links box and the Package Header). As you\u2019re probably aware, structure helps as it allows visitors to form habits (ie: quickly assess state of something as it\u2019s easy to compare to others).", "An added benefit of prescribing structure is that it makes analysis easier/possible. And with analysis comes the possibility for gamification, which is something that appears to work well for/in other projects/contexts.", "Indeed I completely agree that prescribing structure is highly valuable.", "Auto-generation would certainly help, but as I wrote above, enforcing some minimal content might be equally as effective.", "My point is that all the things above that you call out as being valuable steps in that direction are actually already outside the wiki content.", "\nI misspoke that \u201cthe wiki\u201d when I should have said \u201ca wiki\u201d or \u201cwikis\u201d designed to be edited without significant structure. To cite wikipedia on what a wiki is:", "\u201cA wiki engine is a type of content management system, but it differs from most other such systems, including blog software, in that the content is created without any defined owner or leader, and wikis have little implicit structure, allowing structure to emerge according to the needs of the users.\u201d ", "And related to this the wiki content is not particularly machine readable and is definitely not stored in an accessible way. To \u201cenforce\u201d content in the wiki is both antithetical to the wiki design and also technically very difficult with the requirement that you will need to start doing things like parsing the wiki markup. And what do you do if it \u201cfails\u201d your enforcement check?", "I think it would make more sense to extend the package header to include or enforce anything you want rather based on machine readable content in the code. This can range from a potential custom yaml definition of the node api, to doxygen comments (which are used by the documentation job, rendered in a standard way for users to view), package.xml (which is turned into the package header on the wiki), or anything else.", "There\u2019s also significant issues with the wiki and versioning and getting out of sync with the content of the code. It is often better suited to having the structured content in the source not on the wiki.", "We can add and extend the ROS documentation website by adding more structured content. We generally call that the ROS wiki, but actually the majority of the content is already outside of the wiki engine. And to continue scaling we will want to continue to encourage and find more ways to use structured data outside the wiki engine as it\u2019s specifically not designed for structured data.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["presence of customary / required sections", "ROS API", "Package Header (auto-generated)", "Overview/Introduction", "Table of Contents", "Requirements", "Installation instructions (could be auto-generated, ", ")", "Report a Bug (could be auto-generated)", "Tutorials (if there are none, make that explicit)", "ROS API (see below)", "topics (published, subscribed)", "services (provided, called)", "actions (provided, called)", "parameters (read, written), and", "TF frames (required, provided)", "a MoinMoin macro/plugin that gets called each time a page is rendered", "a stand-alone script that gets run periodically"], "url": "https://discourse.ros.org/t/ros-pkg-quality-metrics-analysing-ros-wiki-pages/4442"},
{"title": "Revised tutorial on automatic testing of ROS code, packages and applications", "thread_contents": ["I just revised our entry-level testing overview tutorial at: ", " .  Please have a look, and make any corrections necessary, or complain here to me.  Also, share it with all your collaborators, who you think, do not test enough!", "This is a part of a larger effort that we started to overhaul, extend and complete ROS QA resources, to encourage industrial use of ROS.  We code name it \u201cQuality Hub\u201d: ", ".  For now there is very little, but we hope that others will jump on it, and we will improve the situation substantially, creating a handbook for professional use of ROS for high quality long lasting systems.", "I was considering moving this tutorial to ", " (possibly with a redirect, I hope that moin wiki has some mechanism for that).  This would help the centralization and navigation of quality resources.  But this article is so old originally, that I am a bit hesitant to do it, without a broader opinion.  So please comment on the idea of moving with a redirect as well.", "PS. If you wonder what changes I did: I made the writing a bit slower, so that it provides more context, added a broader analysis of benefits, discussed costs, added an example, and provided a few more guidelines, and more links to other resources (some still dangling, but we are working on them).", "I was considering moving this tutorial to ", " (possibly with a redirect, I hope that moin wiki has some mechanism for that).", "You can move the page using the \u201cRename\u201d menu item in the right side bar. When you do though. Please also replace the existing page with a ", " directive to keep the old link alive. See ", " for syntax.", "+1 for  improving testing documentation. I like your rewrite of UnitTesting. I think it correctly identifies that both gtest and rostest are needed for UnitTesting, whereas the original pages on gtest and rostest implied that gtest was for unit testing and rostest for subsystem testing. In practice, even if you\u2019re unit testing a single module, you\u2019re likely to need e.g. rosparams at a minimum, and maybe ros messages from a test harness, and you don\u2019t get any of that with gtest because it doesn\u2019t start roscore. Yet rostest has difficulties that I haven\u2019t (yet) found a solution to: how to run individual unit tests, how to look at ROS_INFO etc prints while subtests run. I look forward to improvements to rostest, and will contribute as I\u2019m able.", "Paul", "Thanks. It took longer than acceptable, but I did move it (and redirected) now.  Looking for a new article to revise right now ", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/revised-tutorial-on-automatic-testing-of-ros-code-packages-and-applications/4292"},
{"title": "RosEco Package Graph", "thread_contents": ["I\u2019d completely forgotten about this, but see ", " (", ").", "Connected to the discussion(s) about (quality) metrics.", "That\u2019s cool. Would probably make sense to think about to add additional metrics discussed in the metrics thread to this project. The known issue ", " blurs the ouptut but could probably be addressed with reasonable time invest.", "This is actually one of the tools where I got ideas from to develop the prototype for HAROS. The initial version implemented similar metrics to ", " as well, but we dropped those as the tool evolved.", "I do not think the number of analysis tools is an issue in this case, otherwise I could look into merging these metrics into HAROS again.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/roseco-package-graph/4192"},
{"title": "Call for participation in the implementation of the Quality Metrics", "thread_contents": ["Hi everyone,", "As per the last ", ", we defined the quality metrics required to \u201cmake ROS packages visible\u201d. The list available in a ", ".", "We moving to the implementation of these metrics and the GUI required to display these metrics.", "We calling for volunteers to help in the implementation. Please let me know if you like to help?", "Thanks", "\nAdam", "Hello, Adam,", "I might be able to lend a hand. I am the author of HAROS, which I see has been discussed here. I have some experience with some of the static analysis metrics, at least, and I might be able to make adjustments to HAROS itself, if need be.", "Just leaving a link to this here: ", ".", "Jonathan has wrapped HAROS in a ", " and made it into an actual Catkin package. It also provides a ", " CMake function that can be used similar to ", ". See the readme in the repository for more info.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/call-for-participation-in-the-implementation-of-the-quality-metrics/4585"},
{"title": "Unified Changelog/Report for synchronized ROS package releases", "thread_contents": ["I was encouraged to ", " over here: How could I assemble the correct Changelog entries of all the packages that are released by some maintainer and distributed via e.g. apt-get?", "\nI have a html-page in mind, listing all the updated packages, the old version, the new version and the changes.", "I\u2019ve already answered your ROS Answers question, so I won\u2019t repeat that here.", "Reason I suggested to post here is that in the context of the initiatives of the ROSIN Quality Working group this may be something to take a look at.", " may have an idea how / whether what you suggest would be something that could be automated (I suspect it would be). I can imagine a new Jenkins job on the ROS buildfarm that takes in info about to be synced / recently synced packages, gathers the changelogs, aggregates them and publishes it somewhere.", "I have a html-page in mind, listing all the updated packages, the old version, the new version and the changes.", "Something similar to that (but without the changelogs) can be found at ", ". Perhaps the output of the job that I described above could be something similar.", "Something similar to that (but without the changelogs) can be found at ", ". Perhaps the output of the job that I described above could be something similar.", "Is there a list for ROS2 as well?", "Slightly off-topic, but yes: ", ".", "These pages are generated as part of the \u2018standard\u2019 ROS buildfarm deployment setup. The ROS2 buildfarm is also a ", " deployment (with some customisation iirc).", "Slightly off-topic, \u2026", "I am sorry for that. Thx.", " may have an idea how / whether what you suggest would be something that could be automated (I suspect it would be). I can imagine a new Jenkins job on the ROS buildfarm that takes in info about to be synced / recently synced packages, gathers the changelogs, aggregates them and publishes it somewhere.", "The difference is computed here: ", "If you\u2019d like to extend that script that would be great. Though we do want to be careful about adding runtime dependencies on resources that might not be made available on all deployments of the buildfarm or will cause significant slowdowns.", ": thanks for the pointer.", ": would this be something you could work with / on? Perhaps some discussion about a possible implementation would be good. This could be a nice addition to the quality initiatives discussed in the QWGs.", "Powered by ", ", best viewed with JavaScript enabled"], "url": "https://discourse.ros.org/t/unified-changelog-report-for-synchronized-ros-package-releases/4810"},
{"title": "ROS Quality Assurance Working Group \u2013 May 2018 Meetings Minutes", "thread_contents": ["The implementation work of \u201cMake ROS packages quality visible\u201d has started. It will occur outside the group meetings and we will provide updates on the progress at each meeting and in the quality discourse. We have 2 volunteers so far for this work. Anyone who want to help, please let me know?", "\u201cAppoint ownership\u201d initiative has been discussed.", "\n1. It has been agreed that people who do the implementation are by default the owners of the initiative.", "\n2. \u201cOwnership\u201d is ensuring the continuity of the initiative.", "\n3. ROSIN FTPs were suggested as an option to finance part of the \u201cownership\u201d.", "\u201cEnergize the code review process\u201d initiative has been discussed.", "\n1. This initiative is to \u201cenergize\u201d the current code review process. The intent is to review the current process, make it more efficient and promote it.", "\n2. The current challenges with the current process were discussed:", "\n3. For core packages, it\u2019s a resourcing issue. Not enough volunteers available to review the code.", "\nSame issue for high level packages. Very small portion of the community shows interest in the review. It\u2019s usually just the maintainer who does the work.", "\n4. Two options have been discussed: (1) a dedicated Wiki page or portal for code review with a reward system for the reviewers (similar to the Karma system), (2) Each time someone submit a pull request, he/she is asked to review another pull request.", "\n5. The process also need to be more efficient", "\n6. Most participants think that a reward system linked to the review effort is a good idea.", "Thanks for the minutes ", ".", "Each time someone submit a pull request, he/she is asked to review another pull request. I.e. Your pull request doesn\u2019t get reviewed until you review someone else pull request.", "I don\u2019t believe option 2 was this strict: the suggestion was to ", " PR submitters to also review one, but not to make it a requirement.", "That would probably be too strong of a condition and deter people from contributing.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/ros-quality-assurance-working-group-may-2018-meetings-minutes/4877"},
{"title": "ROS Quality Assurance Working Group August 2018 Meeting Notes", "thread_contents": ["Sorry for the delay to publish August meeting minutes. I had a very busy month.", "Update on the quality dashboard and discuss the GUI proposed by Andr\u00e9 Santos", "Update from Matt Drotter on use rating solution for \u201cMaking ROS Quality Visible\u201d.", "As a group, we discussed the details of code review implementation (i.e. How and What)", "Quality Dashboard:", "We discussed the GUI proposed by Andr\u00e9 Santos. ", "The work that remains to do is to integrate the GUI to Haros and we seeking help in doing this work as Andr\u00e9 is busy and cannot complete the work in the next couple months.", "User rating:", "Code Review:", "It has been suggested to pilot the idea in two repositories (i.e. Moveit and rviz)", "We need a Code Review Guide. I was tasked to compile the guide.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "Matt Drotter investigated the possibility to extend ROS Wiki (using a macro). It seems not possible, as the Wiki is already loaded.", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n"], "url": "https://discourse.ros.org/t/ros-quality-assurance-working-group-august-2018-meeting-notes/5902"},
{"title": "ROS Quality Assurance Working Group - Sept. 2018 Meeting", "thread_contents": ["Hi all,", "The next ROS Quality Assurance working group will take place the 7th of September at 3PM GMT.", "If you not a member of the group and you like to join us, please leave your email address for me and I\u2019ll send you the invite.", "Thanks", "\nAdam", "Hi Adam.", "Please, add me in the meeting.", "\ne-mail: ", "Thanks.", "Dear Adam,", "Please, count on me for the meeting: ", "I am interested in QA with particular focus on security aspects,", "Best,", "Endika", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Where are we at? A brief overview of the progress in the implementation of ROSIN QA initiatives (Adam)", "Update from Matt Drotter on use rating solution for \u201cMaking ROS Quality Visible\u201d.", "Update on ROSIN Static Analysis initiative (Zhoulai and Davide)"], "url": "https://discourse.ros.org/t/ros-quality-assurance-working-group-sept-2018-meeting/5931"},
{"title": "Statick: A static analysis framework", "thread_contents": ["I would like to announce the release of Statick. Statick is a plugin-based system to combine the results from a variety of static analysis and linting tools. Statick was developed by the U.S. Navy at the robotics branch of SSC Pacific and has been dedicated to the public domain.", "The main benefits of Statick are:", "Source code for Statick is available at ", ". Experimental support for installing Statick via pip is also available (but more testing is being done to learn how to release to PyPI properly).", "Plugins can be written for discovering file types and for running tools against appropriate files. The plugin system means that third parties can run their own plugins for file discovery and tools. Of course, the developers welcome additions of plugins to the main repository via pull requests.", "The core of Statick is ROS agnostic and can be used for pure Python-based code and for pure CMake-based code. However, the Statick tools do know how to build ROS 1 and ROS 2 packages or entire workspaces. Examples are shown in the repository.", "The Users Guide describes how to integrate Statick with the Warnings plugin of Jenkins. I have started using Statick as part of Travis builds for an example ROS package repository. The lines to use Statick are in the ", " file.", "We welcome feedback, bug reports, feature requests, and pull requests through the main repository.", "More information is available in the ", " and ", ".", "Congratulations on the release! This seems to be interesting and useful", "\nwork, indeed.", "Take this as me being curious, and not necessarily criticism, but this", "\nseems very similar (in concept, at least) to existing tools, such as", "\nHaros (", "), although Statick seems", "\nmore user-friendly in terms of, e.g., integration with Jenkins. Is there", "\nanything substantially different that I might have skipped over? Are", "\nthere any major goals on the roadmap?", "Thanks! We hope it is useful work.", "I have not had a chance to look at Haros too much (although it has been on my todo list for a while). From brief glances it appears that there is a lot of overlap. If anything I say about Haros is inaccurate please correct me. It looks like Haros provides much more introspection into ROS aspects of source code. Haros also has a web interface that looks very nice.", "Statick can easily be run from the command line so it integrates well with local development and continuous integration such as Jenkins and Travis. Statick supports setting flags for each tool and collecting those flags to make a level. Each package in a workspace can be configured to be tested at a different level (or all of them can be tested at the same level). Suppressing false positives (globally or per file) is easy to do with Statick.", "There are some efforts underway to test ROS and ROS2 source code for security issues (using the sei_cert level) and provide feedback to OSRF about the findings. We would like to turn the report feature into a plugin so that different types of reports could be generated (right now they are XML based so that Jenkins can use them). We are probably going to support testing web files soon (html, js, css). We always like adding support for new tools.", "Thanks for the clarification!", "Indeed, there is a lot of overlap, but I also see some room for both", "\ntools to evolve and stay distinct. Especially if you pursue security", "\nissues, which is something that is not being done in Haros at any level.", "You are correct in that Haros is now becoming more focused on", "\nROS-specific analyses, and I believe it will stay that way in the near", "\nfuture.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["manage flags for each tool in simple configuration files", "provides support for multiple levels of testing", "provides consistent output of results from various tools", "configurable settings to suppress false positives", "ignore specific files or file patterns"], "url": "https://discourse.ros.org/t/statick-a-static-analysis-framework/6034"},
{"title": "ROS Quality Assurance Working Group September 2018 Meeting Notes", "thread_contents": ["Dear all,", "This is the month of September meeting notes.", "Where are we at? A brief overview of the progress in the implementation of ROSIN QA initiatives (Adam)", "Update from Matt Drotter on use rating solution for \u201cMaking ROS Quality Visible\u201d.", "Static Analysis (Zhoulai and Davide)", "Thomas present Statick", "Thanks", "\nAdam", "Static analysis: ROSIN is looking to commence the scanning of some ROS packages. This work is being planned.", "Hi, since I am not using the static analysis in my daily development and know very little of them, but I was also asked by other people about situation of static analysis of ROS system and setup coverity scan service. If I need to release this project from my dashboard, please let me know.", "I\u2019m also interested in the memory leak issue reported at ", ", and if the static analysis can find this, that\u2019s would be great. But as far as I see, they did not report that. Is it ok? or the scan service should report this as a defect?", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "Where are we at?\n", "These are the initiatives and the corresponding update:\n", "Making ROS Quality Packages visible. Phase I, which is the CI badge has been implemented and Phase II (i.e. Quality Dashboard) is work in progress. The GUI is built, needs minor enhancements. The integration to Haros is remaining to do. ", ". We calling for help to finish the work (integrate the GUI to Haros). If you like to assist please get in touch?", "The user rating feature has been discussed. We looked at how we can leverage the current capabilities (i.e. Wiki) to implement this feature. It appears that it requires some effort which we are not resourced for. The group has decided to postpone the work on this to the future and focus on the quality dashboard.", "Appoint ownership for QA initiatives. As per previous notes, the decision is to appoint the person or the group doing the implementation as owners by default, unless they advise otherwise, In such case, we seek owners from the community.", "Energize the code review practice: We will run a pilot in two repository, MoveIt and rviz. We have a draft code review document, which is being reviewed by group members. Once we have a final version, we will upload it online and hopefully some code review in the pilot repositories will commence.", "Static analysis: ROSIN is looking to commence the scanning of some ROS packages. This work is being planned.", "\n", "Some of the planned future work:\n", "Address the maintenance issue,", "Energize the CI service,", "Onboarding of newcomer, etc\u2026", "\n", "\n", "Statick:", "\n1. Thomas Denewiler presented the tool ", ". The group discuss the capabilities and the potentials of the tool."], "url": "https://discourse.ros.org/t/ros-quality-assurance-working-group-september-2018-meeting-notes/5991"},
{"title": "To avoid undesired change in .rviz", "thread_contents": ["Although this is such a small topic, this issue has taken away non-trivial amount of our time\u2026", "TL;DR I\u2019ve seen quite a few pull requests that include unintended changes in ", " files. How are people avoiding this to happen?", "The file records a lot of states of the RViz window including the size of the main window, orientation of the view, open/close status of each menu etc, all of which are very nice IMO. It\u2019s just the pull requester verifies the change using the same .rviz file, changing the size of windows, views etc. that may or may not be essential to the pull request s/he\u2019s planning to open, and commit all the files changed including .rviz.", "I can think of some easy workaround but these might be far from ideal\u2026", "I\u2019d suggest you go with your first proposed solution. Files captured by gitignore rules can still be managed by git. For most people, the incidental changes they make will properly be ignored. If someone has a \u201creal\u201d change to the .rviz file that needs to be added, they can run", "\n", "\nto force git to add the file despite the gitignore rules.", "This is nice as it\u2019s a source control solution to a source control problem. More generally, this solves the problem of \u201cI need to distribute this file, but everyone\u2019s customizations to this file should not be carried back upstream.\u201d", "Regarding the second solution, ROS uses a healthy does of environment variables under the hood. Running ROS applications as root requires a bit of extra setup and usually causes more headaches than it\u2019s worth.", "As a third alternative, in some of my own projects, I include the .rviz files in our repositories as templates. Teammates are instructed to copy the file from the repository to the ", " directory. Any changes they make get saved to that copy instead of the git-controlled file. This adds an extra step if you need to distribute changes to the .rviz file, but we haven\u2019t had the need to do that very frequently.", "I\u2019d suggest you go with your first proposed solution. Files captured by gitignore rules can still be managed by git. For most people, the incidental changes they make will properly be ignored. If someone has a \u201creal\u201d change to the .rviz file that needs to be added, they can run", "\n", "\nto force git to add the file despite the gitignore rules.", "This is nice as it\u2019s a source control solution to a source control problem. More generally, this solves the problem of \u201cI need to distribute this file, but everyone\u2019s customizations to this file should not be carried back upstream.\u201d", "Just a note, AFAIK this is not how it works. Ignored files don\u2019t show up as \u201cuntracked\u201d, but once you add them with ", ", any subsequent changes are shown regardless of .gitignore like for any other file in the repo.", "I don\u2019t have a good solution unfortunately\u2026", "You\u2019re totally right. I got a bit mixed up on how that worked.", "One option is to run ", ". The downside to this is that it only affects the local workspace. You\u2019d have to ask everyone on the team to run this locally when they clone the repository. (", ")", "Looks like there may not actually be a simple way to express this intent on the remote.", "This is not always a viable solution, but we avoid changes to rviz configuration files by always trying to start rviz via launch files. We have an rviz.launch file that points to a custom configuration file when starting the node. That custom configuration file is under version control. If we mess with the rviz layout after launching and then kill the launch command, and rviz with it, the rviz configuration file changes are not saved. This results in a clean repository.", "For the rviz launch file we try to write it such that we can include it from other launch files or run it stand-alone after launching other parts of our system.", "Powered by ", ", best viewed with JavaScript enabled"], "thread_details": ["Add ", " to ", " -> When you want to commit a change to .rviz, it won\u2019t show up in commitable file list.", "Change *.rviz to non-writable -> When you need to change it, you need admin, meaning you may run RViz as a root. I\u2019m not sure about any side-effect\u2026"], "url": "https://discourse.ros.org/t/to-avoid-undesired-change-in-rviz/6270"}
]